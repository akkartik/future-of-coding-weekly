[
    {
        "client_msg_id": "906c0c49-21b7-49f0-8cfb-ee8ae79e8e78",
        "type": "message",
        "text": "is there data about current tools and languages people in here are using?",
        "user": "UN9SCH5RD",
        "ts": "1588132999.326800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tcC7L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is there data about current tools and languages people in here are using?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588093664.319300",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "9d82a73e-dd0d-4434-b7a2-bb8fa13ea655",
        "type": "message",
        "text": "ah I think it wasn't part of the survey",
        "user": "UN9SCH5RD",
        "ts": "1588133177.327000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZydE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ah I think it wasn't part of the survey"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588093664.319300",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "2659dd0e-77cb-4e1a-a585-a38e90f08bc4",
        "type": "message",
        "text": "maybe for the next one :slightly_smiling_face:",
        "user": "UN9SCH5RD",
        "ts": "1588133182.327200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yrS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "maybe for the next one "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588093664.319300",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "8499bd08-fe37-4846-99cb-c8c2dfce1395",
        "type": "message",
        "text": "That's an interesting thought. Something like, \"What programming language(s) are you using to build your FoC project(s)?\"",
        "user": "UC2A2ARPT",
        "ts": "1588134589.327400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588134898.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wvg=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's an interesting thought. Something like, \"What programming language(s) are you using to build your FoC project(s)?\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588093664.319300",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UN9SCH5RD",
                    "UE0ETTCG7"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "096f72f2-c495-4ee3-9513-3265ec54c562",
        "type": "message",
        "text": "Love the programming language question. It would also be cool to do a question about tools for thought in general, but I'm struggling to figure out how to ask it in a useful manner. Maybe someone else can figure out a good way. Here's how I would phrase the problem: When you say \"Tools for thought\", I personally don't even quite know what that means. E.g., if you were to write a (SEO-title ready) blog post, here are the top ten tools for thought, what would be on that list?",
        "user": "UE0ETTCG7",
        "ts": "1588171102.328100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1588171117.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oWg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Love the programming language question. It would also be cool to do a question about tools for thought in general, but I'm struggling to figure out how to ask it in a useful manner. Maybe someone else can figure out a good way. Here's how I would phrase the problem: When you say \"Tools for thought\", I personally don't even quite know what that means. E.g., if you were to write a (SEO-title ready) blog post, here are the top ten tools for thought, what would be on that list?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588093664.319300",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "6849f247-72ca-4f09-8bf2-81e0d2874e06",
        "type": "message",
        "text": "Lately I\u2019ve been working on and thinking about gui layout. I\u2019m building a gui builder, and I\u2019m trying to figure out what the interface should be between parent and child components to allow for maximum flexibility of layouts while still having things mostly just work when they get combined. I\u2019ve been taking inspiration from the existing gui toolkits (html/css, QT, GTK, WinForms), and from more fanciful gui designs (the iron man interfaces, rainmeter skins). I\u2019m trying to understand what tradeoffs are being made in these systems in a holistic way. Like, what layouts are expressible. I would like to generalize away from are the heavy focus on rectilinearity. Things I\u2019ve been imagining are force-based layout algorithms, and some sort of path-based deformation/matching between child and parent, but they\u2019re just thoughts for now. Has anybody come across any literature on these sorts of topics? The only thing I\u2019ve come across is constraint-solvers.",
        "user": "UKDM3GLAJ",
        "ts": "1588186429.337500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "na8zS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lately I\u2019ve been working on and thinking about gui layout. I\u2019m building a gui builder, and I\u2019m trying to figure out what the interface should be between parent and child components to allow for maximum flexibility of layouts while still having things mostly just work when they get combined. I\u2019ve been taking inspiration from the existing gui toolkits (html/css, QT, GTK, WinForms), and from more fanciful gui designs (the iron man interfaces, rainmeter skins). I\u2019m trying to understand what tradeoffs are being made in these systems in a holistic way. Like, what layouts are expressible. I would like to generalize away from are the heavy focus on rectilinearity. Things I\u2019ve been imagining are force-based layout algorithms, and some sort of path-based deformation/matching between child and parent, but they\u2019re just thoughts for now. Has anybody come across any literature on these sorts of topics? The only thing I\u2019ve come across is constraint-solvers."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588186429.337500",
        "reply_count": 22,
        "reply_users_count": 8,
        "latest_reply": "1588375177.412500",
        "reply_users": [
            "UC2A2ARPT",
            "UKDM3GLAJ",
            "UN9SCH5RD",
            "UA14TGLTC",
            "UEQ6M68H0",
            "U5STGTB3J",
            "U0119RRB1MK",
            "U71PMQ1V0"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ac4d0f9c-03a3-474a-9972-c4f4cb4efedc",
        "type": "message",
        "text": "Here's a question that has usefully guided my thinking on the subject: Have you ever seen a force-directed GUI layout that looked good?\n\nI haven't, so what I've pivoted toward is \"make the tools really good, so it's easy to design a nice layout\" rather than \"make the layout happen automagically\".\n\nNot sure if you'd find this framing helpful, but it might help you narrow what sort of research is relevant. To me, a force-directed layout is appropriate for something like data-viz, where you can be a little loosey-goosey about where things end up. In a GUI, you generally care a lot more about getting a result that _feels good_ in a way that's hard to encode algorithmically.",
        "user": "UC2A2ARPT",
        "ts": "1588186711.337700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588187593.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A8D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a question that has usefully guided my thinking on the subject: Have you ever seen a force-directed GUI layout that looked good?\n\nI haven't, so what I've pivoted toward is \"make the tools really good, so it's easy to design a nice layout\" rather than \"make the layout happen automagically\".\n\nNot sure if you'd find this framing helpful, but it might help you narrow what sort of research is relevant. To me, a force-directed layout is appropriate for something like data-viz, where you can be a little loosey-goosey about where things end up. In a GUI, you generally care a lot more about getting a result that "
                            },
                            {
                                "type": "text",
                                "text": "feels good",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in a way that's hard to encode algorithmically."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ"
    },
    {
        "client_msg_id": "24271255-9cf4-493e-818e-74ef20d0be97",
        "type": "message",
        "text": "As for literature... <https://www.youtube.com/watch?v=KfxE99eN44c> and <https://www.youtube.com/watch?v=0msyWHrw40A> were posted here (IIRC) a few months ago. Kevin Lynagh was also doing a lot of research in this area for <https://subformapp.com>, so he might be worth reaching out to. (He was also on the podcast: <https://futureofcoding.org/episodes/025>)",
        "user": "UC2A2ARPT",
        "ts": "1588187484.338300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588187493.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PS4V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As for literature... "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=KfxE99eN44c"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=0msyWHrw40A"
                            },
                            {
                                "type": "text",
                                "text": " were posted here (IIRC) a few months ago. Kevin Lynagh was also doing a lot of research in this area for "
                            },
                            {
                                "type": "link",
                                "url": "https://subformapp.com"
                            },
                            {
                                "type": "text",
                                "text": ", so he might be worth reaching out to. (He was also on the podcast: "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.org/episodes/025"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "ULM3U6275",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d9504151-2dec-4f47-a4df-02d80e2f2580",
        "type": "message",
        "text": "hah, love that the intersection of {PL theory, compilers} x {bret victor} seems to be the smallest",
        "user": "UFB8STN7K",
        "ts": "1588187785.339300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uf14",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hah, love that the intersection of {PL theory, compilers} x {bret victor} seems to be the smallest"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588093664.319300",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f2f082dc-ee90-48c4-bb00-316daa03558e",
        "type": "message",
        "text": "Nice links! Will definitely take a look at those. I guess the thing that\u2019s leading my thinking in a more automatic direction is I\u2019m picturing an ecosystem and sort of appstore of components. I want somebody to be able to develop a parent component without knowing what type of components it\u2019s going to contain, and somebody else to develop a child component without knowing what type of container it will be put inside (or what siblings it will have), and for that to _just work_. Or I want to figure out why that\u2019s wrong.",
        "user": "UKDM3GLAJ",
        "ts": "1588187870.339800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V2X5E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice links! Will definitely take a look at those. I guess the thing that\u2019s leading my thinking in a more automatic direction is I\u2019m picturing an ecosystem and sort of appstore of components. I want somebody to be able to develop a parent component without knowing what type of components it\u2019s going to contain, and somebody else to develop a child component without knowing what type of container it will be put inside (or what siblings it will have), and for that to "
                            },
                            {
                                "type": "text",
                                "text": "just work",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Or I want to figure out why that\u2019s wrong."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ"
    },
    {
        "client_msg_id": "93d179e1-0ce4-44de-97b9-2592c168704f",
        "type": "message",
        "text": "Follow-up question \u2014 when you say \"path-based deformation/matching\", what do you mean by path? Like, the conceptual path to the element in the hierarchy (like CSS selectors) or some sort of visual path in the layout (like aligning things to splines)?",
        "user": "UC2A2ARPT",
        "ts": "1588188956.340000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AmM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Follow-up question \u2014 when you say \"path-based deformation/matching\", what do you mean by path? Like, the conceptual path to the element in the hierarchy (like CSS selectors) or some sort of visual path in the layout (like aligning things to splines)?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ"
    },
    {
        "client_msg_id": "5cd7f4c0-f477-4e58-b3aa-092e10fdca31",
        "type": "message",
        "text": "Along the non-rectilinear idea, a parent telling the child, I can give you this shape to display yourself in (maybe a rectangle, maybe something else), and the child either rendering according to that, or saying, I\u2019d really like to be this shape, and some sort of middle ground being achieved. Path in the visual path/SVG sense.",
        "user": "UKDM3GLAJ",
        "ts": "1588190472.340400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hoAT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Along the non-rectilinear idea, a parent telling the child, I can give you this shape to display yourself in (maybe a rectangle, maybe something else), and the child either rendering according to that, or saying, I\u2019d really like to be this shape, and some sort of middle ground being achieved. Path in the visual path/SVG sense."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ"
    },
    {
        "client_msg_id": "1642aa61-15a2-4ffe-9870-d217dc8b8fbf",
        "type": "message",
        "text": "Regardless of what kind of election it is, I always prefer \"approval voting\" (\"Which of these do you like?\") over \"first-past-the-post\" (\"Which is your favorite?\"). One way to look at it is that, if there are 16 questions, \"Which is your favorite\" gathers 4 bits of information while \"which of these do you like?\" gathers 16 bits: it is more informative, both theoretically and practically.\n\nYou can do even better with Score Voting: \"On a scale of 0 to 10, how interested are you in each of these topics?\"\n\nP.S. How come I didn't know that a community survey exists?",
        "user": "UD6EXQVM0",
        "ts": "1588200187.342200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1588200424.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r=kBD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regardless of what kind of election it is, I always prefer \"approval voting\" (\"Which of these do you like?\") over \"first-past-the-post\" (\"Which is your favorite?\"). One way to look at it is that, if there are 16 questions, \"Which is your favorite\" gathers 4 bits of information while \"which of these do you like?\" gathers 16 bits: it is more informative, both theoretically and practically.\n\nYou can do even better with Score Voting: \"On a scale of 0 to 10, how interested are you in each of these topics?\"\n\nP.S. How come I didn't know that a community survey exists?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588014850.297100",
        "parent_user_id": "UC2A2ARPT"
    }
]