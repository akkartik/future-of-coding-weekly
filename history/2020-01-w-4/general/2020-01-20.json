[
    {
        "client_msg_id": "32436f11-9ffa-45f7-a0c1-a0d8cf43dc2f",
        "type": "message",
        "text": "<@UJ6LDMMN0> glad to hear your story.  I've always found Scratch to balance approachability with depth far better than it first appears.",
        "user": "UA14TGLTC",
        "ts": "1579489161.188300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8DqK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " glad to hear your story.  I've always found Scratch to balance approachability with depth far better than it first appears."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18"
    },
    {
        "client_msg_id": "2be77d7b-c73c-459e-9ed9-e70a9b18bd0a",
        "type": "message",
        "text": "<@U7C7B75R6> I'm actually in the very early stages of an exploration into what the GUI would be like if all values and views were individually addressable, so they can be pointed to, combined, and reacted against, in a space of continuous context-preserving navigation. Inspired by Smalltalk and Morphic, but trying to place it in the contemporary context of smartphones, multiple devices, apps, and services.",
        "user": "UMWF81HTP",
        "ts": "1579492403.188700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "57P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U7C7B75R6"
                            },
                            {
                                "type": "text",
                                "text": " I'm actually in the very early stages of an exploration into what the GUI would be like if all values and views were individually addressable, so they can be pointed to, combined, and reacted against, in a space of continuous context-preserving navigation. Inspired by Smalltalk and Morphic, but trying to place it in the contemporary context of smartphones, multiple devices, apps, and services."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJN1TAYEQ",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d07667cf-cf4f-46ed-9cb3-1b14cf3d963b",
        "type": "message",
        "text": "When I look at conventional GUIs, even on mobile, what I see is not what I want. Everything I see on the screen should be an object running on some underlying VM. I should be able to interact with any object I see. I should be able to view the source code of any object on the screen, and edit it (this is my idea of what \"open source\" should mean). Obviously, any text I see should be selectable/copyable. This means inventing a new and richer GUI interaction language. <@UMWF81HTP>, are any of your explorations in a blog or on github?",
        "user": "UJN1TAYEQ",
        "ts": "1579494764.190400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zjQy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I look at conventional GUIs, even on mobile, what I see is not what I want. Everything I see on the screen should be an object running on some underlying VM. I should be able to interact with any object I see. I should be able to view the source code of any object on the screen, and edit it (this is my idea of what \"open source\" should mean). Obviously, any text I see should be selectable/copyable. This means inventing a new and richer GUI interaction language. "
                            },
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": ", are any of your explorations in a blog or on github?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UMWF81HTP",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "7118b6e9-c6f5-4507-bdd2-5425ac27004c",
        "type": "message",
        "text": "<@UJN1TAYEQ> Totally agree! I have some previews of a comic I'm working on regarding this topic on Twitter(<https://twitter.com/yoshikischmitz/status/1188455560045158400>), but my perspective on what the UI should be like has evolved since then. Besides twitter, once I do get something ready for more public consumption I'll post it to <#CCL5VVBAN|feedback>.",
        "user": "UMWF81HTP",
        "ts": "1579495824.190600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1579495872.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WCz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Totally agree! I have some previews of a comic I'm working on regarding this topic on Twitter("
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/yoshikischmitz/status/1188455560045158400"
                            },
                            {
                                "type": "text",
                                "text": "), but my perspective on what the UI should be like has evolved since then. Besides twitter, once I do get something ready for more public consumption I'll post it to "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UJN1TAYEQ",
                    "U7C7B75R6",
                    "UML4ZEKDK",
                    "UHWC9PXBL"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "2dbe2e1a-0391-4113-8491-49815478dbb6",
        "type": "message",
        "text": "<@UJN1TAYEQ> I don't see how this is possible. Every single text entry control in the wild has at least one million lines of code underlying that supposedly simple control. I assert that the difficulty of programming a text entry control prevents a startup from building a new operating system. Anyone with a medium degree of competency can make buttons and sliders, but the minute you ask for switching between left-to-right languages and right-to-left, and rendering TrueType with kerning and ligatures and fancy swashes, you are now in a sea of underlying modules and technologies. TrueType is this weird language that holds the letter shapes. Almost everyone thinks that a font is some kind of vector artwork file, but it is not; it is a programming language that is executed by an interpreter, and I doubt there are 100 active programmers who know it, it so obscure. A truly bizarre language it is, basically a domain specific 2D vector to raster language. A lot of the other controls an OS offers are indeed simple inside, and could easily be interact-able/editable. It is one of the central reasons why there are so few graphical OS'es to choose from. You have Windows, IOS/OSX, Android, and the slightly inferior Unix renderers, which never got near the sophistication of the others. I would argue that one of the reasons why we haven't gone full 3D in OS'es is the subtleties surrounding text processing are quite difficult. People often fail to grasp how powerful Adobe was in the beginning, and how both MS and Apple conspired to damage Adobe by inventing their own rendering technology so they could avoid using Adobe's renderers. (The predecessor of Postscript was invented at, yes you guessed it Xerox PARC). You can see in the Adobe products that they do their own rendering, and even have optical kerning (the subtle squeezing of letters together so they read better). And let's not forget all the Input Method Editors that are used with Chinese, Japanese, and Korean, which require very sophisticated algorithms to minimize keystrokes. those are part of every input field, implied, and each OS has pursued slightly different approaches. This is why only giant companies can make an OS today.",
        "user": "UEQ6M68H0",
        "ts": "1579500703.191800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JkR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " I don't see how this is possible. Every single text entry control in the wild has at least one million lines of code underlying that supposedly simple control. I assert that the difficulty of programming a text entry control prevents a startup from building a new operating system. Anyone with a medium degree of competency can make buttons and sliders, but the minute you ask for switching between left-to-right languages and right-to-left, and rendering TrueType with kerning and ligatures and fancy swashes, you are now in a sea of underlying modules and technologies. TrueType is this weird language that holds the letter shapes. Almost everyone thinks that a font is some kind of vector artwork file, but it is not; it is a programming language that is executed by an interpreter, and I doubt there are 100 active programmers who know it, it so obscure. A truly bizarre language it is, basically a domain specific 2D vector to raster language. A lot of the other controls an OS offers are indeed simple inside, and could easily be interact-able/editable. It is one of the central reasons why there are so few graphical OS'es to choose from. You have Windows, IOS/OSX, Android, and the slightly inferior Unix renderers, which never got near the sophistication of the others. I would argue that one of the reasons why we haven't gone full 3D in OS'es is the subtleties surrounding text processing are quite difficult. People often fail to grasp how powerful Adobe was in the beginning, and how both MS and Apple conspired to damage Adobe by inventing their own rendering technology so they could avoid using Adobe's renderers. (The predecessor of Postscript was invented at, yes you guessed it Xerox PARC). You can see in the Adobe products that they do their own rendering, and even have optical kerning (the subtle squeezing of letters together so they read better). And let's not forget all the Input Method Editors that are used with Chinese, Japanese, and Korean, which require very sophisticated algorithms to minimize keystrokes. those are part of every input field, implied, and each OS has pursued slightly different approaches. This is why only giant companies can make an OS today."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UFLN9JFRT",
                    "UE0ETTCG7"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "e84a6402-d9f4-49ee-8ba8-4444ad4d7b80",
        "type": "message",
        "text": "Yes <@UA14TGLTC>, when I first saw Scratch, I thought it was a toy only to have a glimpse of what programming is. I thought I will use it only for some time but will have to switch to a \"real programming language\" to  create complex things. In fact, I discovered that the choices in the design of Scratch make it a language you can use (and enjoy using it) to seriously program. Sure I miss some programming features from Scratch, but I understand ,in regards of some of its objectives (i.e. target very young kids), it has to stay as simple as possible.",
        "user": "UJ6LDMMN0",
        "ts": "1579510307.192600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jP+fG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": ", when I first saw Scratch, I thought it was a toy only to have a glimpse of what programming is. I thought I will use it only for some time but will have to switch to a \"real programming language\" to  create complex things. In fact, I discovered that the choices in the design of Scratch make it a language you can use (and enjoy using it) to seriously program. Sure I miss some programming features from Scratch, but I understand ,in regards of some of its objectives (i.e. target very young kids), it has to stay as simple as possible."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18"
    },
    {
        "client_msg_id": "9879BF71-1248-4FF7-835D-22E7E9726DF8",
        "type": "message",
        "text": "It\u2019s true!  The concurrency is pretty rich.  For the first few years Scratch was missing a few useful things (lists, cloning sprites), but now it\u2019s pretty feature complete.  One negative thing about other programming systems that Scratch imitates is that it\u2019s hard to see what\u2019s going on over time.  Scratch, to it\u2019s credit, does highlight the currently running block.",
        "user": "UA14TGLTC",
        "ts": "1579510813.197000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MCM0c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s true!  The concurrency is pretty rich.  For the first few years Scratch was missing a few useful things (lists, cloning sprites), but now it\u2019s pretty feature complete.  One negative thing about other programming systems that Scratch imitates is that it\u2019s hard to see what\u2019s going on over time.  Scratch, to it\u2019s credit, does highlight the currently running block."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18"
    },
    {
        "client_msg_id": "4c1c67f6-2ac2-4830-aa60-7fe7ed04f78d",
        "type": "message",
        "text": "The 5th Future of Coding Newsletter is out!\n\nCheck it here: <https://tinyletter.com/marianoguerra/letters/future-of-coding-weekly-2020-01-week-3>\n\nSubscribe here: <https://tinyletter.com/marianoguerra/>\n\nHelp me here: <https://github.com/marianoguerra/future-of-coding-weekly#future-of-coding-weekly>",
        "user": "UBN9AFS0N",
        "ts": "1579511208.198000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "TinyLetter",
                "title": "Future of Coding Weekly 2020/01 Week 3",
                "title_link": "https://tinyletter.com/marianoguerra/letters/future-of-coding-weekly-2020-01-week-3",
                "text": "Welcome! we are slightly over 150 members, let's try the 200 goal for next month :)",
                "fallback": "TinyLetter: Future of Coding Weekly 2020/01 Week 3",
                "from_url": "https://tinyletter.com/marianoguerra/letters/future-of-coding-weekly-2020-01-week-3",
                "service_icon": "https://tinyletter.com/site/favicon.ico",
                "id": 1,
                "original_url": "https://tinyletter.com/marianoguerra/letters/future-of-coding-weekly-2020-01-week-3"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dDQb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The 5th Future of Coding Newsletter is out!\n\nCheck it here: "
                            },
                            {
                                "type": "link",
                                "url": "https://tinyletter.com/marianoguerra/letters/future-of-coding-weekly-2020-01-week-3"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSubscribe here: "
                            },
                            {
                                "type": "link",
                                "url": "https://tinyletter.com/marianoguerra/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHelp me here: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/marianoguerra/future-of-coding-weekly#future-of-coding-weekly"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "reply_count": 14,
        "reply_users_count": 5,
        "latest_reply": "1580929856.044900",
        "reply_users": [
            "U5STGTB3J",
            "UBN9AFS0N",
            "UC2A2ARPT",
            "UFLN9JFRT",
            "UFEQUBNNT"
        ],
        "subscribed": true,
        "last_read": "1580929856.044900",
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "USJSL2NVB",
                    "URKL31C2J",
                    "UMYKGHYBA",
                    "UMWF81HTP"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H",
                    "UC2A2ARPT",
                    "UJ6LDMMN0",
                    "UQPHR6Y3S"
                ],
                "count": 4
            },
            {
                "name": "heart",
                "users": [
                    "USH01JEDQ",
                    "U7C7B75R6"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "e27cc2aa-31ae-40c8-b0ba-11cdad46b78a",
        "type": "message",
        "text": "Ha, we started <http://Fibery.io|Fibery.io> 3 years ago and are trying to rise a seed round now. I believe our vision is deep, but still it is hard to be honest :slightly_smiling_face:",
        "user": "UMYKGHYBA",
        "ts": "1579512217.198300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LFwO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ha, we started "
                            },
                            {
                                "type": "link",
                                "url": "http://Fibery.io",
                                "text": "Fibery.io"
                            },
                            {
                                "type": "text",
                                "text": " 3 years ago and are trying to rise a seed round now. I believe our vision is deep, but still it is hard to be honest "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579449559.178900",
        "parent_user_id": "UFLN9JFRT"
    },
    {
        "client_msg_id": "78E1D079-A2F7-47B7-B3FD-6A2F296EBDBD",
        "type": "message",
        "text": "<@UMYKGHYBA> There are people around here that might be able to help you with that\u2026 :wink:",
        "user": "U5STGTB3J",
        "ts": "1579513523.199600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a8Gq1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMYKGHYBA"
                            },
                            {
                                "type": "text",
                                "text": " There are people around here that might be able to help you with that\u2026 "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579449559.178900",
        "parent_user_id": "UFLN9JFRT"
    },
    {
        "client_msg_id": "D29347EE-F07E-4AD2-8697-EA69AABCAF49",
        "type": "message",
        "text": "Thanks for compiling another great newsletter!\n\nI don\u2019t feel strong about it, but I don\u2019t think it\u2019s that important who shared something and would rather see the names of and links to authors of the things shared. And the back link into the slack to follow and join the discussion, as you already have it in there.",
        "user": "U5STGTB3J",
        "ts": "1579516466.204600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NB3y4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for compiling another great newsletter!\n\nI don\u2019t feel strong about it, but I don\u2019t think it\u2019s that important who shared something and would rather see the names of and links to authors of the things shared. And the back link into the slack to follow and join the discussion, as you already have it in there."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "USJ899UUD",
                    "URKL31C2J",
                    "UC2A2ARPT",
                    "UJ6LDMMN0",
                    "UE0ETTCG7"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "92bd36ed-5c62-4c75-b53a-934bab32a5c8",
        "type": "message",
        "text": "Yes, the highlight of running blocks is great!",
        "user": "UJ6LDMMN0",
        "ts": "1579520229.204900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ydI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, the highlight of running blocks is great!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18"
    },
    {
        "client_msg_id": "bb72b511-1c74-442e-b6ca-38dccc73370e",
        "type": "message",
        "text": "Even if the the features set is near complete, I miss some key features. Like custom blocks that returns values or the ability to attach some parameters to messages.",
        "user": "UJ6LDMMN0",
        "ts": "1579520362.205100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gg2YO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Even if the the features set is near complete, I miss some key features. Like custom blocks that returns values or the ability to attach some parameters to messages."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18"
    },
    {
        "client_msg_id": "08ba047a-a96d-4044-b415-85407bbcaaa1",
        "type": "message",
        "text": "Hey guys, think this one hasn't been shared here yet. Fabrik is a fabulous visual programming environment by Dan Ingalls from the 1980s which allows you to create UI components directly inside the programming environment: <http://sp.cmc.msu.ru/courses/smalltalk/fabrik/Fabrik.html>\n\nOriginally I shared this as a tweet and it has a bit more context on how I think programming has close links with analysis (as is being worked on by Conal Elliot and Dana Scott): <https://twitter.com/prathyvsh/status/1190222195579994113>",
        "user": "UDKTZSD6H",
        "ts": "1579522204.207200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/prathyvsh|@prathyvsh>: <https://twitter.com/dannyhillis|@dannyhillis> If you are wondering what an alternative future could be like, checkout Dan Ingalls' work on Fabrik. Directly manipulate UI in your programming environment \u2014 a capability tools even after 30+ years of progress haven't fully brought onboard: <http://sp.cmc.msu.ru/courses/smalltalk/fabrik/Fabrik.html> <https://pbs.twimg.com/media/EISEuUlWoAIUaqk.png>",
                "ts": 1572606059,
                "author_name": "Prathyush",
                "author_link": "https://twitter.com/prathyvsh/status/1190222195579994113",
                "author_icon": "https://pbs.twimg.com/profile_images/1157092207075061760/v_xB---l_normal.jpg",
                "author_subname": "@prathyvsh",
                "text": "<https://twitter.com/dannyhillis|@dannyhillis> If you are wondering what an alternative future could be like, checkout Dan Ingalls' work on Fabrik. Directly manipulate UI in your programming environment \u2014 a capability tools even after 30+ years of progress haven't fully brought onboard: <http://sp.cmc.msu.ru/courses/smalltalk/fabrik/Fabrik.html> <https://pbs.twimg.com/media/EISEuUlWoAIUaqk.png>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/prathyvsh/status/1190222195579994113",
                "image_url": "https://pbs.twimg.com/media/EISEuUlWoAIUaqk.png",
                "image_width": 998,
                "image_height": 776,
                "image_bytes": 63287,
                "id": 1,
                "original_url": "https://twitter.com/prathyvsh/status/1190222195579994113",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fmV=x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey guys, think this one hasn't been shared here yet. Fabrik is a fabulous visual programming environment by Dan Ingalls from the 1980s which allows you to create UI components directly inside the programming environment: "
                            },
                            {
                                "type": "link",
                                "url": "http://sp.cmc.msu.ru/courses/smalltalk/fabrik/Fabrik.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOriginally I shared this as a tweet and it has a bit more context on how I think programming has close links with analysis (as is being worked on by Conal Elliot and Dana Scott): "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/prathyvsh/status/1190222195579994113"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UD31LGQKB",
                    "UFLN9JFRT",
                    "UDRQ4V0CT",
                    "UJUQESQ1Z",
                    "UHWC9PXBL"
                ],
                "count": 6
            }
        ]
    },
    {
        "client_msg_id": "651aacd2-74e5-4bfa-a297-e44a083484a7",
        "type": "message",
        "text": "<@U5STGTB3J> will try your suggestion this week and see how it goes",
        "user": "UBN9AFS0N",
        "ts": "1579524651.207500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BRz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " will try your suggestion this week and see how it goes"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0be63153-a7c8-4ef5-b537-f6ae5f29832c",
        "type": "message",
        "text": "<@U5STGTB3J> That would be great :slightly_smiling_face:",
        "user": "UMYKGHYBA",
        "ts": "1579524877.207700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rmC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " That would be great "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579449559.178900",
        "parent_user_id": "UFLN9JFRT"
    },
    {
        "client_msg_id": "d7461289-546f-4836-a830-a46a7260cd33",
        "type": "message",
        "text": "<http://web.eecs.utk.edu/~azh/blog/notebookpainpoints.html>",
        "user": "UBN9AFS0N",
        "ts": "1579526703.208300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "What's wrong with computational notebooks? - Austin Z. Henley",
                "title_link": "http://web.eecs.utk.edu/~azh/blog/notebookpainpoints.html",
                "text": "What's wrong with computational notebooks?",
                "fallback": "What's wrong with computational notebooks? - Austin Z. Henley",
                "from_url": "http://web.eecs.utk.edu/~azh/blog/notebookpainpoints.html",
                "service_name": "web.eecs.utk.edu",
                "id": 1,
                "original_url": "http://web.eecs.utk.edu/~azh/blog/notebookpainpoints.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9AGvM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http://web.eecs.utk.edu/~azh/blog/notebookpainpoints.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579526703.208300",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1579584162.223900",
        "reply_users": [
            "UKASUGYL8",
            "UA14TGLTC"
        ],
        "subscribed": true,
        "last_read": "1579584162.223900",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UEQ7QL15F",
                    "UQPHR6Y3S",
                    "UMVFWPZ36"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "UKASUGYL8",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "63086D28-178B-4C76-8A5D-EA1474207908",
        "type": "message",
        "text": "Yeah, I strongly agree with <@U5STGTB3J> ",
        "user": "UC2A2ARPT",
        "ts": "1579533475.209600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GtC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I strongly agree with "
                            },
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "CCE000E3-37EF-4F5B-870F-B4DE2D0C55F2",
        "type": "message",
        "text": "Actually I like to know who shared what ",
        "user": "UFLN9JFRT",
        "ts": "1579536903.210900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B2K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Actually I like to know who shared what "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "cec33e42-b313-42de-9515-d4fe9de12df0",
        "type": "message",
        "text": "<@UFLN9JFRT> the slack thread link would reveal that, or you prefer to have it right there?",
        "user": "UBN9AFS0N",
        "ts": "1579537404.211300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1579537411.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uC75O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFLN9JFRT"
                            },
                            {
                                "type": "text",
                                "text": " the slack thread link would reveal that, or you prefer to have it right there?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "D81747FB-37C8-4786-85E4-3E5600626031",
        "type": "message",
        "text": "I like names being there also because I think showing people\u2019s names helps shareability  as people are more likely to share content where they are mentioned by name ",
        "user": "UFLN9JFRT",
        "ts": "1579539124.214500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xaZl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like names being there also because I think showing people\u2019s names helps shareability  as people are more likely to share content where they are mentioned by name "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "140981f1-1646-4dac-81af-6f9f3ed473fc",
        "type": "message",
        "text": "that's why I was doing it :slightly_smiling_face:",
        "user": "UBN9AFS0N",
        "ts": "1579539170.214700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UiU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's why I was doing it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "F8587139-6A01-419F-8D97-4C7798877BDE",
        "type": "message",
        "text": "Very interesting. Parts of the qualitative findings can be applied to [insert your FoC area of interest].",
        "user": "UKASUGYL8",
        "ts": "1579552550.216500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b8n/a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting. Parts of the qualitative findings can be applied to [insert your FoC area of interest]."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579526703.208300",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "C4494704-1CFC-41D8-866A-C442E4211484",
        "type": "message",
        "text": "Time to put another log into that dynamic vs. static typing fire\u2026 :fire:\n<https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/|https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/>",
        "user": "U5STGTB3J",
        "ts": "1579556106.218100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "No, dynamic type systems are not inherently more open",
                "title_link": "https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/",
                "text": "Internet debates about typing disciplines continue to be plagued by a pervasive myth that dynamic type systems are inherently better at modeling \u201copen world\u201d domains. The argument usually goes like this: the goal of static typing is to pin everything down...",
                "fallback": "No, dynamic type systems are not inherently more open",
                "from_url": "https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/",
                "service_name": "lexi-lambda.github.io",
                "id": 1,
                "original_url": "https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n+D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Time to put another log into that dynamic vs. static typing fire\u2026 "
                            },
                            {
                                "type": "emoji",
                                "name": "fire"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/",
                                "text": "https://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579556106.218100",
        "reply_count": 16,
        "reply_users_count": 7,
        "latest_reply": "1579681764.244100",
        "reply_users": [
            "UJN1TAYEQ",
            "UMU2RLPR8",
            "U8A5MS6R1",
            "UFB8STN7K",
            "USF232R18",
            "U5STGTB3J",
            "UJBAJNFLK"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "4BDC1CBE-5441-498E-B67D-CB3F4195EF5A",
        "type": "message",
        "text": "The linked essay from Michael Nielsen has some good tips on conducting research: \n<https://twitter.com/pgbovine/status/1219330386242588678|https://twitter.com/pgbovine/status/1219330386242588678>",
        "user": "U5STGTB3J",
        "ts": "1579556241.220000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/pgbovine|@pgbovine>: just discovered <https://twitter.com/michael_nielsen|@michael_nielsen> 's excellent essay (from 2004! how did i not know about this until now?!?)\n<http://michaelnielsen.org/blog/principles-of-effective-research/>\n\nrecorded walkthrough of essay to extract the parts that i feel are most relevant for students and other junior researchers:\n<https://youtu.be/ttTEpgGwsts>",
                "ts": 1579545992,
                "author_name": "Philip Guo",
                "author_link": "https://twitter.com/pgbovine/status/1219330386242588678",
                "author_icon": "https://pbs.twimg.com/profile_images/661230489357967360/HB3vsn3O_normal.jpg",
                "author_subname": "@pgbovine",
                "text": "just discovered <https://twitter.com/michael_nielsen|@michael_nielsen> 's excellent essay (from 2004! how did i not know about this until now?!?)\n<http://michaelnielsen.org/blog/principles-of-effective-research/>\n\nrecorded walkthrough of essay to extract the parts that i feel are most relevant for students and other junior researchers:\n<https://youtu.be/ttTEpgGwsts>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/pgbovine/status/1219330386242588678",
                "id": 1,
                "original_url": "https://twitter.com/pgbovine/status/1219330386242588678",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ifjJP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The linked essay from Michael Nielsen has some good tips on conducting research: \n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/pgbovine/status/1219330386242588678",
                                "text": "https://twitter.com/pgbovine/status/1219330386242588678"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UNLS33M61"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ffc33575-ec7a-4ef0-822d-a95945e7b7e8",
        "type": "message",
        "text": "The article is flamebait, and it is also wrong.\n\nIt begins with ad-hominem attacks on people who prefer dynamically typed languages, and insults Rich Hickey. Apparently, we are ignorant, we believe in myths and fallacies, and we need to be educated.",
        "user": "UJN1TAYEQ",
        "ts": "1579558934.220400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1579559143.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7D/s9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The article is flamebait, and it is also wrong.\n\nIt begins with ad-hominem attacks on people who prefer dynamically typed languages, and insults Rich Hickey. Apparently, we are ignorant, we believe in myths and fallacies, and we need to be educated."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579556106.218100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "efb804de-ff62-4a51-97c6-7cd8ce2e3ff4",
        "type": "message",
        "text": "The article attacks \"a pervasive myth that dynamic type systems are inherently better at modeling \u201copen world\u201d domains\". For a counter-argument, see the comments by Corbin in:\n<https://lobste.rs/s/qqlkk0/no_dynamic_type_systems_are_not>",
        "user": "UJN1TAYEQ",
        "ts": "1579559174.220700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "No, dynamic type systems are not inherently more open",
                "title_link": "https://lobste.rs/s/qqlkk0/no_dynamic_type_systems_are_not",
                "text": "45 comments",
                "fallback": "No, dynamic type systems are not inherently more open",
                "thumb_url": "https://lobste.rs/apple-touch-icon-144.png",
                "from_url": "https://lobste.rs/s/qqlkk0/no_dynamic_type_systems_are_not",
                "thumb_width": 144,
                "thumb_height": 144,
                "service_icon": "https://lobste.rs/apple-touch-icon.png",
                "service_name": "lobste.rs",
                "id": 1,
                "original_url": "https://lobste.rs/s/qqlkk0/no_dynamic_type_systems_are_not"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ms0T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The article attacks \"a pervasive myth that dynamic type systems are inherently better at modeling \u201copen world\u201d domains\". For a counter-argument, see the comments by Corbin in:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://lobste.rs/s/qqlkk0/no_dynamic_type_systems_are_not"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579556106.218100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "5b740e87-83c9-4b09-93aa-d8f25d91ad3c",
        "type": "message",
        "text": "It's not hard to understand why dynamically typed languages are more expressive than statically typed languages, but I enjoyed Corbin's appeal to the Open World Assumption (<https://en.wikipedia.org/wiki/Open-world_assumption>), because it's a different spin than the usual arguments for dynamic typing, and it directly speaks to the original author's focus on \"open world domains\".",
        "user": "UJN1TAYEQ",
        "ts": "1579559473.221000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Open-world assumption",
                "title_link": "https://en.wikipedia.org/wiki/Open-world_assumption",
                "from_url": "https://en.wikipedia.org/wiki/Open-world_assumption",
                "author_name": "Wikipedia",
                "author_link": "https://en.wikipedia.org/",
                "text": "In a formal system of logic used for knowledge representation, the open-world assumption is the assumption that the truth value of a statement may be true irrespective of whether or not it is known to be true. It is the opposite of the closed-world assumption, which holds that any statement that is true is also known to be true.\nThe open-world assumption (OWA) codifies the informal notion that in general no single agent or observer has complete knowledge, and therefore cannot make the closed-world assumption. The OWA limits the kinds of inference and deductions an agent can make to those that follow from statements that are known to the agent to be true. In contrast, the closed world assumption allows an agent to infer, from its lack of knowledge of a statement being true, anything that follows from that statement being false.\nHeuristically, the open-world assumption applies when we represent knowledge within a system as we discover it, and where we cannot guarantee that we have discovered or will discover complete information. In the OWA, statements about knowledge that are not included in or inferred from the knowledge explicitly recorded in the system may be considered unknown, rather than wrong or false.\nSemantic Web languages such as OWL make the open-world assumption. The absence of a particular statement within the web means, in principle, that the statement has not been made explicitly yet, irrespective of whether it would be true or not, and irrespective of whether we believe that it would be true or not. In essence, from the absence of a statement alone, a deductive reasoner cannot (and must not) infer that the statement is false.\nMany procedural programming languages and databases make the closed-world assumption. For example, if a typical airline database does not contain a seat assignment for a traveler, it is assumed that the traveler has not checked in. The closed-world assumption typically applies when a system has complete control over information; this is the case with many database applications where the database transaction system acts as a central broker and arbiter of concurrent requests by multiple independent clients (e.g., airline booking agents). There are, however, many databases with incomplete information: for example, one cannot assume that because there is no mention on a patient's history of a particular allergy, that the patient does not suffer from that allergy.\nExample\n\n Statement: \"Mary\" \"is a citizen of\" \"France\"\n\n Question: Is Paul a citizen of France?\n\n \"Closed world\" (for example SQL) answer: No.\n \"Open world\" answer: Unknown.\n\nUnder OWA, failure to derive a fact does not imply the opposite. For example, assume we only know that Mary is a citizen of France. From this information we can neither conclude that Paul is not a citizen of France, nor that he is. Therefore, we admit the fact that our knowledge of the world is incomplete. The open-world assumption is closely related to the monotonic nature of first-order logic: adding new information never falsifies a previous conclusion. Namely, if we subsequently learn that Paul is also a citizen of France, this does not change any earlier positive or negative conclusions.\nThe language of logic programs with strong negation allows us to postulate the closed-world assumption for some statements and leave the other statements in the realm of the open-world assumption.An intermediate ground between OWA and CWA is provided by the partial-closed world assumption (PCWA). Under the PCWA, the knowledge base is generally treated under open-world semantics, yet it is possible to assert parts that should be treated under closed-world semantics, via completeness assertions. The PCWA is especially needed for situations where the CWA is not applicable due to an open domain, yet the OWA is too credulous in allowing anything to be possibly true.",
                "fallback": "wikipedia: Open-world assumption",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png",
                "id": 1,
                "original_url": "https://en.wikipedia.org/wiki/Open-world_assumption"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=uN0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's not hard to understand why dynamically typed languages are more expressive than statically typed languages, but I enjoyed Corbin's appeal to the Open World Assumption ("
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Open-world_assumption"
                            },
                            {
                                "type": "text",
                                "text": "), because it's a different spin than the usual arguments for dynamic typing, and it directly speaks to the original author's focus on \"open world domains\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579556106.218100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "034de08c-9ac7-407b-8cb3-aa30921a2c83",
        "type": "message",
        "text": "_hasn\u2019t_ rich built a speaking career on the emotional appeal of dynamic types? it\u2019s been a while since i\u2019ve watched on his talks but the one where he introduced transducers in particular is very much in this vein",
        "user": "UMU2RLPR8",
        "ts": "1579560413.221300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zRG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hasn\u2019t",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " rich built a speaking career on the emotional appeal of dynamic types? it\u2019s been a while since i\u2019ve watched on his talks but the one where he introduced transducers in particular is very much in this vein"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579556106.218100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "7a0c5a9d-dc41-4c09-92a6-1eb9c0b6bc64",
        "type": "message",
        "text": "saying he\u2019s wrong about that isn\u2019t an insult, just an opinion",
        "user": "UMU2RLPR8",
        "ts": "1579560457.221500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Riy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "saying he\u2019s wrong about that isn\u2019t an insult, just an opinion"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579556106.218100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "256e3c4a-98c1-44ed-ba3e-66ad30dafc1c",
        "type": "message",
        "text": "Sure, it's just an opinion: <https://blog.aurynn.com/2015/12/16-contempt-culture/>",
        "user": "UJN1TAYEQ",
        "ts": "1579562402.222200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Contempt Culture - The Particular Finest",
                "title_link": "https://blog.aurynn.com/2015/12/16-contempt-culture/",
                "text": "Other languages",
                "fallback": "Contempt Culture - The Particular Finest",
                "from_url": "https://blog.aurynn.com/2015/12/16-contempt-culture/",
                "service_icon": "https://blotcdn.com/blog_3fa9cc2d77394009bfba21d79161363d/_avatars/6cfc3dba-3da3-40cb-bc71-a702cab98566.jpg",
                "service_name": "blog.aurynn.com",
                "id": 1,
                "original_url": "https://blog.aurynn.com/2015/12/16-contempt-culture/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2bvq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure, it's just an opinion: "
                            },
                            {
                                "type": "link",
                                "url": "https://blog.aurynn.com/2015/12/16-contempt-culture/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579556106.218100",
        "parent_user_id": "U5STGTB3J"
    }
]