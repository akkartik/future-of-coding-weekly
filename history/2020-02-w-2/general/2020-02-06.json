[
    {
        "client_msg_id": "F5955EFE-A2E0-4B21-B80C-91AAE5CB0A30",
        "type": "message",
        "text": "What are people\u2019s opinions on Behavioral Programming?\n<https://youtu.be/cXuvCMG21Ss>",
        "user": "USUMN6XLH",
        "ts": "1580955499.046800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Append only development with React \u2014 Luca Matteis",
                "title_link": "https://youtu.be/cXuvCMG21Ss",
                "author_name": "React Finland",
                "author_link": "https://www.youtube.com/channel/UCYRsLerK8J8uGWXFaprYa2A",
                "thumb_url": "https://i.ytimg.com/vi/cXuvCMG21Ss/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Append only development with React \u2014 Luca Matteis",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/cXuvCMG21Ss?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/cXuvCMG21Ss",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/cXuvCMG21Ss"
            }
        ],
        "thread_ts": "1580955499.046800",
        "reply_count": 14,
        "reply_users_count": 8,
        "latest_reply": "1581381032.079000",
        "reply_users": [
            "UEQ6M68H0",
            "UP6G25H35",
            "UL3CJ7YKC",
            "USUMN6XLH",
            "UP28ETUSE",
            "UQ706GB9U",
            "UFEQUBNNT",
            "UCUSW7WVD"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC",
                    "ULM3U6275",
                    "UFEQUBNNT"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "9971d1a4-4858-4dd3-a0e7-399ae74280a0",
        "type": "message",
        "text": "This is the most generous I've yet heard Blow be when talking about the programming communities he doesn't have fondness for \u2014 academic, JavaScript/React, visual programming. It was nice to hear him articular the details of his qualms with them, rather than the normal \"those people are wrongheaded / idiots\"-like statements he's made in every previous instance I've seen.\n\nI really enjoyed this podcast, and would have missed it otherwise. Thanks for mentioning it here!",
        "user": "UC2A2ARPT",
        "ts": "1580962206.047000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gcD5=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the most generous I've yet heard Blow be when talking about the programming communities he doesn't have fondness for \u2014 academic, JavaScript/React, visual programming. It was nice to hear him articular the details of his qualms with them, rather than the normal \"those people are wrongheaded / idiots\"-like statements he's made in every previous instance I've seen.\n\nI really enjoyed this podcast, and would have missed it otherwise. Thanks for mentioning it here!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580480732.286100",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UE0ETTCG7",
                    "UGLSY9X3J"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "669576f8-b620-409b-b8b1-1e2c912e0166",
        "type": "message",
        "text": "* articulate (I would just edit my message to fix that typo, but for some reason the Mac Slack client has had some sort of editing bug in the past week. Thanks, JavaScripters!)",
        "user": "UC2A2ARPT",
        "ts": "1580962298.047200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CzCl3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "* articulate (I would just edit my message to fix that typo, but for some reason the Mac Slack client has had some sort of editing bug in the past week. Thanks, JavaScripters!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580480732.286100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "6d83f4f1-1166-498f-93ca-1d2d2a543557",
        "type": "message",
        "text": "There are several competing theories of how to look at programming. One theory is the actor model, which is a pure object oriented conception, from Hewitt i believe, and was embodied in various languages like smalltalk, where messages are passed. Other systems make explicit a finite state machine, and you have state transitions caused by various events. There are other approaches. But as Joe Armstrong pointed out in his talk with Hoare and Hewitt, at the reunion of the \"3 old men\", only his Erlang/Elixir system actually worked. The concept of having the agents track the state themselves leads to chaos; an almost impossible to debug system.  I think Luca's example of TicTacToe shows how it makes the game far harder to understand and prove correct than something much more conventional.",
        "user": "UEQ6M68H0",
        "ts": "1580966537.047400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kbL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are several competing theories of how to look at programming. One theory is the actor model, which is a pure object oriented conception, from Hewitt i believe, and was embodied in various languages like smalltalk, where messages are passed. Other systems make explicit a finite state machine, and you have state transitions caused by various events. There are other approaches. But as Joe Armstrong pointed out in his talk with Hoare and Hewitt, at the reunion of the \"3 old men\", only his Erlang/Elixir system actually worked. The concept of having the agents track the state themselves leads to chaos; an almost impossible to debug system.  I think Luca's example of TicTacToe shows how it makes the game far harder to understand and prove correct than something much more conventional."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580955499.046800",
        "parent_user_id": "USUMN6XLH",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "USUMN6XLH"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c5b58569-4e8f-40f3-b2b7-354a08244383",
        "type": "message",
        "text": "\"Who needs it today?\" Paul Graham asks this question a lot. It helps you workout who the early adopters are.\n\nThis rather looks like an idea looking for a problem. Which sometimes works. But it can be hard to find early adopters if you start with an idea and then search for early adopters. Have a read of <http://www.paulgraham.com/bronze.html>",
        "user": "UP6G25H35",
        "ts": "1580967686.047600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ISc5W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Who needs it today?\" Paul Graham asks this question a lot. It helps you workout who the early adopters are.\n\nThis rather looks like an idea looking for a problem. Which sometimes works. But it can be hard to find early adopters if you start with an idea and then search for early adopters. Have a read of "
                            },
                            {
                                "type": "link",
                                "url": "http://www.paulgraham.com/bronze.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580955499.046800",
        "parent_user_id": "USUMN6XLH"
    },
    {
        "client_msg_id": "9c79a212-a3ae-4ba4-9751-2e3252530cbc",
        "type": "message",
        "text": "<@UC2A2ARPT> <@U5STGTB3J> The difference between audio and executables is gradual, not fundamental, but it's not small either. One way to quantify it is by the Kolmogorov complexity of the software needed to interpret the data. Pragmatically, approximate the Kolmogorov complexity by the number of lines in a good C implementation. The audio decoder for a WAV file is a lot shorter than an x86 emulator with a minimal operating system.",
        "user": "UJBAJNFLK",
        "ts": "1580986822.048100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bd+h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " The difference between audio and executables is gradual, not fundamental, but it's not small either. One way to quantify it is by the Kolmogorov complexity of the software needed to interpret the data. Pragmatically, approximate the Kolmogorov complexity by the number of lines in a good C implementation. The audio decoder for a WAV file is a lot shorter than an x86 emulator with a minimal operating system."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U5STGTB3J"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b29e8465-e870-499d-8f69-02e11d856cc7",
        "type": "message",
        "text": "<@UCUSW7WVD> Languages as prisons, no, I can't remember such a comparison, but human languages as silos, creating barriers between people, is a common theme, both at the individual and at the social group level. Many migrants have experienced that different languages give them access to different aspects of their lives, as far down as in their dreams (so it's not just who you can talk to).\nAt the social group level, an interesting story is the one told by Ludwik Lejzer Zamenhof, the inventor of Esperanto. He grew up in a trilingual city in which the three linguistic groups had little contact. Which prompted him to invent a bridge language to enable communication. Similarities to today's software world are not accidental, in my opinion.",
        "user": "UJBAJNFLK",
        "ts": "1580987521.048300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S3APN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Languages as prisons, no, I can't remember such a comparison, but human languages as silos, creating barriers between people, is a common theme, both at the individual and at the social group level. Many migrants have experienced that different languages give them access to different aspects of their lives, as far down as in their dreams (so it's not just who you can talk to).\nAt the social group level, an interesting story is the one told by Ludwik Lejzer Zamenhof, the inventor of Esperanto. He grew up in a trilingual city in which the three linguistic groups had little contact. Which prompted him to invent a bridge language to enable communication. Similarities to today's software world are not accidental, in my opinion."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580693035.409300",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "848a8db5-898f-4e33-a0a5-be22e01f3ab7",
        "type": "message",
        "text": "I\u2019ve checked some Conal Elliott videos on youtube and I\u2019m a fan (but that\u2019s for now). :smile: I try to use technologies which are conceptually closer: I\u2019m learning cycle.js for \u201cFRP\u201d (it can be married with react.js). This (Stream based programming / \u201cFRP\u201d / real FRP) and Dependent Types are my 2 things I\u2019d like to focus in the next years. I really believe they will help a lot and mainstream is just matter of time. (But sure, knowing a bit about this industry it can take a lot of time to be mainstream.)",
        "user": "UL3CJ7YKC",
        "ts": "1581020217.049100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5ROfT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve checked some Conal Elliott videos on youtube and I\u2019m a fan (but that\u2019s for now). "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": " I try to use technologies which are conceptually closer: I\u2019m learning cycle.js for \u201cFRP\u201d (it can be married with react.js). This (Stream based programming / \u201cFRP\u201d / real FRP) and Dependent Types are my 2 things I\u2019d like to focus in the next years. I really believe they will help a lot and mainstream is just matter of time. (But sure, knowing a bit about this industry it can take a lot of time to be mainstream.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580955499.046800",
        "parent_user_id": "USUMN6XLH"
    },
    {
        "client_msg_id": "B93DA44E-A922-481F-AE68-38C1F66D74B0",
        "type": "message",
        "text": "<@UP6G25H35> Thanks, that was a very good read.",
        "user": "USUMN6XLH",
        "ts": "1581023233.050100",
        "team": "T5TCAFTA9",
        "thread_ts": "1580955499.046800",
        "parent_user_id": "USUMN6XLH"
    },
    {
        "client_msg_id": "12e2de07-2029-4aea-bf9b-5df1d168d297",
        "type": "message",
        "text": "Is anyone familiar with temporal logics and have seen/done any FoC projects using them?",
        "user": "UCGAK10LS",
        "ts": "1581027718.051600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5iS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is anyone familiar with temporal logics and have seen/done any FoC projects using them?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1581027718.051600",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1581317344.062600",
        "reply_users": [
            "UEQ6M68H0",
            "UCGAK10LS"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC",
                    "UD3AK9JRF"
                ],
                "count": 2
            }
        ]
    }
]