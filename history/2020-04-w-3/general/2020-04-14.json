[
    {
        "client_msg_id": "b88331ee-6fb9-4eca-8163-a73a0440d086",
        "type": "message",
        "text": "HN is easy and fashionable to diss, but I found this thread useful. Yes you have to filter, and yes you need some flame-retardant underwear at times, but if you're willing to sift through you get some gems.\n\nHere I'll highlight <https://news.ycombinator.com/item?id=22860549> as surfacing a steelman question I hadn't considered before. One way to keep things malleable is to minimize dependencies. But how do you encourage people messing with your system to also minimize dependencies so they avoid making the sorts of messes Excel is known for?",
        "user": "UCUSW7WVD",
        "ts": "1586824892.383200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x9p0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "HN is easy and fashionable to diss, but I found this thread useful. Yes you have to filter, and yes you need some flame-retardant underwear at times, but if you're willing to sift through you get some gems.\n\nHere I'll highlight "
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=22860549"
                            },
                            {
                                "type": "text",
                                "text": " as surfacing a steelman question I hadn't considered before. One way to keep things malleable is to minimize dependencies. But how do you encourage people messing with your system to also minimize dependencies so they avoid making the sorts of messes Excel is known for?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UFEQUBNNT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "ca0bf640-bbab-4af4-b9e9-1cd424b9c349",
        "type": "message",
        "text": "Of course I also enjoyed your comment, Shalabh :slightly_smiling_face:\n\n<https://news.ycombinator.com/item?id=22857551#22861015>",
        "user": "UCUSW7WVD",
        "ts": "1586824957.383400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W5c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Of course I also enjoyed your comment, Shalabh "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=22857551#22861015"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "db4b9b07-71d4-422f-852f-6695a3e6143b",
        "type": "message",
        "text": "I'll put on my flame-retardant underwear to say this, but: I found the HN thread more useful than the post it was commenting on.\n\n_/me ducks_",
        "user": "UCUSW7WVD",
        "ts": "1586825193.383600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xTi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll put on my flame-retardant underwear to say this, but: I found the HN thread more useful than the post it was commenting on.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "/me ducks",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "duck",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "sweat_smile",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "Potential case study in recovering malleability from existing software, <@UML4ZEKDK>: <https://mastodon.social/@akkartik/103994830568601931>.\n\nIn general, the thing I find missing in the <https://malleable.systems> mission (and manifestos in general) is any mention of trade-offs. What are we willing to give up to achieve the stated goals? In this case study, malleability is only possible when we control the size and complexity of our software stacks. That might be a common compromise.",
        "user": "UCUSW7WVD",
        "ts": "1586835527.383900",
        "thread_ts": "1584718837.435500",
        "root": {
            "client_msg_id": "829c7eea-779b-49a8-bc49-94a5b0375240",
            "type": "message",
            "text": "First time I\u2019ve heard of \u201cMalleable Systems\u201d. From what I could gather it refers to systems that permit end user programmability / heavy customisability",
            "user": "UF1ATC4RF",
            "ts": "1584718837.435500",
            "team": "T5TCAFTA9",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "VJ0",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "First time I\u2019ve heard of \u201cMalleable Systems\u201d. From what I could gather it refers to systems that permit end user programmability / heavy customisability"
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1584718837.435500",
            "reply_count": 20,
            "reply_users_count": 10,
            "latest_reply": "1587337180.082200",
            "reply_users": [
                "UJ6LDMMN0",
                "UML4ZEKDK",
                "UF1ATC4RF",
                "UEQ6M68H0",
                "U8A5MS6R1",
                "UCUSW7WVD",
                "UKDM3GLAJ",
                "UAVCC2X70",
                "UJN1TAYEQ",
                "UJBAJNFLK"
            ],
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uiVf1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Potential case study in recovering malleability from existing software, "
                            },
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": ": "
                            },
                            {
                                "type": "link",
                                "url": "https://mastodon.social/@akkartik/103994830568601931"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nIn general, the thing I find missing in the "
                            },
                            {
                                "type": "link",
                                "url": "https://malleable.systems"
                            },
                            {
                                "type": "text",
                                "text": " mission (and manifestos in general) is any mention of trade-offs. What are we willing to give up to achieve the stated goals? In this case study, malleability is only possible when we control the size and complexity of our software stacks. That might be a common compromise."
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "47ffea29-c4b7-4f8b-b3b7-31ee886bb71f",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70",
                    "UCKRZS3DZ",
                    "UJBAJNFLK"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "43292249-b913-4fd0-9083-c0252e8986c6",
        "type": "message",
        "text": "\"People really missing what it's about\"\n\nWelcome to the industry :)",
        "user": "UAVCC2X70",
        "ts": "1586835889.384500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rHbT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"People really missing what it's about\"\n\nWelcome to the industry :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "upside_down_face",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "00fb5e1e-6cc7-4acc-9884-efcea91f1dc5",
        "type": "message",
        "text": "Thread was rather ruined by guy from MintData adspamming replies...\n\nI agree though that the comments were very helpful, mainly in highlighting things I strongly disagree with.\n\nMany of their complaints boil down roughly to \"non-programmers will get programming wrong\", however they display a stunning arrogance that ignores the fact that programmers are likely to *get the actual problem at hand wrong*. This apparently isn't an issue.\n\ne.g. this guy <https://news.ycombinator.com/threads?id=mbrodersen> - _\"The real world is complex. The problems software solve in the real world are complex. Economics, sales, politics, personalities, random world events, competition etc. has always and will always be a force pushing software development in non-ideal directions.\"_\n\nie. the genuine reality of the world is likely to interfere with the ideal design of the program!!\n\nThe solution is that the person who is genuinely understands the issue (the lawyer, the doctor, the plumber) needs to hand control over to a programmer who knows nothing about the actual problem...\n\n\nSometimes programmers forget that their only particular skill is being talented at operating a specific kind of gizmo (a microprocessor). It's like yo-yoists suddenly declared themselves the kings of the world because of their unnatural ability of getting yo-yos to do what they want.\n\nBasically this guy is so close but so far. He sees himself as *fundamentally different* from a doctor, due to his ability to reason clearly about the world. But this is wrong. The doctor is likely better at reasoning about medicine than him. He is only better at getting a processor to reflect his mental model, because he is skilled in manipulating this gizmo.\n\nThe thing they miss is; they are all \"end-users\" from some perspective. Are they writing x86 directly? No. Then they are merely moulding some environment created by someone else... &lt;/rant&gt;",
        "user": "UDQBTJ211",
        "ts": "1586852111.386300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DqqDx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thread was rather ruined by guy from MintData adspamming replies...\n\nI agree though that the comments were very helpful, mainly in highlighting things I strongly disagree with.\n\nMany of their complaints boil down roughly to \"non-programmers will get programming wrong\", however they display a stunning arrogance that ignores the fact that programmers are likely to "
                            },
                            {
                                "type": "text",
                                "text": "get the actual problem at hand wrong",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". This apparently isn't an issue.\n\ne.g. this guy "
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/threads?id=mbrodersen"
                            },
                            {
                                "type": "text",
                                "text": " - "
                            },
                            {
                                "type": "text",
                                "text": "\"The real world is complex. The problems software solve in the real world are complex. Economics, sales, politics, personalities, random world events, competition etc. has always and will always be a force pushing software development in non-ideal directions.\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nie. the genuine reality of the world is likely to interfere with the ideal design of the program!!\n\nThe solution is that the person who is genuinely understands the issue (the lawyer, the doctor, the plumber) needs to hand control over to a programmer who knows nothing about the actual problem...\n\n\nSometimes programmers forget that their only particular skill is being talented at operating a specific kind of gizmo (a microprocessor). It's like yo-yoists suddenly declared themselves the kings of the world because of their unnatural ability of getting yo-yos to do what they want.\n\nBasically this guy is so close but so far. He sees himself as "
                            },
                            {
                                "type": "text",
                                "text": "fundamentally different",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " from a doctor, due to his ability to reason clearly about the world. But this is wrong. The doctor is likely better at reasoning about medicine than him. He is only better at getting a processor to reflect his mental model, because he is skilled in manipulating this gizmo.\n\nThe thing they miss is; they are all \"end-users\" from some perspective. Are they writing x86 directly? No. Then they are merely moulding some environment created by someone else... </rant>"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UNCP67JSK",
                    "UCKRZS3DZ",
                    "UML4ZEKDK",
                    "U5STGTB3J",
                    "U8A5MS6R1",
                    "UFLN9JFRT",
                    "UFEQUBNNT",
                    "UAVCC2X70",
                    "UVCBBRG3G",
                    "UHWC9PXBL"
                ],
                "count": 11
            },
            {
                "name": "100",
                "users": [
                    "UAVCC2X70",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "c99c7936-9704-4ecb-85a2-b45121dc6a82",
        "type": "message",
        "text": "The problem here is that very few programmers me included are competent/bothered enough to get an outline or grasp on these matters and dig down to understand what it means.\n\nSo we are all but relegated to sit on the gallery watch a few illuminated people who have differing level of understanding on these issues debate the very important issues with a semblance of enjoyment derived from the rhetoric devices they employ to pick apart these conceptions.",
        "user": "UDKTZSD6H",
        "ts": "1586859749.386700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1586859818.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cS824",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The problem here is that very few programmers me included are competent/bothered enough to get an outline or grasp on these matters and dig down to understand what it means.\n\nSo we are all but relegated to sit on the gallery watch a few illuminated people who have differing level of understanding on these issues debate the very important issues with a semblance of enjoyment derived from the rhetoric devices they employ to pick apart these conceptions."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586636363.322900",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "45623fbc-fb08-47ca-ac81-dcb024bc5d84",
        "type": "message",
        "text": "The thing of interest could be the idea of interactively exploring an API by tinkering around it: <https://www.onegraph.com/graphiql?shortenedId=A2AFGV>\n\nI like the idea here of progressively drilling down a tree, selecting elements of interest to create a query  just by using mouse &amp;/ key commands. Think of this for a website builder.",
        "user": "UDKTZSD6H",
        "ts": "1586860007.387100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1586860050.000000"
        },
        "attachments": [
            {
                "title": "Dashboard - Build Integrations 10x-100x Faster",
                "title_link": "https://www.onegraph.com/graphiql?shortenedId=A2AFGV",
                "text": "OneGraph is a GraphQL service that wraps and connects the internet's SaaS APIs. Build integrations to Stripe, Intercom, Salesforce, Zendesk, GMail, and more 10-100x faster with OneGraph.",
                "fallback": "Dashboard - Build Integrations 10x-100x Faster",
                "from_url": "https://www.onegraph.com/graphiql?shortenedId=A2AFGV",
                "service_icon": "https://www.onegraph.com/apple-touch-icon.png",
                "service_name": "onegraph.com",
                "id": 1,
                "original_url": "https://www.onegraph.com/graphiql?shortenedId=A2AFGV"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tou1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The thing of interest could be the idea of interactively exploring an API by tinkering around it: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.onegraph.com/graphiql?shortenedId=A2AFGV"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI like the idea here of progressively drilling down a tree, selecting elements of interest to create a query  just by using mouse &/ key commands. Think of this for a website builder."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586761286.375000",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "fb206f07-624f-4cb2-8965-cfe9812d6409",
        "type": "message",
        "text": "It was definitely interesting to see how a broader audience like HN reacts to the ideas today. :sweat_smile: Some people there are very comfortable with the current world of computing and don't see a need for change, so they indeed seemed to miss the point, but that's probably okay. To be honest, it's very early days for these malleability ideas, so it seems natural. I am sure many people (esp. on HN) might not be interested when there's no startup to back or quick solution to try out today, and that's okay. For now, I'm mainly hoping to reach anyone interested in experimenting with these ideas or wanting to learn more about those who are doing so.\n\nAt the same time, there was some good discussion of finer details in a few of the sub-threads, and I hope it has at least planted a seed for people to think about the ideas over time. Even if people disagree or don't see the point in it today, hopefully they are at least now aware that some people do, and may be more open to such ideas down the road.\n\nSince the HN post appeared, a lot of new people have gotten in touch to share their excitement for these ideas, so overall I'd say the HN post was a positive step even if there are many confused people in the comments. Thanks to everyone here who may have waded in the HN comments with their own perspective. :smile:",
        "user": "UML4ZEKDK",
        "ts": "1586868570.388200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i1GKs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was definitely interesting to see how a broader audience like HN reacts to the ideas today. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile"
                            },
                            {
                                "type": "text",
                                "text": " Some people there are very comfortable with the current world of computing and don't see a need for change, so they indeed seemed to miss the point, but that's probably okay. To be honest, it's very early days for these malleability ideas, so it seems natural. I am sure many people (esp. on HN) might not be interested when there's no startup to back or quick solution to try out today, and that's okay. For now, I'm mainly hoping to reach anyone interested in experimenting with these ideas or wanting to learn more about those who are doing so.\n\nAt the same time, there was some good discussion of finer details in a few of the sub-threads, and I hope it has at least planted a seed for people to think about the ideas over time. Even if people disagree or don't see the point in it today, hopefully they are at least now aware that some people do, and may be more open to such ideas down the road.\n\nSince the HN post appeared, a lot of new people have gotten in touch to share their excitement for these ideas, so overall I'd say the HN post was a positive step even if there are many confused people in the comments. Thanks to everyone here who may have waded in the HN comments with their own perspective. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "76fe318c-cef3-4604-95f2-2bb79239925c",
        "type": "message",
        "text": "<@UJN1TAYEQ> OK, I have to admit that I never do much financial computing except for my very modest personal needs! And decimal floating point, while certainly a promising idea to explore, is unattractive in my corner of the computational universe (scientific computing) as long as it's not implemented in hardware to make it fast.\n\nBut I do maintain my suggestion that fixed-point (compiled to integer arithmetic) could find more uses than it has today in scientific computing.",
        "user": "UJBAJNFLK",
        "ts": "1586868579.388400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dLWZ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " OK, I have to admit that I never do much financial computing except for my very modest personal needs! And decimal floating point, while certainly a promising idea to explore, is unattractive in my corner of the computational universe (scientific computing) as long as it's not implemented in hardware to make it fast.\n\nBut I do maintain my suggestion that fixed-point (compiled to integer arithmetic) could find more uses than it has today in scientific computing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586634570.322400",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "a4090fe4-faf1-4a7e-b283-6648e4ff8ab4",
        "type": "message",
        "text": "<@UCUSW7WVD> If there are any elements of the HN thread in particular that might refine how the malleability ideas are portrayed for the future, do let me know so it can be improved. Or if you mean you're just not interested in the topic / not important to you, that's okay too, no hard feelings. :slightly_smiling_face:",
        "user": "UML4ZEKDK",
        "ts": "1586868741.388700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UML4ZEKDK",
            "ts": "1586869365.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h3Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " If there are any elements of the HN thread in particular that might refine how the malleability ideas are portrayed for the future, do let me know so it can be improved. Or if you mean you're just not interested in the topic / not important to you, that's okay too, no hard feelings. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "ffebdbe5-f20b-4588-9a73-4067f72d0f13",
        "type": "message",
        "text": "<@UCUSW7WVD> Thanks, that's a good point. So far the mission has been focused on the ideals and goals without proscribing solutions, so I wasn't sure if trade-offs would make sense there.\n\nBut indeed, there may be common trade-offs that come up across different approaches. Seems like a good subject for a new post, so I filed an issue: <https://github.com/malleable-systems/malleable.systems/issues/13>",
        "user": "UML4ZEKDK",
        "ts": "1586869277.389100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "author_name": "jryans",
                "fallback": "[malleable-systems/malleable.systems] #13 Add post about common trade-offs",
                "text": "On the FoC Slack, <https://github.com/akkartik|@akkartik> mentions:\n\n&gt; In general, the thing I find missing in the <https://malleable.systems|https://malleable.systems> mission (and manifestos in general) is any mention of trade-offs. What are we willing to give up to achieve the stated goals? In this case study, malleability is only possible when we control the size and complexity of our software stacks. That might be a common compromise.\n\nI think it would be good to review what common trade-offs across various approaches in a post on the blog.",
                "title": "#13 Add post about common trade-offs",
                "footer": "<https://github.com/malleable-systems/malleable.systems|malleable-systems/malleable.systems>",
                "id": 1,
                "title_link": "https://github.com/malleable-systems/malleable.systems/issues/13",
                "author_link": "https://github.com/jryans",
                "author_icon": "https://avatars3.githubusercontent.com/u/279572?v=4",
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "ts": 1586869243,
                "color": "36a64f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https://github.com/malleable-systems/malleable.systems/issues/13",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "29F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Thanks, that's a good point. So far the mission has been focused on the ideals and goals without proscribing solutions, so I wasn't sure if trade-offs would make sense there.\n\nBut indeed, there may be common trade-offs that come up across different approaches. Seems like a good subject for a new post, so I filed an issue: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/malleable-systems/malleable.systems/issues/13"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF"
    },
    {
        "client_msg_id": "cc47dd99-7cf0-433d-afb8-de8d9ed9eaa3",
        "type": "message",
        "text": "Yes, trade-offs are an important point. In my guest blog post (<https://malleable.systems/blog/2020/04/01/the-most-successful-malleable-system-in-history/>) I point out one of them, which is responsibility for the overall system. If you let users mess around with it, you can't then let them sue the original authors if it breaks. And if you let people distribute their own add-ons, that makes three parties among which responsibility must be divided in some way.\n\nSize and complexity are also an issue, but less so if you get away from the assumption of a software _stack_ implying vertical dependencies. Replace this by a network of modular subsystems with reasonably stable APIs, and you can have malleability for the whole system and for each subsystem. Do it recursively and you can perhaps scale to really big and complex stuff (though I am obviously speculating here).\n\nSure, we have no technology for building systems out of modular subsystems. That remains to be done.",
        "user": "UJBAJNFLK",
        "ts": "1586869959.389700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "The most successful malleable system in history",
                "title_link": "https://malleable.systems/blog/2020/04/01/the-most-successful-malleable-system-in-history/",
                "text": "Emacs is probably the most successful malleable system in the history of computing. What can we learn from it for designing the malleable systems of the future?",
                "fallback": "The most successful malleable system in history",
                "thumb_url": "https://malleable.systems/meta/android-chrome-512x512.png",
                "ts": 1585735200,
                "from_url": "https://malleable.systems/blog/2020/04/01/the-most-successful-malleable-system-in-history/",
                "thumb_width": 512,
                "thumb_height": 512,
                "service_icon": "https://malleable.systems/meta/apple-touch-icon.png",
                "service_name": "malleable.systems",
                "id": 1,
                "original_url": "https://malleable.systems/blog/2020/04/01/the-most-successful-malleable-system-in-history/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tqEuw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, trade-offs are an important point. In my guest blog post ("
                            },
                            {
                                "type": "link",
                                "url": "https://malleable.systems/blog/2020/04/01/the-most-successful-malleable-system-in-history/"
                            },
                            {
                                "type": "text",
                                "text": ") I point out one of them, which is responsibility for the overall system. If you let users mess around with it, you can't then let them sue the original authors if it breaks. And if you let people distribute their own add-ons, that makes three parties among which responsibility must be divided in some way.\n\nSize and complexity are also an issue, but less so if you get away from the assumption of a software "
                            },
                            {
                                "type": "text",
                                "text": "stack",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " implying vertical dependencies. Replace this by a network of modular subsystems with reasonably stable APIs, and you can have malleability for the whole system and for each subsystem. Do it recursively and you can perhaps scale to really big and complex stuff (though I am obviously speculating here).\n\nSure, we have no technology for building systems out of modular subsystems. That remains to be done."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "afff3c88-35ec-41d9-8f01-45d5c5b9cbaa",
        "type": "message",
        "text": "Oh I'm _very_ interested in the topic. This is why I have strong feelings about it.",
        "user": "UCUSW7WVD",
        "ts": "1586879590.390200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Uioc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh I'm "
                            },
                            {
                                "type": "text",
                                "text": "very",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " interested in the topic. This is why I have strong feelings about it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "ffa35595-6e14-420a-9d86-6271c4239ba9",
        "type": "message",
        "text": "<@UCUSW7WVD> Ah great, I wasn't sure how to interpret your statement above \"I found the HN thread more useful than the post it was commenting on\"... I assume it means you don't find the <https://malleable.systems/> site useful, but you are interested in the topic, so I am curious if you see room for improvement or if you feel a completely different approach is needed. Thanks for your earlier suggestion to add info on trade-offs. :slightly_smiling_face:",
        "user": "UML4ZEKDK",
        "ts": "1586882762.390600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K7F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Ah great, I wasn't sure how to interpret your statement above \"I found the HN thread more useful than the post it was commenting on\"... I assume it means you don't find the "
                            },
                            {
                                "type": "link",
                                "url": "https://malleable.systems/"
                            },
                            {
                                "type": "text",
                                "text": " site useful, but you are interested in the topic, so I am curious if you see room for improvement or if you feel a completely different approach is needed. Thanks for your earlier suggestion to add info on trade-offs. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "a99dc016-5e34-4136-825f-d42553ce55ee",
        "type": "message",
        "text": "Yeah, sorry about that :grimacing: [1]. I was referring purely to the narrow subjective feeling I got while reading the prose on both pages. The domain name and the headline resonates strongly. When your previous thread rolled by I spent a lot of time trying to pin down what bothered me about it, and to come up with some constructive feedback. I couldn't think of any, so I chose to err on the side of saying nothing. This time around I'm still unable to be as constructive as I would like, sorry about that. I'm still thinking about this, because it matters a lot to me. I _want_ this page to be superior to drive-by comments by people on the internet.\n\n[1] I come from a culture where feedback is often incredibly subtle, and given with lots of circumlocution. In spite of that I'm a pretty unsubtle guy. The result: many times in my life I've failed to heed warnings that (to others) seemed really repeated and increasingly unsubtle. This still happens, even after I moved to the West. As a result, I sometimes accidentally come across as overly harsh without intending to, the way someone may speak overly loudly if they can't hear themselves. At other times, I consciously err on the side of harshing, just to make a contrast really obvious and make sure that others don't end up in the failure modes I've found myself in.",
        "user": "UCUSW7WVD",
        "ts": "1586885268.391300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aJp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, sorry about that "
                            },
                            {
                                "type": "emoji",
                                "name": "grimacing"
                            },
                            {
                                "type": "text",
                                "text": " [1]. I was referring purely to the narrow subjective feeling I got while reading the prose on both pages. The domain name and the headline resonates strongly. When your previous thread rolled by I spent a lot of time trying to pin down what bothered me about it, and to come up with some constructive feedback. I couldn't think of any, so I chose to err on the side of saying nothing. This time around I'm still unable to be as constructive as I would like, sorry about that. I'm still thinking about this, because it matters a lot to me. I "
                            },
                            {
                                "type": "text",
                                "text": "want",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " this page to be superior to drive-by comments by people on the internet.\n\n[1] I come from a culture where feedback is often incredibly subtle, and given with lots of circumlocution. In spite of that I'm a pretty unsubtle guy. The result: many times in my life I've failed to heed warnings that (to others) seemed really repeated and increasingly unsubtle. This still happens, even after I moved to the West. As a result, I sometimes accidentally come across as overly harsh without intending to, the way someone may speak overly loudly if they can't hear themselves. At other times, I consciously err on the side of harshing, just to make a contrast really obvious and make sure that others don't end up in the failure modes I've found myself in."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "7f745a47-4599-4e30-9e63-1caa1503b104",
        "type": "message",
        "text": "Anyone arguing that Emacs is a successful product is way off-base. Emacs is a disaster as a user interface. That nerds endure it is testimony to how some people have great memories and enjoy obscure powerful things. 99.9% of humanity rejects Emacs as a reasonable interface for editing. Having worked in word processing and desktop publishing for years, it was obvious from the first version of WordStar, followed by WordStar 2000, DisplayWrite, WordPerfect, then to FrameMaker, Quark xPress, InDesign, and the ubiquitous MS Word, a nice graphical interface trumped the archaic-but-powerful Emacs.  AutoCad which also included LISP inside its system, is a far better example of a successful malleable product that still has a strong company (AutoDesk which has hundreds of employees and a hefty market cap).\n\nEmacs if you tried to sell it would go out of business fast.",
        "user": "UEQ6M68H0",
        "ts": "1586890510.393500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1586918283.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "usPhT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone arguing that Emacs is a successful product is way off-base. Emacs is a disaster as a user interface. That nerds endure it is testimony to how some people have great memories and enjoy obscure powerful things. 99.9% of humanity rejects Emacs as a reasonable interface for editing. Having worked in word processing and desktop publishing for years, it was obvious from the first version of WordStar, followed by WordStar 2000, DisplayWrite, WordPerfect, then to FrameMaker, Quark xPress, InDesign, and the ubiquitous MS Word, a nice graphical interface trumped the archaic-but-powerful Emacs.  AutoCad which also included LISP inside its system, is a far better example of a successful malleable product that still has a strong company (AutoDesk which has hundreds of employees and a hefty market cap).\n\nEmacs if you tried to sell it would go out of business fast."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "reactions": [
            {
                "name": "sob",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0563568F-2948-47DC-AA10-3AA627BE633E",
        "type": "message",
        "text": "I came across a PICO-8 tutorial today. While I was aware of the platform, I didn\u2019t know much about it. What I found most interesting is that the limitations, in particular the restriction to 8192 \u201ctokens\u201d that your Lua source code can maximally have, made the person conducting the tutorial optimize the code several times to reduce the number of tokens used. He achieved that mostly through basic refactoring, often using the DRY principle, but also sometimes making the code a little more concise/clever/obscure.\n\nThis (artificial) limitation adds a dynamic to development for PICO-8 that I find fascinating. It adds a forcing function for \u201ckeeping code lean\u201d which I haven\u2019t seen like this anywhere else. The only other similar thing I can think of is the 140/280 character limit on Twitter. Or maybe demoscene contest categories that limit the code and/or binary sizes to a certain amount of bytes.\n\nDo you know of any other programming environments or IDEs that use soft metrics or hard limits or any other tricks to introduce an awareness for wastefulness to programming?\nAnd how do you feel about that as a means to improve code quality?",
        "user": "U5STGTB3J",
        "ts": "1586906564.409300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xh8m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I came across a PICO-8 tutorial today. While I was aware of the platform, I didn\u2019t know much about it. What I found most interesting is that the limitations, in particular the restriction to 8192 \u201ctokens\u201d that your Lua source code can maximally have, made the person conducting the tutorial optimize the code several times to reduce the number of tokens used. He achieved that mostly through basic refactoring, often using the DRY principle, but also sometimes making the code a little more concise/clever/obscure.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "This (artificial) limitation adds a dynamic to development for PICO-8 that I find fascinating. It adds a forcing function for \u201ckeeping code lean\u201d which I haven\u2019t seen like this anywhere else. The only other similar thing I can think of is the 140/280 character limit on Twitter. Or maybe demoscene contest categories that limit the code and/or binary sizes to a certain amount of bytes.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nDo you know of any other programming environments or IDEs that use soft metrics or hard limits or any other tricks to introduce an awareness for wastefulness to programming?\n"
                            },
                            {
                                "type": "text",
                                "text": "And how do you feel about that as a means to improve code quality?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586906564.409300",
        "reply_count": 17,
        "reply_users_count": 7,
        "latest_reply": "1587319267.080400",
        "reply_users": [
            "U5STGTB3J",
            "UCUSW7WVD",
            "UQ706GB9U",
            "UC2A2ARPT",
            "UBSMEUXAA",
            "UEQ6M68H0",
            "UJN1TAYEQ"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UEQ7QL15F"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "98568D38-26DE-4B78-86BE-C36AF757CFE5",
        "type": "message",
        "text": "About PICO-8: <https://www.lexaloffle.com/pico-8.php|https://www.lexaloffle.com/pico-8.php>",
        "user": "U5STGTB3J",
        "ts": "1586906631.409800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "PICO-8 Fantasy Console",
                "title_link": "https://www.lexaloffle.com/pico-8.php",
                "text": "PICO-8 is a fantasy console for making, sharing and playing tiny games and other computer programs. New carts available every day!",
                "fallback": "PICO-8 Fantasy Console",
                "from_url": "https://www.lexaloffle.com/pico-8.php",
                "service_icon": "https://www.lexaloffle.com/favicon.ico",
                "service_name": "lexaloffle.com",
                "id": 1,
                "original_url": "https://www.lexaloffle.com/pico-8.php"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KRm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "About PICO-8: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.lexaloffle.com/pico-8.php",
                                "text": "https://www.lexaloffle.com/pico-8.php"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586906564.409300",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "d50992d9-0056-4861-b4e3-29e9dcaa3bdd",
        "type": "message",
        "text": "Minor counterpoint story: My Mu project leans heavily on projects like the bootstrappable compiler (<https://github.com/certik/bcompiler>) and StoneKnifeForth (<https://github.com/kragen/stoneknifeforth>) which impose draconian limits on lengths of various names.\n\nIn Mu I went the route of having no such limit, and having long names like <https://github.com/akkartik/mu/blob/0671315c1af4707fcab30b11967c88fbaa386bf3/085next-word-or-string.subx#L353> made a huge difference in making the setup feel more ergonomic, so that I wasn't immediately hankering for something better the moment I got it working.\n\nThe net effect: someone coming to my project only has to learn 2 notations, unlike in other bootstrapping projects where they have to learn 4 or 5, because the bottom two were built so parsimoniously that they're no fun to program in at all.",
        "user": "UCUSW7WVD",
        "ts": "1586907328.410100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nf01H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Minor counterpoint story: My Mu project leans heavily on projects like the bootstrappable compiler ("
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/certik/bcompiler"
                            },
                            {
                                "type": "text",
                                "text": ") and StoneKnifeForth ("
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/kragen/stoneknifeforth"
                            },
                            {
                                "type": "text",
                                "text": ") which impose draconian limits on lengths of various names.\n\nIn Mu I went the route of having no such limit, and having long names like "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/mu/blob/0671315c1af4707fcab30b11967c88fbaa386bf3/085next-word-or-string.subx#L353"
                            },
                            {
                                "type": "text",
                                "text": " made a huge difference in making the setup feel more ergonomic, so that I wasn't immediately hankering for something better the moment I got it working.\n\nThe net effect: someone coming to my project only has to learn 2 notations, unlike in other bootstrapping projects where they have to learn 4 or 5, because the bottom two were built so parsimoniously that they're no fun to program in at all."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586906564.409300",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "bf5c1d1e-6c8a-4a16-88d2-6e8ba32724cf",
        "type": "message",
        "text": "Constraints can be very useful. But the devil is in the details of which constraints you choose and how they interact in the big picture.",
        "user": "UCUSW7WVD",
        "ts": "1586907360.410300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iBOvz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Constraints can be very useful. But the devil is in the details of which constraints you choose and how they interact in the big picture."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586906564.409300",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "26d91aef-662f-4ab7-891e-efc425a14f0f",
        "type": "message",
        "text": "Android\u2019s VM has a 64K method limit that results in tech to remove unused bits of code. <https://developer.android.com/studio/build/shrink-code.html#shrink-code>",
        "user": "UQ706GB9U",
        "ts": "1586907543.410500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Android Developers",
                "title": "Shrink, obfuscate, and optimize your app \u00a0|\u00a0 Android Developers",
                "title_link": "https://developer.android.com/studio/build/shrink-code.html#shrink-code",
                "text": "Learn how to shrink code in your release build to remove unused code and resources.",
                "fallback": "Android Developers: Shrink, obfuscate, and optimize your app \u00a0|\u00a0 Android Developers",
                "image_url": "https://developer.android.com/images/android-developers.png",
                "image_width": 444,
                "image_height": 250,
                "from_url": "https://developer.android.com/studio/build/shrink-code.html#shrink-code",
                "image_bytes": 19992,
                "service_icon": "https://www.gstatic.com/devrel-devsite/prod/vafbb0b5d787a2bc7a3bcbfb9dfdb3baefdd01831979d5302dd65271466576cda/android/images/touchicon-180.png",
                "id": 1,
                "original_url": "https://developer.android.com/studio/build/shrink-code.html#shrink-code"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RKo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Android\u2019s VM has a 64K method limit that results in tech to remove unused bits of code. "
                            },
                            {
                                "type": "link",
                                "url": "https://developer.android.com/studio/build/shrink-code.html#shrink-code"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586906564.409300",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "C9CF3F43-A129-432B-B560-618850043948",
        "type": "message",
        "text": "One of the things discussed on the last episode of the podcast is Devine's interest in keeping the core of Orca small (around 600 LoC in the original JS, if memory serves) to make it easier to port to other languages. And the things you make in it are severely limited by the amount of screen real estate.",
        "user": "UC2A2ARPT",
        "ts": "1586908248.421500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1586916073.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0rOJU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of the things discussed on the last episode of the podcast is Devine's interest in keeping the core of Orca small (around 600 LoC in the original JS, if memory serves) to make it easier to port to other languages. And the things you make in it are severely limited by the amount of screen real estate."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586906564.409300",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "8D0A0A96-83C2-47FE-8B1D-941A47602123",
        "type": "message",
        "text": "<@UCUSW7WVD> Thanks for the detailed reply! That helps me understand your perspective. If you happen to think of changes down the line or would like to contribute a post on the site, feel free to react out. :slightly_smiling_face: \n\nIt might be interesting for someone (other than me) to write an \u201canti-post\u201d on the blog synthesising all the ways it will \u201cdefinitely never\u201d work... :thinking_face: It would be good to have another voice in the spectrum of perspectives represented. I think such a post would just inspire me further to prove it can be done. :sweat_smile:",
        "user": "UML4ZEKDK",
        "ts": "1586908435.424000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nDQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for the detailed reply! That helps me understand your perspective. If you happen to think of changes down the line or would like to contribute a post on the site, feel free to react out. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " \n\nIt might be interesting for someone (other than me) to write an \u201canti-post\u201d on the blog synthesising all the ways it will \u201cdefinitely never\u201d work... "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face"
                            },
                            {
                                "type": "text",
                                "text": " It would be good to have another voice in the spectrum of perspectives represented. I think such a post would just inspire me further to prove it can be done. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1"
    }
]