[
    {
        "client_msg_id": "0882351e-baeb-4823-8c79-d57f0ae06d56",
        "type": "message",
        "text": "This weekend turned out very busy (I'll answer David's questions once I can squeeze time back into my schedule -- working from home with kids out of school and a bad internet connection, and taking time out to fix it, has been interesting). How about this upcoming weekend?",
        "user": "UAVCC2X70",
        "ts": "1585539994.025900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1585540114.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JPs3g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This weekend turned out very busy (I'll answer David's questions once I can squeeze time back into my schedule -- working from home with kids out of school and a bad internet connection, and taking time out to fix it, has been interesting). How about this upcoming weekend?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584235196.324400",
        "parent_user_id": "U01003H81UM"
    },
    {
        "client_msg_id": "e13b94bc-8f56-4643-894c-7c9f592a9da4",
        "type": "message",
        "text": "Come join us (and <@UDRQ4V0CT>), wherever your are <https://www.meetup.com/london-creative-coding/events/269708179/>",
        "user": "USY1SDM8D",
        "ts": "1585555419.026900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "USY1SDM8D",
            "ts": "1585933654.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XilIF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Come join us (and "
                            },
                            {
                                "type": "user",
                                "user_id": "UDRQ4V0CT"
                            },
                            {
                                "type": "text",
                                "text": "), wherever your are "
                            },
                            {
                                "type": "link",
                                "url": "https://www.meetup.com/london-creative-coding/events/269708179/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": ":+1:",
        "user": "U01003H81UM",
        "ts": "1585559509.027100",
        "team": "T5TCAFTA9",
        "thread_ts": "1584235196.324400",
        "parent_user_id": "U01003H81UM"
    },
    {
        "type": "message",
        "text": "Apple Testing AR/VR Headset With HTC Vive-Like Controller, Crosswalk Bowling Game, and More - MacRumors\n<https://www.macrumors.com/2020/03/26/apple-ar-vr-headset-controller/>",
        "user": "UE0ETTCG7",
        "ts": "1585573442.027600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Apple Testing AR/VR Headset With HTC Vive-Like Controller, Crosswalk Bowling Game, and More",
                "title_link": "https://www.macrumors.com/2020/03/26/apple-ar-vr-headset-controller/",
                "text": "Apple has expressed a profound interest in augmented reality in recent years, making a major push into the space with frameworks like ARKit and...",
                "fallback": "Apple Testing AR/VR Headset With HTC Vive-Like Controller, Crosswalk Bowling Game, and More",
                "image_url": "https://images.macrumors.com/article-new/2020/03/apple-ar-feature-image.jpg",
                "from_url": "https://www.macrumors.com/2020/03/26/apple-ar-vr-headset-controller/",
                "image_width": 335,
                "image_height": 250,
                "image_bytes": 143330,
                "service_icon": "https://images.macrumors.com/images-new/apple-touch-icon.png?v=01",
                "service_name": "macrumors.com",
                "id": 1,
                "original_url": "https://www.macrumors.com/2020/03/26/apple-ar-vr-headset-controller/"
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UFPPABQ7P",
                    "UBSMEUXAA",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "55d6b47f-85e2-4b91-a246-37ae500a49f9",
        "type": "message",
        "text": "Apologies if this has been discussed already but what do you guys think the current situation will impact some of the initiatives you are working. Right now is possible this will drastically change the prevalence of working remote. Does this change the way we work ?",
        "user": "USEQV4KCH",
        "ts": "1585583686.028900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b+St9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Apologies if this has been discussed already but what do you guys think the current situation will impact some of the initiatives you are working. Right now is possible this will drastically change the prevalence of working remote. Does this change the way we work ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "reply_count": 12,
        "reply_users_count": 6,
        "latest_reply": "1585669684.048100",
        "reply_users": [
            "UC2A2ARPT",
            "UAJKEBGP8",
            "USEQV4KCH",
            "UE6EFEPTQ",
            "UJN1TAYEQ",
            "UA14TGLTC"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "4c699737-0516-4c07-91d7-1d752b4e5a7f",
        "type": "message",
        "text": "When you say \"the way we work\", do you mean...\n\n\u2022 Programmers or people in general?\n\u2022\u00a0This community \u2014 things like meetups and confs?\n\u2022\u00a0Us as individuals, each working on our own projects?",
        "user": "UC2A2ARPT",
        "ts": "1585583850.029100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pCMs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When you say \"the way we work\", do you mean...\n\n\u2022 Programmers or people in general?\n\u2022\u00a0This community \u2014 things like meetups and confs?\n\u2022\u00a0Us as individuals, each working on our own projects?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH"
    },
    {
        "client_msg_id": "fb2e4fe7-3371-45f6-af71-2ca01bc8956c",
        "type": "message",
        "text": "it\u2019s super interesting \u2026 because my life has only changed like 10%. I\u2019ve been working remotely for almost 5 years for a fully distributed team (which I just left), across 4 different cities (now settled into Boston / greater area).\n\nSo basically I feel like everyone now is experiencing (for better / worse) what my working world has been like for the last 5 years",
        "user": "UAJKEBGP8",
        "ts": "1585584426.029300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nm4P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it\u2019s super interesting \u2026 because my life has only changed like 10%. I\u2019ve been working remotely for almost 5 years for a fully distributed team (which I just left), across 4 different cities (now settled into Boston / greater area).\n\nSo basically I feel like everyone now is experiencing (for better / worse) what my working world has been like for the last 5 years"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH"
    },
    {
        "client_msg_id": "18ec196e-0627-42ab-bc16-98009338b56e",
        "type": "message",
        "text": "anyway, stargazing aside \u2026 if anyone wants actual concrete tips / lessons from how we scaled remote from 1 -&gt; 33 people at my last job and all the things we experimented with .. I\u2019m open to chatting!",
        "user": "UAJKEBGP8",
        "ts": "1585584466.029500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vf3Vt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "anyway, stargazing aside \u2026 if anyone wants actual concrete tips / lessons from how we scaled remote from 1 -> 33 people at my last job and all the things we experimented with .. I\u2019m open to chatting!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH"
    },
    {
        "client_msg_id": "8b60497b-5505-4757-bed6-95b3bf307609",
        "type": "message",
        "text": "let's narrow it down to programmers",
        "user": "USEQV4KCH",
        "ts": "1585584533.029700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bs8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "let's narrow it down to programmers"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH"
    },
    {
        "client_msg_id": "6441b2ad-fd55-4ca6-8f5c-bc0673511669",
        "type": "message",
        "text": "I can share my predictions:\n\n\u2022 I think some teams &amp; companies will start to embrace remote more, b/c they saw everything worked just fine. However, I think the % of teams that will feel that way is overstated (by pro-remote pundits). \n\u2022 I think many teams, because they\u2019ve been forced to go remote quickly \u2026 while their business is experiencing added volatility (SaaS companies pride themselves on predictability of revenue)  \u2026 while they haven\u2019t had time to experiment with different remote working styles will actually conclude that working remotely actually sucks and they can\u2019t wait to get back together in person.\nWhile I\u2019m talking about teams, I\u2019m kinda making an assumption here that most programmers / engineers work on teams and have limited influence on if their employer goes more / less remote!",
        "user": "UAJKEBGP8",
        "ts": "1585584763.029900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAJKEBGP8",
            "ts": "1585584795.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LDCWX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can share my predictions:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I think some teams & companies will start to embrace remote more, b/c they saw everything worked just fine. However, I think the % of teams that will feel that way is overstated (by pro-remote pundits). "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I think many teams, because they\u2019ve been forced to go remote quickly \u2026 while their business is experiencing added volatility (SaaS companies pride themselves on predictability of revenue)  \u2026 while they haven\u2019t had time to experiment with different remote working styles will actually conclude that working remotely actually sucks and they can\u2019t wait to get back together in person."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWhile I\u2019m talking about teams, I\u2019m kinda making an assumption here that most programmers / engineers work on teams and have limited influence on if their employer goes more / less remote!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01038KJXRB"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "edb3b125-9ecc-418c-b68c-341cec5c7cf0",
        "type": "message",
        "text": "Currently I am preparing video demo for my generic tree editor. I would like to mention interesting programming languages/environments that store code as structure, not as text. For now I have Dark Language, Subtext and Lamdu in mind. What are other programming environments that are worth mentioning?",
        "user": "UCKRZS3DZ",
        "ts": "1585588913.032700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aM+ja",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Currently I am preparing video demo for my generic tree editor. I would like to mention interesting programming languages/environments that store code as structure, not as text. For now I have Dark Language, Subtext and Lamdu in mind. What are other programming environments that are worth mentioning?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585588913.032700",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1585814330.076400",
        "reply_users": [
            "UBN9AFS0N",
            "UEQ6M68H0",
            "UCKRZS3DZ",
            "UC2A2ARPT"
        ],
        "subscribed": true,
        "last_read": "1585814330.076400"
    },
    {
        "client_msg_id": "d0278b57-d150-4a66-9068-d61fa6067874",
        "type": "message",
        "text": "unison",
        "user": "UBN9AFS0N",
        "ts": "1585590797.032800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0mUBI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "unison"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585588913.032700",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "99e40145-5b7e-44b8-b069-e686d6fbdc2f",
        "type": "message",
        "text": "<@UBN9AFS0N> great newsletter! I wasn't familiar with <https://gtoolkit.com/|Glamorous Toolkit> or <https://lasp-lang.readme.io/|Lasp>! And <https://storyscript.com/> is beautiful. Do you know of any projects that apply the same approach to knowledge management? (Similar to <https://roamresearch.com/|Roamresearch> or <https://coda.io/|Coda> but less app and more framework.)",
        "user": "UUMQH3TA5",
        "ts": "1585592468.037600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UUMQH3TA5",
            "ts": "1585592742.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lxO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " great newsletter! I wasn't familiar with "
                            },
                            {
                                "type": "link",
                                "url": "https://gtoolkit.com/",
                                "text": "Glamorous Toolkit"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "link",
                                "url": "https://lasp-lang.readme.io/",
                                "text": "Lasp"
                            },
                            {
                                "type": "text",
                                "text": "! And "
                            },
                            {
                                "type": "link",
                                "url": "https://storyscript.com/"
                            },
                            {
                                "type": "text",
                                "text": " is beautiful. Do you know of any projects that apply the same approach to knowledge management? (Similar to "
                            },
                            {
                                "type": "link",
                                "url": "https://roamresearch.com/",
                                "text": "Roamresearch"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "link",
                                "url": "https://coda.io/",
                                "text": "Coda"
                            },
                            {
                                "type": "text",
                                "text": " but less app and more framework.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585592468.037600",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1585669851.048500",
        "reply_users": [
            "UC2A2ARPT",
            "UJBAJNFLK",
            "UUMQH3TA5",
            "UA14TGLTC"
        ],
        "subscribed": true,
        "last_read": "1585669851.048500",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "6dd9c51d-a692-4401-b960-af594ae51450",
        "type": "message",
        "text": "org-mode, perhaps?",
        "user": "UC2A2ARPT",
        "ts": "1585592789.038400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1w6T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "org-mode, perhaps?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585592468.037600",
        "parent_user_id": "UUMQH3TA5"
    },
    {
        "client_msg_id": "B49C703C-71F2-4AE3-B703-6DE015D63921",
        "type": "message",
        "text": "Plus org-roam, freshly released.",
        "user": "UJBAJNFLK",
        "ts": "1585592846.039100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VIoy6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Plus org-roam, freshly released."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585592468.037600",
        "parent_user_id": "UUMQH3TA5"
    },
    {
        "client_msg_id": "fe5188e4-5cf8-4f39-a7d1-7f6c21ca3fc7",
        "type": "message",
        "text": "The Luna language project out of Poland has a dual-mode approach, where you can see it as wire and node or in textual form. They favor graphical of course.",
        "user": "UEQ6M68H0",
        "ts": "1585593434.039300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tsC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Luna language project out of Poland has a dual-mode approach, where you can see it as wire and node or in textual form. They favor graphical of course."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585588913.032700",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "3a2514fc-6d47-44b4-87f5-f7093041f499",
        "type": "message",
        "text": "oh yeah. I remember seeing \"emacs\" and closing the tab and locking all the doors.",
        "user": "UUMQH3TA5",
        "ts": "1585594186.039800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ehb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh yeah. I remember seeing \"emacs\" and closing the tab and locking all the doors."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585592468.037600",
        "parent_user_id": "UUMQH3TA5",
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UC2A2ARPT",
                    "UD31LGQKB"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "8d47443e-d6be-4bf7-b3c1-4e6d3af1567c",
        "type": "message",
        "text": "<@UCGAK10LS> perhaps you can give an example of this other kind of macro you are referring to. I was referring to the classic macro/preprocessor systems used in MS Assembler, PL/1, and even C's preprocessor which can be used achieve inline functions. If you have a function that computes the area of a rectangle, it can be considered a macro if you expand into inline code. A lot of clever compilers will look at short functions and inline them automatically. But my point is that repeated sequences of steps exist in every practical application. You don't just draw one of something, you often draw multiple quantities of some widget and the steps to draw that widget are encapsulated into a function/subroutine so as to centralize the code. How it gets called, could vary by language. In Algol-family languages, you explicitly call the function(), but in other languages which are deductive, the runtime system decides when it is time to call that function. I am a big fan of deduction; it saves a lot of work to have the computer decide when to call what.\n\nI have a preprocessor system designed for my Beads language, but have yet to use it. It comes up more when you are making variations of a system for different clients, and that is where the #if allows easy customization.",
        "user": "UEQ6M68H0",
        "ts": "1585594476.040000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PUgn5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " perhaps you can give an example of this other kind of macro you are referring to. I was referring to the classic macro/preprocessor systems used in MS Assembler, PL/1, and even C's preprocessor which can be used achieve inline functions. If you have a function that computes the area of a rectangle, it can be considered a macro if you expand into inline code. A lot of clever compilers will look at short functions and inline them automatically. But my point is that repeated sequences of steps exist in every practical application. You don't just draw one of something, you often draw multiple quantities of some widget and the steps to draw that widget are encapsulated into a function/subroutine so as to centralize the code. How it gets called, could vary by language. In Algol-family languages, you explicitly call the function(), but in other languages which are deductive, the runtime system decides when it is time to call that function. I am a big fan of deduction; it saves a lot of work to have the computer decide when to call what.\n\nI have a preprocessor system designed for my Beads language, but have yet to use it. It comes up more when you are making variations of a system for different clients, and that is where the #if allows easy customization."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585420887.013400",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "ff40a411-201c-4170-850b-5a10f04fb0b8",
        "type": "message",
        "text": "Thank you",
        "user": "UCKRZS3DZ",
        "ts": "1585594614.040200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gQz1M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585588913.032700",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "20781d31-1a81-4d3f-a3d9-755a99780813",
        "type": "message",
        "text": "Going back to answering the original question/OP, it hasn't changed how I develop my own project at all. Except, on the plus side, my contract is not being renewed due to financial constraints, so I'll be working full time on it for a bit!",
        "user": "UE6EFEPTQ",
        "ts": "1585594665.040400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R+B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Going back to answering the original question/OP, it hasn't changed how I develop my own project at all. Except, on the plus side, my contract is not being renewed due to financial constraints, so I'll be working full time on it for a bit!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH",
        "reactions": [
            {
                "name": "upside_down_face",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7576d0ae-4a23-4762-a8e8-c4b1a58a3001",
        "type": "message",
        "text": "Oh soz, I just saw that the original question was ambiguous and didn't necessarily say what I thought! I thought this thread had wandered!",
        "user": "UE6EFEPTQ",
        "ts": "1585594761.040600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IiC7/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh soz, I just saw that the original question was ambiguous and didn't necessarily say what I thought! I thought this thread had wandered!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH",
        "reactions": [
            {
                "name": "wink",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a72b9b63-cd88-407b-bea8-01b5260bb3d2",
        "type": "message",
        "text": "I'll try and add my perspective as <@UCUSW7WVD> suggested.\n\nLets say you build a dataflow or reactive or (insert suitable style) on top of Python or JS or (your language of choice). Now you run it, step through your code, what do you see - _call/return functions!_ There's an error, what do you get? _Call/return function stack traces!_ Wait, what happened to the dataflow objects, or other objects of your programming model? They're there, but they don't correspond to the runtime/debugging/failure model. The standard answer is 'build extra tooling'. This is the additional overhead, of mapping between architectural model and call/return. A very common example here is using async handlers - _the call stacks are meaningless because the 'process of interest' is fragmented across multiple stacks and runtime state (the process of execution)._\n\nThe paper gives a few examples where 'call/return' is not used in defining a system (e.g. constraint connectors and storage combinators). An excerpt from the constraint connectors language on page 12:\n```ivar:f |= (9.0/5.0) * ivar:c + 32 .```\nThis expression describes the constraint between `f` and `c` and importantly, does not employ call/return semantics.\n\nThe key point is you can build other models on top of call/return, so we end up doing it everywhere:\n&gt; While there are few attempts to generalise from call/return to connectors, there are many, trying to simulate different architectural styles using call/return style programming is very common.\nThe main thing the paper is arguing for is more research into support for other styles natively, and not simulation by call/return. Call/return is a very specific kind of pattern - data in / data out - it's a calculator. But where does the data go? And where does it come from? The system is not a call/return function - but why is all the wiring and ongoing behavior implemented with call/return calculators?",
        "user": "U8A5MS6R1",
        "ts": "1585595645.040800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1585595924.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xL5L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll try and add my perspective as "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " suggested.\n\nLets say you build a dataflow or reactive or (insert suitable style) on top of Python or JS or (your language of choice). Now you run it, step through your code, what do you see - "
                            },
                            {
                                "type": "text",
                                "text": "call/return functions! ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "There's an error, what do you get? "
                            },
                            {
                                "type": "text",
                                "text": "Call/return function stack traces! ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "Wait, what happened to the dataflow objects, or other objects of your programming model? They're there, but they don't correspond to the runtime/debugging/failure model. The standard answer is 'build extra tooling'. This is the additional overhead, of mapping between architectural model and call/return. A very common example here is using async handlers - "
                            },
                            {
                                "type": "text",
                                "text": "the call stacks are meaningless because the 'process of interest' is fragmented across multiple stacks and runtime state (the process of execution).",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe paper gives a few examples where 'call/return' is not used in defining a system (e.g. constraint connectors and storage combinators). An excerpt from the constraint connectors language on page 12:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ivar:f |= (9.0/5.0) * ivar:c + 32 ."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This expression describes the constraint between "
                            },
                            {
                                "type": "text",
                                "text": "f",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "c",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and importantly, does not employ call/return semantics.\n\nThe key point is you can build other models on top of call/return, so we end up doing it everywhere:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While there are few attempts to generalise from call/return to connectors, there are many, trying to simulate different architectural styles using call/return style programming is very common."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The main thing the paper is arguing for is more research into support for other styles natively, and not simulation by call/return. Call/return is a very specific kind of pattern - data in / data out - it's a calculator. But where does the data go? And where does it come from? The system is not a call/return function - but why is all the wiring and ongoing behavior implemented with call/return calculators?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585420887.013400",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "896acc6e-df70-43cd-be72-d923031d113c",
        "type": "message",
        "text": "1. My FoC project is on github, and I have always collaborated with remote people while working on it. So for me, that doesn't change. I have more time to work on it now.\n2. Programming 2020 was cancelled. I was looking forward to the Convivial Computing Salon. I like that face to face stuff. We need to start organizing more virtual tech conferences ASAP.\n3. The current situation won't fully end until we have a vaccine/herd immunity. Could be 18 months before full normality is restored. During that time, I think we will undergo a cultural change. Part of that will be to normalize remote working to a greater extent than in the past. A lot of people in my social sphere are now using Zoom videoconferencing for the first time. That is being normalized now.",
        "user": "UJN1TAYEQ",
        "ts": "1585595831.041100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hqLL8",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "My FoC project is on github, and I have always collaborated with remote people while working on it. So for me, that doesn't change. I have more time to work on it now."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Programming 2020 was cancelled. I was looking forward to the Convivial Computing Salon. I like that face to face stuff. We need to start organizing more virtual tech conferences ASAP."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The current situation won't fully end until we have a vaccine/herd immunity. Could be 18 months before full normality is restored. During that time, I think we will undergo a cultural change. Part of that will be to normalize remote working to a greater extent than in the past. A lot of people in my social sphere are now using Zoom videoconferencing for the first time. That is being normalized now."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE6EFEPTQ",
                    "UC2A2ARPT"
                ],
                "count": 2
            },
            {
                "name": "heavy_check_mark",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            }
        ]
    }
]