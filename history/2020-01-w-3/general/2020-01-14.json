[
    {
        "client_msg_id": "cf2a6e48-df56-485b-8b49-06a204153233",
        "type": "message",
        "text": "\"no code\" sounds weird. code is just a way of signifying meaningful semantics or concepts. regardless of what layer of abstraction or what language you're using to convey those meanings, you still gotta write \"code\"",
        "user": "URV7B2542",
        "ts": "1578960143.181700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "URV7B2542",
            "ts": "1578960459.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K2kKx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"no code\" sounds weird. code is just a way of signifying meaningful semantics or concepts. regardless of what layer of abstraction or what language you're using to convey those meanings, you still gotta write \"code\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578924949.164800",
        "parent_user_id": "UMYKGHYBA",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UMVH31ML3"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "15ba01cd-8d26-406b-9850-a6ccb07b133d",
        "type": "message",
        "text": "i take \"no code\" in the article's context to mean \"no high level programming language like ruby or python or java etc\"",
        "user": "URV7B2542",
        "ts": "1578960193.181900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m4lN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i take \"no code\" in the article's context to mean \"no high level programming language like ruby or python or java etc\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578924949.164800",
        "parent_user_id": "UMYKGHYBA"
    },
    {
        "client_msg_id": "24cfd4a0-0b97-4dad-a5e5-931cd159b2a6",
        "type": "message",
        "text": "i like the comment about how we've surpassed no machine code. i do agree overtime, code trends towards more abstract and expressive languages",
        "user": "URV7B2542",
        "ts": "1578960218.182100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "URV7B2542",
            "ts": "1578960229.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pbCU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i like the comment about how we've surpassed no machine code. i do agree overtime, code trends towards more abstract and expressive languages"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578924949.164800",
        "parent_user_id": "UMYKGHYBA"
    },
    {
        "client_msg_id": "48f4c207-1b6a-432e-a66f-71526cc4af2e",
        "type": "message",
        "text": "as a developer, i'm constantly abstracting. when i'm working superficially with one domain, i find my abstractions change more quickly. my custom application abstractions change more slowly cause they sit below my domain abstractions. the custom application abstractions sit on top of language abstractions, which change even more slowly.",
        "user": "URV7B2542",
        "ts": "1578960324.182400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "URV7B2542",
            "ts": "1578960479.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K1qmS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "as a developer, i'm constantly abstracting. when i'm working superficially with one domain, i find my abstractions change more quickly. my custom application abstractions change more slowly cause they sit below my domain abstractions. the custom application abstractions sit on top of language abstractions, which change even more slowly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578924949.164800",
        "parent_user_id": "UMYKGHYBA"
    },
    {
        "client_msg_id": "507884aa-e8b6-4ebc-9a86-e0350945a5cf",
        "type": "message",
        "text": "that's why i feel a good language designer is gonna be a good application designer, and vice versa. it's all about how to abstract well",
        "user": "URV7B2542",
        "ts": "1578960354.182700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G1Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's why i feel a good language designer is gonna be a good application designer, and vice versa. it's all about how to abstract well"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578924949.164800",
        "parent_user_id": "UMYKGHYBA"
    },
    {
        "client_msg_id": "07e3be3d-6b89-4b8d-88b2-db56f1e179f6",
        "type": "message",
        "text": "I do agree that designing computation with text and with graphical elements belong to a single category of activity (call it \"programming\", perhaps), but we need _some_ way to refer to the class of tools/activities that do so while eschewing machine grammars, and I'm happy to use the term \"no code\" for that.",
        "user": "U6FKVSVCK",
        "ts": "1578960600.183100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NSFq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do agree that designing computation with text and with graphical elements belong to a single category of activity (call it \"programming\", perhaps), but we need "
                            },
                            {
                                "type": "text",
                                "text": "some",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " way to refer to the class of tools/activities that do so while eschewing machine grammars, and I'm happy to use the term \"no code\" for that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578924949.164800",
        "parent_user_id": "UMYKGHYBA",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "dcf41ad1-ad31-40cf-a3f0-14f510dd679c",
        "type": "message",
        "text": "<@U6FKVSVCK> fair, point taken",
        "user": "URV7B2542",
        "ts": "1578960776.183300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4H2ES",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6FKVSVCK"
                            },
                            {
                                "type": "text",
                                "text": " fair, point taken"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578924949.164800",
        "parent_user_id": "UMYKGHYBA"
    },
    {
        "client_msg_id": "af2282c1-5fc3-4226-b55e-185837a0d20c",
        "type": "message",
        "text": "Preface:\nThere is no code. There is no file. There is no program. It's all an illusion. Computing is a game of 'choose your illusions'. I don't like these illusions and I want new ones.\n\nGoing full abstract:\n- Meaning over mechanism\n- Cognitive sympathy\n- Human provides design, machine provides rigor (not the other way around)\n- Pervasive provenance\n- Permeable layers\n- Seamless composition\n- Extensive affordances\n- Universal hypermedia",
        "user": "U8A5MS6R1",
        "ts": "1578962469.183500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1578981949.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7QK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Preface:\nThere is no code. There is no file. There is no program. It's all an illusion. Computing is a game of 'choose your illusions'. I don't like these illusions and I want new ones.\n\nGoing full abstract:\n- Meaning over mechanism\n- Cognitive sympathy\n- Human provides design, machine provides rigor (not the other way around)\n- Pervasive provenance\n- Permeable layers\n- Seamless composition\n- Extensive affordances\n- Universal hypermedia"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578910495.160600",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UFMD4TQMD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "F1B6B2D1-595B-4DC2-B9C3-D30E215FEEA2",
        "type": "message",
        "text": "Cool, so atrium , who is part of FoC got 75 million USD , but not sure how much is left, and pivoting to Dev tools. Did I understand this correctly? ",
        "user": "UFLN9JFRT",
        "ts": "1578975876.186100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ndT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool, so atrium , who is part of FoC got 75 million USD , but not sure how much is left, and pivoting to Dev tools. Did I understand this correctly? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "7F4C698A-2B8C-489D-AA05-D2D918E71913",
        "type": "message",
        "text": "<https://techcrunch.com/2020/01/13/atrium-layoffs/|https://techcrunch.com/2020/01/13/atrium-layoffs/>",
        "user": "UFLN9JFRT",
        "ts": "1578976008.187000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "TechCrunch",
                "title": "Atrium lays off lawyers, explains pivot to legal tech \u2013 TechCrunch",
                "title_link": "https://techcrunch.com/2020/01/13/atrium-layoffs/",
                "text": "Seventy-five-million-dollar-funded legal services startup Atrium doesn\u2019t want to be the next company to implode as the tech industry tightens its belt and businesses chase margins instead of growth via unsustainable economics. That\u2019s why Atrium is laying off most of its in-house lawyers\u2026",
                "fallback": "TechCrunch: Atrium lays off lawyers, explains pivot to legal tech \u2013 TechCrunch",
                "image_url": "https://techcrunch.com/wp-content/uploads/2020/01/Justin-Kan-Atrium.png?w=736",
                "from_url": "https://techcrunch.com/2020/01/13/atrium-layoffs/",
                "image_width": 461,
                "image_height": 250,
                "image_bytes": 200657,
                "service_icon": "https://techcrunch.com/wp-content/uploads/2015/02/cropped-cropped-favicon-gradient.png?w=180",
                "id": 1,
                "original_url": "https://techcrunch.com/2020/01/13/atrium-layoffs/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dp5l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://techcrunch.com/2020/01/13/atrium-layoffs/",
                                "text": "https://techcrunch.com/2020/01/13/atrium-layoffs/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "073ed820-18bb-4e01-9a7c-83855be0cc74",
        "type": "message",
        "text": "smells more like general software / automation to me? <@UFLN9JFRT> I feel like their hybrid / empowering-lawyer approach either failed / didn\u2019t have enough margins so they\u2019re going more the software / automation route to take over problems that benefit from pure software they can charge for",
        "user": "UGLSY9X3J",
        "ts": "1578976026.187500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PKa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "smells more like general software / automation to me? "
                            },
                            {
                                "type": "user",
                                "user_id": "UFLN9JFRT"
                            },
                            {
                                "type": "text",
                                "text": " I feel like their hybrid / empowering-lawyer approach either failed / didn\u2019t have enough margins so they\u2019re going more the software / automation route to take over problems that benefit from pure software they can charge for"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "8039b7a8-cf04-443d-8d6c-1b080953e835",
        "type": "message",
        "text": "This seems to be a common approach. \u201cHow can software be used to make ___ manual industry more efficient? Its lucrative / valuable but still done with old / no tech.\u201d\n\n\u2022 Build a traditional firm (HR staffing, law firm, etc)\n\u2022 Observe + build software to automate\n\u2022 Gradually get rid of the recruiters, lawyers, etc.\n\u2022 Profit!",
        "user": "UGLSY9X3J",
        "ts": "1578976097.189800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UGLSY9X3J",
            "ts": "1578976108.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JwFH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This seems to be a common approach. \u201cHow can software be used to make ___ manual industry more efficient? Its lucrative / valuable but still done with old / no tech.\u201d\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Build a traditional firm (HR staffing, law firm, etc)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Observe + build software to automate"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Gradually get rid of the recruiters, lawyers, etc."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Profit!"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "AE422681-9397-4793-B728-CA4C826673C0",
        "type": "message",
        "text": "I was guessing that they wanted to solve one vertical with automation tools, and then move into other verticals with automation. Mine is just a guess since their lead engineer is part of this community ",
        "user": "UFLN9JFRT",
        "ts": "1578976206.191500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E51QO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was guessing that they wanted to solve one vertical with automation tools, and then move into other verticals with automation. Mine is just a guess since their lead engineer is part of this community "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578976206.191500",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1579044263.195000",
        "reply_users": [
            "UC2A2ARPT",
            "UFLN9JFRT",
            "URMEM88JG",
            "UEQ6M68H0"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "10F69E7B-AACA-4314-A0C3-AF6DFD3232B0",
        "type": "message",
        "text": "Who?",
        "user": "UC2A2ARPT",
        "ts": "1578985746.191900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JWz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Who?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578976206.191500",
        "parent_user_id": "UFLN9JFRT"
    },
    {
        "client_msg_id": "f975a651-5d9f-4c3e-9da2-3022102be583",
        "type": "message",
        "text": "It was <@UPS6YEJJF>  who you pared with for me with for the 1-on-1",
        "user": "UFLN9JFRT",
        "ts": "1578985888.192100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S5t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was "
                            },
                            {
                                "type": "user",
                                "user_id": "UPS6YEJJF"
                            },
                            {
                                "type": "text",
                                "text": "  who you pared with for me with for the 1-on-1"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578976206.191500",
        "parent_user_id": "UFLN9JFRT"
    },
    {
        "client_msg_id": "553ebf95-1214-4aab-9e50-e208c59402b1",
        "type": "message",
        "text": "Software needs to be evolvable in order for people to thrive.\n\n(I don't think people are thriving)",
        "user": "UMWF81HTP",
        "ts": "1579000123.192500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1579000397.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/0qe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Software needs to be evolvable in order for people to thrive.\n\n(I don't think people are thriving)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578910495.160600",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "6b56e574-8f12-4610-8f95-0410d18e02cd",
        "type": "message",
        "text": "<@U8A5MS6R1> some of those are abstract to the point of opacity, to me at least! Can you ground them a little?:smiley:",
        "user": "UE6EFEPTQ",
        "ts": "1579000559.192900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qMcFm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " some of those are abstract to the point of opacity, to me at least! Can you ground them a little?"
                            },
                            {
                                "type": "emoji",
                                "name": "smiley"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578910495.160600",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "c2bb2bcf-d9f3-44fd-9377-b204f7e9909c",
        "type": "message",
        "text": "From Pervasive Provence on",
        "user": "UE6EFEPTQ",
        "ts": "1579000596.193100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tkk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From Pervasive Provence on"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578910495.160600",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "56fcce1b-750d-43b1-a2c2-4388ef4e83a1",
        "type": "message",
        "text": "Ah, cool. (I believe that 1-on-1 pairing is automatic. I've never really seen how it works or tried it. I guess I should sometime.)",
        "user": "UC2A2ARPT",
        "ts": "1579024188.193400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j1bt3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, cool. (I believe that 1-on-1 pairing is automatic. I've never really seen how it works or tried it. I guess I should sometime.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578976206.191500",
        "parent_user_id": "UFLN9JFRT"
    },
    {
        "client_msg_id": "22f9ad47-8008-4f10-ad40-4f5c39426814",
        "type": "message",
        "text": "I\u2019ve been to several Atrium events and think highly of Justin, but it never made sense to us to switch to Atrium for our startup\u2019s legal needs at the consistent-but-high price point for their full legal monthly retainer, although it would have to use it for expensive, scoped engagements like a fundraise, so my wild speculation is that it\u2019s a simple business numbers decision on profitability of general legal vs. specialized legal, and that their software helps differentiate a lot more with the latter than the former. I wouldn\u2019t guess that this has many implications for automation of business processes through software.",
        "user": "URMEM88JG",
        "ts": "1579025166.193600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0ZDrD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve been to several Atrium events and think highly of Justin, but it never made sense to us to switch to Atrium for our startup\u2019s legal needs at the consistent-but-high price point for their full legal monthly retainer, although it would have to use it for expensive, scoped engagements like a fundraise, so my wild speculation is that it\u2019s a simple business numbers decision on profitability of general legal vs. specialized legal, and that their software helps differentiate a lot more with the latter than the former. I wouldn\u2019t guess that this has many implications for automation of business processes through software."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578976206.191500",
        "parent_user_id": "UFLN9JFRT"
    },
    {
        "client_msg_id": "64ea6f4e-625b-4a6c-b4a4-546249b6ce4b",
        "type": "message",
        "text": "Happy to elaborate <@UE6EFEPTQ>\n\n*Pervasive Provenance*\nI should be able to 'inspect element' almost anywhere and follow the chain of provenance - how the thing was constructed - for anything I can see. There are probably multiple aspects to provenance (e.g. version history, execution trace, ...) and I should be able to follow any path.\n\n*Permeable Layers*\nIt should be possible to see under any layer of abstraction, in a safe manner, and see how the inside corresponds to the outside.\n\n*Seamless Composition*\nWhen I compose any object A with another object B in my system, the only thing that should matter is the highest level meaning encoded in these objects. The lower level data formats should be irrelevant, adapters should materialize as necessary. This requires that objects carry within them enough information to be tied back to some higher level meaning. Have been discussing this in <https://futureofcoding.slack.com/archives/CCL5VVBAN/p1577178650059300>.\n\n*Extensive Affordances*\nAll objects should expose (via API/visual features) their abilities - labelled knobs and buttons. Not like Unix shell commands where you can't introspect them in a uniform manner to discover the flags and options. Compare with the Lisp machines (commands are functions with typed arguments, can be introspected, contextually fulfilled). Composition of objects should 'flow through' the affordances.\n\n*Universal Hypermedia*\n(Never copy paste an id again). Across the whole system, objects have resolvable ids/links. Objects that are related hold resolvable references to each other so their visualization easily provides navigable links to the other objects. Jump from running apps to sources to authors to annotation systems with easy. Allow 'scribbling in the margins' by attaching annotations to any object. No silos.",
        "user": "U8A5MS6R1",
        "ts": "1579027404.193800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1579027412.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u0Ha",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Happy to elaborate "
                            },
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Pervasive Provenance",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nI should be able to 'inspect element' almost anywhere and follow the chain of provenance - how the thing was constructed - for anything I can see. There are probably multiple aspects to provenance (e.g. version history, execution trace, ...) and I should be able to follow any path.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Permeable Layers",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nIt should be possible to see under any layer of abstraction, in a safe manner, and see how the inside corresponds to the outside.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Seamless Composition",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nWhen I compose any object A with another object B in my system, the only thing that should matter is the highest level meaning encoded in these objects. The lower level data formats should be irrelevant, adapters should materialize as necessary. This requires that objects carry within them enough information to be tied back to some higher level meaning. Have been discussing this in "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1577178650059300"
                            },
                            {
                                "type": "text",
                                "text": ".\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Extensive Affordances",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nAll objects should expose (via API/visual features) their abilities - labelled knobs and buttons. Not like Unix shell commands where you can't introspect them in a uniform manner to discover the flags and options. Compare with the Lisp machines (commands are functions with typed arguments, can be introspected, contextually fulfilled). Composition of objects should 'flow through' the affordances.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Universal Hypermedia",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n(Never copy paste an id again). Across the whole system, objects have resolvable ids/links. Objects that are related hold resolvable references to each other so their visualization easily provides navigable links to the other objects. Jump from running apps to sources to authors to annotation systems with easy. Allow 'scribbling in the margins' by attaching annotations to any object. No silos."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578910495.160600",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "61620373-e409-4d11-9d28-787abd7dac21",
        "type": "message",
        "text": "The higher level principles are in the first few points:\n\n*Meaning over Mechanism*: computers are mechanisms that serve human needs and human values. Twisting our meaning to fit the mechanism must always be looked at as a shortcoming. (Note: Twisting is different from precision)\n\n*Cognitive Sympathy*: The mental models should fit common cognitive abilities. Not having to juggle too many things in your mind, mapping to common metaphors, visualizations to aid comprehension.\n\n*Human provides design, machine provides rigor* (not the other way around). Since the machine can simulate itself very well, humans shouldn't have to simulate the machine. (What do you do when you read code?). We supply ideas (in a precise enough form) and the machine should supply rigor.",
        "user": "U8A5MS6R1",
        "ts": "1579028057.194500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GAv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The higher level principles are in the first few points:\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Meaning over Mechanism",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": computers are mechanisms that serve human needs and human values. Twisting our meaning to fit the mechanism must always be looked at as a shortcoming. (Note: Twisting is different from precision)\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Cognitive Sympathy",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": The mental models should fit common cognitive abilities. Not having to juggle too many things in your mind, mapping to common metaphors, visualizations to aid comprehension.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Human provides design, machine provides rigor",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (not the other way around). Since the machine can simulate itself very well, humans shouldn't have to simulate the machine. (What do you do when you read code?). We supply ideas (in a precise enough form) and the machine should supply rigor."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578910495.160600",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U6FKVSVCK"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UFMD4TQMD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e0c3443b-19f7-4648-8e1d-d51ca4cbcf15",
        "type": "message",
        "text": "I particulary agree with this part of the conclusion of Alex Hudson:\n&gt; The sweet spot for me is the \u201cpower user\u201d: the user of IT who is extremely adept already, and is probably bending tools beyond their design. Giving them an environment in which to deliver is extremely important, but this should be a joint effort with more technical staff - the two sides should not be in opposition.\nI think that we are at a point where we need to blur the frontier between expert programming (i.e. mainly text) and end-user programming (i.e. mainly visual) and make it easy to switch between the two, allowing experts benefit from better visual representations and allowing \"power end-users\" to tinker with \"lower level\" programming with text.",
        "user": "UJ6LDMMN0",
        "ts": "1579032795.194700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1579032818.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9MA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I particulary agree with this part of the conclusion of Alex Hudson:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The sweet spot for me is the \u201cpower user\u201d: the user of IT who is extremely adept already, and is probably bending tools beyond their design. Giving them an environment in which to deliver is extremely important, but this should be a joint effort with more technical staff - the two sides should not be in opposition."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that we are at a point where we need to blur the frontier between expert programming (i.e. mainly text) and end-user programming (i.e. mainly visual) and make it easy to switch between the two, allowing experts benefit from better visual representations and allowing \"power end-users\" to tinker with \"lower level\" programming with text."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578924949.164800",
        "parent_user_id": "UMYKGHYBA",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ddc46d20-2a64-4a41-a5a0-1041e648a040",
        "type": "message",
        "text": "I was at a university reunion a few years back, and i saying i was building a prototype for a commercial real estate product similar to MLS but not for residential, but commercial property. The guy next to me said that he was in a startup that failed doing exactly that, and they where the second failure. He said the reason it can't work is that the sales people who hold the listing refuse to put the properties into a computer. The commissions on commercial property are nearer 10%... anyway legal startups will have always have a difficult time, because the law industry has very little interest in reforming or streamlining itself. Small service companies like DocketBird can make a modest living, but to head on try to change law is quite a difficult project. You are talking about taking food out of a lot of people's mouths, and unlike the tech business which thrives on disruptive changes, the legal industry is extremely conservative and will resist mightily any significant changes. Here in california, the minimum wage for a lawyer is around $350 per hour (in terms of court-ordered legal services). That's 700k/year full time. The field does need reform, but Atrium is feeling first hand the cost of keeping all those lawyers on full salary, while their billable hours were obviously insufficient to cover it. The advantage of the existing system, is a lawyer can dream about your case and bill you, while a service like Atrium with its flat fee model was not able to take advantage of that.",
        "user": "UEQ6M68H0",
        "ts": "1579044263.195000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1h1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was at a university reunion a few years back, and i saying i was building a prototype for a commercial real estate product similar to MLS but not for residential, but commercial property. The guy next to me said that he was in a startup that failed doing exactly that, and they where the second failure. He said the reason it can't work is that the sales people who hold the listing refuse to put the properties into a computer. The commissions on commercial property are nearer 10%... anyway legal startups will have always have a difficult time, because the law industry has very little interest in reforming or streamlining itself. Small service companies like DocketBird can make a modest living, but to head on try to change law is quite a difficult project. You are talking about taking food out of a lot of people's mouths, and unlike the tech business which thrives on disruptive changes, the legal industry is extremely conservative and will resist mightily any significant changes. Here in california, the minimum wage for a lawyer is around $350 per hour (in terms of court-ordered legal services). That's 700k/year full time. The field does need reform, but Atrium is feeling first hand the cost of keeping all those lawyers on full salary, while their billable hours were obviously insufficient to cover it. The advantage of the existing system, is a lawyer can dream about your case and bill you, while a service like Atrium with its flat fee model was not able to take advantage of that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578976206.191500",
        "parent_user_id": "UFLN9JFRT",
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UFLN9JFRT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    }
]