[
    {
        "client_msg_id": "6397fe48-2792-478c-bf83-8010049138cd",
        "type": "message",
        "text": "OK, this looks really cool.  Essentially, it is an implied mutable interface input into the function. Using the same tools as generics, you can have lambda arguments capture these arbitrarily.  I might replicate a similar thing in the language I am working on, though perhaps not in quite the same way.",
        "user": "UT39HTL9X",
        "ts": "1580604449.310700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "69TQA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK, this looks really cool.  Essentially, it is an implied mutable interface input into the function. Using the same tools as generics, you can have lambda arguments capture these arbitrarily.  I might replicate a similar thing in the language I am working on, though perhaps not in quite the same way."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580590491.307600",
        "parent_user_id": "UT39HTL9X",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UT57EGH6K"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "be12613d-dbee-4038-8ca6-e51d66f2e0c7",
        "type": "message",
        "text": "I've mentioned Hest a few times here in the Slack, but not particularly loudly, since it's not mature enough yet to warrant serious attention. To wit, I believe I've only made one top-level post about it \u2014\u00a0<https://futureofcoding.slack.com/archives/CCL5VVBAN/p1566801692212900>",
        "user": "UC2A2ARPT",
        "ts": "1580606063.310900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1566801692212900",
                "fallback": "[August 25th, 2019 11:41 PM] ivanreese: I've written the first blog post about my own future of coding project, the artistic programming tool Hest. In the post I describe how the programming model emerges from geometric primitives, the inspirations behind the editor GUI, the design of the time travel capability, and end with a problem that emerged from the intersection of two of my favorite features. I welcome feedback about both the design of Hest and the problem I'm currently grappling with, plus the blog post itself. I do a lot of writing but not a lot of blogging so suggestions about how to better utilize the medium, or places where you lose the thread of thought, would be lovely. Thanks!",
                "ts": "1566801692.212900",
                "author_id": "UC2A2ARPT",
                "author_subname": "Ivan Reese",
                "channel_id": "CCL5VVBAN",
                "channel_name": "feedback",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "I've written the first blog post about my own future of coding project, the artistic programming tool Hest. In the post I describe how the programming model emerges from geometric primitives, the inspirations behind the editor GUI, the design of the time travel capability, and end with a problem that emerged from the intersection of two of my favorite features. I welcome feedback about both the design of Hest and the problem I'm currently grappling with, plus the blog post itself. I do a lot of writing but not a lot of blogging so suggestions about how to better utilize the medium, or places where you lose the thread of thought, would be lovely. Thanks!",
                "author_name": "Ivan Reese",
                "author_link": "https://futureofcoding.slack.com/team/UC2A2ARPT",
                "author_icon": "https://secure.gravatar.com/avatar/6f94d2ed5e188be9865a531021b0afcd.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1566801692212900",
                "footer": "Thread in #feedback"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qpA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've mentioned Hest a few times here in the Slack, but not particularly loudly, since it's not mature enough yet to warrant serious attention. To wit, I believe I've only made one top-level post about it \u2014\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1566801692212900"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "bff20915-587a-488b-8646-ec531adf6007",
        "type": "message",
        "text": "To answer your question...\n\nYes, in this demo there's only one increment operation. Currently, operations [/ functions / nodes / whatever] in Hest only act on a single input at a time, and are stateful. I'm pretty sure I'm going to change that, but I haven't yet found a way to express \"multi-argument function\" in terms of the geometric primitives I'm allowing myself to use. That's the biggest problem holding me back from making progress, and I'm planning to spend a few weeks working on just that problem later this month.",
        "user": "UC2A2ARPT",
        "ts": "1580606271.311200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gPe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To answer your question...\n\nYes, in this demo there's only one increment operation. Currently, operations [/ functions / nodes / whatever] in Hest only act on a single input at a time, and are stateful. I'm pretty sure I'm going to change that, but I haven't yet found a way to express \"multi-argument function\" in terms of the geometric primitives I'm allowing myself to use. That's the biggest problem holding me back from making progress, and I'm planning to spend a few weeks working on just that problem later this month."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "28fe5498-8593-407c-9fa9-363c919beba3",
        "type": "message",
        "text": "Edges [/ lines / cables / conveyors / whatever] are somewhat analogous to call sites, not arguments, so it's quite natural to have a node like \"+ 1\"  have multiple edges connecting to it. It calls itself recursively too, in this example, but with a time delay.. and since execution is _participatory_ \u2014 the programmer is the one controlling the passage of execution-time \u2014 infinite loops aren't the _instruction pointer black holes_ we typically view them as.",
        "user": "UC2A2ARPT",
        "ts": "1580606566.311400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580606603.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K6HS4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Edges [/ lines / cables / conveyors / whatever] are somewhat analogous to call sites, not arguments, so it's quite natural to have a node like \"+ 1\"  have multiple edges connecting to it. It calls itself recursively too, in this example, but with a time delay.. and since execution is "
                            },
                            {
                                "type": "text",
                                "text": "participatory",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " \u2014 the programmer is the one controlling the passage of execution-time \u2014 infinite loops aren't the "
                            },
                            {
                                "type": "text",
                                "text": "instruction pointer black holes",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " we typically view them as."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "f31a93cd-efad-4983-bcae-4216a115f1ee",
        "type": "message",
        "text": "(Helps that there is no notion of an instruction pointer.)",
        "user": "UC2A2ARPT",
        "ts": "1580606620.311700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3l3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Helps that there is no notion of an instruction pointer.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "1f76b80c-120b-4f3a-adc7-8ef36b633f2a",
        "type": "message",
        "text": "It's very easy for me to go way off the deep end explaining things. Sorry. I think it's better when the design of Hest speaks for itself in GIF and video form. I'll make some more demos when I have more to show, and I'll share them here.",
        "user": "UC2A2ARPT",
        "ts": "1580606720.312000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O1hr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's very easy for me to go way off the deep end explaining things. Sorry. I think it's better when the design of Hest speaks for itself in GIF and video form. I'll make some more demos when I have more to show, and I'll share them here."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "f6f79ea0-d64c-47c9-b22d-a99af8a6ed6a",
        "type": "message",
        "text": "Really cool <@UC2A2ARPT>!\nWhy is `*=` but just `+` not `+=`? What's the difference between the 2?\nAlso are particular reasons that you need more than 1 input at a time? Have you tried to use partial application to _fake_ multiple inputs?",
        "user": "U85HCL7JP",
        "ts": "1580621404.312200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QoJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really cool "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": "!\nWhy is "
                            },
                            {
                                "type": "text",
                                "text": "*=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but just "
                            },
                            {
                                "type": "text",
                                "text": "+",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " not "
                            },
                            {
                                "type": "text",
                                "text": "+=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? What's the difference between the 2?\nAlso are particular reasons that you need more than 1 input at a time? Have you tried to use partial application to "
                            },
                            {
                                "type": "text",
                                "text": "fake",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " multiple inputs?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "d6a0ca34-8789-49cc-83fb-c0833ee209d9",
        "type": "message",
        "text": "It has internal state, an accumulator.",
        "user": "UCUSW7WVD",
        "ts": "1580621929.312400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Ng",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It has internal state, an accumulator."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b02f9293-ea42-4366-b59a-d9eeeb5c5ce4",
        "type": "message",
        "text": "If you look at the function boxes.. they each have a little number that hangs off the right edge. That's a stored value. It is internal state. In the case of `*=` it is an accumulator, like Kartik said, so it updates the stored value with each invocation. The regular `+` operator does not. And yes, you can imagine that the `+` box has been partially applied with `1`, and the `*=` box continually replaces itself with a new function with a new partial application.\n\n^ I hate all of this. None of this is truly part of the design of Hest. It's just a stepping stone for me to test the GUI, scheduler, renderer, etc. Those things are easy, whereas figuring out what notions of \"programming\" feel good in this environment.. that's very hard.\n\nI have a pretty good sense of.. things like function definition, composition, invocation.. and data definition and invocation... but I don't yet have a good sense of data composition (ie collections).",
        "user": "UC2A2ARPT",
        "ts": "1580623446.312700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580623842.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6tiR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you look at the function boxes.. they each have a little number that hangs off the right edge. That's a stored value. It is internal state. In the case of "
                            },
                            {
                                "type": "text",
                                "text": "*=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it is an accumulator, like Kartik said, so it updates the stored value with each invocation. The regular "
                            },
                            {
                                "type": "text",
                                "text": "+",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " operator does not. And yes, you can imagine that the "
                            },
                            {
                                "type": "text",
                                "text": "+",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " box has been partially applied with "
                            },
                            {
                                "type": "text",
                                "text": "1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and the "
                            },
                            {
                                "type": "text",
                                "text": "*=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " box continually replaces itself with a new function with a new partial application.\n\n^ I hate all of this. None of this is truly part of the design of Hest. It's just a stepping stone for me to test the GUI, scheduler, renderer, etc. Those things are easy, whereas figuring out what notions of \"programming\" feel good in this environment.. that's very hard.\n\nI have a pretty good sense of.. things like function definition, composition, invocation.. and data definition and invocation... but I don't yet have a good sense of data composition (ie collections)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580597761.309900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "3950795f-06cc-4703-89d3-1da80c0f9743",
        "type": "message",
        "text": "<@US370TRJA> ooh that research seems interesting. I'm going to save that as a reference, thanks!",
        "user": "UCGAK10LS",
        "ts": "1580630678.313300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BQF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "US370TRJA"
                            },
                            {
                                "type": "text",
                                "text": " ooh that research seems interesting. I'm going to save that as a reference, thanks!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "US370TRJA"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "564766B7-0545-4925-AD18-A3854632AF27",
        "type": "message",
        "text": "Spotted on HN \u201cAnders Hejlsberg on Modern Compiler Construction \u201c <https://channel9.msdn.com/Blogs/Seth-Juarez/Anders-Hejlsberg-on-Modern-Compiler-Construction|https://channel9.msdn.com/Blogs/Seth-Juarez/Anders-Hejlsberg-on-Modern-Compiler-Construction>",
        "user": "UPRSF90CW",
        "ts": "1580653057.314300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Channel 9",
                "title": "Anders Hejlsberg on Modern Compiler Construction",
                "title_link": "https://channel9.msdn.com/Blogs/Seth-Juarez/Anders-Hejlsberg-on-Modern-Compiler-Construction",
                "text": "The way this story starts is pretty interesting: one day in the lunch room in building 25 I happened to have a chat with the great Anders Hejlsberg about compilers (yeah, it was pretty cool). One thin",
                "fallback": "Channel 9: Anders Hejlsberg on Modern Compiler Construction",
                "thumb_url": "https://sec.ch9.ms/ch9/5dde/58a0fd27-2c19-4413-a5e6-de544e215dde/ModernCompilerConstructionPart1_960.jpg",
                "video_html_width": 512,
                "video_html_height": 288,
                "video_url": "https://sec.ch9.ms/ch9/5dde/58a0fd27-2c19-4413-a5e6-de544e215dde/ModernCompilerConstructionPart1_mid.mp4",
                "from_url": "https://channel9.msdn.com/Blogs/Seth-Juarez/Anders-Hejlsberg-on-Modern-Compiler-Construction",
                "thumb_width": 960,
                "thumb_height": 540,
                "service_icon": "https://channel9.msdn.com/favicon-129x129.png",
                "id": 1,
                "original_url": "https://channel9.msdn.com/Blogs/Seth-Juarez/Anders-Hejlsberg-on-Modern-Compiler-Construction"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c3KPR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Spotted on HN \u201cAnders Hejlsberg on Modern Compiler Construction \u201c "
                            },
                            {
                                "type": "link",
                                "url": "https://channel9.msdn.com/Blogs/Seth-Juarez/Anders-Hejlsberg-on-Modern-Compiler-Construction",
                                "text": "https://channel9.msdn.com/Blogs/Seth-Juarez/Anders-Hejlsberg-on-Modern-Compiler-Construction"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "USUMN6XLH"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6ff83a1d-eeb5-487b-942a-201816c69f7a",
        "type": "message",
        "text": "An interesting Twitter thread on the preservation of digital art, including  comment on how it hurts that digital artists can't fully manage the media they use: <https://twitter.com/Polackio/status/1223303212775739392>",
        "user": "UJBAJNFLK",
        "ts": "1580664092.315400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/Polackio|@Polackio>: Hey all you artists working in the digital medium:\n\nI am a software developer currently employed at an art museum, and we frequently put digital art in our galleries.\n\nSome of it is new. Some of it is decades old now.\n\nI have some opinions\u2026",
                "ts": 1580493188,
                "author_name": "Matt Popke \ud83c\udfb2",
                "author_link": "https://twitter.com/Polackio/status/1223303212775739392",
                "author_icon": "https://pbs.twimg.com/profile_images/1027654937789050882/T9Ntu6iw_normal.jpg",
                "author_subname": "@Polackio",
                "text": "Hey all you artists working in the digital medium:\n\nI am a software developer currently employed at an art museum, and we frequently put digital art in our galleries.\n\nSome of it is new. Some of it is decades old now.\n\nI have some opinions\u2026",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/Polackio/status/1223303212775739392",
                "id": 1,
                "original_url": "https://twitter.com/Polackio/status/1223303212775739392",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kJ/r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An interesting Twitter thread on the preservation of digital art, including  comment on how it hurts that digital artists can't fully manage the media they use: "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/Polackio/status/1223303212775739392"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "reply_count": 30,
        "reply_users_count": 5,
        "latest_reply": "1580986822.048100",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "U5STGTB3J",
            "UE0ETTCG7",
            "UJBAJNFLK"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "27f3ef4c-972e-4de9-908f-437204d32ea4",
        "type": "message",
        "text": "I'm not sure artists can solve this by themselves. Monet made his brushes in a certain cultural milieu, and for software we're just not there. If the goal is centuries, _nothing_ we have is likely to help. When it comes to software we need to rely on future archeologists.\n\nAnd this _sucks_. By a coincidence I was trying to run my copy of LightBot today and it no longer works on my phone. (I've moved phones a couple of times since I last used it. Each new phone helpfully transfers all my apps over. But it doesn't ensure they run, and that's really the most important part :Seinfeld:)",
        "user": "UCUSW7WVD",
        "ts": "1580666223.315700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1580667883.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yn=V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure artists can solve this by themselves. Monet made his brushes in a certain cultural milieu, and for software we're just not there. If the goal is centuries, "
                            },
                            {
                                "type": "text",
                                "text": "nothing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " we have is likely to help. When it comes to software we need to rely on future archeologists.\n\nAnd this "
                            },
                            {
                                "type": "text",
                                "text": "sucks",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". By a coincidence I was trying to run my copy of LightBot today and it no longer works on my phone. (I've moved phones a couple of times since I last used it. Each new phone helpfully transfers all my apps over. But it doesn't ensure they run, and that's really the most important part :Seinfeld:)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "01714618-3040-49F4-AEC8-2F7012B7C3AF",
        "type": "message",
        "text": "The imminently-about-to-be-released episode of the podcast talks about this exact subject in detail.",
        "user": "UC2A2ARPT",
        "ts": "1580667526.317000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5C047",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The imminently-about-to-be-released episode of the podcast talks about this exact subject in detail."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "E8381F94-0732-4970-8CFA-7724BB0591F4",
        "type": "message",
        "text": "Neat to see it resonating with folks here. I was a little worried this wouldn't be the right audience for this subject.\n\nFrankly, I'm not bothered by artworks being short-lived. A lot of art is an implicit or subtextual commentary on impermanence, and I think one of the qualities that makes high art gauche is the insistence on its lasting value to society. I like my art the way I like my comedy \u2014 extremely of the moment and brutally uninteresting after the moment has passed.",
        "user": "UC2A2ARPT",
        "ts": "1580667697.320900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580667737.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2EEro",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Neat to see it resonating with folks here. I was a little worried this wouldn't be the right audience for this subject.\n\nFrankly, I'm not bothered by artworks being short-lived. A lot of art is an implicit or subtextual commentary on impermanence, and I think one of the qualities that makes high art gauche is the insistence on its lasting value to society. I like my art the way I like my comedy \u2014 extremely of the moment and brutally uninteresting after the moment has passed."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "middle_finger",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c322ca75-e48a-4b55-ba47-4b4e526c9f94",
        "type": "message",
        "text": "I'm a digital packrat. But yes, preservation shouldn't be the responsibility of artists. I wager even Monet when he made his brushes wasn't thinking, \"which one will last longer?\"",
        "user": "UCUSW7WVD",
        "ts": "1580667903.322500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tjUa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm a digital packrat. But yes, preservation shouldn't be the responsibility of artists. I wager even Monet when he made his brushes wasn't thinking, \"which one will last longer?\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "123086C6-1799-453F-AFE2-60920796D6EB",
        "type": "message",
        "text": "Well, the brushes aren't the work. But in any case, I agree that artists shouldn't need to concern themselves with this problem. The technology should be built to last, not built with a 3 year expected lifecycle. That's so wasteful, and narrow.\n\nNow, on the other hand, look at what digital technology has done for recorded music and video \u2014 flawless eternal preservation is on the table for the first time ever, and it's not an unequivocally good thing either.",
        "user": "UC2A2ARPT",
        "ts": "1580668323.335000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yXeH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, the brushes aren't the work. But in any case, I agree that artists shouldn't need to concern themselves with this problem. The technology should be built to last, not built with a 3 year expected lifecycle. That's so wasteful, and narrow.\n\nNow, on the other hand, look at what digital technology has done for recorded music and video \u2014 flawless eternal preservation is on the table for the first time ever, and it's not an unequivocally good thing either."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "B5F6C9CA-1CF7-4C00-B639-9CC8C13712E9",
        "type": "message",
        "text": "In the case of music, video, and similar purely data media, though, at least the default perfect preservation gives us the choice about whether to archive and curate the work. It is tragic when there's work that we can't archive.. though.. this is such a big topic. What does it mean to archive an artwork divorced of it's cultural context?",
        "user": "UC2A2ARPT",
        "ts": "1580668550.341100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hvjhz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the case of music, video, and similar purely data media, though, at least the default perfect preservation gives us the choice about whether to archive and curate the work. It is tragic when there's work that we can't archive.. though.. this is such a big topic. What does it mean to archive an artwork divorced of it's cultural context?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "974751da-3d4a-4553-b224-0b5a6b30904c",
        "type": "message",
        "text": "Without having thought about this much, archival by definition seems about preserving things divorced from their cultural context. Sending things to the future so they can be seen in _new_ contexts.",
        "user": "UCUSW7WVD",
        "ts": "1580668625.343200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "diEkc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Without having thought about this much, archival by definition seems about preserving things divorced from their cultural context. Sending things to the future so they can be seen in "
                            },
                            {
                                "type": "text",
                                "text": "new",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " contexts."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "06FDE121-D42C-4B24-AE63-9A4D3243D6DA",
        "type": "message",
        "text": "Or letting those things be the mooring to past culture.",
        "user": "UC2A2ARPT",
        "ts": "1580668661.345000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SHcvT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or letting those things be the mooring to past culture."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "type": "message",
        "text": "Herewith, my piece of purely data short-lived art entitled, _\"The moon is WHERE right now?!_\"",
        "files": [
            {
                "id": "FT3H11ELT",
                "created": 1580669028,
                "timestamp": 1580669028,
                "name": "20200202_103842.jpg",
                "title": "30869",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "UCUSW7WVD",
                "editable": false,
                "size": 165108,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-FT3H11ELT/20200202_103842.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-FT3H11ELT/download/20200202_103842.jpg",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_360.jpg",
                "thumb_360_w": 270,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_480.jpg",
                "thumb_480_w": 360,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_720.jpg",
                "thumb_720_w": 540,
                "thumb_720_h": 720,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 1067,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_960.jpg",
                "thumb_960_w": 720,
                "thumb_960_h": 960,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3H11ELT-9fcd45ae49/20200202_103842_1024.jpg",
                "thumb_1024_w": 768,
                "thumb_1024_h": 1024,
                "image_exif_rotation": 6,
                "original_w": 4032,
                "original_h": 3024,
                "thumb_tiny": "AwAwACSyRTcYqQ03AFACDkUtGMc0UABYDrSbhUMx+fr2qPPuaVx2LppKcaSmIQ0hpaQ0gK0/3/wqOnXIJkGDjiodh/vH8qLFXNQ00mlzkZHSmmmSGaSjNFIClck+afpUWT61JLiSQspyOlM8ugZ//9k=",
                "permalink": "https://futureofcoding.slack.com/files/UCUSW7WVD/FT3H11ELT/20200202_103842.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-FT3H11ELT-42ce7ca6cf",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QdZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Herewith, my piece of purely data short-lived art entitled, "
                            },
                            {
                                "type": "text",
                                "text": "\"The moon is WHERE right now?!",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\""
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "ts": "1580669108.348800",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1580672462.000000"
        },
        "client_msg_id": "ca1ecbc1-525c-419c-8452-9b8d98adc493",
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "clap",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "20db3e70-603b-4fc1-b4f9-eeda85d02112",
        "type": "message",
        "text": "Consider a piece like this \u2014 <http://www.simonweckert.com/googlemapshacks.html>\n\nYou can't archive it because the outcome of the art isn't a physical object, it's a series of actions in the world, depending highly on the current state of the world. It's a performance. You can't _typically_ archive performances, but you can document them in a form that can be archived (in this case \u2014 photos, video, writeup).\n\nPerhaps we should think of the artworks that the archivist in the linked Twitter thread is bemoaning as performances, rather than as artifacts. If an exhibited piece requires a defunct web service, it was a software performance, not a software artwork.",
        "user": "UC2A2ARPT",
        "ts": "1580669265.349500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+SV6Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Consider a piece like this \u2014 "
                            },
                            {
                                "type": "link",
                                "url": "http://www.simonweckert.com/googlemapshacks.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nYou can't archive it because the outcome of the art isn't a physical object, it's a series of actions in the world, depending highly on the current state of the world. It's a performance. You can't "
                            },
                            {
                                "type": "text",
                                "text": "typically",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " archive performances, but you can document them in a form that can be archived (in this case \u2014 photos, video, writeup).\n\nPerhaps we should think of the artworks that the archivist in the linked Twitter thread is bemoaning as performances, rather than as artifacts. If an exhibited piece requires a defunct web service, it was a software performance, not a software artwork."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "229c8aac-877a-4a92-ac53-e823027c67ee",
        "type": "message",
        "text": "There might be a desire to preserve the software, and the needed hardware, and emulate the web service.. at that point, what you are doing is attempting to preserve the materials needed to stage another performance of the piece. Those materials aren't themselves the piece, they're the script, costumes, props, etc.",
        "user": "UC2A2ARPT",
        "ts": "1580669403.349900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iaUu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There might be a desire to preserve the software, and the needed hardware, and emulate the web service.. at that point, what you are doing is attempting to preserve the materials needed to stage another performance of the piece. Those materials aren't themselves the piece, they're the script, costumes, props, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "d645b46e-38d8-46c5-a02a-f07a04db7054",
        "type": "message",
        "text": "That's why, I think, the best message to take from the thread is this one: <https://twitter.com/Polackio/status/1223311516772052992>\n\nSome of these software art pieces need to be treated like theatre, not like painting or sculpture.",
        "user": "UC2A2ARPT",
        "ts": "1580669492.350900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/Polackio|@Polackio>: Document the hell out of your work. Describe it in great detail. Record video of it. Give us as much reference material as is humanly possible so we can know your intent. Sometimes, the only way to make art work is to rebuild part of it. If we know the target, we can hit it.",
                "ts": 1580495168,
                "author_name": "Matt Popke \ud83c\udfb2",
                "author_link": "https://twitter.com/Polackio/status/1223311516772052992",
                "author_icon": "https://pbs.twimg.com/profile_images/1027654937789050882/T9Ntu6iw_normal.jpg",
                "author_subname": "@Polackio",
                "text": "Document the hell out of your work. Describe it in great detail. Record video of it. Give us as much reference material as is humanly possible so we can know your intent. Sometimes, the only way to make art work is to rebuild part of it. If we know the target, we can hit it.",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/Polackio/status/1223311516772052992",
                "id": 1,
                "original_url": "https://twitter.com/Polackio/status/1223311516772052992",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jfS24",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's why, I think, the best message to take from the thread is this one: "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/Polackio/status/1223311516772052992"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSome of these software art pieces need to be treated like theatre, not like painting or sculpture."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "31138C84-545E-4F44-AD57-A11C9C23967A",
        "type": "message",
        "text": "Dependencies.\n\nIf you create your own brush, a physical tool that doesn\u2019t depend on anything other than the atoms it\u2019s made of (and ok, maybe some laws of physics), you can be pretty sure it\u2019ll last because it doesn\u2019t depend on anything else that\u2019s constantly changing.\n\nSame for writing on a piece of paper or paint on a canvas. There might be some slow chemical processes happening to your substrate and ink over time that make it harder to read or even disappear. But that\u2019s not even close to what it\u2019s like with digital artifacts.\n\nWe can\u2019t create digital artifacts without tons of dependencies. Hardware, OS, file formats, libraries, frameworks, languages, environments \u2014 even the often praised web standards that should help solving this problem don\u2019t help, apparently (the first example in the thread is about web browsers).\n\nSame applies to data, not just executables. Yes, we can drag piles of bits into the future with us, as long as the decoding and parsing libraries keep working and are constantly adapted and recompiled for the current OSes and hardware architectures. And then still some bits might flip due to physics and if your stack of checksumming layers of hard- and software doesn\u2019t account for that then that\u2019s it.\n\nShould we consider all these dependencies as just props, or should we be a little more concerned about what libraries we link to when we publish something or how many parts of the runtime environment we can take for granted?",
        "user": "U5STGTB3J",
        "ts": "1580669980.355800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vXzf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dependencies.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "If you create your own brush, a physical tool that doesn\u2019t depend on anything other than the atoms it\u2019s made of (and ok, maybe some laws of physics), you can be pretty sure it\u2019ll last because it doesn\u2019t depend on anything else that\u2019s constantly changing.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Same for writing on a piece of paper or paint on a canvas. There might be some slow chemical processes happening to your substrate and ink over time that make it harder to read or even disappear. But that\u2019s not even close to what it\u2019s like with digital artifacts.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "We can\u2019t create digital artifacts without tons of dependencies. Hardware, OS, file formats, libraries, frameworks, languages, environments \u2014 even the often praised web standards that should help solving this problem don\u2019t help, apparently (the first example in the thread is about web browsers).\n"
                            },
                            {
                                "type": "text",
                                "text": "\nSame applies to data, not just executables. Yes, we can drag piles of bits into the future with us, as long as the decoding and parsing libraries keep working and are constantly adapted and recompiled for the current OSes and hardware architectures. And then still some bits might flip due to physics and if your stack of checksumming layers of hard- and software doesn\u2019t account for that then that\u2019s it.\n\nShould we consider all these dependencies as just props, or should we be a little more concerned about what libraries we link to when we publish something or how many parts of the runtime environment we can take for granted?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UE0ETTCG7"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "026AEA3F-44C2-4695-9DD6-71FC8FD3E5A0",
        "type": "message",
        "text": "Is this really a problem? Wasn\u2019t there a thread going around about someone who opened a website they made 20 years ago with just HTML/CSS/JavaScript and it worked perfectly? Wouldn\u2019t the same be true for png/jpg/mov/wav/aif/mp3/pdf, etc...?\n\nI understand this is a problem if you\u2019re using certain technologies, but I can\u2019t help but consider this a self-inflicted wound. People are choosing to use different mediums because those mediums have different advantages than the mediums that would help in preserving their work.\n\nThe problem isn\u2019t that technologies don\u2019t exist that can preserve their work, the problem is that people *do not value the preservation of their work* enough. Why not? Who knows. But if they did, they\u2019d choose a different medium.",
        "user": "UE0ETTCG7",
        "ts": "1580671269.356700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UDe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this really a problem? Wasn\u2019t there a thread going around about someone who opened a website they made 20 years ago with just HTML/CSS/JavaScript and it worked perfectly? Wouldn\u2019t the same be true for png/jpg/mov/wav/aif/mp3/pdf, etc...?\n\nI understand this is a problem if you\u2019re using certain technologies, but I can\u2019t help but consider this a self-inflicted wound. People are choosing to use different mediums because those mediums have different advantages than the mediums that would help in preserving their work.\n\nThe problem isn\u2019t that technologies don\u2019t exist that can preserve their work, the problem is that people *do not value the preservation of their work* enough. Why not? Who knows. But if they did, they\u2019d choose a different medium."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "D2959F38-6154-480D-A728-E3A0CA5C37F7",
        "type": "message",
        "text": "Part of the problem is that many people who are using technology as a medium might not know how to use technology in the way such that their artifacts can be preserved better. Many people start learning web technologies because that is supposed to solve the problem of being tied to a particular platform, but then they only test in the latest version of Chrome and keep adding all these JavaScript libraries and shoot themselves in the foot without realizing.",
        "user": "U5STGTB3J",
        "ts": "1580671648.361600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GGF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Part of the problem is that many people who are using technology as a medium might not know how to use technology in the way such that their artifacts can be preserved better. Many people start learning web technologies because that is supposed to solve the problem of being tied to a particular platform, but then they only test in the latest version of Chrome and keep adding all these JavaScript libraries and shoot themselves in the foot without realizing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "42b9a5f8-a0e7-4bde-9d67-7e893620d25d",
        "type": "message",
        "text": "I agree 100%, but that means it's a people problem, not a technology problem, and people problems are harder to solve. You can't just make people have different values, and it takes Herculean effort to \"sell\" people on values. It seems to actually be almost impossible (e.g., see FSF). I think that would be an interesting topic in and of itself, when have new software values been successfully sold to people? The most successful example I can think of is Apple and privacy, the only other example that comes to mind is Free software, and open source in general, which has been far less successful (outside of developer technologies). Are there others?",
        "user": "UE0ETTCG7",
        "ts": "1580672139.361900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1580672174.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8/A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree 100%, but that means it's a people problem, not a technology problem, and people problems are harder to solve. You can't just make people have different values, and it takes Herculean effort to \"sell\" people on values. It seems to actually be almost impossible (e.g., see FSF). I think that would be an interesting topic in and of itself, when have new software values been successfully sold to people? The most successful example I can think of is Apple and privacy, the only other example that comes to mind is Free software, and open source in general, which has been far less successful (outside of developer technologies). Are there others?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "8667868f-96ff-4223-808c-50b9be0db37d",
        "type": "message",
        "text": "<@UE0ETTCG7> That seems uncharitable. We're talking about artists who aren't tech-savvy. They shouldn't need to be!\n\nI'd much rather blame the marketing customs of our society, that focus excessively on how easy it is to get something working and not enough on the externalities and responsibilities it involves. \"Side effects may include: tearing your hair out, security vulnerabilities, getting pwned by script kiddies in Kazhakhstan, identity theft, loss of credit rating, and death.\"",
        "user": "UCUSW7WVD",
        "ts": "1580673258.362300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m78k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " That seems uncharitable. We're talking about artists who aren't tech-savvy. They shouldn't need to be!\n\nI'd much rather blame the marketing customs of our society, that focus excessively on how easy it is to get something working and not enough on the externalities and responsibilities it involves. \"Side effects may include: tearing your hair out, security vulnerabilities, getting pwned by script kiddies in Kazhakhstan, identity theft, loss of credit rating, and death.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7",
                    "UC2A2ARPT",
                    "U5STGTB3J"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "13721434-4297-478d-bbc7-ea38f438bdfa",
        "type": "message",
        "text": "<@U5STGTB3J> The paper I just wrote basically argues that minimizing dependencies is the _number one_ responsibility of professional programmers.",
        "user": "UCUSW7WVD",
        "ts": "1580673343.362500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1580673435.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "56jqi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " The paper I just wrote basically argues that minimizing dependencies is the "
                            },
                            {
                                "type": "text",
                                "text": "number one",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " responsibility of professional programmers."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3c6c2a4d-2dd9-480a-9b12-0b61c2870384",
        "type": "message",
        "text": "<@UCUSW7WVD> Agree that would be great, still just shifts the blame to a different group of people though, which still makes it a people problem. And unfortunately, while technology problems have solutions, people problems have much worse record of being successfully solved... I would love to be convinced otherwise though, examples of groups that have been convinced to be more responsible, even if it might be against their best interests, because it's for the great good? (Heh, feels like I'm describing all of the worlds problems right there...)",
        "user": "UE0ETTCG7",
        "ts": "1580673672.363000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yb2z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Agree that would be great, still just shifts the blame to a different group of people though, which still makes it a people problem. And unfortunately, while technology problems have solutions, people problems have much worse record of being successfully solved... I would love to be convinced otherwise though, examples of groups that have been convinced to be more responsible, even if it might be against their best interests, because it's for the great good? (Heh, feels like I'm describing all of the worlds problems right there...)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "420fe9e6-5255-41dc-b9a9-6914d91f3d19",
        "type": "message",
        "text": "Well, complaining about people problems is also a people thing to do :slightly_smiling_face: Sometimes it even has an effect.",
        "user": "UCUSW7WVD",
        "ts": "1580674380.367900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ugpjK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, complaining about people problems is also a people thing to do "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " Sometimes it even has an effect."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UE0ETTCG7"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "86ED3DFC-FAF7-4CAC-B26F-E177ED6E7469",
        "type": "message",
        "text": "Bit rot and digital encodings of audio/video are not concerns on the same scale as the dependencies of executable software. It's trivially easy to archive digital music and video \u2014 that's a well-understood, well-addressed problem.\n\nPreserving executable software might be impossible for the same reason that preserving the exact performance of an actor in a play is impossible. We can't have our \"computing is a process\" cake and \"but we can treat it as an object\" eat it too. See, for instance, the CRT example in the thread. The performance of an actor is an execution of the play by the human performer. The performance of a software work is an execution of the code by the machine performer. The capability of the performer in both cases comes as a result of their unknowable complexity.",
        "user": "UC2A2ARPT",
        "ts": "1580674553.371000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jsIe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bit rot and digital encodings of audio/video are not concerns on the same scale as the dependencies of executable software. It's trivially easy to archive digital music and video \u2014 that's a well-understood, well-addressed problem.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Preserving executable software might be impossible for the same reason that preserving the exact performance of an actor in a play is impossible. We can't have our \"computing is a process\" cake and \"but we can treat it as an object\" eat it too. See, for instance, the CRT example in the thread. The performance of an actor is an execution of the play by the human performer. The performance of a software work is an execution of the code by the machine performer. The capability of the performer in both cases comes as a result of their unknowable complexity."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "81AED936-F5D0-4E84-B06F-729AA16A7D44",
        "type": "message",
        "text": "See also, the trouble creating cycle-accurate game emulators, and how the speedrunning community continues to limp along on original hardware as much as possible. Those classic games had zero dependencies other than a very tightly bounded hardware spec, and even when open source are difficult to preserve. You can port DOOM to run on your toaster, but it's not the same as playing it on a 486 with a CRT.",
        "user": "UC2A2ARPT",
        "ts": "1580674639.372600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580674859.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rt=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "See also, the trouble creating cycle-accurate game emulators, and how the speedrunning community continues to limp along on original hardware as much as possible. Those classic games had zero dependencies other than a very tightly bounded hardware spec, and even when open source are difficult to preserve. You can port DOOM to run on your toaster, but it's not the same as playing it on a 486 with a CRT."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "88e51f5b-0cc2-4912-8136-eaff8944ada7",
        "type": "message",
        "text": "I certainly agree bitrot on 'pure data' and executable software operate on different scales, but perhaps not in the same way as you. Data always requires a reader, and there are encodings to be understood. This can be simple, but compression complicates things.\n\nThe simpler part of the state space degrades over a _long_ time -- and so I actually consider it the _harder_ problem. Things will get imperceptibly worse, and we won't notice until it's too late. This is how you get Linear B.\n\nExecutable software is like the canary in the coalmine. Solving for it is like a gateway drug that puts us in much better shape to solve the harder problem.",
        "user": "UCUSW7WVD",
        "ts": "1580674861.373800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1580675018.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6PGE4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I certainly agree bitrot on 'pure data' and executable software operate on different scales, but perhaps not in the same way as you. Data always requires a reader, and there are encodings to be understood. This can be simple, but compression complicates things.\n\nThe simpler part of the state space degrades over a "
                            },
                            {
                                "type": "text",
                                "text": "long",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " time -- and so I actually consider it the "
                            },
                            {
                                "type": "text",
                                "text": "harder",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " problem. Things will get imperceptibly worse, and we won't notice until it's too late. This is how you get Linear B.\n\nExecutable software is like the canary in the coalmine. Solving for it is like a gateway drug that puts us in much better shape to solve the harder problem."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "62C6E658-BA40-4902-B3F5-30F63F448C75",
        "type": "message",
        "text": "That's an excellent point. Though I'm pretty sure digital audio and video are archived as raw samples / frames. There's as much encoding trickery there as there is on a vinyl record.",
        "user": "UC2A2ARPT",
        "ts": "1580674960.375200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Z4b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's an excellent point. Though I'm pretty sure digital audio and video are archived as raw samples / frames. There's as much encoding trickery there as there is on a vinyl record."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "F20A8EE2-5E5D-4F34-8C2F-ADCB56B6C921",
        "type": "message",
        "text": "<@UC2A2ARPT> Can you help me understand why you consider digital data encoding and executable software to be on different levels?\n\nMaking data encoding work reliably across different platforms isn\u2019t something I\u2019d describe as \u201ctrivial\u201d unless we\u2019re only looking at i386-compatible architectures. Also you\u2019d need to make sure you agree on a standard format and know how to detect it if you only have a blob of bits. And then there are file formats that keep evolving not unlike executable software (e.g. Microsoft Office data formats over the years).\n\nFor executable software emulation seems to work quite well. It usually takes a few years until emulators and the underlying technology are able to recreate an older platform reliably, including the option to run at original speed. Emulation might not be a perfect solution, but it isn\u2019t impossible either.\n\nMaybe the framing as artwork plays a role here. I understand that for instance an artist might only consider his work properly recreated if the exact same CRTs are used. That I can see as performance and there I\u2019d agree that it shouldn\u2019t (can\u2019t?) be about recreating performances. But I was immediately thinking in broader terms, e.g. old games that don\u2019t get updated anymore \u2014 I see tremendous value in trying to preserve these executables and still be able to run them even if the experience changes over time as the original hardware is no longer available and potentially different interaction mechanisms have to be used. It might not be exactly the same thing anymore, but for me that is far from pointless to try to preserve it anyway.\n\nAnd the way we write software currently, is not just suboptimal but downright hostile towards preservation.",
        "user": "U5STGTB3J",
        "ts": "1580681614.402200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zMe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " Can you help me understand why you consider digital data encoding and executable software to be on different levels?\n\nMaking data encoding work reliably across different platforms isn\u2019t something I\u2019d describe as \u201ctrivial\u201d unless we\u2019re only looking at i386-compatible architectures. Also you\u2019d need to make sure you agree on a standard format and know how to detect it if you only have a blob of bits. And then there are file formats that keep evolving not unlike executable software (e.g. Microsoft Office data formats over the years).\n\n"
                            },
                            {
                                "type": "text",
                                "text": "For executable software emulation seems to work quite well. It usually takes a few years until emulators and the underlying technology are able to recreate an older platform reliably, including the option to run at original speed. Emulation might not be a perfect solution, but it isn\u2019t impossible either.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Maybe the framing as artwork plays a role here. I understand that for instance an artist might only consider his work properly recreated if the exact same CRTs are used. That I can see as performance and there I\u2019d agree that it shouldn\u2019t (can\u2019t?) be about recreating performances. But I was immediately thinking in broader terms, e.g. old games that don\u2019t get updated anymore \u2014 I see tremendous value in trying to preserve these executables and still be able to run them even if the experience changes over time as the original hardware is no longer available and potentially different interaction mechanisms have to be used. It might not be exactly the same thing anymore, but for me that is far from pointless to try to preserve it anyway.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "And the way we write software currently, is not just suboptimal but downright hostile towards preservation."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "d9e4bde5-8cc3-4de8-84f1-0bb7dba0f875",
        "type": "message",
        "text": "I've been chatting on this thread on Twitter, and Jon Ippolito pointed me at a very interesting paper: <http://www.digitalhumanities.org/dhq/vol/12/2/000379/000379.html>",
        "user": "UCUSW7WVD",
        "ts": "1580682231.402500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L+OPE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been chatting on this thread on Twitter, and Jon Ippolito pointed me at a very interesting paper: "
                            },
                            {
                                "type": "link",
                                "url": "http://www.digitalhumanities.org/dhq/vol/12/2/000379/000379.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "a617778e-9cb1-4da4-9f34-9cac64c0a66c",
        "type": "message",
        "text": "<@U5STGTB3J> Your last comment is a gradient of feelings for me, starting from \"completely skeptical\" at the top and progressing to \"completely on board\" by the bottom :)\n\nTo the best of my knowledge, digital audio when encoded as uncompressed linear PCM WAV (for example) is nothing more than a series of numbers representing how far to displace a transducer. It's simpler than even ASCII text, since you don't need a reference against which to compare the numeric values \u2014 they're just a measurement of physical displacement, like a seismograph. Sure, you need to know the number of bits per sample and the byte order, but that's likely the absolute easiest thing in the world to reverse engineer\u00a0if needed. Audio is so profoundly simple. You can encode it in complex ways, but I don't believe archivists do that.",
        "user": "UC2A2ARPT",
        "ts": "1580682304.402700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qr8p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " Your last comment is a gradient of feelings for me, starting from \"completely skeptical\" at the top and progressing to \"completely on board\" by the bottom :)\n\nTo the best of my knowledge, digital audio when encoded as uncompressed linear PCM WAV (for example) is nothing more than a series of numbers representing how far to displace a transducer. It's simpler than even ASCII text, since you don't need a reference against which to compare the numeric values \u2014 they're just a measurement of physical displacement, like a seismograph. Sure, you need to know the number of bits per sample and the byte order, but that's likely the absolute easiest thing in the world to reverse engineer\u00a0if needed. Audio is so profoundly simple. You can encode it in complex ways, but I don't believe archivists do that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "<@UCUSW7WVD>",
        "files": [
            {
                "id": "FT3KV1Q4B",
                "created": 1580682409,
                "timestamp": 1580682409,
                "name": "Screen Shot 2020-02-02 at 3.26.14 PM.png",
                "title": "Screen Shot 2020-02-02 at 3.26.14 PM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UC2A2ARPT",
                "editable": false,
                "size": 20489,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-FT3KV1Q4B/screen_shot_2020-02-02_at_3.26.14_pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-FT3KV1Q4B/download/screen_shot_2020-02-02_at_3.26.14_pm.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3KV1Q4B-cfa0a5c278/screen_shot_2020-02-02_at_3.26.14_pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3KV1Q4B-cfa0a5c278/screen_shot_2020-02-02_at_3.26.14_pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3KV1Q4B-cfa0a5c278/screen_shot_2020-02-02_at_3.26.14_pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 77,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3KV1Q4B-cfa0a5c278/screen_shot_2020-02-02_at_3.26.14_pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 103,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-FT3KV1Q4B-cfa0a5c278/screen_shot_2020-02-02_at_3.26.14_pm_160.png",
                "image_exif_rotation": 1,
                "original_w": 671,
                "original_h": 144,
                "thumb_tiny": "AwAKADChSjHfP4UlFADsD0NGB6Gm0UAKQO2fxpKKKAP/2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UC2A2ARPT/FT3KV1Q4B/screen_shot_2020-02-02_at_3.26.14_pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-FT3KV1Q4B-2ae1a051ab",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dEzf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UC2A2ARPT",
        "display_as_bot": false,
        "ts": "1580682413.402900",
        "client_msg_id": "bd516f40-a198-45cf-ba05-7529b724a89c",
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "upside_down_face",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f231d27a-c630-427f-ad8c-f1b0ab50dc14",
        "type": "message",
        "text": "Oh wait, turns out it's just an error in the paper. <http://brandon.guggenheim.org> is live.",
        "user": "UC2A2ARPT",
        "ts": "1580682485.403400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Guy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh wait, turns out it's just an error in the paper. "
                            },
                            {
                                "type": "link",
                                "url": "http://brandon.guggenheim.org"
                            },
                            {
                                "type": "text",
                                "text": " is live."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580664092.315400",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]