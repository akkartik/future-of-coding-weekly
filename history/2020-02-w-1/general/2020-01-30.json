[
    {
        "client_msg_id": "edcfb3ab-f557-41ea-af72-28ec0b7df380",
        "type": "message",
        "text": "<@UT60XSVCN> thanks, I wasn't familiar with slime+swank. Is there a good demo of the functionality you're referring to? I've tried but haven't found much.",
        "user": "UR482RFPY",
        "ts": "1580342626.255100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4bz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UT60XSVCN"
                            },
                            {
                                "type": "text",
                                "text": " thanks, I wasn't familiar with slime+swank. Is there a good demo of the functionality you're referring to? I've tried but haven't found much."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "a16dac22-2336-46e9-a34c-ce72ec96747d",
        "type": "message",
        "text": "Would it be too difficult to capture both who the author is, and who shared it?\n\n\"TITLE OF THING by AUTHOR, via SOURCE\"",
        "user": "UC2A2ARPT",
        "ts": "1580343104.255600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/G0f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would it be too difficult to capture both who the author is, and who shared it?\n\n\"TITLE OF THING by AUTHOR, via SOURCE\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "7183d7a0-ebea-43ac-8060-67a0f41f0ebd",
        "type": "message",
        "text": "Depends, how familiar are you with common lisp? <@UR482RFPY> ",
        "user": "UT60XSVCN",
        "ts": "1580345337.256000",
        "team": "T5TCAFTA9",
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "13e1963d-1b2c-40a7-b61d-b331c7efb8ef",
        "type": "message",
        "text": "I've written some clojure and scheme at various points in my career, but am pretty rusty these days",
        "user": "UR482RFPY",
        "ts": "1580345375.256200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3H8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've written some clojure and scheme at various points in my career, but am pretty rusty these days"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "13cbc587-be39-439b-8164-5ef626c6d026",
        "type": "message",
        "text": "Okay, honestly I would just jump in and use it, portacle, <https://portacle.github.io/> , is probably the easiest way to get a fully setup environment, and practical common lisp, <http://www.gigamonkeys.com/book/> , is a good reference for common lisp essentials, as for debugging, <https://malisper.me/debugging-lisp-part-1-recompilation/> , is a good intro\nYou can inspect the inner state of slime+swank using it's own debugging tools, which is kinda fun, and using (essentially) standard common lisp apis like the bourdeux threading api, since slime+swank is written entirely in common lisp on the server side and emacs lisp on the client side\nSwanks has it's own repl thread and compiles code in separate threads so interactions aren't blocked, it's quite nice, and if slime disconnects from swank, all your stuff is still there when you reconnect, which I think covers the issues you raised?",
        "user": "UT60XSVCN",
        "ts": "1580346168.256400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "The Portable Common Lisp Development Environment",
                "title_link": "https://portacle.github.io/",
                "text": "Portacle is an easy to install, portable development environment for Common Lisp running on Windows, OS X, and Linux.",
                "fallback": "The Portable Common Lisp Development Environment",
                "from_url": "https://portacle.github.io/",
                "service_name": "portacle.github.io",
                "id": 1,
                "original_url": "https://portacle.github.io/"
            },
            {
                "service_name": "malisper.me",
                "title": "Debugging Lisp Part 1: Recompilation - malisper.me",
                "title_link": "https://malisper.me/debugging-lisp-part-1-recompilation/",
                "text": "This post is the start of a series on how to debug Common Lisp code, specifically with Emacs, Slime, and SBCL. If you do not understand Common Lisp, you should still be able to follow along and recognize just how powerful the facilities provided by the Common Lisp debugger are. Nathan Marz asked me to \u2026",
                "fallback": "malisper.me: Debugging Lisp Part 1: Recompilation - malisper.me",
                "image_url": "https://malisper.me/wp-content/uploads/2015/07/ezgif.com-crop.gif",
                "ts": 1436243858,
                "from_url": "https://malisper.me/debugging-lisp-part-1-recompilation/",
                "image_width": 456,
                "image_height": 250,
                "image_bytes": 1070363,
                "service_icon": "https://malisper.me/wp-content/uploads/fbrfg/apple-touch-icon.png",
                "id": 2,
                "original_url": "https://malisper.me/debugging-lisp-part-1-recompilation/"
            }
        ],
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "3f54430e-5764-4ad5-85e1-a5ac16cffb2c",
        "type": "message",
        "text": "If you have any questions feel free to ask",
        "user": "UT60XSVCN",
        "ts": "1580346180.256700",
        "team": "T5TCAFTA9",
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "7af70d24-1712-4937-97b1-5844d13220da",
        "type": "message",
        "text": "That thought I had earlier is interesting, I never really considered that computational notebooks are largely reinventing image-based programming but without a lot of the features.",
        "user": "UT60XSVCN",
        "ts": "1580346798.256900",
        "team": "T5TCAFTA9",
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a78dca59-5998-4038-8311-67e7f2743001",
        "type": "message",
        "text": "<https://www.createwithplay.com/>",
        "user": "UKASUGYL8",
        "ts": "1580357865.257500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Play: A new approach for creating better mobile apps.",
                "title_link": "https://www.createwithplay.com/",
                "text": "Play empowers you to design, build and launch better mobile products, in less time, with fewer barriers - all on your mobile device. Join our Private Beta today!",
                "fallback": "Play: A new approach for creating better mobile apps.",
                "thumb_url": "https://global-uploads.webflow.com/5de7dc9925af690aa56c0736/5e2701d351ea88ace147317d_crop-open-graph.jpg",
                "from_url": "https://www.createwithplay.com/",
                "thumb_width": 2000,
                "thumb_height": 1050,
                "service_name": "createwithplay.com",
                "id": 1,
                "original_url": "https://www.createwithplay.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VeeU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.createwithplay.com/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580357865.257500",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1580454354.281100",
        "reply_users": [
            "UEQ6M68H0",
            "UKASUGYL8",
            "UMWF81HTP"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "star-struck",
                "users": [
                    "UMWF81HTP",
                    "UE0ETTCG7"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "4a0cc1ac-c7a9-42e1-86e6-690d0fb65d05",
        "type": "message",
        "text": "Was looking for a high quality video of the Sketchpad demo and ran across this: <https://www.youtube.com/watch?v=GPbVSHlHLAY>",
        "user": "ULM3U6275",
        "ts": "1580359944.258100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Sketchpad Demo",
                "title_link": "https://www.youtube.com/watch?v=GPbVSHlHLAY",
                "author_name": "David Fridovich-Keil",
                "author_link": "https://www.youtube.com/channel/UCv712M8WH2lcZp0aMitCZ7g",
                "thumb_url": "https://i.ytimg.com/vi/GPbVSHlHLAY/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Sketchpad Demo",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/GPbVSHlHLAY?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=GPbVSHlHLAY",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=GPbVSHlHLAY"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TSHp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Was looking for a high quality video of the Sketchpad demo and ran across this: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=GPbVSHlHLAY"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580359944.258100",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1580488972.290400",
        "reply_users": [
            "UC2A2ARPT",
            "ULM3U6275"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "1581b742-9169-4c7c-97d9-8cd2db75661e",
        "type": "message",
        "text": "what an ambitious product! to try and build iphone apps inside an iphone. what a huge challenge! Normally one uses a much larger screen than the target to develop on.  And how does one specify sizes for varying screen resolutions? It seems almost impossible at first glance.",
        "user": "UEQ6M68H0",
        "ts": "1580360174.259300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hsq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what an ambitious product! to try and build iphone apps inside an iphone. what a huge challenge! Normally one uses a much larger screen than the target to develop on.  And how does one specify sizes for varying screen resolutions? It seems almost impossible at first glance."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580357865.257500",
        "parent_user_id": "UKASUGYL8"
    },
    {
        "client_msg_id": "8AD91DBF-9CE2-48FD-BE93-0B5DEEEDA9CD",
        "type": "message",
        "text": "I feel like everyone here has written this demo. It's one of the canonical graphics / physics / game tutorials. What am I missing?",
        "user": "UC2A2ARPT",
        "ts": "1580364571.261200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sp=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like everyone here has written this demo. It's one of the canonical graphics / physics / game tutorials. What am I missing?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580359944.258100",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "fcdfe383-2c73-4035-adc7-ecadba354351",
        "type": "message",
        "text": "<https://webglfundamentals.org/webgl/lessons/resources/webgl-state-diagram.html>\n&gt;  This is an attempt to give a visual representation of most of WebGL\u2019s internal state. WebGL is really just an API to run shaders. The only functions that actually effect pixels are\u00a0`gl.clear`,\u00a0`gl.drawArrays`\u00a0and\u00a0`gl.drawElements`. That\u2019s it! All other API calls just setup internal state for when those 3 functions are called.",
        "user": "UF1ATC4RF",
        "ts": "1580365526.261700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "WebGLFundamentals WebGL State Diagram",
                "title_link": "https://webglfundamentals.org/webgl/lessons/resources/webgl-state-diagram.html",
                "text": "WebGL State Diagram to help visualize WebGL",
                "fallback": "WebGLFundamentals WebGL State Diagram",
                "image_url": "https://webglfundamentals.org/webgl/lessons/resources/webglfundamentals-webgl-state-diagram.jpg",
                "from_url": "https://webglfundamentals.org/webgl/lessons/resources/webgl-state-diagram.html",
                "image_width": 302,
                "image_height": 250,
                "image_bytes": 798509,
                "service_name": "webglfundamentals.org",
                "id": 1,
                "original_url": "https://webglfundamentals.org/webgl/lessons/resources/webgl-state-diagram.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6VyuH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://webglfundamentals.org/webgl/lessons/resources/webgl-state-diagram.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " This is an attempt to give a visual representation of most of WebGL\u2019s internal state. WebGL is really just an API to run shaders. The only functions that actually effect pixels are\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "gl.clear",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ",\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "gl.drawArrays",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0and\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "gl.drawElements",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". That\u2019s it! All other API calls just setup internal state for when those 3 functions are called."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580365526.261700",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1580397724.264500",
        "reply_users": [
            "UE6EFEPTQ",
            "UC2A2ARPT"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UC6997THT",
                    "UNCP67JSK",
                    "UBSMEUXAA",
                    "UMVH31ML3",
                    "UQPHR6Y3S"
                ],
                "count": 6
            }
        ]
    },
    {
        "client_msg_id": "af34bf28-ac3f-4582-946e-414e9d1ec514",
        "type": "message",
        "text": "will try that",
        "user": "UBN9AFS0N",
        "ts": "1580375176.262200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZsU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "will try that"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579511208.198000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "c20888d3-93d0-4d2e-abc4-0c9633cc37db",
        "type": "message",
        "text": "Could you do one for me for Vulkan? ThxM8 :smile:",
        "user": "UE6EFEPTQ",
        "ts": "1580375500.262400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vs=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could you do one for me for Vulkan? ThxM8 "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580365526.261700",
        "parent_user_id": "UF1ATC4RF"
    },
    {
        "client_msg_id": "28883cb9-81e2-4c20-bbbc-ce52998e5a2c",
        "type": "message",
        "text": "&gt;  just setup internal state\n:smile:",
        "user": "UE6EFEPTQ",
        "ts": "1580375528.262600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LiwJq",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " just setup internal state"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580365526.261700",
        "parent_user_id": "UF1ATC4RF"
    },
    {
        "client_msg_id": "095fd04f-96c9-4fab-98c6-57bfdd3b9b3d",
        "type": "message",
        "text": "Is there a public archive of the newsletters after they are sent out? ie somewhere I can browse old ones?",
        "user": "URDRJEWS0",
        "ts": "1580395295.262800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M6Bf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a public archive of the newsletters after they are sent out? ie somewhere I can browse old ones?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576710704.073600",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "6ac867d3-e620-452f-a437-271e87b951fd",
        "type": "message",
        "text": "<https://tinyletter.com/marianoguerra/archive>",
        "user": "UBN9AFS0N",
        "ts": "1580395658.263000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "TinyLetter",
                "title": "Future of Coding Weekly",
                "title_link": "https://tinyletter.com/marianoguerra/archive",
                "text": "A Weekly Digest of interesting resources shared in/around the Future of Coding Community.",
                "fallback": "TinyLetter: Future of Coding Weekly",
                "from_url": "https://tinyletter.com/marianoguerra/archive",
                "service_icon": "https://tinyletter.com/site/favicon.ico",
                "id": 1,
                "original_url": "https://tinyletter.com/marianoguerra/archive"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+no",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://tinyletter.com/marianoguerra/archive"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576710704.073600",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "30DBEA01-E3F7-4775-9642-107089604B46",
        "type": "message",
        "text": "This was very recently posted in <#CE1R695T7|graphics>, and <@UBSMEUXAA> shared some thoughts on it there.",
        "user": "UC2A2ARPT",
        "ts": "1580397724.264500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580397735.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lTHNq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was very recently posted in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CE1R695T7"
                            },
                            {
                                "type": "text",
                                "text": ", and "
                            },
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": " shared some thoughts on it there."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580365526.261700",
        "parent_user_id": "UF1ATC4RF"
    },
    {
        "client_msg_id": "b556bd46-26e1-4406-bc71-68e8f0476c23",
        "type": "message",
        "text": "Joel Grus gave a talk 2 years back about how he felt about Jupyter (slides and video attached): <https://twitter.com/joelgrus/status/1033035196428378113?lang=en>\n\nBased on my experience working with newer analysts and in workshops, the \"statefulness\"/dependence on execution order/\"permissiveness of sloppyness\" were the most problematic issues.\n\nAs far as concerns around IDE-like tooling go, VSCode has native support for opening Jupyter notebooks and Atom has the \"Hydrogen\" extension, which help a bit.",
        "user": "US370TRJA",
        "ts": "1580398348.264900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/joelgrus|@joelgrus>: slides for my \"I Don't Like Notebooks\" #JupyterCon talk:\n\n<https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI/edit?usp=sharing>",
                "ts": 1535129758,
                "author_name": "Joel Grus @ #reworkAI",
                "author_link": "https://twitter.com/joelgrus/status/1033035196428378113",
                "author_icon": "https://pbs.twimg.com/profile_images/899037185965346816/sVS6ub55_normal.jpg",
                "author_subname": "@joelgrus",
                "text": "slides for my \"I Don't Like Notebooks\" #JupyterCon talk:\n\n<https://docs.google.com/presentation/d/1n2RlMdmv1p25Xy5thJUhkKGvjtV-dkAIsUXP-AL4ffI/edit?usp=sharing>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/joelgrus/status/1033035196428378113?lang=en",
                "id": 1,
                "original_url": "https://twitter.com/joelgrus/status/1033035196428378113?lang=en",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aYYDA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Joel Grus gave a talk 2 years back about how he felt about Jupyter (slides and video attached): "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/joelgrus/status/1033035196428378113?lang=en"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBased on my experience working with newer analysts and in workshops, the \"statefulness\"/dependence on execution order/\"permissiveness of sloppyness\" were the most problematic issues.\n\nAs far as concerns around IDE-like tooling go, VSCode has native support for opening Jupyter notebooks and Atom has the \"Hydrogen\" extension, which help a bit."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "5d4c6d55-54bb-4628-82e4-87443057caa9",
        "type": "message",
        "text": "You might already know of this resource, but the style reminds me of what <http://pythontutor.org|pythontutor.org> renders",
        "user": "US370TRJA",
        "ts": "1580398484.265200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s5JI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might already know of this resource, but the style reminds me of what "
                            },
                            {
                                "type": "link",
                                "url": "http://pythontutor.org",
                                "text": "pythontutor.org"
                            },
                            {
                                "type": "text",
                                "text": " renders"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580275322.241600",
        "parent_user_id": "UF1ATC4RF"
    },
    {
        "client_msg_id": "C97D2A60-6419-4967-A8EC-E4A5782CFA54",
        "type": "message",
        "text": "I\u2019m fascinated by this space! What interests me the most is a *continuity* between devices. Not mobile first or desktop first, but ubiquitous access to creation and expression tools along the various situations our body is in: sitting, chilling, pacing, laying, etc.",
        "user": "UKASUGYL8",
        "ts": "1580406660.269600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yo83",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m fascinated by this space! What interests me the most is a "
                            },
                            {
                                "type": "text",
                                "text": "continuity",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " between devices. Not mobile first or desktop first, but ubiquitous access to creation and expression tools along the various situations our body is in: sitting, chilling, pacing, laying, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580357865.257500",
        "parent_user_id": "UKASUGYL8"
    },
    {
        "client_msg_id": "9b5bc0f8-a0d6-48e3-8d80-4f1e98d238a9",
        "type": "message",
        "text": "The trouble with free text answer spaces is that they make it hard to aggregate the answers. My hope was that if someone felt too boxed-in by a particular question, they'd feel comfortable reaching out to me and share additional info, or just skipping the question (since all questions are optional). Not a perfect solution, but a necessary trade-off. And in this case, it seems to have worked.\n\nIf you'd like to sponsor the podcast, send me a private message and we can start talking about that. Sponsors are still allowed to participate \u2014 this isn't a show where editorial independence / journalistic ethics are a meaningful concern, so I don't think listeners will object on the basis of presumed bias. They haven't yet, at least.",
        "user": "UC2A2ARPT",
        "ts": "1580408924.269800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580408968.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3JhDn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The trouble with free text answer spaces is that they make it hard to aggregate the answers. My hope was that if someone felt too boxed-in by a particular question, they'd feel comfortable reaching out to me and share additional info, or just skipping the question (since all questions are optional). Not a perfect solution, but a necessary trade-off. And in this case, it seems to have worked.\n\nIf you'd like to sponsor the podcast, send me a private message and we can start talking about that. Sponsors are still allowed to participate \u2014 this isn't a show where editorial independence / journalistic ethics are a meaningful concern, so I don't think listeners will object on the basis of presumed bias. They haven't yet, at least."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580079821.153700",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "4c96bbfc-1bdd-43a1-971e-edeed9940ecc",
        "type": "message",
        "text": "For anyone who missed the first post \u2014\u00a0the first ever Future of Coding Community Survey is currently open. All questions are optional, all submissions are anonymous, the data collected will be used to set the roadmap for what I'll be working on for the community over the coming year. We've had about 90 responses so far and the data has been very helpful. Get your submission in soon, because we'll be opening this up to the wider community (Podcast, Newsletter, Twitter) this weekend. Thank you! <https://forms.gle/cBzxD7CQyoQxNGyw8>",
        "user": "UC2A2ARPT",
        "ts": "1580409223.273100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1580409229.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A2T9T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For anyone who missed the first post \u2014\u00a0the first ever Future of Coding Community Survey is currently open. All questions are optional, all submissions are anonymous, the data collected will be used to set the roadmap for what I'll be working on for the community over the coming year. We've had about 90 responses so far and the data has been very helpful. Get your submission in soon, because we'll be opening this up to the wider community (Podcast, Newsletter, Twitter) this weekend. Thank you! "
                            },
                            {
                                "type": "link",
                                "url": "https://forms.gle/cBzxD7CQyoQxNGyw8"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580409223.273100",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1580486830.288000",
        "reply_users": [
            "U8A5MS6R1",
            "UC2A2ARPT"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UPVBV34EL",
                    "UA14TGLTC",
                    "U8A5MS6R1",
                    "UJ6LDMMN0",
                    "U79HM6726"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "014A4590-2D41-4524-BBF0-B412012A281D",
        "type": "message",
        "text": "<@UT60XSVCN> The main limitation of swank+slime is the main limitation of Emacs: no graphics. Data science relies heavily on visualization. Perhaps the main attraction of notebooks is the possibility to store code and visualization in a single document. But yes, the execution model is extremely limiting.\nFor a demo of a notebook based on Smalltalk (Pharo) with GToolkot, see <http://blog.khinsen.net/posts/2019/05/09/the-computational-notebook-of-the-future-part-2/|http://blog.khinsen.net/posts/2019/05/09/the-computational-notebook-of-the-future-part-2/>. That\u2019s a mich nicer environment, but the price to pay is a serious lack of scientific libraries.",
        "user": "UJBAJNFLK",
        "ts": "1580413242.279300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "The computational notebook of the future (part 2)",
                "title_link": "http://blog.khinsen.net/posts/2019/05/09/the-computational-notebook-of-the-future-part-2/",
                "text": "A while ago I wrote about my ideas for a successor of today's computational notebooks. Since then I have made some progress on a prototype implementation, which is the topic of this post. Again I have made a companion screencast (also on Vimeo for those w...",
                "fallback": "The computational notebook of the future (part 2)",
                "from_url": "http://blog.khinsen.net/posts/2019/05/09/the-computational-notebook-of-the-future-part-2/",
                "service_name": "blog.khinsen.net",
                "id": 1,
                "original_url": "http://blog.khinsen.net/posts/2019/05/09/the-computational-notebook-of-the-future-part-2/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iKKE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UT60XSVCN"
                            },
                            {
                                "type": "text",
                                "text": " The main limitation of swank+slime is the main limitation of Emacs: no graphics. Data science relies heavily on visualization. Perhaps the main attraction of notebooks is the possibility to store code and visualization in a single document. But yes, the execution model is extremely limiting.\n"
                            },
                            {
                                "type": "text",
                                "text": "For a demo of a notebook based on Smalltalk (Pharo) with GToolkot, see "
                            },
                            {
                                "type": "link",
                                "url": "http://blog.khinsen.net/posts/2019/05/09/the-computational-notebook-of-the-future-part-2/",
                                "text": "http://blog.khinsen.net/posts/2019/05/09/the-computational-notebook-of-the-future-part-2/"
                            },
                            {
                                "type": "text",
                                "text": ". That\u2019s a mich nicer environment, but the price to pay is a serious lack of scientific libraries."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "f756c38e-f07d-436c-8ecd-940e40e7b602",
        "type": "message",
        "text": "<@UJBAJNFLK> Yeah, I agree with that, emacs is great\u2014for a text-mode ui with no security considerations.\nThanks for the link, I'll give it a spin later. It's been a couple years since I've played with pharo.",
        "user": "UT60XSVCN",
        "ts": "1580413816.279600",
        "team": "T5TCAFTA9",
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "5eef5007-769a-41f0-bf71-258b01ba6479",
        "type": "message",
        "text": "Though I should point out, you can largely replicate computational notebooks in emacs with org-mode, since emacs can in fact show images. What's missing is interactivity with the visualizations. Though there's not much point as in the end you're left with the same semantic issues as other notebooks, like out-of-order execution, and forced linear progression. \n<https://www.youtube.com/watch?v=CGnt_PWoM5Y>",
        "user": "UT60XSVCN",
        "ts": "1580414301.279800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Org-mode for Reproducible Research",
                "title_link": "https://www.youtube.com/watch?v=CGnt_PWoM5Y",
                "author_name": "thoughtbot",
                "author_link": "https://www.youtube.com/user/ThoughtbotVideo",
                "thumb_url": "https://i.ytimg.com/vi/CGnt_PWoM5Y/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Org-mode for Reproducible Research",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/CGnt_PWoM5Y?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=CGnt_PWoM5Y",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=CGnt_PWoM5Y"
            }
        ],
        "thread_ts": "1580337617.251900",
        "parent_user_id": "UE0ETTCG7"
    }
]