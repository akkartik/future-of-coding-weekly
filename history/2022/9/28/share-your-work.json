[
    {
        "type": "message",
        "text": "I made a desktop app to transcribe real-time audio recordings to text using OpenAI\u2019s Whisper\n\n<https://github.com/chidiwilliams/buzz>",
        "files": [
            {
                "id": "F0444MYN8RL",
                "created": 1664394987,
                "timestamp": 1664394987,
                "name": "buzz-demo.mp4",
                "title": "buzz-demo.mp4",
                "mimetype": "video/mp4",
                "filetype": "mp4",
                "pretty_type": "MPEG 4 Video",
                "user": "U03FPD8BF19",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 10058700,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "complete",
                    "locale": "en-US"
                },
                "mp4": "https://files.slack.com/files-tmb/T5TCAFTA9-F0444MYN8RL-1d5a131f1c/buzz-demo.mp4",
                "url_private": "https://files.slack.com/files-tmb/T5TCAFTA9-F0444MYN8RL-1d5a131f1c/buzz-demo.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0444MYN8RL/download/buzz-demo.mp4",
                "vtt": "https://files.slack.com/files-tmb/T5TCAFTA9-F0444MYN8RL-1d5a131f1c/file.vtt?_xcb=c7c10",
                "hls": "https://files.slack.com/files-tmb/T5TCAFTA9-F0444MYN8RL-1d5a131f1c/file.m3u8?_xcb=c7c10",
                "hls_embed": "data:application/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9OTcxMzY0LEFWRVJBR0UtQkFORFdJRFRIPTcwNzIxOSxDT0RFQ1M9ImF2YzEuNjQwMDI4LG1wNGEuNDAuNSIsUkVTT0xVVElPTj0xMzUweDEwODAsRlJBTUUtUkFURT0yOS45NzAsU1VCVElUTEVTPSJzdWJzIgpkYXRhOmFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5tcGVndXJsO2Jhc2U2NCxJMFZZVkUwelZRb2pSVmhVTFZndFZrVlNVMGxQVGpvekNpTkZXRlF0V0MxVVFWSkhSVlJFVlZKQlZFbFBUam8zQ2lORldGUXRXQzFOUlVSSlFTMVRSVkZWUlU1RFJUb3hDaU5GV0ZRdFdDMVFURUZaVEVsVFZDMVVXVkJGT2xaUFJBb2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd05EUTBUVmxPT0ZKTUxURmtOV0V4TXpGbU1XTXZabWxzWlY5SVh6STJORjh4T1RJd2VERXdPREJmTmpVd01FdENVRk5mTjFGV1FsSmZNREF3TURFdWRITUtJMFZZVkVsT1JqbzJMakF3Tml3S2FIUjBjSE02THk5bWFXeGxjeTV6YkdGamF5NWpiMjB2Wm1sc1pYTXRkRzFpTDFRMVZFTkJSbFJCT1MxR01EUTBORTFaVGpoU1RDMHhaRFZoTVRNeFpqRmpMMlpwYkdWZlNGOHlOalJmTVRreU1IZ3hNRGd3WHpZMU1EQkxRbEJUWHpkUlZrSlNYekF3TURBeUxuUnpDaU5GV0ZSSlRrWTZOaTR3TURZc0NtaDBkSEJ6T2k4dlptbHNaWE11YzJ4aFkyc3VZMjl0TDJacGJHVnpMWFJ0WWk5VU5WUkRRVVpVUVRrdFJqQTBORFJOV1U0NFVrd3RNV1ExWVRFek1XWXhZeTltYVd4bFgwaGZNalkwWHpFNU1qQjRNVEE0TUY4Mk5UQXdTMEpRVTE4M1VWWkNVbDh3TURBd015NTBjd29qUlZoVVNVNUdPall1TURBMkxBcG9kSFJ3Y3pvdkwyWnBiR1Z6TG5Oc1lXTnJMbU52YlM5bWFXeGxjeTEwYldJdlZEVlVRMEZHVkVFNUxVWXdORFEwVFZsT09GSk1MVEZrTldFeE16Rm1NV012Wm1sc1pWOUlYekkyTkY4eE9USXdlREV3T0RCZk5qVXdNRXRDVUZOZk4xRldRbEpmTURBd01EUXVkSE1LSTBWWVZFbE9Sam8yTGpBd05pd0thSFIwY0hNNkx5OW1hV3hsY3k1emJHRmpheTVqYjIwdlptbHNaWE10ZEcxaUwxUTFWRU5CUmxSQk9TMUdNRFEwTkUxWlRqaFNUQzB4WkRWaE1UTXhaakZqTDJacGJHVmZTRjh5TmpSZk1Ua3lNSGd4TURnd1h6WTFNREJMUWxCVFh6ZFJWa0pTWHpBd01EQTFMblJ6Q2lORldGUkpUa1k2Tmk0d01EWXNDbWgwZEhCek9pOHZabWxzWlhNdWMyeGhZMnN1WTI5dEwyWnBiR1Z6TFhSdFlpOVVOVlJEUVVaVVFUa3RSakEwTkRSTldVNDRVa3d0TVdRMVlURXpNV1l4WXk5bWFXeGxYMGhmTWpZMFh6RTVNakI0TVRBNE1GODJOVEF3UzBKUVUxODNVVlpDVWw4d01EQXdOaTUwY3dvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TkRRMFRWbE9PRkpNTFRGa05XRXhNekZtTVdNdlptbHNaVjlJWHpJMk5GOHhPVEl3ZURFd09EQmZOalV3TUV0Q1VGTmZOMUZXUWxKZk1EQXdNRGN1ZEhNS0kwVllWRWxPUmpvMkxqQXdOaXdLYUhSMGNITTZMeTltYVd4bGN5NXpiR0ZqYXk1amIyMHZabWxzWlhNdGRHMWlMMVExVkVOQlJsUkJPUzFHTURRME5FMVpUamhTVEMweFpEVmhNVE14WmpGakwyWnBiR1ZmU0Y4eU5qUmZNVGt5TUhneE1EZ3dYelkxTURCTFFsQlRYemRSVmtKU1h6QXdNREE0TG5SekNpTkZXRlJKVGtZNk5pNHdNRFlzQ21oMGRIQnpPaTh2Wm1sc1pYTXVjMnhoWTJzdVkyOXRMMlpwYkdWekxYUnRZaTlVTlZSRFFVWlVRVGt0UmpBME5EUk5XVTQ0VWt3dE1XUTFZVEV6TVdZeFl5OW1hV3hsWDBoZk1qWTBYekU1TWpCNE1UQTRNRjgyTlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3T1M1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd05EUTBUVmxPT0ZKTUxURmtOV0V4TXpGbU1XTXZabWxzWlY5SVh6STJORjh4T1RJd2VERXdPREJmTmpVd01FdENVRk5mTjFGV1FsSmZNREF3TVRBdWRITUtJMFZZVkVsT1JqbzJMakF3Tml3S2FIUjBjSE02THk5bWFXeGxjeTV6YkdGamF5NWpiMjB2Wm1sc1pYTXRkRzFpTDFRMVZFTkJSbFJCT1MxR01EUTBORTFaVGpoU1RDMHhaRFZoTVRNeFpqRmpMMlpwYkdWZlNGOHlOalJmTVRreU1IZ3hNRGd3WHpZMU1EQkxRbEJUWHpkUlZrSlNYekF3TURFeExuUnpDaU5GV0ZSSlRrWTZOaTR3TURZc0NtaDBkSEJ6T2k4dlptbHNaWE11YzJ4aFkyc3VZMjl0TDJacGJHVnpMWFJ0WWk5VU5WUkRRVVpVUVRrdFJqQTBORFJOV1U0NFVrd3RNV1ExWVRFek1XWXhZeTltYVd4bFgwaGZNalkwWHpFNU1qQjRNVEE0TUY4Mk5UQXdTMEpRVTE4M1VWWkNVbDh3TURBeE1pNTBjd29qUlZoVVNVNUdPall1TURBMkxBcG9kSFJ3Y3pvdkwyWnBiR1Z6TG5Oc1lXTnJMbU52YlM5bWFXeGxjeTEwYldJdlZEVlVRMEZHVkVFNUxVWXdORFEwVFZsT09GSk1MVEZrTldFeE16Rm1NV012Wm1sc1pWOUlYekkyTkY4eE9USXdlREV3T0RCZk5qVXdNRXRDVUZOZk4xRldRbEpmTURBd01UTXVkSE1LSTBWWVZFbE9Sam8yTGpBd05pd0thSFIwY0hNNkx5OW1hV3hsY3k1emJHRmpheTVqYjIwdlptbHNaWE10ZEcxaUwxUTFWRU5CUmxSQk9TMUdNRFEwTkUxWlRqaFNUQzB4WkRWaE1UTXhaakZqTDJacGJHVmZTRjh5TmpSZk1Ua3lNSGd4TURnd1h6WTFNREJMUWxCVFh6ZFJWa0pTWHpBd01ERTBMblJ6Q2lORldGUkpUa1k2Tmk0d01EWXNDbWgwZEhCek9pOHZabWxzWlhNdWMyeGhZMnN1WTI5dEwyWnBiR1Z6TFhSdFlpOVVOVlJEUVVaVVFUa3RSakEwTkRSTldVNDRVa3d0TVdRMVlURXpNV1l4WXk5bWFXeGxYMGhmTWpZMFh6RTVNakI0TVRBNE1GODJOVEF3UzBKUVUxODNVVlpDVWw4d01EQXhOUzUwY3dvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TkRRMFRWbE9PRkpNTFRGa05XRXhNekZtTVdNdlptbHNaVjlJWHpJMk5GOHhPVEl3ZURFd09EQmZOalV3TUV0Q1VGTmZOMUZXUWxKZk1EQXdNVFl1ZEhNS0kwVllWRWxPUmpvMkxqQXdOaXdLYUhSMGNITTZMeTltYVd4bGN5NXpiR0ZqYXk1amIyMHZabWxzWlhNdGRHMWlMMVExVkVOQlJsUkJPUzFHTURRME5FMVpUamhTVEMweFpEVmhNVE14WmpGakwyWnBiR1ZmU0Y4eU5qUmZNVGt5TUhneE1EZ3dYelkxTURCTFFsQlRYemRSVmtKU1h6QXdNREUzTG5SekNpTkZXRlJKVGtZNk5pNHdNRFlzQ21oMGRIQnpPaTh2Wm1sc1pYTXVjMnhoWTJzdVkyOXRMMlpwYkdWekxYUnRZaTlVTlZSRFFVWlVRVGt0UmpBME5EUk5XVTQ0VWt3dE1XUTFZVEV6TVdZeFl5OW1hV3hsWDBoZk1qWTBYekU1TWpCNE1UQTRNRjgyTlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF4T0M1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd05EUTBUVmxPT0ZKTUxURmtOV0V4TXpGbU1XTXZabWxzWlY5SVh6STJORjh4T1RJd2VERXdPREJmTmpVd01FdENVRk5mTjFGV1FsSmZNREF3TVRrdWRITUtJMFZZVkVsT1JqbzJMakF3Tml3S2FIUjBjSE02THk5bWFXeGxjeTV6YkdGamF5NWpiMjB2Wm1sc1pYTXRkRzFpTDFRMVZFTkJSbFJCT1MxR01EUTBORTFaVGpoU1RDMHhaRFZoTVRNeFpqRmpMMlpwYkdWZlNGOHlOalJmTVRreU1IZ3hNRGd3WHpZMU1EQkxRbEJUWHpkUlZrSlNYekF3TURJd0xuUnpDaU5GV0ZSSlRrWTZOaTR3TURZc0NtaDBkSEJ6T2k4dlptbHNaWE11YzJ4aFkyc3VZMjl0TDJacGJHVnpMWFJ0WWk5VU5WUkRRVVpVUVRrdFJqQTBORFJOV1U0NFVrd3RNV1ExWVRFek1XWXhZeTltYVd4bFgwaGZNalkwWHpFNU1qQjRNVEE0TUY4Mk5UQXdTMEpRVTE4M1VWWkNVbDh3TURBeU1TNTBjd29qUlZoVVNVNUdPall1TURBMkxBcG9kSFJ3Y3pvdkwyWnBiR1Z6TG5Oc1lXTnJMbU52YlM5bWFXeGxjeTEwYldJdlZEVlVRMEZHVkVFNUxVWXdORFEwVFZsT09GSk1MVEZrTldFeE16Rm1NV012Wm1sc1pWOUlYekkyTkY4eE9USXdlREV3T0RCZk5qVXdNRXRDVUZOZk4xRldRbEpmTURBd01qSXVkSE1LSTBWWVZFbE9Sam8yTGpBd05pd0thSFIwY0hNNkx5OW1hV3hsY3k1emJHRmpheTVqYjIwdlptbHNaWE10ZEcxaUwxUTFWRU5CUmxSQk9TMUdNRFEwTkUxWlRqaFNUQzB4WkRWaE1UTXhaakZqTDJacGJHVmZTRjh5TmpSZk1Ua3lNSGd4TURnd1h6WTFNREJMUWxCVFh6ZFJWa0pTWHpBd01ESXpMblJ6Q2lORldGUkpUa1k2TVM0M01ESXNDbWgwZEhCek9pOHZabWxzWlhNdWMyeGhZMnN1WTI5dEwyWnBiR1Z6TFhSdFlpOVVOVlJEUVVaVVFUa3RSakEwTkRSTldVNDRVa3d0TVdRMVlURXpNV1l4WXk5bWFXeGxYMGhmTWpZMFh6RTVNakI0TVRBNE1GODJOVEF3UzBKUVUxODNVVlpDVWw4d01EQXlOQzUwY3dvalJWaFVMVmd0UlU1RVRFbFRWQW89CiNFWFQtWC1TVFJFQU0tSU5GOkJBTkRXSURUSD02MzYzMDcsQVZFUkFHRS1CQU5EV0lEVEg9NDY0NjYzLENPREVDUz0iYXZjMS42NDAwMWYsbXA0YS40MC41IixSRVNPTFVUSU9OPTkwMHg3MjAsRlJBTUUtUkFURT0yOS45NzAsU1VCVElUTEVTPSJzdWJzIgpodHRwczovL2ZpbGVzLnNsYWNrLmNvbS9maWxlcy10bWIvVDVUQ0FGVEE5LUYwNDQ0TVlOOFJMLTFkNWExMzFmMWMvZmlsZV9IXzI2NF8xMjgweDcyMF8zNTAwS0JQU183UVZCUi5tM3U4CiNFWFQtWC1NRURJQTpUWVBFPVNVQlRJVExFUyxHUk9VUC1JRD0ic3VicyIsTkFNRT0iRW5nbGlzaCIsREVGQVVMVD1ZRVMsQVVUT1NFTEVDVD1ZRVMsRk9SQ0VEPU5PLExBTkdVQUdFPSJlbmciLFVSST0iZGF0YTphcHBsaWNhdGlvbi92bmQuYXBwbGUubXBlZ3VybDtiYXNlNjQsSTBWWVZFMHpWUW9qUlZoVUxWZ3RWa1ZTVTBsUFRqb3pDaU5GV0ZRdFdDMVVRVkpIUlZSRVZWSkJWRWxQVGpvMk1EQUtJMFZZVkMxWUxVMUZSRWxCTFZORlVWVkZUa05GT2pFS0kwVllWQzFZTFZCTVFWbE1TVk5VTFZSWlVFVTZWazlFQ2lORldGUkpUa1k2TVRNNUxqZ3pPU3dLYUhSMGNITTZMeTltYVd4bGN5NXpiR0ZqYXk1amIyMHZabWxzWlhNdGRHMWlMMVExVkVOQlJsUkJPUzFHTURRME5FMVpUamhTVEMweFpEVmhNVE14WmpGakwyWnBiR1V1ZG5SMENpTkZXRlF0V0MxRlRrUk1TVk5VIgo=",
                "mp4_low": "https://files.slack.com/files-tmb/T5TCAFTA9-F0444MYN8RL-1d5a131f1c/buzz-demo_trans.mp4",
                "duration_ms": 139839,
                "media_display_type": "video",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F0444MYN8RL-1d5a131f1c/buzz-demo_thumb_video.jpeg",
                "thumb_video_w": 1350,
                "thumb_video_h": 1080,
                "permalink": "https://futureofcoding.slack.com/files/U03FPD8BF19/F0444MYN8RL/buzz-demo.mp4",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0444MYN8RL-f7fac2442d",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U03FPD8BF19",
        "display_as_bot": false,
        "ts": "1664395028.493529",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sTzsA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I made a desktop app to transcribe real-time audio recordings to text using OpenAI\u2019s Whisper\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/chidiwilliams/buzz"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "49963d4b-f15e-473c-abb2-a412356ebdaa",
        "thread_ts": "1664395028.493529",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1664477932.064699",
        "reply_users": [
            "UMVFWPZ36",
            "UGWUJUZHT",
            "UDQBTJ211"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U03E4LY27FS",
                    "UMV4B97GT"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "U03GBV8B58V",
                    "UPVBV34EL",
                    "UMVFWPZ36"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "728afb29-5de2-4394-8d17-7d00cf7e21dc",
        "type": "message",
        "text": "This is awesome <@U03FPD8BF19>! So simple and powerful.",
        "user": "UMVFWPZ36",
        "ts": "1664450462.293139",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j9N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is awesome "
                            },
                            {
                                "type": "user",
                                "user_id": "U03FPD8BF19"
                            },
                            {
                                "type": "text",
                                "text": "! So simple and powerful."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664395028.493529",
        "parent_user_id": "U03FPD8BF19",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U03FPD8BF19"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8d582499-50ac-4618-8f0d-a23fe8a89701",
        "type": "message",
        "text": "Tangential: Parsing the transcribed text would be a way to add programming actions to the text.  Maybe /bin/audio-sh?  My favourite parsing technology, ATM, is Ohm-JS.  <http://Descript.com|Descript.com> sells an audio/video editing/mixing-board tool based on textual editing (like, say, Logic, GarageBand, iMovie, Da Vinci Resolve, etc., but text-document-based).  One could write a quickie parser that transpiles specific text phrases to /bin/bash scripts (or Python, or, ...).",
        "user": "UGWUJUZHT",
        "ts": "1664451961.298029",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ehDbN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tangential: Parsing the transcribed text would be a way to add programming actions to the text.  Maybe /bin/audio-sh?  My favourite parsing technology, ATM, is Ohm-JS.  "
                            },
                            {
                                "type": "link",
                                "url": "http://Descript.com",
                                "text": "Descript.com"
                            },
                            {
                                "type": "text",
                                "text": " sells an audio/video editing/mixing-board tool based on textual editing (like, say, Logic, GarageBand, iMovie, Da Vinci Resolve, etc., but text-document-based).  One could write a quickie parser that transpiles specific text phrases to /bin/bash scripts (or Python, or, ...)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664395028.493529",
        "parent_user_id": "U03FPD8BF19",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMVFWPZ36",
                    "U03FPD8BF19"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "8f62bdf3-2f87-4e11-9003-bdffc07a47be",
        "type": "message",
        "text": "Great little app. It's inspired me to have a play around with Whisper",
        "user": "UDQBTJ211",
        "ts": "1664477932.064699",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fptD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great little app. It's inspired me to have a play around with Whisper"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664395028.493529",
        "parent_user_id": "U03FPD8BF19",
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "U03FPD8BF19"
                ],
                "count": 1
            }
        ]
    }
]