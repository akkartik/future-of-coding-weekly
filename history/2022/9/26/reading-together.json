[
    {
        "client_msg_id": "C9BE25B3-AC8F-4981-BDF4-78840EB5EE8C",
        "type": "message",
        "text": "\u201cNotes on Postmodern Programming\u201d by Noble and Biddle (2002)\n\n&gt; The ultimate goal of all computer science is the program. The performance of programs was once the noblest function of computer science, and computer science was indispensable to great programs. Today, programming and computer science exist in complacent isolation, and can only be rescued by the conscious cooperation and collaboration of all programmers.\n&gt; The universities were unable to produce this unity; and how indeed, should they have done so, since creativity cannot be taught? Designers, programmers and engineers must once again come to know and comprehend the composite character of a program, both as an entity and in terms of its various parts. Then their work will be filled with that true software spirit which, as \u201ctheory of computing\u201d, it has lost. Universities must return to programming. The worlds of the formal methods and algorithm analysis, consisting only of logic and mathematics, must become once again a world in which things are built. If the young person who rejoices in creative activity now begins his career as in the older days by learning to program, then the unproductive \u201cscientist\u201d will no longer be condemned to inadequate science, for their skills will be preserved for the programming in which they can achieve great things.\n&gt; \n&gt; Designers, programmers, engineers, we must all return to programming! There is no essential difference between the computer scientist and the programmer. The computer scientist is an exalted programmer. By the grace of Heaven and in rare moments of inspiration which transcend the will, com- puter science may unconsciously blossom from the labour of the hand, but a base in programming is essential to every computer scientist. It is there that the original source of creativity lies.\n&gt; \n&gt; Let us therefore create a new guild of programmers without the class-distinctions that raise an arrogant barrier between programmers and computer scientists! Let us desire, conceive, and create the new program of the future together. It will combine design, user-interfaces, and programming in a single form, and will one day rise towards the heavens from the hands of a million workers as the crystalline symbol of a new and coming faith.\n<https://homepages.ecs.vuw.ac.nz/~kjx/papers/nopp.pdf|https://homepages.ecs.vuw.ac.nz/~kjx/papers/nopp.pdf>",
        "user": "U0378MDUG1Y",
        "ts": "1664160080.084779",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1664160158.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jcs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\u201cNotes on Postmodern Programming\u201d by Noble and Biddle (2002)\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The ultimate goal of all computer science is the program. The performance of programs was once the noblest function of computer science, and computer science was indispensable to great programs. Today, programming and computer science exist in complacent isolation, and can only be rescued by the conscious cooperation and collaboration of all programmers.\nThe universities were unable to produce this unity; and how indeed, should they have done so, since creativity cannot be taught? Designers, programmers and engineers must once again come to know and comprehend the composite character of a program, both as an entity and in terms of its various parts. Then their work will be filled with that true software spirit which, as \u201ctheory of computing\u201d, it has lost. Universities must return to programming. The worlds of the formal methods and algorithm analysis, consisting only of logic and mathematics, must become once again a world in which things are built. If the young person who rejoices in creative activity now begins his career as in the older days by learning to program, then the unproductive \u201cscientist\u201d will no longer be condemned to inadequate science, for their skills will be preserved for the programming in which they can achieve great things.\n\nDesigners, programmers, engineers, we must all return to programming! There is no essential difference between the computer scientist and the programmer. The computer scientist is an exalted programmer. By the grace of Heaven and in rare moments of inspiration which transcend the will, com- puter science may unconsciously blossom from the labour of the hand, but a base in programming is essential to every computer scientist. It is there that the original source of creativity lies.\n\nLet us therefore create a new guild of programmers without the class-distinctions that raise an arrogant barrier between programmers and computer scientists! Let us desire, conceive, and create the new program of the future together. It will combine design, user-interfaces, and programming in a single form, and will one day rise towards the heavens from the hands of a million workers as the crystalline symbol of a new and coming faith."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://homepages.ecs.vuw.ac.nz/~kjx/papers/nopp.pdf",
                                "text": "https://homepages.ecs.vuw.ac.nz/~kjx/papers/nopp.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664160080.084779",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1664699600.741219",
        "reply_users": [
            "UJBAJNFLK",
            "UA14TGLTC",
            "U013ZLJARC7",
            "U0378MDUG1Y"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "93ccea42-b368-4e48-8d2b-3d597febed04",
        "type": "message",
        "text": "I tend to agree, but that's not my idea of being postmodern. The relation between programmers and CS academics is one of reciprocal contempt, but not a power structure. The main power structure in computing is programmers over users, so my idea of postmodern programming is more like end-user programming.\nDisclaimer: I don't consider myself postmodern, and even less a spokesperson for postmodernism.",
        "user": "UJBAJNFLK",
        "ts": "1664173774.956939",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mkF2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I tend to agree, but that's not my idea of being postmodern. The relation between programmers and CS academics is one of reciprocal contempt, but not a power structure. The main power structure in computing is programmers over users, so my idea of postmodern programming is more like end-user programming.\nDisclaimer: I don't consider myself postmodern, and even less a spokesperson for postmodernism."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664160080.084779",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0245E9RB2B"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "765d53ea-9d31-4f92-9c01-5ad4e8531a48",
        "type": "message",
        "text": "Yes, if anything academics and industry have entirely separate power measures.  And more than programmers over users, it's the firms employing the programmers.  And individual vs institution is a significant and broad conflict.",
        "user": "UA14TGLTC",
        "ts": "1664182876.223179",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+rDX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, if anything academics and industry have entirely separate power measures.  And more than programmers over users, it's the firms employing the programmers.  And individual vs institution is a significant and broad conflict."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664160080.084779",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ea8a66ca-f939-44f0-a523-8a1aea48e610",
        "type": "message",
        "text": "I have a half written essay that tries to pick apart the oft conflated terms \"programming\", \"software engineering\", and \"computer science\". This just makes me itch to finish it...",
        "user": "U013ZLJARC7",
        "ts": "1664202990.269509",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ChI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a half written essay that tries to pick apart the oft conflated terms \"programming\", \"software engineering\", and \"computer science\". This just makes me itch to finish it..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664160080.084779",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            },
            {
                "name": "egg",
                "users": [
                    "U03B14DUZSA"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "37718F87-7AC2-4E58-9E4F-3862223A0A87",
        "type": "message",
        "text": "Related talk  <https://m.youtube.com/watch?v=a5Q7td6t-iw&amp;feature=youtu.be|https://m.youtube.com/watch?v=a5Q7td6t-iw&amp;feature=youtu.be>",
        "user": "U0378MDUG1Y",
        "ts": "1664671539.181729",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://m.youtube.com/watch?v=a5Q7td6t-iw&amp;feature=youtu.be",
                "thumb_url": "https://i.ytimg.com/vi/a5Q7td6t-iw/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/a5Q7td6t-iw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"James Noble - Notes on Post-Post-Modern-Modern Programming - Curry On\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://m.youtube.com/watch?v=a5Q7td6t-iw&amp;feature=youtu.be",
                "fallback": "YouTube Video: James Noble - Notes on Post-Post-Modern-Modern Programming - Curry On",
                "title": "James Noble - Notes on Post-Post-Modern-Modern Programming - Curry On",
                "title_link": "https://m.youtube.com/watch?v=a5Q7td6t-iw&amp;feature=youtu.be",
                "author_name": "Curry On!",
                "author_link": "https://www.youtube.com/c/CurryOn",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0LQSn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Related talk  "
                            },
                            {
                                "type": "link",
                                "url": "https://m.youtube.com/watch?v=a5Q7td6t-iw&feature=youtu.be",
                                "text": "https://m.youtube.com/watch?v=a5Q7td6t-iw&feature=youtu.be"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664160080.084779",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "92844f93-fe34-4da1-b10c-9461ecbc68a2",
        "type": "message",
        "text": "Also this paper by Stephen Kell on Unix vs Smalltalk, which cites Noble &amp; Biddle: <https://www.humprog.org/~stephen/research/papers/kell19unix-personal.pdf>",
        "user": "UJBAJNFLK",
        "ts": "1664699600.741219",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AEg0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also this paper by Stephen Kell on Unix vs Smalltalk, which cites Noble & Biddle: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.humprog.org/~stephen/research/papers/kell19unix-personal.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1664160080.084779",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0378MDUG1Y"
                ],
                "count": 1
            }
        ]
    }
]