[
    {
        "client_msg_id": "a083900c-1f21-4b26-8909-a18b6444677b",
        "type": "message",
        "text": "I'm sure this has been discussed here (appreciate if someone can redirect me), but... What use cases do you see people have for creating their own applications? Do you think people are willing to pay for it?",
        "user": "U010328JA1E",
        "ts": "1662734941.256049",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oUo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm sure this has been discussed here (appreciate if someone can redirect me), but... What use cases do you see people have for creating their own applications? Do you think people are willing to pay for it?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1662734941.256049",
        "reply_count": 7,
        "reply_users_count": 3,
        "latest_reply": "1662863226.338019",
        "reply_users": [
            "UCGAK10LS",
            "UGWUJUZHT",
            "U010328JA1E"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "01a86e56-c92d-4ebd-ae11-ad44096016b7",
        "type": "message",
        "text": "In my worldview, the distinction between creating an app and using an app is artificial.\n\u2022 When someone uses an Excel spreadsheet, they create programs (formulas) that will be invoked whenever new data is added.\n\u2022 When someone uses a note-taking app, they create a hierarchy (or a web) of pages which allows them to later navigate between pieces of knowledge. The links between these pages amount to a program: a link is an instruction that says \"when someone clicks me, navigate to this page\".\n\u2022 When someone uses a calendar app to send reminders, they are programming the computer to provide them with customized notifications about upcoming events.\nUnder this lens, everybody wants to be able to create their own programs. The problem with today's world is that we silo programming into two realms: the \"end user\" realm, where programs are small and easy to create (but are _extremely_ limited), and the \"elite coder\" realm, where programs are large and are very challenging to make (but are very versatile).",
        "user": "UCGAK10LS",
        "ts": "1662790932.047759",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "11Mc2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my worldview, the distinction between creating an app and using an app is artificial.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "When someone uses an Excel spreadsheet, they create programs (formulas) that will be invoked whenever new data is added."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "When someone uses a note-taking app, they create a hierarchy (or a web) of pages which allows them to later navigate between pieces of knowledge. The links between these pages amount to a program: a link is an instruction that says \"when someone clicks me, navigate to this page\"."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "When someone uses a calendar app to send reminders, they are programming the computer to provide them with customized notifications about upcoming events."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nUnder this lens, everybody wants to be able to create their own programs. The problem with today's world is that we silo programming into two realms: the \"end user\" realm, where programs are small and easy to create (but are "
                            },
                            {
                                "type": "text",
                                "text": "extremely ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "limited), and the \"elite coder\" realm, where programs are large and are very challenging to make (but are very versatile)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1662734941.256049",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "84f8c8c3-bf2a-413d-bf46-ebf683224056",
        "type": "message",
        "text": "The route to the Future of Coding requires us to stop believing that this dichotomy is \"good\" or \"natural\".",
        "user": "UCGAK10LS",
        "ts": "1662791016.193039",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/UIM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The route to the Future of Coding requires us to stop believing that this dichotomy is \"good\" or \"natural\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1662734941.256049",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e73bbdf5-8ac8-4335-b63d-a1bcde1eb28b",
        "type": "message",
        "text": "Most people don\u2019t /think/ that they want to create their own applications.   Yet, a select few went for Hypercard and spreadsheets.  Dentist office software began happening only when spreadsheets became available.  Spreadsheets were invented for Accountants, but innovators with domain expertise in Dentist Officery picked up on the new paradigm.\n\nThis makes me think of Franz, Inc.\u2019s business model (free, but % royalty on all apps).",
        "user": "UGWUJUZHT",
        "ts": "1662806369.661229",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hSVWA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Most people don\u2019t /think/ that they want to create their own applications.   Yet, a select few went for Hypercard and spreadsheets.  Dentist office software began happening only when spreadsheets became available.  Spreadsheets were invented for Accountants, but innovators with domain expertise in Dentist Officery picked up on the new paradigm.\n\nThis makes me think of Franz, Inc.\u2019s business model (free, but % royalty on all apps)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1662734941.256049",
        "parent_user_id": "U010328JA1E"
    },
    {
        "client_msg_id": "0e1ff364-925b-4f44-bc6b-994a5caa7b29",
        "type": "message",
        "text": "<@UCGAK10LS> that's a cool worldview. So, if I understand correctly, you see \"end-users\" extending apps instead creating them from scratch? *at least, most of them",
        "user": "U010328JA1E",
        "ts": "1662819399.400339",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U010328JA1E",
            "ts": "1662819422.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ezG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " that's a cool worldview. So, if I understand correctly, you see \"end-users\" extending apps instead creating them from scratch? *at least, most of them"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1662734941.256049",
        "parent_user_id": "U010328JA1E"
    },
    {
        "client_msg_id": "92319a9b-a294-41df-b491-801370ce4135",
        "type": "message",
        "text": "<@UGWUJUZHT> in that example, were the dentists themselves creating the apps, or was it \"programmers\" along with dentists and their domain knowledge creating them? if the latter, is the end-user programming effort just lowering the barrier for developers to create apps?",
        "user": "U010328JA1E",
        "ts": "1662819545.023379",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CAiSV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " in that example, were the dentists themselves creating the apps, or was it \"programmers\" along with dentists and their domain knowledge creating them? if the latter, is the end-user programming effort just lowering the barrier for developers to create apps?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1662734941.256049",
        "parent_user_id": "U010328JA1E"
    },
    {
        "client_msg_id": "4b69932c-1c8c-4864-8cf7-d0dd5c2c8419",
        "type": "message",
        "text": "At first, it was the dentists - the domain experts - who began to see that they could make computer software without having to \u201clearn how to program\u201d.  The \u201cexperts\u201d - programmers - came later to make the apps more robust and scalable.  Programmers only have domain expertise in programming, not in running medical offices, nor accountancies, nor ...  I use(d) a book-writing tool called \u201cScrivener\u201d.  One of its selling points is that it was not created by programmers.  Having experience with software, I see all sorts of warts in Scrivener, but, I wouldn\u2019t have been able to invent Scrivener.  Spreadsheets, Hypercard, VB, etc., etc. are like gateway drugs.  Non-programmers used these tools to express automated versions of their processes.  Later, expert programmers cleaned up the ad-hoc messes.  This effect can even be seen in programming itself.  The \u201cexperts\u201d tell everyone to use FP, recursion, monads, etc., etc., but the majority of \u201creal programmers\u201d prefer HTML, JS, Python, Perl, etc.  There /should/ be a huge market for enabling invention, but, it must not appear to be complicated, nor expensive.\nBorland targeted developers and disappeared.  VisiCalc did not target developers and its ideas morphed into Excel, etc.  Did the VisiCalc company have an exit strategy or was it simply overtaken by newer versions of the ideas? (idk).\nThe inventions came from so-called non-programmers.\n&gt; Henry Ford (?): \u201cIf I had asked people what they wanted, they would have said faster horses.\u201d",
        "user": "UGWUJUZHT",
        "ts": "1662826324.911329",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d6gB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At first, it was the dentists - the domain experts - who began to see that they could make computer software without having to \u201clearn how to program\u201d.  The \u201cexperts\u201d - programmers - came later to make the apps more robust and scalable.  Programmers only have domain expertise in programming, not in running medical offices, nor accountancies, nor ...  I use(d) a book-writing tool called \u201cScrivener\u201d.  One of its selling points is that it was not created by programmers.  Having experience with software, I see all sorts of warts in Scrivener, but, I wouldn\u2019t have been able to invent Scrivener.  Spreadsheets, Hypercard, VB, etc., etc. are like gateway drugs.  Non-programmers used these tools to express automated versions of their processes.  Later, expert programmers cleaned up the ad-hoc messes.  This effect can even be seen in programming itself.  The \u201cexperts\u201d tell everyone to use FP, recursion, monads, etc., etc., but the majority of \u201creal programmers\u201d prefer HTML, JS, Python, Perl, etc.  There /should/ be a huge market for enabling invention, but, it must not appear to be complicated, nor expensive.\nBorland targeted developers and disappeared.  VisiCalc did not target developers and its ideas morphed into Excel, etc.  Did the VisiCalc company have an exit strategy or was it simply overtaken by newer versions of the ideas? (idk).\nThe inventions came from so-called non-programmers.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Henry Ford (?): \u201cIf I had asked people what they wanted, they would have said faster horses.\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1662734941.256049",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "beers",
                "users": [
                    "U010328JA1E"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3d314796-debe-4fc7-9cb3-ce80cc0f06f9",
        "type": "message",
        "text": "<@U010328JA1E> I would phrase it as: end users are likely to make _simpler_ programs (like the examples I mentioned), purely because they don't have the time or expertise to make more complex ones.\n\nI wouldn't think about the Future of Coding in terms of \"apps\". An app is a hard boundary that discourages interoperability and thus inhibits creativity/flexibility in programming. This is by design: companies want to lock you into using and paying for the programs they write and the services they provide. There's no commercial incentive to break down the artificial boundaries.\n\nApps aren't natural. CPUs don't execute apps \u2014 they execute instructions. Apps are a result of companies trying to adapt the notion of a _product\u2014_something you can put into a box and sell to a customer\u2014into the digital realm. In fact, until the late 2000s, most apps were literally sold in physical boxes with a price tag attached.\n\nThe Future of Coding is _not_ about encouraging companies (in vain) to allow their users to make modifications to the apps they sell. At least, not if I have anything to say about it. Software should feel like a continuous fluid, not a collection of impenetrable boxes that have small holes for a user's data to trickle in and out.",
        "user": "UCGAK10LS",
        "ts": "1662863226.338019",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bt05",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U010328JA1E"
                            },
                            {
                                "type": "text",
                                "text": " I would phrase it as: end users are likely to make "
                            },
                            {
                                "type": "text",
                                "text": "simpler ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "programs (like the examples I mentioned), purely because they don't have the time or expertise to make more complex ones.\n\nI wouldn't think about the Future of Coding in terms of \"apps\". An app is a hard boundary that discourages interoperability and thus inhibits creativity/flexibility in programming. This is by design: companies want to lock you into using and paying for the programs they"
                            },
                            {
                                "type": "text",
                                "text": " ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "write and the services they"
                            },
                            {
                                "type": "text",
                                "text": " ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "provide. There's no commercial incentive to break down the artificial boundaries.\n\nApps aren't natural. CPUs don't execute apps \u2014 they execute instructions. Apps are a result of companies trying to adapt the notion of a "
                            },
                            {
                                "type": "text",
                                "text": "product\u2014",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "something you can put into a box and sell to a customer\u2014into the digital realm. In fact, until the late 2000s, most apps were literally sold in physical boxes with a price tag attached.\n\nThe Future of Coding is "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " about encouraging companies (in vain) to allow their users to make modifications to the apps they sell. At least, not if I have anything to say about it. Software should feel like a continuous fluid, not a collection of impenetrable boxes that have small holes for a user's data to trickle in and out."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1662734941.256049",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "beers",
                "users": [
                    "U010328JA1E"
                ],
                "count": 1
            }
        ]
    }
]