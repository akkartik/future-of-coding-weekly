[
    {
        "client_msg_id": "032f3f63-d66e-45e6-94b4-a01b2d97adf2",
        "type": "message",
        "text": "For your FoC work, which missing frameworks/platforms/features/tools (that are not specific to the project) do you feel would most help you implement your project? (for example, have you had to take any significant detours from working on your project specific code to build such missing pieces?)",
        "user": "ULM3U6275",
        "ts": "1650388220.757719",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1650388313.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "64X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For your FoC work, which missing frameworks/platforms/features/tools (that are not specific to the project) do you feel would most help you implement your project? (for example, have you had to take any significant detours from working on your project specific code to build such missing pieces?)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "reply_count": 12,
        "reply_users_count": 8,
        "latest_reply": "1650614234.153579",
        "reply_users": [
            "UCUSW7WVD",
            "USH01JEDQ",
            "UC2A2ARPT",
            "U03CEGR3HSL",
            "UCGAK10LS",
            "U01NWARGPNC",
            "U013ZLJARC7",
            "ULM3U6275"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "5c8fcb01-4953-4681-807c-068621c9b6c2",
        "type": "message",
        "text": "SSL. Oauth. Talking to APIs in general. Also crypto in general, since we're not supposed to roll our own.",
        "user": "UCUSW7WVD",
        "ts": "1650392609.978799",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1650394026.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sOK7D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "SSL. Oauth. Talking to APIs in general. Also crypto in general, since we're not supposed to roll our own."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "38c0209a-a4c6-489d-8fcd-bdd16e68bf20",
        "type": "message",
        "text": "Local, syncable storage from browser",
        "user": "USH01JEDQ",
        "ts": "1650393385.232809",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4FL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Local, syncable storage from browser"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275",
                    "UA14TGLTC",
                    "U013G7Z14TH"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "A820E5CF-3860-446B-A21B-0E1DC16B00A8",
        "type": "message",
        "text": "Reactive data flow, 3D renderer + camera, computable reals with bounded perf... all in the browser and with an emphasis on minimal code size",
        "user": "UC2A2ARPT",
        "ts": "1650395784.693629",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dmp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reactive data flow, 3D renderer + camera, computable reals with bounded perf... all in the browser and with an emphasis on minimal code size"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "0e6ab4e3-2ffd-4c38-9d9e-bb5d47e584c7",
        "type": "message",
        "text": "A portable assembly language with guaranteed tail calls, not the \"we may optimize them if the planets align\" sort from gcc and llvm. Explicitly having to label tail calls would be fine.",
        "user": "U03CEGR3HSL",
        "ts": "1650396621.499249",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZPXsb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A portable assembly language with guaranteed tail calls, not the \"we may optimize them if the planets align\" sort from gcc and llvm. Explicitly having to label tail calls would be fine."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "67aa028a-3c5a-40ef-8c95-51c91f02c3e4",
        "type": "message",
        "text": "A programming language that _natively_ supports declarative/reactive GUIs. Similar to Svelte, but less ad-hoc.\n\nBut really, the hard part of The Future of Coding is discovering it, not implementing it.",
        "user": "UCGAK10LS",
        "ts": "1650415291.476309",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qSwA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A programming language that "
                            },
                            {
                                "type": "text",
                                "text": "natively",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " supports declarative/reactive GUIs. Similar to Svelte, but less ad-hoc.\n\nBut really, the hard part of The Future of Coding is discovering it, not implementing it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "357360a0-6148-46a7-8e0b-5a7f941955a1",
        "type": "message",
        "text": "A way to store code structures (like an ast tree).\n\nI want version control as a history of tree edits, including support for branching, diffing and merging.\n\nEssentially I want git but it works for non-text code tree structures. I know of other visual/structured editor projects that got bogged down in this too.\n\nI really don't want to have to reinvent version control but text files are terrible for what I'm doing.",
        "user": "U01NWARGPNC",
        "ts": "1650419175.629549",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01NWARGPNC",
            "ts": "1650419198.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4xSp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A way to store code structures (like an ast tree).\n\nI want version control as a history of tree edits, including support for branching, diffing and merging.\n\nEssentially I want git but it works for non-text code tree structures. I know of other visual/structured editor projects that got bogged down in this too.\n\nI really don't want to have to reinvent version control but text files are terrible for what I'm doing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC",
                    "U013G7Z14TH",
                    "ULM3U6275"
                ],
                "count": 3
            },
            {
                "name": "point_up::skin-tone-2",
                "users": [
                    "U02U0AS3J49"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5b86d9d6-4bdd-49bd-9bce-3fcc521d9f64",
        "type": "message",
        "text": "^ Yeah, I want that! But it's gotta work at 60fps for thousands of elements in the tree, and millions of tiny edits, with faster-than-linear-search access to random spots in the edit history, in the browser :$ (I am okay with this using GB of RAM)",
        "user": "UC2A2ARPT",
        "ts": "1650421350.420859",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1650421571.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KB0z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "^ Yeah, I want that! But it's gotta work at 60fps for thousands of elements in the tree, and millions of tiny edits, with faster-than-linear-search access to random spots in the edit history, in the browser :$ (I am okay with this using GB of RAM)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e4d414a9-ee4f-432c-a748-35c4a0692ffa",
        "type": "message",
        "text": "<@U01NWARGPNC> Have you seen <https://difftastic.wilfred.me.uk> ?",
        "user": "U013ZLJARC7",
        "ts": "1650437227.038249",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JkoT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01NWARGPNC"
                            },
                            {
                                "type": "text",
                                "text": " Have you seen "
                            },
                            {
                                "type": "link",
                                "url": "https://difftastic.wilfred.me.uk"
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "2747b15c-bb45-4cd9-86d7-03528d4fc47c",
        "type": "message",
        "text": "I had not seen this <@U013ZLJARC7>! Thanks! :slightly_smiling_face:\nIt doesn\u2019t solve the whole problem, but it could help with the tree diffing part of it.",
        "user": "U01NWARGPNC",
        "ts": "1650506851.511289",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Hys2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had not seen this "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "! Thanks! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "\nIt doesn\u2019t solve the whole problem, but it could help with the tree diffing part of it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "f5cac522-5b0b-4547-b792-b844e82bcd6b",
        "type": "message",
        "text": "<@UASNE4JBG> \"But really, the hard part of The Future of Coding is discovering it, not implementing it.\"\n\nHow do you know how hard it is to build if you don't know what it is? How do you know the right idea would be well recognized without first being constructed and experienced? How do you know the person with the right idea is also the person who can easily implement all the missing software layers to build it, or to convince others to do so? How do you know if the right idea is something that pops into one's head completely formed, or is instead discovered through an evolutionary process of building, testing, and seeing what feels right and where it leads them?",
        "user": "ULM3U6275",
        "ts": "1650577201.979109",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1650577601.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iiVUt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UASNE4JBG"
                            },
                            {
                                "type": "text",
                                "text": " \"But really, the hard part of The Future of Coding is discovering it, not implementing it.\"\n\nHow do you know how hard it is to build if you don't know what it is? How do you know the right idea would be well recognized without first being constructed and experienced? How do you know the person with the right idea is also the person who can easily implement all the missing software layers to build it, or to convince others to do so? How do you know if the right idea is something that pops into one's head completely formed, or is instead discovered through an evolutionary process of building, testing, and seeing what feels right and where it leads them?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5e5d8de1-3c54-4be0-a36f-d2d0e833c0cb",
        "type": "message",
        "text": "<@U01NWARGPNC> Totally! I don't mind if the on-disk format is text (vs in a DB or whatever else), so long as the tools on top can treat it like something richer, which is where things like this can be so helpful :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1650607674.723859",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZKD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01NWARGPNC"
                            },
                            {
                                "type": "text",
                                "text": " Totally! I don't mind if the on-disk format is text (vs in a DB or whatever else), so long as the tools on top can treat it like something richer, which is where things like this can be so helpful "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "12010c71-e28e-42de-b1a1-591d759b2038",
        "type": "message",
        "text": "<@ULM3U6275> Conversely, how can The Future of Coding (which I'm assuming takes the form of a \"programming environment\" of some kind) be hard to build if you know exactly what needs to be built? To \"know\" what to build is to know what code needs to be written. If you know what code needs to be written, you can simply press all of the correct letters on your keyboard, in the correct sequence, and then you're done.\n\nWhat I mean to say is: programming is _entirely_ about figuring out what code needs to be written (or modified). That's what I was implying in my last message.\n\nAs you say, oftentimes you have to experiment (many, many times) to figure out what code needs to be written. One hardly ever writes the right code on the first try. But writing code (which forces you to deliberate _every little detail_) is the last step in the design &amp; discovery process.",
        "user": "UCGAK10LS",
        "ts": "1650614234.153579",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1650614349.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FFMHM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " Conversely, how can The Future of Coding (which I'm assuming takes the form of a \"programming environment\" of some kind) be hard to build if you know exactly what needs to be built? To \"know\" what to build is to know what code needs to be written. If you know what code needs to be written, you can simply press all of the correct letters on your keyboard, in the correct sequence, and then you're done.\n\nWhat I mean to say is: programming is "
                            },
                            {
                                "type": "text",
                                "text": "entirely",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " about figuring out what code needs to be written (or modified). That's what I was implying in my last message.\n\nAs you say, oftentimes you have to experiment (many, many times) to figure out what code needs to be written. One hardly ever writes the right code on the first try. But writing code (which forces you to deliberate "
                            },
                            {
                                "type": "text",
                                "text": "every little detail",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") is the last step in the design & discovery process."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275"
    }
]