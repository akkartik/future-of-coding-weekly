[
    {
        "client_msg_id": "e42de1b7-74fd-4588-9e70-002ad3648e51",
        "type": "message",
        "text": "Ask FoC: What are your favorite Lisps? Which ones are good for typical engineering work vs which are good for thinking and creativity?",
        "user": "U03LT7540HZ",
        "ts": "1661481349.386469",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lx4v+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ask FoC: What are your favorite Lisps? Which ones are good for typical engineering work vs which are good for thinking and creativity?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "reply_count": 11,
        "reply_users_count": 6,
        "latest_reply": "1661714181.001949",
        "reply_users": [
            "U03CEGR3HSL",
            "U02PDVC9CNT",
            "U03LT7540HZ",
            "UJBAJNFLK",
            "U03PS6X1J14",
            "UA14TGLTC"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f840d060-1de5-45f5-8680-4979f3f92810",
        "type": "message",
        "text": "So hard to pick!\n\nLogo, Scheme, elisp, Lisp 1.5, MAClisp, RPL. I've had so much fun and learned so much over the years from all of them!",
        "user": "U03CEGR3HSL",
        "ts": "1661483607.780869",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NU6zv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So hard to pick!\n\nLogo, Scheme, elisp, Lisp 1.5, MAClisp, RPL. I've had so much fun and learned so much over the years from all of them!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "b31756a9-33a0-4bb2-8be8-a2e84512e5d2",
        "type": "message",
        "text": "Racket is always my go to",
        "user": "U02PDVC9CNT",
        "ts": "1661484638.528359",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VpQUG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Racket is always my go to"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "492bf651-927b-411d-b23e-1f7929b0a52a",
        "type": "message",
        "text": "Which ones are usable from any editor? iirc, some of those have a much better experience from their custom IDE, but I have a hard time giving up my vim bindings",
        "user": "U03LT7540HZ",
        "ts": "1661489125.844419",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nsn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Which ones are usable from any editor? iirc, some of those have a much better experience from their custom IDE, but I have a hard time giving up my vim bindings"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "89e0ecf1-9569-4ac4-b266-a096e9a8a57f",
        "type": "message",
        "text": "Elisp is emacs only. Lisp 1.5 and MAClisp I played with in emulators. RPL is on HP calculators.\n\nSo Scheme and Logo are the ones you can use in any editor.",
        "user": "U03CEGR3HSL",
        "ts": "1661489303.943849",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yU+D3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Elisp is emacs only. Lisp 1.5 and MAClisp I played with in emulators. RPL is on HP calculators.\n\nSo Scheme and Logo are the ones you can use in any editor."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "1f8282ff-626e-45e0-a08b-2cbed01e2e3c",
        "type": "message",
        "text": "I have three favorites: Common Lisp, Racket, and Clojure.\n\nCommon Lisp is standardized, with several implementations optimized for different scenarios. You can even run it interactively on Android. Some implementations provide a decent live programming experience, in combination with a suitable IDE (Emacs + Sly for me).\n\nRacket and Clojure are where innovation in the Lisp universe happens. And yet, both have solid and very usable implementations. Racket is the platform to choose for experimenting with language design (inclusing DSLs), and for access to pretty much all ideas in CS in the form of a huge standard library. Clojure (and ClojureScript) let you use Lisp in contexts where other languages (Java/JavaScript) are dominant players you have to arrange yourself with.",
        "user": "UJBAJNFLK",
        "ts": "1661498442.250079",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1661498665.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CVRz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have three favorites: Common Lisp, Racket, and Clojure.\n\nCommon Lisp is standardized, with several implementations optimized for different scenarios. You can even run it interactively on Android. Some implementations provide a decent live programming experience, in combination with a suitable IDE (Emacs + Sly for me).\n\nRacket and Clojure are where innovation in the Lisp universe happens. And yet, both have solid and very usable implementations. Racket is the platform to choose for experimenting with language design (inclusing DSLs), and for access to pretty much all ideas in CS in the form of a huge standard library. Clojure (and ClojureScript) let you use Lisp in contexts where other languages (Java/JavaScript) are dominant players you have to arrange yourself with."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ",
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U03LT7540HZ",
                    "UMVFWPZ36"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "U03SYASNRFX"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e91673f9-0235-453c-bbf2-2ed2a1a80baa",
        "type": "message",
        "text": "Thanks for the detailed overviews <@UJBAJNFLK>",
        "user": "U03LT7540HZ",
        "ts": "1661503950.382719",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ltgCI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the detailed overviews "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "61e94e5b-711a-4c7c-a32a-f05e0357ef5e",
        "type": "message",
        "text": "I feel like with `LAMBDA`, spreadsheet formulas are pretty much a Lisp? Which would make them my favorite simply because they also happen to be the most inclusive. Add in Coda\u2019s chaining sugar, and that would be pretty much a, uh, sweet spot, IMO, of language expressiveness and readability/writability.",
        "user": "U03PS6X1J14",
        "ts": "1661541701.402129",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rsj7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like with "
                            },
                            {
                                "type": "text",
                                "text": "LAMBDA",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", spreadsheet formulas are pretty much a Lisp? Which would make them my favorite simply because they also happen to be the most inclusive. Add in Coda\u2019s chaining sugar, and that would be pretty much a, uh, sweet spot, IMO, of language expressiveness and readability/writability."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "57FEAB84-FBDD-4F0B-9116-84E8A778EA1C",
        "type": "message",
        "text": "The best Lisp is always your own!  Common Lisp\u2019s `setf` feels overly elaborate.  Scheme is so cleverly non-dynamic and has some weird cons immutability rules.  I guess my dislike of a Lisp is proportional to how well I know it!",
        "user": "UA14TGLTC",
        "ts": "1661598985.183099",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bqAf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The best Lisp is always your own!  Common Lisp\u2019s "
                            },
                            {
                                "type": "text",
                                "text": "setf",
                                "style": {
                                    "bold": false,
                                    "italic": false,
                                    "strike": false,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "f"
                            },
                            {
                                "type": "text",
                                "text": "eels overly elaborate"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "  Scheme is so cleverly non-dynamic and has some weird cons immutability rules"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "  I guess my dislike of a Lisp is proportional to how well I know it!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "ceae18a3-33c4-4f04-8a31-5f69e62aaa80",
        "type": "message",
        "text": "<@UA14TGLTC> Well, then... the best Lisp, the one you make yourself, is also the one you know best and the one you dislike most.",
        "user": "UJBAJNFLK",
        "ts": "1661601107.362999",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ssD9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " Well, then... the best Lisp, the one you make yourself, is also the one you know best and the one you dislike most."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "F81DBAC9-4407-44C1-9353-C661060CE372",
        "type": "message",
        "text": "Checkmate!  :joy:",
        "user": "UA14TGLTC",
        "ts": "1661602109.581609",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FOy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Checkmate!  "
                            },
                            {
                                "type": "emoji",
                                "name": "joy",
                                "unicode": "1f602"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    },
    {
        "client_msg_id": "689c0535-26e1-45bd-9dde-8b1dcdaa0bf8",
        "type": "message",
        "text": "Something with a solid stdlib or ecosystem would be nice. I'd like to be production IRL without needing to rewrite the world",
        "user": "U03LT7540HZ",
        "ts": "1661714181.001949",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "26p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something with a solid stdlib or ecosystem would be nice. I'd like to be production IRL without needing to rewrite the world"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1661481349.386469",
        "parent_user_id": "U03LT7540HZ"
    }
]