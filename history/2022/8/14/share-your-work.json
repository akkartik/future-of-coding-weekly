[
    {
        "client_msg_id": "f81abc9f-eb1f-4e9c-93ea-ffa158cfa8a3",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=24GRiOCa1Vo>\n\nHey all! I want to present the first Alpha release of a project of mine that I've been working on for quite some time - Data Rabbit.  It is a flow-based Clojure(script) live-coding eval/REPL canvas for \"composable\" visual exploration, experimentation, and data observability (yeah, that's a mouthful).\n\nConceptually, it's a a remix of a number of different ideas. Think: Notebook + Whiteboard + Lighttable (with some Smalltalk, Hypercard, Bret Victor &amp; 70s Flow-based Programming influences thrown in). ;)\n\nBasically, think of it like this... it allows the chaining (the \"flow\") of arbitrary ClojureScript eval &amp; Clojure nREPL \"blocks\" that can also compose together into single (and recursive) views - with a heavy focus on visualizing the \"data context\" of the block's edges. Combine that with some handy \"scrubbing\" and editor eval features, and basic code generation helpers for common tasks - and I think it's pretty interesting (but hey, I'm biased).\n\nIt's meant to run on your local machine and saves all flows as flat EDN files. However, the website (<https://datarabbit.com>) is running a special public version that ONLY has CLJS blocks &amp; some fun small examples - but allows loading and saving flow files to/from your browser. So you can play around w/o downloading or running anything (no signing up or logging in - just start hacking). You won't have any of the cool CLJ nREPL block features, but you'll be able to get the general idea hopefully.\n\nThe interface is fairly involved at first glance so please do watch the video before you dive in. I made one video explaining the website hosted version (this one here) where I run though the basic features &amp; controls. There is a second video going up later this week where I go through every part of the self-hosted server version in detail, with a full slide deck, including some neat examples (dashboarding, CLJ nREPs, tech.ml.dataset, incanter, canvas drawing, etc).\n\nAs I said - it's literally \"Alpha 1 / Public Release 1\" so there are bound to be many bugs, UI polish issues, and general wonkiness (although I'm fixing them as I encounter them).\nThanks so much. Hope everyone is having a great weekend.",
        "user": "U036TFVAWJD",
        "ts": "1660441700.275339",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=24GRiOCa1Vo",
                "thumb_url": "https://i.ytimg.com/vi/24GRiOCa1Vo/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/24GRiOCa1Vo?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Data Rabbit - Alpha 1, Quick Intro / Overview (cljs-only version)\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=24GRiOCa1Vo",
                "fallback": "YouTube Video: Data Rabbit - Alpha 1, Quick Intro / Overview (cljs-only version)",
                "title": "Data Rabbit - Alpha 1, Quick Intro / Overview (cljs-only version)",
                "title_link": "https://www.youtube.com/watch?v=24GRiOCa1Vo",
                "author_name": "Ryan Robitaille",
                "author_link": "https://www.youtube.com/c/RyanRobitaille",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KZTf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=24GRiOCa1Vo"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHey all! I want to present the first Alpha release of a project of mine that I've been working on for quite some time - Data Rabbit.  It is a flow-based Clojure(script) live-coding eval/REPL canvas for \"composable\" visual exploration, experimentation, and data observability (yeah, that's a mouthful).\n\nConceptually, it's a a remix of a number of different ideas. Think: Notebook + Whiteboard + Lighttable (with some Smalltalk, Hypercard, Bret Victor & 70s Flow-based Programming influences thrown in). ;)\n\nBasically, think of it like this... it allows the chaining (the \"flow\") of arbitrary ClojureScript eval & Clojure nREPL \"blocks\" that can also compose together into single (and recursive) views - with a heavy focus on visualizing the \"data context\" of the block's edges. Combine that with some handy \"scrubbing\" and editor eval features, and basic code generation helpers for common tasks - and I think it's pretty interesting (but hey, I'm biased).\n\nIt's meant to run on your local machine and saves all flows as flat EDN files. However, the website ("
                            },
                            {
                                "type": "link",
                                "url": "https://datarabbit.com"
                            },
                            {
                                "type": "text",
                                "text": ") is running a special public version that ONLY has CLJS blocks & some fun small examples - but allows loading and saving flow files to/from your browser. So you can play around w/o downloading or running anything (no signing up or logging in - just start hacking). You won't have any of the cool CLJ nREPL block features, but you'll be able to get the general idea hopefully.\n\nThe interface is fairly involved at first glance so please do watch the video before you dive in. I made one video explaining the website hosted version (this one here) where I run though the basic features & controls. There is a second video going up later this week where I go through every part of the self-hosted server version in detail, with a full slide deck, including some neat examples (dashboarding, CLJ nREPs, tech.ml.dataset, incanter, canvas drawing, etc).\n\nAs I said - it's literally \"Alpha 1 / Public Release 1\" so there are bound to be many bugs, UI polish issues, and general wonkiness (although I'm fixing them as I encounter them).\nThanks so much. Hope everyone is having a great weekend."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1660441700.275339",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1660533069.179309",
        "reply_users": [
            "UC2A2ARPT",
            "UK3LH8CF5",
            "U036TFVAWJD",
            "U02E4DAQGSZ"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "U03E4LY27FS",
                    "UC2A2ARPT",
                    "UK3LH8CF5",
                    "U023V63MF6V",
                    "UA14TGLTC",
                    "U02E4DAQGSZ",
                    "U03TX2GT080"
                ],
                "count": 7
            },
            {
                "name": "heart_eyes",
                "users": [
                    "U013ZLJARC7",
                    "U0123H7JRDM",
                    "U02E4DAQGSZ"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "a3d1b554-ed22-49e7-9b73-07ea930b7a08",
        "type": "message",
        "text": "This is incredible work, and an excellent video introduction.",
        "user": "UC2A2ARPT",
        "ts": "1660445104.376019",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Isr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is incredible work, and an excellent video introduction."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1660441700.275339",
        "parent_user_id": "U036TFVAWJD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U036TFVAWJD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "705a8393-875b-4a7c-8d6a-985f6b92a285",
        "type": "message",
        "text": "This is fantastic! As someone who has done a ton clojure data work and built tons of internal devtools/visualizations, I would use this in a heartbeat. The idea of mixing cljs and clj blocks in one canvas is really interesting. Definitely let me know if you are looking for contributors.",
        "user": "UK3LH8CF5",
        "ts": "1660448799.236459",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JE8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is fantastic! As someone who has done a ton clojure data work and built tons of internal devtools/visualizations, I would use this in a heartbeat. The idea of mixing cljs and clj blocks in one canvas is really interesting. Definitely let me know if you are looking for contributors."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1660441700.275339",
        "parent_user_id": "U036TFVAWJD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U036TFVAWJD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "1480a240-17b5-4b91-99ad-249efc780791",
        "type": "message",
        "text": "Thanks so much. I was worried about the video - I just wanted to get it out tonight and after the nth take I was like, ok, this works. Haha.\n\nAs someone whos workflow generally consists of data pulls small and large, random bits of SQL, exploration viz, various counts, small dashboards, etc. I always wanted a tool where I could arrange that as a \"map\" of my travels, lay it out and look at how it reacts to filters/changes - and if I could then arrange those bits into the final result (you know, as I gain an understanding of what it is I am trying to communicate) - even better.\n\nIt's funny, I set out long ago - to make a Clojure-friendly Superset / Data viz type tool - but in order to get the flexibility and freedom I wanted... it ended up kind of like a REPL IDE?\n\nPlus my love for ETL / DAG tools brought in the Flow-Based stuff... and here we are. Haha.",
        "user": "U036TFVAWJD",
        "ts": "1660452764.666869",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M8SUq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks so much. I was worried about the video - I just wanted to get it out tonight and after the nth take I was like, ok, this works. Haha.\n\nAs someone whos workflow generally consists of data pulls small and large, random bits of SQL, exploration viz, various counts, small dashboards, etc. I always wanted a tool where I could arrange that as a \"map\" of my travels, lay it out and look at how it reacts to filters/changes - and if I could then arrange those bits into the final result (you know, as I gain an understanding of what it is I am trying to communicate) - even better.\n\nIt's funny, I set out long ago - to make a Clojure-friendly Superset / Data viz type tool - but in order to get the flexibility and freedom I wanted... it ended up kind of like a REPL IDE?\n\nPlus my love for ETL / DAG tools brought in the Flow-Based stuff... and here we are. Haha."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1660441700.275339",
        "parent_user_id": "U036TFVAWJD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7eedc1c9-1ac9-40d9-83f8-7656f6fce7f0",
        "type": "message",
        "text": "wow that really amazing, Great art style. I love how you can pull data apart by drag slicing. I use Observable a lot which is kinda conceptually similar but this has better graphics and better output treatment. What made me super sticky with Observable is the fact notebooks were ES6 modules and that you could import other notebooks/canvases so you could build up larger abstractions, I hope you will go in that direction too. BTW, firebase works well for providing state, and also I managed to wire up <https://observablehq.com/@tomlarkworthy/redis|Redis>  even from the web. I am curious how easy it is to pull in JS ES6 modules from clojurescript? The tool would very compelling for me personally if I had access to the JS ecosystem.",
        "user": "U02E4DAQGSZ",
        "ts": "1660474438.729099",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1660475098.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BvE0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wow that really amazing, Great art style. I love how you can pull data apart by drag slicing. I use Observable a lot which is kinda conceptually similar but this has better graphics and better output treatment. What made me super sticky with Observable is the fact notebooks were ES6 modules and that you could import other notebooks/canvases so you could build up larger abstractions, I hope you will go in that direction too. BTW, firebase works well for providing state, and also I managed to wire up "
                            },
                            {
                                "type": "link",
                                "url": "https://observablehq.com/@tomlarkworthy/redis",
                                "text": "Redis"
                            },
                            {
                                "type": "text",
                                "text": "  even from the web. I am curious how easy it is to pull in JS ES6 modules from clojurescript? The tool would very compelling for me personally if I had access to the JS ecosystem."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1660441700.275339",
        "parent_user_id": "U036TFVAWJD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U036TFVAWJD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b8d5a63b-1df7-42e7-b2cb-722440ce4612",
        "type": "message",
        "text": "Better video that might resonate w more people less interested in CLJS and more with CLJ work.\n\n<https://www.youtube.com/watch?v=PwzucD5qoD4>",
        "user": "U036TFVAWJD",
        "ts": "1660533069.179309",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=PwzucD5qoD4",
                "thumb_url": "https://i.ytimg.com/vi/PwzucD5qoD4/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/PwzucD5qoD4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Data Rabbit - nREPLs, SQL, JDBC, Viz (Nivo, Vega-lite), Sub-flows\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=PwzucD5qoD4",
                "fallback": "YouTube Video: Data Rabbit - nREPLs, SQL, JDBC, Viz (Nivo, Vega-lite), Sub-flows",
                "title": "Data Rabbit - nREPLs, SQL, JDBC, Viz (Nivo, Vega-lite), Sub-flows",
                "title_link": "https://www.youtube.com/watch?v=PwzucD5qoD4",
                "author_name": "Ryan Robitaille",
                "author_link": "https://www.youtube.com/c/RyanRobitaille",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xc0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Better video that might resonate w more people less interested in CLJS and more with CLJ work.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=PwzucD5qoD4"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1660441700.275339",
        "parent_user_id": "U036TFVAWJD"
    }
]