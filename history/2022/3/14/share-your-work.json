[
    {
        "client_msg_id": "0b9ce36a-7d44-426e-ad0b-94f387874492",
        "type": "message",
        "text": "Along those lines, I have another Clerk demo, this time with interactive animations of physical systems powered by a state of the art ODE solver that lives in the browser.\n\nFor this \u201cviewer\u201d, given a Lagrangian (basically a function from some description of a system =&gt; kinetic minus potential energy, a SCALAR), the viewer is able to figure out how to physically animate the system. This is bonkers stuff.\n\nHere is a Twitter thread with a link to three videos: <https://twitter.com/sritchie/status/1503220063264026629>",
        "user": "U01EHAE9D0W",
        "ts": "1647231396.905019",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://twitter.com/sritchie/status/1503220063264026629",
                "ts": 1647230566,
                "id": 1,
                "original_url": "https://twitter.com/sritchie/status/1503220063264026629",
                "fallback": "<https://twitter.com/sritchie|@sritchie>: Physics in Clojure is coming together!  Here is a demo of  an interactive version of exercise 1.18 from Sussman's Structure and Interpretation of Classical Mechanics: \n\n<https://www.loom.com/share/08a7103f338c437b88ec0fecfcd99922>\n\ncc <https://twitter.com/andy_matuschak|@andy_matuschak>, finally getting somewhere :)\n\n#sicmutils #mathbox #clerk\n\n1/5",
                "text": "Physics in Clojure is coming together!  Here is a demo of  an interactive version of exercise 1.18 from Sussman's Structure and Interpretation of Classical Mechanics: \n\n<https://www.loom.com/share/08a7103f338c437b88ec0fecfcd99922>\n\ncc <https://twitter.com/andy_matuschak|@andy_matuschak>, finally getting somewhere :)\n\n#sicmutils #mathbox #clerk\n\n1/5",
                "author_name": "Sam Ritchie",
                "author_link": "https://twitter.com/sritchie/status/1503220063264026629",
                "author_icon": "https://pbs.twimg.com/profile_images/986276492689604608/g44EhU19_normal.jpg",
                "author_subname": "@sritchie",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eOt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Along those lines, I have another Clerk demo, this time with interactive animations of physical systems powered by a state of the art ODE solver that lives in the browser.\n\nFor this \u201cviewer\u201d, given a Lagrangian (basically a function from some description of a system => kinetic minus potential energy, a SCALAR), the viewer is able to figure out how to physically animate the system. This is bonkers stuff.\n\nHere is a Twitter thread with a link to three videos: "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/sritchie/status/1503220063264026629"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "reply_count": 10,
        "reply_users_count": 4,
        "latest_reply": "1647265460.859729",
        "reply_users": [
            "UJBAJNFLK",
            "U013ZLJARC7",
            "U014WA16VNJ",
            "U01EHAE9D0W"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK",
                    "U014WA16VNJ"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "6ff84107-116a-4c09-aa2e-823e0b43d729",
        "type": "message",
        "text": "Excellent. That's the most convincing demo so far for physicists who don't fundamentally care much about programming. I don't know any platform other than Mathematica that could do this - and you can't really share Mathematica with your students.",
        "user": "UJBAJNFLK",
        "ts": "1647238770.816009",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fTP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excellent. That's the most convincing demo so far for physicists who don't fundamentally care much about programming. I don't know any platform other than Mathematica that could do this - and you can't really share Mathematica with your students."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "282f307c-e6e0-49a3-9ebf-5ea8a454ad97",
        "type": "message",
        "text": "<@UJBAJNFLK> :100: which reminds me that when it first came out I had to un-license key Mathematica (by editing the binary with emacs to NOP the JMP to the license check) because their approach to copy protection broke running the binary over an NFS mount :joy_cat:",
        "user": "U013ZLJARC7",
        "ts": "1647241162.289199",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "blwjG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "100"
                            },
                            {
                                "type": "text",
                                "text": " which reminds me that when it first came out I had to un-license key Mathematica (by editing the binary with emacs to NOP the JMP to the license check) because their approach to copy protection broke running the binary over an NFS mount "
                            },
                            {
                                "type": "emoji",
                                "name": "joy_cat"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            },
            {
                "name": "crying_cat_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "90e8cf90-1312-4f1e-894d-6599b9ef6b17",
        "type": "message",
        "text": "This was super compelling! I\u2019m really interested in the interactive animations and physics here, but I\u2019d actually love to know more about the TeX integration. Is there somewhere I can read more about that? I\u2019ve only done a little Clojure so maybe it\u2019s nothing novel, but goddamn would I love to have tighter TeX integration in my day-to-day work.",
        "user": "U014WA16VNJ",
        "ts": "1647260193.753029",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aIqm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was super compelling! I\u2019m really interested in the interactive animations and physics here, but I\u2019d actually love to know more about the TeX integration. Is there somewhere I can read more about that? I\u2019ve only done a little Clojure so maybe it\u2019s nothing novel, but goddamn would I love to have tighter TeX integration in my day-to-day work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "ddd1c2c5-2cb1-4cb6-b252-313c11f99d24",
        "type": "message",
        "text": "<@U014WA16VNJ> great question; one goal of this project is to NOT present a big monolithic thing, but a fissionable artifact where folks can make off with individual components. SO in that spirit the TeX rendering is definitely independent.\n\nOn the clojure side, there are three main ideas that work together for TeX:\n\n1. <https://github.com/sicmutils/sicmutils|the sicmutils library> ships generic versions of functions like `+`, `-`, `*`, `/,`, all the trig operators, `transpose` , etc etc, and those functions are overloaded for (among other types) numbers and symbolic math. Symbolic math operations simply build up a clojure expression tree, like `(+ (sin x) (expt (cos x) 3))`\n2. the library also contains a powerful simplifier that can transform tree =&gt; simplified tree\u2026\n3. There there is a <https://github.com/sicmutils/sicmutils/blob/main/src/sicmutils/expression/render.cljc#L574-L581|->TeX&gt; function that can turn this expression into a string of TeX. When you use Clerk to show TeX, it uses `-&gt;TeX` and then points katex or mathjax at the resulting string.\nThere are some other fun features of `-&gt;TeX`, like, if a symbol is named after a greek letter it gets shown as greek. `'x_1` , underscores, show up an subscripts, and superscripts work too;",
        "user": "U01EHAE9D0W",
        "ts": "1647260821.627209",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01EHAE9D0W",
            "ts": "1647261058.000000"
        },
        "attachments": [
            {
                "from_url": "https://github.com/sicmutils/sicmutils",
                "image_url": "https://opengraph.githubassets.com/0faa3ef84b1defe8c334767afa962a027f9a5a2aa05df11568766d9f5e4321c5/sicmutils/sicmutils",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 40331,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/sicmutils/sicmutils",
                "fallback": "GitHub: GitHub - sicmutils/sicmutils: Scmutils in Clojure",
                "text": "Scmutils in Clojure. Contribute to sicmutils/sicmutils development by creating an account on GitHub.",
                "title": "GitHub - sicmutils/sicmutils: Scmutils in Clojure",
                "title_link": "https://github.com/sicmutils/sicmutils",
                "service_name": "GitHub"
            },
            {
                "from_url": "https://github.com/sicmutils/sicmutils/blob/main/src/sicmutils/expression/render.cljc#L574-L581",
                "image_url": "https://opengraph.githubassets.com/0faa3ef84b1defe8c334767afa962a027f9a5a2aa05df11568766d9f5e4321c5/sicmutils/sicmutils",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 40331,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 2,
                "original_url": "https://github.com/sicmutils/sicmutils/blob/main/src/sicmutils/expression/render.cljc#L574-L581",
                "fallback": "GitHub: sicmutils/render.cljc at main \u00b7 sicmutils/sicmutils",
                "text": "Scmutils in Clojure. Contribute to sicmutils/sicmutils development by creating an account on GitHub.",
                "title": "sicmutils/render.cljc at main \u00b7 sicmutils/sicmutils",
                "title_link": "https://github.com/sicmutils/sicmutils/blob/main/src/sicmutils/expression/render.cljc#L574-L581",
                "service_name": "GitHub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YhqdF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " great question; one goal of this project is to NOT present a big monolithic thing, but a fissionable artifact where folks can make off with individual components. SO in that spirit the TeX rendering is definitely independent.\n\nOn the clojure side, there are three main ideas that work together for TeX:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://github.com/sicmutils/sicmutils",
                                        "text": "the sicmutils library"
                                    },
                                    {
                                        "type": "text",
                                        "text": " ships generic versions of functions like "
                                    },
                                    {
                                        "type": "text",
                                        "text": "+",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", "
                                    },
                                    {
                                        "type": "text",
                                        "text": "-",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", "
                                    },
                                    {
                                        "type": "text",
                                        "text": "*",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", "
                                    },
                                    {
                                        "type": "text",
                                        "text": "/,",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", all the trig operators, "
                                    },
                                    {
                                        "type": "text",
                                        "text": "transpose",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " , etc etc, and those functions are overloaded for (among other types) numbers and symbolic math. Symbolic math operations simply build up a clojure expression tree, like "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(+ (sin x) (expt (cos x) 3))",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the library also contains a powerful simplifier that can transform tree => simplified tree\u2026"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "There there is a "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://github.com/sicmutils/sicmutils/blob/main/src/sicmutils/expression/render.cljc#L574-L581",
                                        "text": "->TeX"
                                    },
                                    {
                                        "type": "text",
                                        "text": " function that can turn this expression into a string of TeX. When you use Clerk to show TeX, it uses "
                                    },
                                    {
                                        "type": "text",
                                        "text": "->TeX",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and then points katex or mathjax at the resulting string."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThere are some other fun features of "
                            },
                            {
                                "type": "text",
                                "text": "->TeX",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", like, if a symbol is named after a greek letter it gets shown as greek. "
                            },
                            {
                                "type": "text",
                                "text": "'x_1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , underscores, show up an subscripts, and superscripts work too;"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "fb15b360-2b9f-4d5a-86c0-e234f07b2944",
        "type": "message",
        "text": "<@U014WA16VNJ> ACTUALLY check this out: <https://nextjournal.com/try/samritchie/sicmutils/>",
        "user": "U01EHAE9D0W",
        "ts": "1647261067.719389",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://nextjournal.com/try/samritchie/sicmutils/",
                "thumb_url": "https://cdn.nextjournal.com/data/QmWFxLjPwWcNEYj5oWHVNmiNzsRdZT1BQrheLoFSQCxDao?content-type=image%2Fpng",
                "thumb_width": 600,
                "thumb_height": 600,
                "id": 1,
                "original_url": "https://nextjournal.com/try/samritchie/sicmutils/",
                "fallback": "Nextjournal: SICMUtils+Nextjournal Quick Start",
                "text": "This page contains a series of \"Getting Started\" warmup exercises for the SICMUtils Clojure(script) library.",
                "title": "SICMUtils+Nextjournal Quick Start",
                "title_link": "https://nextjournal.com/try/samritchie/sicmutils/",
                "service_name": "Nextjournal"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H=5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " ACTUALLY check this out: "
                            },
                            {
                                "type": "link",
                                "url": "https://nextjournal.com/try/samritchie/sicmutils/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "type": "message",
        "text": "the library can also run in Nextjournal fully in the browser, forget all this hybrid clerk stuff :slightly_smiling_face: scroll down a bit and you can see examples of TeX generation:",
        "files": [
            {
                "id": "F036ZLMGGBW",
                "created": 1647261128,
                "timestamp": 1647261128,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U01EHAE9D0W",
                "editable": false,
                "size": 68533,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F036ZLMGGBW/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F036ZLMGGBW/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F036ZLMGGBW-b768cc542e/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F036ZLMGGBW-b768cc542e/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F036ZLMGGBW-b768cc542e/image_360.png",
                "thumb_360_w": 353,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F036ZLMGGBW-b768cc542e/image_480.png",
                "thumb_480_w": 470,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F036ZLMGGBW-b768cc542e/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F036ZLMGGBW-b768cc542e/image_720.png",
                "thumb_720_w": 706,
                "thumb_720_h": 720,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F036ZLMGGBW-b768cc542e/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 816,
                "original_w": 880,
                "original_h": 898,
                "thumb_tiny": "AwAwAC/SPpkj6Un/AAI0MM9abk/5FADsf7Roxz940gz3NLQA7IoyKbRQAp61GFz6flUh603bg9f0oATb9PypQCO/6Uo/OigAooooAUmgHrQ3b60L1NAC0UUUAFFFFAH/2Q==",
                "permalink": "https://futureofcoding.slack.com/files/U01EHAE9D0W/F036ZLMGGBW/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F036ZLMGGBW-7ba901aaf4",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U01EHAE9D0W",
        "display_as_bot": false,
        "ts": "1647261130.329359",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "If86",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the library can also run in Nextjournal fully in the browser, forget all this hybrid clerk stuff "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " scroll down a bit and you can see examples of TeX generation:"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "576eef7a-b9cf-40e1-a965-24a8b4f5e1bf",
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "662b1986-4c54-4da3-bccb-2fa72507603f",
        "type": "message",
        "text": "<@U014WA16VNJ> if there\u2019s more tuneability you want (almost guaranteed) let\u2019s talk, I fully agree that the ability to write TeX with something more lispy than `\\the{usual}` , without any ceremony, would be REALLY valuable beyond physics etc",
        "user": "U01EHAE9D0W",
        "ts": "1647261174.872729",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EF8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " if there\u2019s more tuneability you want (almost guaranteed) let\u2019s talk, I fully agree that the ability to write TeX with something more lispy than "
                            },
                            {
                                "type": "text",
                                "text": "\\the{usual}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , without any ceremony, would be REALLY valuable beyond physics etc"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "61da623c-1662-4683-b477-8e1b7b6b68f5",
        "type": "message",
        "text": "<@U01EHAE9D0W> this is really really cool! I\u2019m going to have to dig more into this, interested to find out where its limits/weak points are. And yeah, this feels close to something I could write without referencing a cheatsheet and a lot more idiomatic to the actual math I want to represent, instead of being wrapped in typesetting jargon. It also seems like an interesting intermediate representation that would be easier to work with than TeX itself.",
        "user": "U014WA16VNJ",
        "ts": "1647262144.894589",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ReT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01EHAE9D0W"
                            },
                            {
                                "type": "text",
                                "text": " this is really really cool! I\u2019m going to have to dig more into this, interested to find out where its limits/weak points are. And yeah, this feels close to something I could write without referencing a cheatsheet and a lot more idiomatic to the actual math I want to represent, instead of being wrapped in typesetting jargon. It also seems like an interesting intermediate representation that would be easier to work with than TeX itself."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "a6a894b9-f795-4a37-80eb-3fe5a4a14b5a",
        "type": "message",
        "text": ":+1: well let\u2019s keep talking, here or in a Github Discussion on <https://github.com/sicmutils/sicmutils> if a specific project like, for example, \u201cI want to use -&gt;TeX without thinking about Clojure, from this editor\u201d etc comes to mind",
        "user": "U01EHAE9D0W",
        "ts": "1647262353.592659",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ddp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "+1"
                            },
                            {
                                "type": "text",
                                "text": " well let\u2019s keep talking, here or in a Github Discussion on "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/sicmutils/sicmutils"
                            },
                            {
                                "type": "text",
                                "text": " if a specific project like, for example, \u201cI want to use ->TeX without thinking about Clojure, from this editor\u201d etc comes to mind"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2a26fac1-64c3-4c33-9876-4387efaeaa3f",
        "type": "message",
        "text": "This sounds like the beginning of Markdown but for LaTeX. Go ahead!  :slightly_smiling_face:",
        "user": "UJBAJNFLK",
        "ts": "1647265460.859729",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lLyGi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This sounds like the beginning of Markdown but for LaTeX. Go ahead!  "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1647231396.905019",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ",
                    "U01EHAE9D0W"
                ],
                "count": 2
            },
            {
                "name": "slightly_smiling_face",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]