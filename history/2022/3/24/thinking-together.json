[
    {
        "client_msg_id": "392a6c15-20d5-4698-b698-9d1e68ce22f2",
        "type": "message",
        "text": "What are the most interesting uses of outliners you have to share?",
        "user": "UBN9AFS0N",
        "ts": "1648154165.982099",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mjCfH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are the most interesting uses of outliners you have to share?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154165.982099",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1648195100.306929",
        "reply_users": [
            "UCUSW7WVD",
            "UBN9AFS0N"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1648195100.306929"
    },
    {
        "client_msg_id": "1798eb0c-6e07-47d5-9827-96de85c244cd",
        "type": "message",
        "text": "Do you have any example of a UI Widget type created in the last 20 years? (like slider, select, radio button, checkbox, things you would have on a UI builder palette)",
        "user": "UBN9AFS0N",
        "ts": "1648154366.171239",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NiWb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you have any example of a UI Widget type created in the last 20 years? (like slider, select, radio button, checkbox, things you would have on a UI builder palette)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "reply_count": 16,
        "reply_users_count": 5,
        "latest_reply": "1648227744.170469",
        "reply_users": [
            "UC2A2ARPT",
            "UBN9AFS0N",
            "UA14TGLTC",
            "U013ZLJARC7",
            "UDQBTJ211"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1648227744.170469"
    },
    {
        "client_msg_id": "D92D60BF-0B0D-4635-8D8B-6ADB14D391F2",
        "type": "message",
        "text": "How about the combo move-rotate-scale widgets you get in modern 3D apps? First time I saw one was in 3DS Max R3, if memory serves, which would have been roughly 20 years ago.",
        "user": "UC2A2ARPT",
        "ts": "1648158155.832989",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+qYo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How about the combo move-rotate-scale widgets you get in modern 3D apps? First time I saw one was in 3DS Max R3, if memory serves, which would have been roughly 20 years ago."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "E443E1D4-97B0-4479-BB7F-9BCE0E050DB2",
        "type": "message",
        "text": "Also, the type-ahead search + multi select box. I don't remember seeing any of those before the early 00s.",
        "user": "UC2A2ARPT",
        "ts": "1648158194.386369",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PqXB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, the type-ahead search + multi select box. I don't remember seeing any of those before the early 00s."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "3a7d8dd3-2b45-4857-9a2b-e4bb840fe64a",
        "type": "message",
        "text": "the command palette like in superhuman may be  in the type-ahead search family too",
        "user": "UBN9AFS0N",
        "ts": "1648159854.777259",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "treOi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the command palette like in superhuman may be  in the type-ahead search family too"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "2cdd817f-cea7-4fd1-84d1-59e7f698372d",
        "type": "message",
        "text": "You mean like Roam or Org mode (in one of its avatars)?",
        "user": "UCUSW7WVD",
        "ts": "1648160813.103029",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MHqe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You mean like Roam or Org mode (in one of its avatars)?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154165.982099",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "09063519-1d7d-4645-9cc2-9f197f67a669",
        "type": "message",
        "text": "The floating \"create\" button in the bottom right of Google's products probably also counts, even though I hate it and want to refuse to acknowledge that it exists.",
        "user": "UC2A2ARPT",
        "ts": "1648171756.404909",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=cV+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The floating \"create\" button in the bottom right of Google's products probably also counts, even though I hate it and want to refuse to acknowledge that it exists."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "UA14TGLTC",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "cake",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0a541aa9-d5e5-4c11-8224-7abd37594a26",
        "type": "message",
        "text": "The button that only appears when you hover over it?  (I guess those have been around in menus for a lot longer.)",
        "user": "UA14TGLTC",
        "ts": "1648191235.240439",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1OX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The button that only appears when you hover over it?  (I guess those have been around in menus for a lot longer.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "2b9ef35b-0183-482e-997f-084f1097ab6f",
        "type": "message",
        "text": "The command palette is a relatively old pattern, at least dating the late 80s.",
        "user": "U013ZLJARC7",
        "ts": "1648193753.489339",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J/j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The command palette is a relatively old pattern, at least dating the late 80s."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "5d2e87b0-3099-452d-81c2-ece3f8cb227f",
        "type": "message",
        "text": "Hm. There are some I still don't see on UI builders that were developed in the 90s, like pie menus (radial menus in general). There have been some new things in touch interfaces, but they are usually a bit different in character, like: <https://www.schultzschultz.com/touchtype.html>",
        "user": "U013ZLJARC7",
        "ts": "1648193875.560539",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ynhZr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hm. There are some I still don't see on UI builders that were developed in the 90s, like pie menus (radial menus in general). There have been some new things in touch interfaces, but they are usually a bit different in character, like: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.schultzschultz.com/touchtype.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "3e15760f-16ea-4b1e-8e18-6669ba23a741",
        "type": "message",
        "text": "something other than the current \"tool of tought\" markdown/outliner :smile:",
        "user": "UBN9AFS0N",
        "ts": "1648195100.306929",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OU7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "something other than the current \"tool of tought\" markdown/outliner "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154165.982099",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "33e3fcb8-f676-41f5-b9e0-f6581a9c8341",
        "type": "message",
        "text": "Pinch zoom and fling scroll aren't really \"widgets\" but they are major developments in the last 20yrs",
        "user": "UDQBTJ211",
        "ts": "1648208627.304989",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=PA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pinch zoom and fling scroll aren't really \"widgets\" but they are major developments in the last 20yrs"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0160af49-78a7-41a5-9fa1-3d216d4cced7",
        "type": "message",
        "text": "Fling scroll I find interesting because it introduces a new phenomenon (inertia/momentum) into the \"physics\" of the UI.\n\nOld school scrolling now feels quite unnatural and unintuitive to me, although I still don't expect windows themselves to be flingable",
        "user": "UDQBTJ211",
        "ts": "1648208751.945409",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1648208865.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JMv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fling scroll I find interesting because it introduces a new phenomenon (inertia/momentum) into the \"physics\" of the UI.\n\nOld school scrolling now feels quite unnatural and unintuitive to me, although I still don't expect windows themselves to be flingable"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "e21d88d2-2017-42bd-8f46-021bb1608125",
        "type": "message",
        "text": "Likewise, the pull-to-refresh on list views. (The list view would be the UI widget, but the behaviour of it has changed. Not sure how you want to account for that, because the same probably applies to all the prototypical UI elements.)",
        "user": "UC2A2ARPT",
        "ts": "1648222132.482389",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QdcR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Likewise, the pull-to-refresh on list views. (The list view would be the UI widget, but the behaviour of it has changed. Not sure how you want to account for that, because the same probably applies to all the prototypical UI elements.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "e946af12-9e7a-47a9-8a71-412d644c8b67",
        "type": "message",
        "text": "to clarify, I think there has been a lot of innovation in the mobile space in the last 20 years, in terms of responsive UIs, touch, animations and so on, I'm looking for new \"controls\", new visual ways to display and manipulate data.\n\nMy questions comes from a feeling in different areas where I'm not sure if there's stagnation or there's an upper bound in the number of things that can be created in the space (similarly: new visualization/chart types, data manipulation primitives, \"primitive\" data types etc)",
        "user": "UBN9AFS0N",
        "ts": "1648222477.075549",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1648222499.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lntY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "to clarify, I think there has been a lot of innovation in the mobile space in the last 20 years, in terms of responsive UIs, touch, animations and so on, I'm looking for new \"controls\", new visual ways to display and manipulate data.\n\nMy questions comes from a feeling in different areas where I'm not sure if there's stagnation or there's an upper bound in the number of things that can be created in the space (similarly: new visualization/chart types, data manipulation primitives, \"primitive\" data types etc)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0254ad98-fcc2-437e-96a5-8f9adf557ade",
        "type": "message",
        "text": "Someone asked the other day on twitter \"what's the new cool scripting/dynamically typed language\" and it was either wrong responses or crickets. In that case, is some mix of lisp and smalltalk a local or global maxima?",
        "user": "UBN9AFS0N",
        "ts": "1648222596.481969",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pyN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Someone asked the other day on twitter \"what's the new cool scripting/dynamically typed language\" and it was either wrong responses or crickets. In that case, is some mix of lisp and smalltalk a local or global maxima?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "ae74e55e-7056-4c7a-a1a1-228a2c5cf2fa",
        "type": "message",
        "text": "Part of it might also be the mental \"snap to grid\" effect, for lack of a better term, where the existence of a \"good enough\" UI widget means most people won't bother to create something new and different that might be an even better fit for a particular situation.\n\nFor instance, if you want to turn something off and on, you could use:\n\u2022 An \"On\" button that turns into an \"Off\" button, like a toggle or checkbox\n\u2022 Two separate buttons (perhaps segmented), like a radio selector, or a select / pulldown with 2 options\n\u2022 A button that you need to press and hold for \"On\" which reverts to \"Off\" when released, or the same but on hover rather than on press\n\u2022 A box / region that you drag some other object into for \"On\", and drag it back out for \"Off\"\n\u2022 A button that will \"latch\" into the \"On\" state when clicked, which requires a complicated procedure of clicking many other buttons to release the latch and turn it off\nThe first three examples are fairly simple / obvious, and are thus ubiquitous. There are probably other simple / obvious approaches, but probably not many, because the interaction here is really, really simple \u2014 it's a binary off / on. Looking at the real world, it's hard to find examples of a binary off / on control that aren't basically the same as the top 3 bullets. And when they are different, it's usually through some additional elaboration that serves some other purpose than \"make it simple / obvious to turn the thing off / on\", much like the last 2 bullets.",
        "user": "UC2A2ARPT",
        "ts": "1648226929.416679",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U4H6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Part of it might also be the mental \"snap to grid\" effect, for lack of a better term, where the existence of a \"good enough\" UI widget means most people won't bother to create something new and different that might be an even better fit for a particular situation.\n\nFor instance, if you want to turn something off and on, you could use:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "An \"On\" button that turns into an \"Off\" button, like a toggle or checkbox"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Two separate buttons (perhaps segmented), like a radio selector, or a select / pulldown with 2 options"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A button that you need to press and hold for \"On\" which reverts to \"Off\" when released, or the same but on hover rather than on press"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A box / region that you drag some other object into for \"On\", and drag it back out for \"Off\""
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A button that will \"latch\" into the \"On\" state when clicked, which requires a complicated procedure of clicking many other buttons to release the latch and turn it off"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe first three examples are fairly simple / obvious, and are thus ubiquitous. There are probably other simple / obvious approaches, but probably not many, because the interaction here is really, really simple \u2014 it's a binary off / on. Looking at the real world, it's hard to find examples of a binary off / on control that aren't basically the same as the top 3 bullets. And when they are different, it's usually through some additional elaboration that serves some other purpose than \"make it simple / obvious to turn the thing off / on\", much like the last 2 bullets."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "d4ae5e0a-008c-494d-9e1e-ea946a14a07b",
        "type": "message",
        "text": "1D continuous inputs are similar, but allow a fair bit more customization:\n\u2022 Min/max limits (a slider), or infinite (a knob)?\n\u2022 Detents\n\u2022 Nonlinear relationship between input and output\n\u2022 Return-to-initial-position when released\nThere are a lot more things about these that can be customized, especially when you get into the physical world. For instance, a slider that resists motion in one direction but not the other (which recently went mainstream in a software context with the adaptive triggers on the PS5 controller).",
        "user": "UC2A2ARPT",
        "ts": "1648227118.907689",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8wad",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "1D continuous inputs are similar, but allow a fair bit more customization:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Min/max limits (a slider), or infinite (a knob)?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Detents"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Nonlinear relationship between input and output"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Return-to-initial-position when released"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThere are a lot more things about these that can be customized, especially when you get into the physical world. For instance, a slider that resists motion in one direction but not the other (which recently went mainstream in a software context with the adaptive triggers on the PS5 controller)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0af134d8-c8ba-4bca-8b36-a44ea07e0a4e",
        "type": "message",
        "text": "In software, you can add all sorts of elaborations, but any elaboration needs to have some justifiable reason to exist, and that reason needs to be communicated to the user somehow (either out-of-band, or perhaps implicitly through the interaction itself). This is a challenge. So that \"snap to grid\" effect kicks in, and people go with the simple / obvious standards. These standards lack _texture_, but at least they don't impose a new learning curve, they don't reveal new accessibility problems, etc.",
        "user": "UC2A2ARPT",
        "ts": "1648227269.940419",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PP0rs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In software, you can add all sorts of elaborations, but any elaboration needs to have some justifiable reason to exist, and that reason needs to be communicated to the user somehow (either out-of-band, or perhaps implicitly through the interaction itself). This is a challenge. So that \"snap to grid\" effect kicks in, and people go with the simple / obvious standards. These standards lack "
                            },
                            {
                                "type": "text",
                                "text": "texture",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but at least they don't impose a new learning curve, they don't reveal new accessibility problems, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "2dac31bd-0968-45b7-96c6-11cdab8cd37f",
        "type": "message",
        "text": "Unrelated to the above, here's another aspect: we tend to see new UI widgets when there's a new UI paradigm. The 2D GUI is pretty well-explored at this point. 3D GUIs are almost as old, and not as fully explored, but we still see an increasing degree of stability there (ie: look at in-world GUI elements in games and game engines, like beacons/markers, paths, brushes. Also look at the common in-viewport GUI elements in 3D apps, like surface normals, TRS-manipulators, the way verts/edges/faces are depicted, etc.)\n\nWe haven't explored VR nearly enough to reach consensus. Likewise, voice interfaces. Likewise, tangible dynamic media (Dynamicland, Reactable, etc). So if these new paradigms continue to grow and expand in usage, we'll probably eventually see a standard set of interface conventions emerge for them.",
        "user": "UC2A2ARPT",
        "ts": "1648227744.170469",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ND",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unrelated to the above, here's another aspect: we tend to see new UI widgets when there's a new UI paradigm. The 2D GUI is pretty well-explored at this point. 3D GUIs are almost as old, and not as fully explored, but we still see an increasing degree of stability there (ie: look at in-world GUI elements in games and game engines, like beacons/markers, paths, brushes. Also look at the common in-viewport GUI elements in 3D apps, like surface normals, TRS-manipulators, the way verts/edges/faces are depicted, etc.)\n\nWe haven't explored VR nearly enough to reach consensus. Likewise, voice interfaces. Likewise, tangible dynamic media (Dynamicland, Reactable, etc). So if these new paradigms continue to grow and expand in usage, we'll probably eventually see a standard set of interface conventions emerge for them."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1648154366.171239",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UBN9AFS0N",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    }
]