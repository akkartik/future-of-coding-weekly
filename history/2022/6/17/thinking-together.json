[
    {
        "client_msg_id": "2E17C59E-A8D9-4622-B35C-C0A96B52A49C",
        "type": "message",
        "text": "I\u2019m trying to think of a qualifier term for a certain kind of mutability. Mutability as a language construct is well trodden ground, but there\u2019s another kind of mutability that exists at a systems level which isn\u2019t tied to language design or specific language. Things like filenames would fit in this category. These are often to do with naming but there are many cases where the mutating thing is structural, such as filesystem hierarchies, pointers to digital objects (latest X, agreed-upon version of Y, etc).\n\nThis kind of mutability appears more varied and common than the concept in PL, but I don\u2019t want to refer to it as just \u201cmutability\u201d because this could be misleading. \u201cState\u201d is not a sufficient notion either, as this is just referring to the value of a thing in relation to time.\n\nI\u2019m doing some work on \u201cMutability as Governance\u201d which argues that mutability (at least the kind I refer to here) is best understood as a digital governance problem, as it necessarily involves coordination between multiple systems in ways that mutability within a single language does not. Even pure functional languages interact with a stateful environment and require mutability in this sense (e.g. naming and structuring of source files)\n\nTerms like systemic/emergent mutability, inter-systemic mutability, or multi-party mutability have popped up but I don\u2019t know if these really do a good job.",
        "user": "U014WA16VNJ",
        "ts": "1655478852.927679",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1655479311.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ti5=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m trying to think of a qualifier term for a certain kind of mutability. Mutability as a language construct is well trodden ground, but there\u2019s another kind of mutability that exists at a systems level which isn\u2019t tied to language design or specific language. Things like filenames would fit in this category. These are often to do with naming but there are many cases where the mutating thing is structural, such as filesystem hierarchies, pointers to digital objects (latest X, agreed-upon version of Y, etc)."
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "This kind of mutability appears more varied and common than the concept in PL, but I don\u2019t want to refer to it as just \u201cmutability\u201d because this could be misleading. \u201cState\u201d is not a sufficient notion either, as this is just referring to the value of a thing in relation to time."
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I\u2019m doing some work on \u201cMutability as Governance\u201d which argues that mutability (at least the kind I refer to here) is best understood as a digital governance problem, as it necessarily involves coordination between multiple systems in ways that mutability within a single language does not."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "Even"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "pure"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "functional"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "languages"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "interact"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "with"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " state"
                            },
                            {
                                "type": "text",
                                "text": "ful"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "environment"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "require"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "mutability"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "this"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "sense"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "(e.g."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "naming"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "structuring"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "of"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "source"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "files)"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Terms like systemic/emergent mutability, inter-systemic mutability, or multi-party mutability have popped up but I don\u2019t know if these really do a good job."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "reply_count": 33,
        "reply_users_count": 9,
        "latest_reply": "1655682651.406419",
        "reply_users": [
            "U03CEGR3HSL",
            "UDQBTJ211",
            "U02E4DAQGSZ",
            "U03E4LY27FS",
            "U014WA16VNJ",
            "U03DNFDFYDA",
            "UJBAJNFLK",
            "U016VUZGUUQ",
            "UCGAK10LS"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "a2785dfd-16fc-4544-aea9-6e036ea8ce7e",
        "type": "message",
        "text": "Shared persistent state?",
        "user": "U03CEGR3HSL",
        "ts": "1655481013.350399",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yyH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Shared persistent state?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "1d24c355-36b9-4e7c-995a-d3c3eca1e89e",
        "type": "message",
        "text": "Mutable identifier?",
        "user": "UDQBTJ211",
        "ts": "1655482063.536349",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BwGXI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mutable identifier?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "fe685913-799c-4711-9a1a-5727fa44d356",
        "type": "message",
        "text": "resources? I think of them as abstract representations of something external and real. They are mutable, but in a limited way and they can change behind your back",
        "user": "U02E4DAQGSZ",
        "ts": "1655482273.956679",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+ky",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "resources? I think of them as abstract representations of something external and real. They are mutable, but in a limited way and they can change behind your back"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "247f981c-3e22-4218-92c7-eb639188b381",
        "type": "message",
        "text": "Environment? Outside world?",
        "user": "U03CEGR3HSL",
        "ts": "1655483497.912309",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/7e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Environment? Outside world?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "EF637298-BB7F-4916-94C9-CA78496C93A2",
        "type": "message",
        "text": "I might vote for environment actually, or a very very close synonym to it. That word bakes into itself the notion of an area or idea space in which entities interact, and such interactions are by definition mutations on the environment and sometimes themselves.",
        "user": "U03E4LY27FS",
        "ts": "1655490641.789609",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03E4LY27FS",
            "ts": "1655490668.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w=04",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I might vote for environment actually, or a very very close synonym to it. That word bakes into itself the notion of an area or idea space in which entities interact, and such interactions are by definition mutations on the environment and sometimes themselves."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "371649C8-9122-403D-92E0-FD943D09A43D",
        "type": "message",
        "text": "\u201cEnvironmental mutations\u201d compared to \u201clocalized mutations\u201d",
        "user": "U03E4LY27FS",
        "ts": "1655490711.213349",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AccU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\u201c"
                            },
                            {
                                "type": "text",
                                "text": "Environment"
                            },
                            {
                                "type": "text",
                                "text": "al"
                            },
                            {
                                "type": "text",
                                "text": " mutation"
                            },
                            {
                                "type": "text",
                                "text": "s\u201d"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "compared"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "\u201clocalized"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "mutations\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "7A6A0D4E-2D42-4BA0-9242-B5B22058B944",
        "type": "message",
        "text": "Environment feels close in a sense. I think when referring to the \u2018space\u2019 in which these mutations occur it's entirely the right term. But what about the things that are being mutated in the environment? \n\nIt's hard to find terms when many of these words are already overloaded. \u201cShared state\u201d isn't far off in meaning but points to the thing being shared rather than the shared role of mutating that state.",
        "user": "U014WA16VNJ",
        "ts": "1655491596.806759",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1655491792.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8x4s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Environment feels close in a sense. I think when referring to the \u2018space\u2019 in which these mutations occur it's entirely the right term. But what about the things that are being mutated in the environment? "
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "It's hard to find terms when many of these words are already overloaded."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "\u201c"
                            },
                            {
                                "type": "text",
                                "text": "Share"
                            },
                            {
                                "type": "text",
                                "text": "d"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "state\u201d"
                            },
                            {
                                "type": "text",
                                "text": " isn't "
                            },
                            {
                                "type": "text",
                                "text": "far"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "off"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " meaning "
                            },
                            {
                                "type": "text",
                                "text": "but"
                            },
                            {
                                "type": "text",
                                "text": " points "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "thing"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "being"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "shared"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "rather"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "than"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "shared"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "role"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "of"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "mutating"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "that"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "state."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "B43C4E7F-1E9F-4AE8-B7D7-9954F6C6C85D",
        "type": "message",
        "text": "I do like \u201cenvironmental mutations\u201d but I fear this would be misinterpreted outside of communities like this one. How does \u201cshared/mutations/mutability\u201d sound? ",
        "user": "U014WA16VNJ",
        "ts": "1655491928.184069",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UVPfZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "do"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "like"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "\u201cenvironmental"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "mutations\u201d"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "but"
                            },
                            {
                                "type": "text",
                                "text": " I "
                            },
                            {
                                "type": "text",
                                "text": "fear"
                            },
                            {
                                "type": "text",
                                "text": " this would "
                            },
                            {
                                "type": "text",
                                "text": "be"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "misinterpreted"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "outside"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "of"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "communities"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "like"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "this"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "one."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "How"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "does"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "\u201cshared/mutations/mutability\u201d"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "sound?"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "734c2d63-3aa9-41d1-a70c-40d295b06b8d",
        "type": "message",
        "text": "Environmental state?",
        "user": "U03CEGR3HSL",
        "ts": "1655492471.785659",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fiCns",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Environmental state?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "6953401B-85BE-4992-87E6-CCE6A6BA6FBA",
        "type": "message",
        "text": "Environment entities / environment mutations / entity mutations seems like a cool trifecta.\n\nThe problem with language is that it's _always_ contextual, there's no way to perfectly communicate an intended meaning without it, or to keep it from being misunderstood in a different context\u2026\n\nUnless you're a heptopod. And if you are a heptopod like I now believe you to be, please teach me your alien circle language.",
        "user": "U03E4LY27FS",
        "ts": "1655493019.890059",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J5aQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Environment "
                            },
                            {
                                "type": "text",
                                "text": "entities"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "/"
                            },
                            {
                                "type": "text",
                                "text": " environment "
                            },
                            {
                                "type": "text",
                                "text": "mutations"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "/"
                            },
                            {
                                "type": "text",
                                "text": " entity "
                            },
                            {
                                "type": "text",
                                "text": "mutations"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "seems"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "like"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "cool"
                            },
                            {
                                "type": "text",
                                "text": " trifecta"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "The"
                            },
                            {
                                "type": "text",
                                "text": " problem "
                            },
                            {
                                "type": "text",
                                "text": "with"
                            },
                            {
                                "type": "text",
                                "text": " langu"
                            },
                            {
                                "type": "text",
                                "text": "age"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "is"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "that"
                            },
                            {
                                "type": "text",
                                "text": " it's "
                            },
                            {
                                "type": "text",
                                "text": "always",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " contextual"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " there's "
                            },
                            {
                                "type": "text",
                                "text": "no"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "way"
                            },
                            {
                                "type": "text",
                                "text": " to perfectly communicate "
                            },
                            {
                                "type": "text",
                                "text": "an"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "intended"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "meaning"
                            },
                            {
                                "type": "text",
                                "text": " without "
                            },
                            {
                                "type": "text",
                                "text": "it,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "or"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "keep"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "it"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "from"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "being"
                            },
                            {
                                "type": "text",
                                "text": " misunderstood "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " different context"
                            },
                            {
                                "type": "text",
                                "text": "\u2026"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Unless"
                            },
                            {
                                "type": "text",
                                "text": " you're "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "heptopod."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "And"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "if"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "you"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "are"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "heptopod"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "like"
                            },
                            {
                                "type": "text",
                                "text": " I "
                            },
                            {
                                "type": "text",
                                "text": "now"
                            },
                            {
                                "type": "text",
                                "text": " believe "
                            },
                            {
                                "type": "text",
                                "text": "you"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "be,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "please"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "teach"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "me"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "your"
                            },
                            {
                                "type": "text",
                                "text": " alien "
                            },
                            {
                                "type": "text",
                                "text": "circle"
                            },
                            {
                                "type": "text",
                                "text": " language"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "A587C167-C7DD-475C-8581-AE185ED88B81",
        "type": "message",
        "text": "<@U03E4LY27FS> literally watched Arrival again last night :smile:",
        "user": "U014WA16VNJ",
        "ts": "1655493286.250049",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X11c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03E4LY27FS"
                            },
                            {
                                "type": "text",
                                "text": " literally"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "watched"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "Arrival"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "again"
                            },
                            {
                                "type": "text",
                                "text": " last "
                            },
                            {
                                "type": "text",
                                "text": "night"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "sparkles",
                "users": [
                    "U03E4LY27FS"
                ],
                "count": 1
            },
            {
                "name": "rocket",
                "users": [
                    "U03E4LY27FS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "C30DA2F7-5B03-4176-920E-357E49F2BA6D",
        "type": "message",
        "text": "There's no heptopod emoji and this saddens me.",
        "user": "U03E4LY27FS",
        "ts": "1655493612.290969",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PjQez",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's "
                            },
                            {
                                "type": "text",
                                "text": "no"
                            },
                            {
                                "type": "text",
                                "text": " heptopod "
                            },
                            {
                                "type": "text",
                                "text": "emoji"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " this "
                            },
                            {
                                "type": "text",
                                "text": "saddens"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "me."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "1571CA0F-856D-46B5-87AB-882FFFF30EC0",
        "type": "message",
        "text": ":foot::foot::foot::foot::foot::foot::foot:doesn't count.",
        "user": "U03E4LY27FS",
        "ts": "1655493690.396389",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s2U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "foot",
                                "unicode": "1f9b6"
                            },
                            {
                                "type": "emoji",
                                "name": "foot",
                                "unicode": "1f9b6"
                            },
                            {
                                "type": "emoji",
                                "name": "foot",
                                "unicode": "1f9b6"
                            },
                            {
                                "type": "emoji",
                                "name": "foot",
                                "unicode": "1f9b6"
                            },
                            {
                                "type": "emoji",
                                "name": "foot",
                                "unicode": "1f9b6"
                            },
                            {
                                "type": "emoji",
                                "name": "foot",
                                "unicode": "1f9b6"
                            },
                            {
                                "type": "emoji",
                                "name": "foot",
                                "unicode": "1f9b6"
                            },
                            {
                                "type": "text",
                                "text": "doesn't "
                            },
                            {
                                "type": "text",
                                "text": "count."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "ed9caad8-51c7-43b2-8dfc-dbdec34166e4",
        "type": "message",
        "text": "Organization is often orthogonal to content, e.g. think of pruning entities from one place in a hierarchy and grafting them to another\u2026 Sometimes you don\u2019t want to call that a change in the entity itself, but rather in whatever you\u2019re using to represent the hierarchy",
        "user": "U03DNFDFYDA",
        "ts": "1655494330.995479",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I2TPL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Organization is often orthogonal to content, e.g. think of pruning entities from one place in a hierarchy and grafting them to another\u2026 Sometimes you don\u2019t want to call that a change in the entity itself, but rather in whatever you\u2019re using to represent the hierarchy"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "2b3f34ab-77f6-4b9e-b8e0-7ef0257775b1",
        "type": "message",
        "text": "We don\u2019t usually think about organization in such abstract terms, but there\u2019s another layer here: some kinds of organization need to be persistent but have no semantic weight, e.g. moving stuff around on a 2D canvas so they\u2019re easier to understand",
        "user": "U03DNFDFYDA",
        "ts": "1655494418.683039",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QJMo1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We don\u2019t usually think about organization in such abstract terms, but there\u2019s another layer here: some kinds of organization need to be persistent but have no semantic weight, e.g. moving stuff around on a 2D canvas so they\u2019re easier to understand"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "df239287-0673-4201-aa27-a88d81c2e09c",
        "type": "message",
        "text": "OTOH if you\u2019re putting stuff in folders, or adding/removing tags, you\u2019re pretty likely to want to write access control policies that depend on those organizational concepts",
        "user": "U03DNFDFYDA",
        "ts": "1655494465.108879",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qVA1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OTOH if you\u2019re putting stuff in folders, or adding/removing tags, you\u2019re pretty likely to want to write access control policies that depend on those organizational concepts"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "f1e52119-eeee-4a5b-8b55-ebf0bb3df727",
        "type": "message",
        "text": "Somewhere in the middle you can have abstract containers that have a natural spatial representation, like nesting collapsible boxes",
        "user": "U03DNFDFYDA",
        "ts": "1655494502.678579",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bwK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Somewhere in the middle you can have abstract containers that have a natural spatial representation, like nesting collapsible boxes"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "ae58bf4c-ba80-432c-aed0-0d2487b2f9ba",
        "type": "message",
        "text": "Often those containers evolve to have semantic weight, not just organizational utility, e.g. setting defaults/overrides in a parent context that are inherited by descendants",
        "user": "U03DNFDFYDA",
        "ts": "1655494948.943759",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03DNFDFYDA",
            "ts": "1655494961.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZtT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Often those containers evolve to have semantic weight, not just organizational utility, e.g. setting defaults/overrides in a parent context that are inherited by descendants"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "2f380568-4f5f-4350-9fa5-3e06697b80fa",
        "type": "message",
        "text": "Tying it back to governance, there\u2019s definitely some complexity for authorization of organizational changes. It\u2019s reasonable for us to follow the Unix pattern, and say that moving an entity from `/a/b` to `/b/c` should require read+traverse permissions on `/a`, `/b`, `/a/b` and `/b/c` , and write on `/a/b` (to remove a child) and `/b/c` (to add a child) but if the entity itself is merely being moved, not being modified, should we also require that the user have some permission scoped to the entity itself? My intuition says yes, but it doesn\u2019t fit cleanly into the Unix pattern. :sweat_smile:",
        "user": "U03DNFDFYDA",
        "ts": "1655495179.538909",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03DNFDFYDA",
            "ts": "1655495213.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p2Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tying it back to governance, there\u2019s definitely some complexity for authorization of organizational changes. It\u2019s reasonable for us to follow the Unix pattern, and say that moving an entity from "
                            },
                            {
                                "type": "text",
                                "text": "/a/b",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to "
                            },
                            {
                                "type": "text",
                                "text": "/b/c",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " should require read+traverse permissions on "
                            },
                            {
                                "type": "text",
                                "text": "/a",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "/b",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "/a/b",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "/b/c",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , and write on "
                            },
                            {
                                "type": "text",
                                "text": "/a/b",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (to remove a child) and "
                            },
                            {
                                "type": "text",
                                "text": "/b/c",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (to add a child) but if the entity itself is merely being moved, not being modified, should we also require that the user have some permission scoped to the entity itself? My intuition says yes, but it doesn\u2019t fit cleanly into the Unix pattern. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "2994f849-cea1-4dc5-a569-8668f7fb92c0",
        "type": "message",
        "text": "Social shared state? Consensus mutability? It seems to me that the key point is that mutation requires an agreement between humans (or groups), rather than an algorithmic effect as in programming languages.",
        "user": "UJBAJNFLK",
        "ts": "1655496990.797279",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o/H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Social shared state? Consensus mutability? It seems to me that the key point is that mutation requires an agreement between humans (or groups), rather than an algorithmic effect as in programming languages."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c04ef364-baba-4c47-927c-87acdb30303b",
        "type": "message",
        "text": "I'm not sure what's being discussed. Are we talking about \"mutating\" organizational structures, e.g. renaming files, changing directory structure and analogous operations in non-unix environments? Inner tree modifications as opposed to leaves? It sounds like you're trying to name something more general than that.\n\nEd: \"access path mutability\"? Fwiw I think of these kind of access schemas as \"ontologies\", so \"ontological mutability\" makes sense to me, but possibly _only_ to me...",
        "user": "U016VUZGUUQ",
        "ts": "1655500873.965599",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U016VUZGUUQ",
            "ts": "1655507195.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "idkl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure what's being discussed. Are we talking about \"mutating\" organizational structures, e.g. renaming files, changing directory structure and analogous operations in non-unix environments? Inner tree modifications as opposed to leaves? It sounds like you're trying to name something more general than that.\n\nEd: \"access path mutability\"? Fwiw I think of these kind of access schemas as \"ontologies\", so \"ontological mutability\" makes sense to me, but possibly "
                            },
                            {
                                "type": "text",
                                "text": "only",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to me..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "7dfd57da-8589-4e6b-a3d3-eba311736fef",
        "type": "message",
        "text": "Another enterprisey angle here: the users who are authorized to edit/author things are often not authorized to commit them; there needs to be an approval workflow, where an admin shows up and approves the proposed change so it can go live. This points to a need for versioning, so users can save their work in progress\u2026",
        "user": "U03DNFDFYDA",
        "ts": "1655500957.556739",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0vXLo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another enterprisey angle here: the users who are authorized to edit/author things are often not authorized to commit them; there needs to be an approval workflow, where an admin shows up and approves the proposed change so it can go live. This points to a need for versioning, so users can save their work in progress\u2026"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "3518b08c-e591-4317-88ab-e64c26e9027d",
        "type": "message",
        "text": "It\u2019s tempting to pre-disqualify yourself by saying \u201coh, my thing isn\u2019t for big companies\u201d but the products people actually use and like often end up getting adopted inside companies. People start out sharing a single account, then they want to have a team of people who can author and collaborate independently\u2026",
        "user": "U03DNFDFYDA",
        "ts": "1655501153.176279",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1rO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s tempting to pre-disqualify yourself by saying \u201coh, my thing isn\u2019t for big companies\u201d but the products people actually use and like often end up getting adopted inside companies. People start out sharing a single account, then they want to have a team of people who can author and collaborate independently\u2026"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "8f3d6121-9633-44a4-bd90-2ccdac2be238",
        "type": "message",
        "text": "You don\u2019t need to invest in all the enterprisey stuff early, but it\u2019s often a good idea to keep it in mind :sweat_smile:",
        "user": "U03DNFDFYDA",
        "ts": "1655501189.075109",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bEQ9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You don\u2019t need to invest in all the enterprisey stuff early, but it\u2019s often a good idea to keep it in mind "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "fb373544-ca36-4058-a3cd-6bee3e7651ee",
        "type": "message",
        "text": "(re authorization: I'd say that points more directly toward having patches/diffs as a first-class concept. I'm not even sure if that's a tangent or the heart of the question, but it's a pretty broadly applicable idea so I'm pretty confident putting it forward despite not knowing exactly what layer of abstraction we're talking about.)",
        "user": "U016VUZGUUQ",
        "ts": "1655501508.506189",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=oun",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(re authorization: I'd say that points more directly toward having patches/diffs as a first-class concept. I'm not even sure if that's a tangent or the heart of the question, but it's a pretty broadly applicable idea so I'm pretty confident putting it forward despite not knowing exactly what layer of abstraction we're talking about.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "668f013e-fd4e-468a-a472-42c5715ebbd5",
        "type": "message",
        "text": "There was at least one thread about collaborative editing recently too, It\u2019s Complicated\u2122",
        "user": "U03DNFDFYDA",
        "ts": "1655501580.463359",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jsIJw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There was at least one thread about collaborative editing recently too, It\u2019s Complicated\u2122"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "11dbdc8f-3d76-40b2-9562-fe615512e936",
        "type": "message",
        "text": "So many dimensions!\n\u2022 Would this proposed change be valid if executed in isolation?\n\u2022 Is the party proposing this change authorized to do so? If so, when/how should it be merged/committed?\n\u2022 Does this proposed change conflict with any others that are ongoing? Can those conflicts be resolved automatically in a way that would satisfy most users?\n\u2022 If this proposal fails, whether due to a validation problem, an edit conflict, or an authorization failure, does the user have to redo a lot of work?\n\u2022 Should this proposed change, once committed, be scheduled to go live at a particular time? Are there parallel changes in collaborating components that need to be rolled out in a coordinated way? \u2014 this sounds like I\u2019m talking about code changes, but it applies to end user configurations, if the product is something like a data platform :sweat_smile: ",
        "user": "U03DNFDFYDA",
        "ts": "1655501850.044449",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HM1=3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So many dimensions!\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Would this proposed change be valid if executed in isolation?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Is the party proposing this change authorized to do so? If so, when/how should it be merged/committed?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Does this proposed change conflict with any others that are ongoing? Can those conflicts be resolved automatically in a way that would satisfy most users?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If this proposal fails, whether due to a validation problem, an edit conflict, or an authorization failure, does the user have to redo a lot of work?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Should this proposed change, once committed, be scheduled to go live at a particular time? Are there parallel changes in collaborating components that need to be rolled out in a coordinated way? \u2014 this sounds like I\u2019m talking about code changes, but it applies to end user configurations, if the product is something like a data platform "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "sweat_smile",
                                        "unicode": "1f605"
                                    },
                                    {
                                        "type": "text",
                                        "text": " "
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "dac06c89-b43d-4b21-a0e5-4adb30258e4a",
        "type": "message",
        "text": "<@U014WA16VNJ> Personally I'm not sure that the distinction you propose between \"mutation of variables\" and \"mutation of files/metadata\" is \"real\". Or said another way: I'm not sure that there is any _essential_ distinction between the state of a program and the state of a file system. My personal suspicion is that this distinction has been entirely fabricated by humans, and in an alternate timeline we could have had a unified data model that spans programming languages, operating systems, and distributed systems. If this suspicion is true, then it implies you're trying to come up with two names for a singular concept: mutation/state transition.",
        "user": "UCGAK10LS",
        "ts": "1655510983.013739",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1655511507.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BCeG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " Personally I'm not sure that the distinction you propose between \"mutation of variables\" and \"mutation of files/metadata\" is \"real\". Or said another way: I'm not sure that there is any "
                            },
                            {
                                "type": "text",
                                "text": "essential",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " distinction between the state of a program and the state of a file system. My personal suspicion is that this distinction has been entirely fabricated by humans, and in an alternate timeline we could have had a unified data model that spans programming languages, operating systems, and distributed systems. If this suspicion is true, then it implies you're trying to come up with two names for a singular concept: mutation/state transition."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "0C719204-06E6-4147-B979-20AA37FD6A38",
        "type": "message",
        "text": "<@UCGAK10LS> I agree it is an informal distinction, and I would love to see that alternate timeline!\nMy reasons for finding a qualifier are to better communicate the connection between mutability and governance, which I\u2019ve found to be more clear when constraining the examples to ones where coordination among multiple systems/agents/people/programs is clearly necessary, even though ultimately I think my argument holds for all forms of mutation in sometimes less trivial ways. ",
        "user": "U014WA16VNJ",
        "ts": "1655641730.369999",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gIH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "agree"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "it"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "is"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "an"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "informal"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "distinction,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "would"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "love"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "see"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "that"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "alternate"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "timeline!"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "My"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "reasons"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "for"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "finding"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "qualifier"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "are"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "better"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "communicate"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "connection"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "between"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "mutability"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "governance,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "which"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I\u2019ve"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "found"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "be"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "more"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "clear"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "when"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "constraining"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "examples"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "ones"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "where"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "coordination"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "among"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "multiple"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "systems/agents/people/programs"
                            },
                            {
                                "type": "text",
                                "text": " i"
                            },
                            {
                                "type": "text",
                                "text": "s"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "clearly"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "necessary, even though"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "ultimately"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "think"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "my"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "argument"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "holds"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "for"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "all"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "forms"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "of"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "mutation"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "sometimes"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "less"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "trivial"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "ways."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "64d61cea-f6a4-4c21-bce5-9513f5191799",
        "type": "message",
        "text": "Perhaps \"shared-metadata mutability\".\n\nAlthough I think authorization is going to be a critical corollary of whatever definition you come up with, if it's not actually part of it. In a single-node/single-actor context, the closest thing to authorization is the type system, so you can get away with ignoring it. It's in the multi-actor context where you start having \"governance\" problems (if I'm understanding your usage correctly), and it's also right about where authorization starts sneaking (almost subconsciously) into our concept of \"changing things\"; that is, authorization starts to play a role at just about the same place on the scale axis of mutability as the (beginning of) the interval on that axis that you're trying to name. Again, all assuming that I'm on the same page as you, which I'm still not 100% sure of...",
        "user": "U016VUZGUUQ",
        "ts": "1655666884.838239",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U016VUZGUUQ",
            "ts": "1655666936.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qWP5R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps \"shared-metadata mutability\".\n\nAlthough I think authorization is going to be a critical corollary of whatever definition you come up with, if it's not actually part of it. In a single-node/single-actor context, the closest thing to authorization is the type system, so you can get away with ignoring it. It's in the multi-actor context where you start having \"governance\" problems (if I'm understanding your usage correctly), and it's also right about where authorization starts sneaking (almost subconsciously) into our concept of \"changing things\"; that is, authorization starts to play a role at just about the same place on the scale axis of mutability as the (beginning of) the interval on that axis that you're trying to name. Again, all assuming that I'm on the same page as you, which I'm still not 100% sure of..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "aa739c05-2ab7-4148-a9cc-168e94c73781",
        "type": "message",
        "text": "I think things like file contents are just data, not metadata.  Shared-data mutability?",
        "user": "U03CEGR3HSL",
        "ts": "1655669346.378149",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RkK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think things like file contents are just data, not metadata.  Shared-data mutability?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "6d6452a4-77c9-49ac-a507-bd2e273a938b",
        "type": "message",
        "text": "Correct, we're mostly ignoring file contents. That's much more garden-variety mutability.",
        "user": "U016VUZGUUQ",
        "ts": "1655669814.349079",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dWu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Correct, we're mostly ignoring file contents. That's much more garden-variety mutability."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "5b719a33-f7a2-4b92-97d5-bd1e7fc53446",
        "type": "message",
        "text": "<@U014WA16VNJ> That makes sense to me. If you merely want to make a distinction between \"single agent\" mutation and \"distributed\" mutation, then you might like one of these dichotomies:\n\u2022 [local/solitary] mutation &lt;--&gt; [coordinated/distributed] mutation\n\u2022 [local/solitary] state transition &lt;--&gt; [coordinated/distributed] state transition\nOr to be even more succinct: the term \"coordination\" (used standalone_)_ is essentially a synonym for \"distributed state transition\". The sole purpose of coordination is to get multiple agents to agree on some kind of \"state\", at which point they all transition their models of the world to reflect that state. (The term \"consensus\" is also used for this, but it refers to the outcome moreso than the process.)\n\nIf you want to refer to situations where there is a *power imbalance*, e.g. the operating system has the privilege to store persistent state, but the user does not, these terms won't cover it. You might want to use terms like \"ownership\", \"privilege\", and \"permissions\". Coordination becomes \"requesting\".",
        "user": "UCGAK10LS",
        "ts": "1655682651.406419",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1655683918.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ejxoc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " That makes sense to me. If you merely want to make a distinction between \"single agent\" mutation and \"distributed\" mutation, then you might like one of these dichotomies:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "[local/solitary] mutation <--> [coordinated/distributed] mutation"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "[local/solitary] state transition <--> [coordinated/distributed] state transition"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOr to be even more succinct: the term \"coordination\" (used standalone"
                            },
                            {
                                "type": "text",
                                "text": ")",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is essentially a synonym for \"distributed state transition\". The sole purpose of coordination is to get multiple agents to agree on some kind of \"state\", at which point they all transition their models of the world to reflect that state. (The term \"consensus\" is also used for this, but it refers to the outcome moreso than the process.)\n\nIf you want to refer to situations where there is a "
                            },
                            {
                                "type": "text",
                                "text": "power imbalance",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", e.g. the operating system has the privilege to store persistent state, but the user does not, these terms won't cover it. You might want to use terms like \"ownership\", \"privilege\", and \"permissions\". Coordination becomes \"requesting\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1655478852.927679",
        "parent_user_id": "U014WA16VNJ"
    }
]