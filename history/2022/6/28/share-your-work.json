[
    {
        "client_msg_id": "41ec599f-041c-4a2c-9285-14f189166131",
        "type": "message",
        "text": "Hello all, I have been building a visual editor for compound graph datasets: <https://grapheralpha.netlify.app/>\n\nCompound graphs are those where nodes have two kinds of connections: Adjacency and Inclusion. I.e. A node can be a child of another node - in addition to having other kind of edges.\nCytoscape JS is great at visualizing such graphs, but I couldn\u2019t find a visual editor for these kind of datasets. This is NOT a diagram-editor for which there are plenty of choices (like TLDraw or Excalidraw).\n\nThis is built with SVG and Svelte and works completely in the browser. I will be open-sourcing it in the coming weeks.",
        "user": "U018S42NMMM",
        "ts": "1656411983.331459",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OShLJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello all, I have been building a visual editor for compound graph datasets: "
                            },
                            {
                                "type": "link",
                                "url": "https://grapheralpha.netlify.app/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nCompound graphs are those where nodes have two kinds of connections: Adjacency and Inclusion. I.e. A node can be a child of another node - in addition to having other kind of edges.\nCytoscape JS is great at visualizing such graphs, but I couldn\u2019t find a visual editor for these kind of datasets. This is NOT a diagram-editor for which there are plenty of choices (like TLDraw or Excalidraw).\n\nThis is built with SVG and Svelte and works completely in the browser. I will be open-sourcing it in the coming weeks."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656411983.331459",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1656584105.060949",
        "reply_users": [
            "U016VUZGUUQ",
            "UKJGU23KP",
            "U018S42NMMM"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UCUSW7WVD",
                    "U02LHNW0VLP",
                    "U02E4DAQGSZ",
                    "UU509GSBU",
                    "U85HCL7JP"
                ],
                "count": 6
            }
        ]
    },
    {
        "client_msg_id": "feb87018-cee4-4469-8fee-00562af6e1db",
        "type": "message",
        "text": "Interesting. So a compound graph is to a statechart/HFSM as a regular graph is to an FSM?",
        "user": "U016VUZGUUQ",
        "ts": "1656438768.838599",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DRS9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. So a compound graph is to a statechart/HFSM as a regular graph is to an FSM?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656411983.331459",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "5AA4F58B-94B3-4BD2-A1D0-740C95BC68D4",
        "type": "message",
        "text": "Interesting. Is it currently impossible to move a node out of its containing node (to fix a mistake, for instance).",
        "user": "UKJGU23KP",
        "ts": "1656513151.492839",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fGZH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "Is"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "it"
                            },
                            {
                                "type": "text",
                                "text": " currently "
                            },
                            {
                                "type": "text",
                                "text": "impossible"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "move"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "node"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "out"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "of"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "its"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "containing"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "node"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "(to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "fix"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "mistake,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "for"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "instance)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656411983.331459",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "b7729269-a44f-40bd-a715-e3d487721ea8",
        "type": "message",
        "text": "<@UKJGU23KP> Right-click -&gt; Detach should work.",
        "user": "U018S42NMMM",
        "ts": "1656583975.106039",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TDf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKJGU23KP"
                            },
                            {
                                "type": "text",
                                "text": " Right-click -> Detach should work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656411983.331459",
        "parent_user_id": "U018S42NMMM",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKJGU23KP"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4c119e2d-4360-4f97-8c0e-c0910df6dcf4",
        "type": "message",
        "text": "<@U016VUZGUUQ> Not quite. Arbitrary edges are still supported.\n\nHere\u2019s an example of a compound graph: <https://pathwaycommons.github.io/cytoscape-sbgn-stylesheet/>",
        "user": "U018S42NMMM",
        "ts": "1656584105.060949",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8oR2k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " Not quite. Arbitrary edges are still supported.\n\nHere\u2019s an example of a compound graph: "
                            },
                            {
                                "type": "link",
                                "url": "https://pathwaycommons.github.io/cytoscape-sbgn-stylesheet/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656411983.331459",
        "parent_user_id": "U018S42NMMM"
    }
]