[
    {
        "client_msg_id": "0FF6FDD0-9E2B-45AF-8A4A-5307F91DEBED",
        "type": "message",
        "text": "What\u2019s the relationship between domain-specific programing (i.e DSLs) and end-user programming?",
        "user": "U0378MDUG1Y",
        "ts": "1669875408.597849",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LL0i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What\u2019s the relationship between domain-specific programing (i.e DSLs) and end-user programming?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1669875438.000000"
        },
        "thread_ts": "1669875408.597849",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1669901067.450379",
        "reply_users": [
            "UJBAJNFLK",
            "U0378MDUG1Y",
            "UGWUJUZHT"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "92A36679-1145-4B55-ADD9-A7C72AAEE087",
        "type": "message",
        "text": "End users care more about their domain than about programming. A DSL is a step towards the point of view of a domain expert.",
        "user": "UJBAJNFLK",
        "ts": "1669876480.147009",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+kk3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "End users care more about their domain than about programming. A DSL is a step towards the point of view of a domain expert."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1669875408.597849",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "AAA2CABE-E0BE-4EEF-8784-642C650582C7",
        "type": "message",
        "text": "Thanks for sharing <@UJBAJNFLK>, I\u2019m trying to tease out the differences between the two! \n\nSome follow up questions: Is end user programming inherently domain specific? What is the boundary between a domain expert vs. an end user?",
        "user": "U0378MDUG1Y",
        "ts": "1669878848.501169",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MvP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": ", I\u2019m trying to tease out the differences between the two! \n\nSome follow up questions: Is end user programming inherently domain specific? What is the boundary between a domain expert vs. an end user?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1669875408.597849",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "4f8a15d5-e9aa-4477-ba14-c06faeb4b4dc",
        "type": "message",
        "text": "First, a warning: I really dislike the term \"end user\". End of what?\n\nThat said, I see the space of what is often called \"end user programming\" as really two spaces: \"domain expert programming\", and \"daily life progrmaming\". The latter is to-dos, shopping lists, smart home automation, writing letters, etc. The realm of HyperCard.\n\nThese two categories almost coincide with desktop vs. smartphone use today.",
        "user": "UJBAJNFLK",
        "ts": "1669881584.981919",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BDe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First, a warning: I really dislike the term \"end user\". End of what?\n\nThat said, I see the space of what is often called \"end user programming\" as really two spaces: \"domain expert programming\", and \"daily life progrmaming\". The latter is to-dos, shopping lists, smart home automation, writing letters, etc. The realm of HyperCard.\n\nThese two categories almost coincide with desktop vs. smartphone use today."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1669875408.597849",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "bulb",
                "users": [
                    "U023V63MF6V"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d59361e2-9533-48b2-85f6-2b9db6c70676",
        "type": "message",
        "text": "FYI Observations:\n\u2022 Programming = providing details to a solution in a way that even a machine can perform the steps\n\u2022 End-user programming = UX\n\u2022 Rhetorical questions: Are Spreadsheets DSLs?  Are Spreadsheets UXs?  What about Hypercard?\n\u2022 DSL == programmers\u2019 solution to the \u201clanguages are hard to build\u201d problem\n\u2022 if languages were easy to build, we wouldn\u2019t need to bother with DSLs\n\u2022 we could just build micro-languages for each problem\n\u2022 [recursive descent parsing in the past ; now, PEG, Ohm-JS]\n\u2022 when doing consulting, I would always assume that my clients knew their domain better than I did\n\u2022 my job was to provide them with ways to automate their knowledge and give them a 10x boost in productivity\n\u2022 I would try to \u201cinvent\u201d a language that mimicked the way that the clients thought about their domain, yet I tried to make every part of that \u201clanguage\u201d compilable\n\u2022 instructions in the form of \u201ctext\u201d is only one kind of programming language (very 1950s) \n\u2022 many non-programmers use whiteboards and dry-erase markers instead of programming languages\n\u2022 programmers think in details and want to use all 10 fingers, users want to skip over details (\u201celision\u201d) and use swipes and voice and game controllers and \u201ceasy-to-use\u201d HCI devices\n\u2022 notations (aka \u201cprogramming languages\u201d) for programmers are vastly different from notations for users \n\u2022 example: FEDEX bar-code-reader hand-held-device marries high tech (bar codes and lasers) in an HCI that makes it easy-to-use in the field ; how was this programmed into being?  Did someone have a vision then hire a bank of engineers (software and hardware architects and engineers and implementors), or, was there an easy-to-use intermediate micro-language that let the envisioner implement / mock-up the MVP without engineers?  Could we have designed this more easily today?",
        "user": "UGWUJUZHT",
        "ts": "1669901067.450379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gpb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FYI Observations:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Programming = providing details to a solution in a way that even a machine can perform the steps"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "End-user programming = UX"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Rhetorical questions: Are Spreadsheets DSLs?  Are Spreadsheets UXs?  What about Hypercard?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "DSL == programmers\u2019 solution to the \u201clanguages are hard to build\u201d problem"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "if languages were easy to build, we wouldn\u2019t need to bother with DSLs"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "we could just build micro-languages for each problem"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "[recursive descent parsing in the past ; now, PEG, Ohm-JS]"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "when doing consulting, I would always assume that my clients knew their domain better than I did"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "my job was to provide them with ways to automate their knowledge and give them a 10x boost in productivity"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I would try to \u201cinvent\u201d a language that mimicked the way that the clients thought about their domain, yet I tried to make every part of that \u201clanguage\u201d compilable"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "instructions in the form of \u201ctext\u201d is only one kind of programming language (very 1950s) "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "many non-programmers use whiteboards and dry-erase markers instead of programming languages"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "programmers think in details and want to use all 10 fingers, users want to skip over details (\u201celision\u201d) and use swipes and voice and game controllers and \u201ceasy-to-use\u201d HCI devices"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "notations (aka \u201cprogramming languages\u201d) for programmers are vastly different from notations for users "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "example: FEDEX bar-code-reader hand-held-device marries high tech (bar codes and lasers) in an HCI that makes it easy-to-use in the field ; how was this programmed into being?  Did someone have a vision then hire a bank of engineers (software and hardware architects and engineers and implementors), or, was there an easy-to-use intermediate micro-language that let the envisioner implement / mock-up the MVP without engineers?  Could we have designed this more easily today?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1669875408.597849",
        "parent_user_id": "U0378MDUG1Y"
    }
]