[
    {
        "client_msg_id": "C6B50092-9261-4105-8F80-0A5EF99F8E88",
        "type": "message",
        "text": "I believe that a language feature called \u201calgebraic effects and handlers\u201d, because of their overwhelming simplicity, is a key to make programming more accessible to people. Please read my article about it. <https://github.com/Hihaheho/Desk/blob/main/docs/blog/0002-algebraic-effects.md|https://github.com/Hihaheho/Desk/blob/main/docs/blog/0002-algebraic-effects.md>",
        "user": "U03E03MNL3V",
        "ts": "1670603901.664349",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lJddK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe that a language feature called \u201calgebraic effects and handlers\u201d, because of their overwhelming simplicity, is a key to make programming more accessible to people. Please read my article about it. "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/Hihaheho/Desk/blob/main/docs/blog/0002-algebraic-effects.md",
                                "text": "https://github.com/Hihaheho/Desk/blob/main/docs/blog/0002-algebraic-effects.md"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03E03MNL3V",
            "ts": "1670605191.000000"
        },
        "thread_ts": "1670603901.664349",
        "reply_count": 11,
        "reply_users_count": 4,
        "latest_reply": "1670854544.142939",
        "reply_users": [
            "U03LMRE6MQE",
            "U03E03MNL3V",
            "UA14TGLTC",
            "U02MXPT5UDC"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "4bc571b2-6430-4940-af14-462c896814dc",
        "type": "message",
        "text": "One more software system designed to be minimalist: <https://minimacy.net/>\nThere are many ways to be minimalist because there are so many criteria that can be minimized. This one aims for minimal total code complexity within the constraints of being useable for a specific category of code, which is roughly a single server or desktop process. Minimacy is a programming language (strongly resembling the ML family) plus a virtual machine that runs the compiled code. The VM can run on bare metal, or as a process in a host OS. Development happens outside the system. The whole system wants to remain undertstandable in all detail by a single person. So far that's guaranteed by having a single author.\nI attended a seminar by it author yesterday, where he discussed many of the tradeoffs made. Sounded quite reasonable.",
        "user": "UJBAJNFLK",
        "ts": "1670612866.526639",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "07PO1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One more software system designed to be minimalist: "
                            },
                            {
                                "type": "link",
                                "url": "https://minimacy.net/"
                            },
                            {
                                "type": "text",
                                "text": "\nThere are many ways to be minimalist because there are so many criteria that can be minimized. This one aims for minimal total code complexity within the constraints of being useable for a specific category of code, which is roughly a single server or desktop process. Minimacy is a programming language (strongly resembling the ML family) plus a virtual machine that runs the compiled code. The VM can run on bare metal, or as a process in a host OS. Development happens outside the system. The whole system wants to remain undertstandable in all detail by a single person. So far that's guaranteed by having a single author.\nI attended a seminar by it author yesterday, where he discussed many of the tradeoffs made. Sounded quite reasonable."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://minimacy.net/",
                "thumb_url": "https://minimacy.net/logo3.png",
                "thumb_width": 2048,
                "thumb_height": 2048,
                "service_icon": "https://minimacy.net/logo3.png",
                "id": 1,
                "original_url": "https://minimacy.net/",
                "fallback": "An open-source minimalist computing technology based on the principle \u201cLess is more\u201d",
                "text": "Why minimalist? Because at Minimacy we consider that the way software is developed today brings too much complexity and opacity while we need simplicity and transparency if we want to achieve security, sustainability and sovereignty.",
                "title": "An open-source minimalist computing technology based on the principle \u201cLess is more\u201d",
                "title_link": "https://minimacy.net/",
                "service_name": "minimacy.net"
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f12235df-c9d4-43b0-ae54-154b2f0ff13a",
        "type": "message",
        "text": "I'd like to understand more why you think they are key to making programming more accessible? What do you call them, or how do you describe them, when talking to people not comfortable with \"algebraic ...\".\n\nThere are still several design decisions left to make when implementing effects. should handlers be deep or shallow? should multiple resumption be allowed? what syntax should they have. How have you tackled these questions in a way that makes programming as a whole more accessible?",
        "user": "U03LMRE6MQE",
        "ts": "1670709263.656109",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yKE8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd like to understand more why you think they are key to making programming more accessible? What do you call them, or how do you describe them, when talking to people not comfortable with \"algebraic ...\".\n\nThere are still several design decisions left to make when implementing effects. should handlers be deep or shallow? should multiple resumption be allowed? what syntax should they have. How have you tackled these questions in a way that makes programming as a whole more accessible?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "A5F39783-3BA0-48B7-98DE-E360807BA90C",
        "type": "message",
        "text": "I call it effects, and I describes it \u201cAn effect has an input and output. You can get a output from somewhere.\u201d\nIts design focuses on simplicity and easiness. For example the handler is deep handler because the code is simpler and semantics is intuitive for me. I should design the GUI carefully. Multi-shot continuation has minimal semantics in my language because perform and continue are symmetric. For syntax, I choose minimalistic one because most users don\u2019t use the syntax because my language is a visual programming language.",
        "user": "U03E03MNL3V",
        "ts": "1670729156.562739",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bOR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I call it effects, and I describes it \u201cAn effect has an input and output. You can get a output from somewhere.\u201d\nIts design focuses on simplicity and easiness. For example the handler is deep handler because the code is simpler and semantics is intuitive for me. I should design the GUI carefully. Multi-shot continuation has minimal semantics in my language because perform and continue are symmetric. "
                            },
                            {
                                "type": "text",
                                "text": "For syntax, I choose minimalistic one because most users don\u2019t use the syntax because my language is a visual programming language."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "dab9a9c1-cb5d-49ae-8c3d-42cc6a14b4fb",
        "type": "message",
        "text": "visual cool, do you have some screenshots or videos? sounds like we have some similar ideas. :slightly_smiling_face:",
        "user": "U03LMRE6MQE",
        "ts": "1670762646.722299",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WXe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "visual cool, do you have some screenshots or videos? sounds like we have some similar ideas. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "ED091A03-7355-4E86-A81E-56BEA7047D2C",
        "type": "message",
        "text": "The language polishment is mostly done and the editor is just getting started, and I don\u2019t have any screenshot.\nI would like to know about your ideas.",
        "user": "U03E03MNL3V",
        "ts": "1670762864.346389",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LDgeY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The language polishment is mostly done and the editor is just getting started, and I "
                            },
                            {
                                "type": "text",
                                "text": "don\u2019t"
                            },
                            {
                                "type": "text",
                                "text": " have any screenshot.\nI would like to know about your ideas."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "fac9ce96-a568-47b9-b9cc-b07f9317439f",
        "type": "message",
        "text": "To echo <@U03LMRE6MQE>, is it the composability of algebraic effects and handlers the big bonus here?  That you can combine them in flexible ways?",
        "user": "UA14TGLTC",
        "ts": "1670823857.251569",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oiL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To echo "
                            },
                            {
                                "type": "user",
                                "user_id": "U03LMRE6MQE"
                            },
                            {
                                "type": "text",
                                "text": ", is it the composability of algebraic effects and handlers the big bonus here?  That you can combine them in flexible ways?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "B2B0436D-43CA-4236-99FF-0339C2C0694D",
        "type": "message",
        "text": "Yes, In Desk-lang, all side effects other than pure computation are tracked in the type system. And effects can be handled within the language or outside the language.",
        "user": "U03E03MNL3V",
        "ts": "1670830882.517699",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nvC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, In Desk-lang, all side effects other than pure computation are tracked in the type system. And effects can be handled within the language or outside the language."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "a8ec8cbe-9bcc-4e62-9c28-bf3f08042658",
        "type": "message",
        "text": "if no screenshots do you have some examples of the syntax you chose. I've been discussing some syntaxes here <https://github.com/gleam-lang/gleam/discussions/1740>",
        "user": "U03LMRE6MQE",
        "ts": "1670834501.540439",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TJVp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if no screenshots do you have some examples of the syntax you chose. I've been discussing some syntaxes here "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/gleam-lang/gleam/discussions/1740"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "971af7f1-b91c-46cc-9b8e-be7909e33eb0",
        "type": "message",
        "text": "I talk about my ideas most weeks here <https://petersaxton.uk/log/>",
        "user": "U03LMRE6MQE",
        "ts": "1670834522.558569",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zx3xq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I talk about my ideas most weeks here "
                            },
                            {
                                "type": "link",
                                "url": "https://petersaxton.uk/log/"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "fbb15903-fc36-4f3a-a84f-ad3d6ef28a00",
        "type": "message",
        "text": "Not all will be interesting to you, but the very first ones are on my structural editor and more mid year do I discuss effect types",
        "user": "U03LMRE6MQE",
        "ts": "1670834547.272059",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BID",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not all will be interesting to you, but the very first ones are on my structural editor and more mid year do I discuss effect types"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "B3FED86B-DDBE-483E-8FDB-81AFF6DAAF4F",
        "type": "message",
        "text": "Thanks! I will take a look at it.",
        "user": "U03E03MNL3V",
        "ts": "1670834888.717529",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pHh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! I will take a look at it."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    },
    {
        "client_msg_id": "3aebc960-fbea-48ab-bdc7-32a3576efcf6",
        "type": "message",
        "text": "Funny, the first thing that came to my mind was the Dan Abramov's article and indeed you cited it :slightly_smiling_face:",
        "user": "U02MXPT5UDC",
        "ts": "1670854544.142939",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "35Ly",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Funny, the first thing that came to my mind was the Dan Abramov's article and indeed you cited it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670603901.664349",
        "parent_user_id": "U03E03MNL3V"
    }
]