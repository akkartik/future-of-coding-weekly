[
    {
        "client_msg_id": "1c0ffff3-e38e-43ba-8a34-e09dfbcb6133",
        "type": "message",
        "text": "ChatGPT <https://chat.openai.com/chat> appears to be open general use.  In this thread <https://twitter.com/tylerangert/status/1598389755997290507> someone gets ChatGPT to \"redesign git step by step.\"  I thought it would be fun to ask about how Procs in Ruby work.  I'll say more as a comment.  tl;dr ChatGPT gets them confused with blocks, which any person might do who has read about Ruby but hasn't programmed in it.",
        "user": "UA14TGLTC",
        "ts": "1670000865.741479",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eVo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ChatGPT "
                            },
                            {
                                "type": "link",
                                "url": "https://chat.openai.com/chat"
                            },
                            {
                                "type": "text",
                                "text": " appears to be open general use.  In this thread "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/tylerangert/status/1598389755997290507"
                            },
                            {
                                "type": "text",
                                "text": " someone gets ChatGPT to \"redesign git step by step.\"  I thought it would be fun to ask about how Procs in Ruby work.  I'll say more as a comment.  tl;dr ChatGPT gets them confused with blocks, which any person might do who has read about Ruby but hasn't programmed in it."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670000865.741479",
        "reply_count": 3,
        "reply_users_count": 1,
        "latest_reply": "1670002596.329259",
        "reply_users": [
            "UA14TGLTC"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "type": "message",
        "text": "In my ChatGPT conversation, I it to make a list of ways to invoke Procs in Ruby.  One item on the list was `yield(10, &amp;my_proc)`, which really doesn't work at all.  So I said, \"&amp;my_proc allows you to pass my_proc as the block to a method, but yield(10, &amp;my_proc) won't usually call my_proc.  Can you define a method called silly_yield so that silly_yield(10, &amp;my_proc) does do what think yield is doing?\u201d  Here's the reply.",
        "files": [
            {
                "id": "F04DJD65EHY",
                "created": 1670002075,
                "timestamp": 1670002075,
                "name": "Screen Shot 2022-12-02 at 14.24.37.png",
                "title": "Screen Shot 2022-12-02 at 14.24.37.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UA14TGLTC",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 194502,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F04DJD65EHY/screen_shot_2022-12-02_at_14.24.37.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F04DJD65EHY/download/screen_shot_2022-12-02_at_14.24.37.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 230,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 307,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 460,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 511,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 613,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJD65EHY-3b18e6298c/screen_shot_2022-12-02_at_14.24.37_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 654,
                "original_w": 1634,
                "original_h": 1044,
                "thumb_tiny": "AwAeADC9LIsI3O+ATxUX2yH/AJ6/oai1b/j3T/f/AKVk59BQBt/bIO8v6UfbIP8AnqfyrEJz2pKAN37ZB/z0P5VLFKkqko2QDiudrW0j/j3f/f8A6UAO1RS0CbQT83Ye1Zflv/cf/vk10B6cUnPr+tAGAY5P7j/kaTypP+ebfka6DB9f1pcH1NAHPeVJ/wA82/I1qaUrLA4YEfN3HtV3B9TSigD/2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UA14TGLTC/F04DJD65EHY/screen_shot_2022-12-02_at_14.24.37.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F04DJD65EHY-08dcd47754",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UA14TGLTC",
        "display_as_bot": false,
        "ts": "1670002079.841449",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XZxKq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my ChatGPT conversation, I it to make a list of ways to invoke Procs in Ruby.  One item on the list was "
                            },
                            {
                                "type": "text",
                                "text": "yield(10, &my_proc)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which really doesn't work at all.  So I said, \"&my_proc allows you to pass my_proc as the block to a method, but yield(10, &my_proc) won't usually call my_proc.  Can you define a method called silly_yield so that silly_yield(10, &my_proc) does do what think yield is doing?\u201d  Here's the reply."
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "9a361436-7e35-4bb6-a04c-c5b7f4b21b26",
        "thread_ts": "1670000865.741479",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "type": "message",
        "text": "Though the list didn't include all the other ways you can invoke a Proc, it did think of one that didn't immediately come to mind, `my_proc === 10`.  I asked vaguely why `===` is defined on Proc, how would you use it?  And eventually wrapped up with an example before, it seems, ChatGPT decided I had used too much of its CPU.",
        "files": [
            {
                "id": "F04DJE7G5DY",
                "created": 1670002395,
                "timestamp": 1670002395,
                "name": "Screen Shot 2022-12-02 at 14.39.32.png",
                "title": "Screen Shot 2022-12-02 at 14.39.32.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UA14TGLTC",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 289442,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F04DJE7G5DY/screen_shot_2022-12-02_at_14.39.32.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F04DJE7G5DY/download/screen_shot_2022-12-02_at_14.39.32.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 342,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 456,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 684,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 760,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 912,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F04DJE7G5DY-a003e29c35/screen_shot_2022-12-02_at_14.39.32_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 973,
                "original_w": 1672,
                "original_h": 1588,
                "thumb_tiny": "AwAtADDS/Gj8arXkxt4w6qCWbHNU/wC0pP8Anmv6/wCNAGrz60c+tZX9pSf881/X/Gk/tR/7i/r/AI0Aa9FZA1R/7i/5/GtC0mNxAJCADkjigCvqv/Hun+//AENZPH+TWvqv/Hun+/8A0NZBxxQAcY/+vSYoooAK2tM/48x/vGsWtrTP+PMf7xoAfeQG4iVQwXDZyRVL+zG/56r+RrUIzRt96AMv+y2/56r+Ro/stv8Anqv5GtTb70YFAGV/Zbf89V/I1oWkJggCE55JzipdopaAP//Z",
                "permalink": "https://futureofcoding.slack.com/files/UA14TGLTC/F04DJE7G5DY/screen_shot_2022-12-02_at_14.39.32.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F04DJE7G5DY-29d98f836e",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UA14TGLTC",
        "display_as_bot": false,
        "ts": "1670002482.847789",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/ftu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Though the list didn't include all the other ways you can invoke a Proc, it did think of one that didn't immediately come to mind, "
                            },
                            {
                                "type": "text",
                                "text": "my_proc === 10",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".  I asked vaguely why "
                            },
                            {
                                "type": "text",
                                "text": "===",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is defined on Proc, how would you use it?  And eventually wrapped up with an example before, it seems, ChatGPT decided I had used too much of its CPU."
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "18caad3a-7cf5-4f79-9ce1-5639cab2658b",
        "thread_ts": "1670000865.741479",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "71a47ade-ab30-46a9-b949-66fb2aae88a1",
        "type": "message",
        "text": "My next message would have been, \"That's a nice example.  Did you know you can write `proc(&amp;:odd?)` instead?  Let's see the example using that shorter syntax instead.\"",
        "user": "UA14TGLTC",
        "ts": "1670002596.329259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wrp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My next message would have been, \"That's a nice example.  Did you know you can write "
                            },
                            {
                                "type": "text",
                                "text": "proc(&:odd?)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead?  Let's see the example using that shorter syntax instead.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1670000865.741479",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "007b7c30-6b97-492c-b720-120179282a42",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=eDmxAWYPh4g|I'm making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!>",
        "user": "UBN9AFS0N",
        "ts": "1670004669.573569",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jjd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=eDmxAWYPh4g",
                                "text": "I'm making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=eDmxAWYPh4g",
                "thumb_url": "https://i.ytimg.com/vi/eDmxAWYPh4g/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/eDmxAWYPh4g?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"I&#39;m making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=eDmxAWYPh4g",
                "fallback": "YouTube Video: I'm making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!",
                "title": "I'm making a Musical Sandbox game - Mix Universe Update 3 - Randomization, Multi-Edit, and more!",
                "title_link": "https://www.youtube.com/watch?v=eDmxAWYPh4g",
                "author_name": "chriszuko",
                "author_link": "https://www.youtube.com/@chriszuko",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    }
]