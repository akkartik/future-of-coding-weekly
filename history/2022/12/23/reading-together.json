[
    {
        "client_msg_id": "AE2DBB5F-348E-4FF7-8BA8-DC1D613AF9E8",
        "type": "message",
        "text": "\u201cProgramming Paradigms for Dummies: What Every Programmer Should Know\u201d by Peter Van Roy (2012)\n\n&gt; This chapter gives an introduction to all the main programming paradigms, their un- derlying concepts, and the relationships between them. We give a broad view to help programmers choose the right concepts they need to solve the problems at hand. We give a taxonomy of almost 30 useful programming paradigms and how they are related. Most of them differ only in one or a few concepts, but this can make a world of difference in programming. We explain briefly how programming paradigms influence language design, and we show two sweet spots: dual-paradigm languages and a definitive lan- guage. We introduce the main concepts of programming languages: records, closures, independence (concurrency), and named state. We explain the main principles of data abstraction and how it lets us organize large programs. Finally, we conclude by focus- ing on concurrency, which is widely considered the hardest concept to program with. We present four little-known but important paradigms that greatly simplify concurrent programming with respect to mainstream languages: declarative concurrency (both ea- ger and lazy), functional reactive programming, discrete synchronous programming, and constraint programming. These paradigms have no race conditions and can be used in cases where no other paradigm works. We explain why for multi-core processors and we give several examples from computer music, which often uses these paradigms.\n<https://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf|https://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf>",
        "user": "U0378MDUG1Y",
        "ts": "1671817682.189589",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qSK+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\u201cProgramming Paradigms for Dummies: What Every Programmer Should Know\u201d by Peter Van Roy (2012)\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This chapter gives an introduction to all the main programming paradigms, their un- derlying concepts, and the relationships between them. We give a broad view to help programmers choose the right concepts they need to solve the problems at hand. We give a taxonomy of almost 30 useful programming paradigms and how they are related. Most of them differ only in one or a few concepts, but this can make a world of difference in programming. We explain briefly how programming paradigms influence language design, and we show two sweet spots: dual-paradigm languages and a definitive lan- guage. We introduce the main concepts of programming languages: records, closures, independence (concurrency), and named state. We explain the main principles of data abstraction and how it lets us organize large programs. Finally, we conclude by focus- ing on concurrency, which is widely considered the hardest concept to program with. We present four little-known but important paradigms that greatly simplify concurrent programming with respect to mainstream languages: declarative concurrency (both ea- ger and lazy), functional reactive programming, discrete synchronous programming, and constraint programming. These paradigms have no race conditions and can be used in cases where no other paradigm works. We explain why for multi-core processors and we give several examples from computer music, which often uses these paradigms."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf",
                                "text": "https://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "reply_count": 20,
        "reply_users_count": 4,
        "latest_reply": "1672041528.252169",
        "reply_users": [
            "U0378MDUG1Y",
            "U013ZLJARC7",
            "UE6EFEPTQ",
            "UJBAJNFLK"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "F9BF0F9B-DB04-4BC8-8641-7659813472FF",
        "type": "message",
        "text": "&gt; More is not better (or worse) than less, just different.\n&gt; \u2013 The paradigm paradox.",
        "user": "U0378MDUG1Y",
        "ts": "1671817707.081369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q2ci",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More is not better (or worse) than less, just different."
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\u2013 The paradigm paradox."
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "6FC51101-B184-4D1C-BE92-2F119FB71FE1",
        "type": "message",
        "text": "I think this paper is a fascinating read. I like the way it frames programming paradigms. I like the emphasis that turning completeness isn\u2019t much of a differentiator for programing languages anymore, but rather it\u2019s how a PL brings multiple paradigms into a coherent vision.",
        "user": "U0378MDUG1Y",
        "ts": "1671817884.680419",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c4kOC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this paper is a fascinating read. I like the way it frames programming paradigms. I like the emphasis that turning completeness isn\u2019t much of a differentiator for programing languages anymore, but rather it\u2019s how a PL brings multiple paradigms into a coherent vision."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "type": "message",
        "text": "",
        "files": [
            {
                "id": "F04GWENEJTB",
                "created": 1671817921,
                "timestamp": 1671817921,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "U0378MDUG1Y",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 18988,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "subtype": "slack_image",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F04GWENEJTB/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F04GWENEJTB/download/image_from_ios.jpg",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GWENEJTB-5c56bccff1/image_from_ios_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GWENEJTB-5c56bccff1/image_from_ios_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GWENEJTB-5c56bccff1/image_from_ios_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 205,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GWENEJTB-5c56bccff1/image_from_ios_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 273,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GWENEJTB-5c56bccff1/image_from_ios_160.jpg",
                "original_w": 671,
                "original_h": 382,
                "thumb_tiny": "AwAbADDRLEHpx2poY7jnAXt7/WnNuByBkelNwSvzDINAElNYkOoz1pR0pGXLqcdKAHUiOrjKnIzilqODGw4VhyfvUAPwM570gxnofxp1NHU8n86AD5vahvvA4bj0pPxP50fifzoAX5s9eKUHPY0g606gD//Z",
                "permalink": "https://futureofcoding.slack.com/files/U0378MDUG1Y/F04GWENEJTB/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F04GWENEJTB-f675547221",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U0378MDUG1Y",
        "display_as_bot": false,
        "ts": "1671817924.741569",
        "client_msg_id": "AB5FE4DA-067E-4641-BFCF-440BE7A69FC4",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "type": "message",
        "text": "",
        "files": [
            {
                "id": "F04GET1KHNZ",
                "created": 1671817944,
                "timestamp": 1671817944,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "U0378MDUG1Y",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 132783,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "subtype": "slack_image",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F04GET1KHNZ/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F04GET1KHNZ/download/image_from_ios.jpg",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 279,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 372,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_720.jpg",
                "thumb_720_w": 720,
                "thumb_720_h": 557,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 619,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_960.jpg",
                "thumb_960_w": 960,
                "thumb_960_h": 743,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F04GET1KHNZ-937969eea1/image_from_ios_1024.jpg",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 793,
                "original_w": 1125,
                "original_h": 871,
                "thumb_tiny": "AwAlADDSJxTXIKc5/CklcpjGOfXNLwygE847Gkxip90U6o1JAPHTpzQWYAELn15oQhwkU9DmhXDHGD+IphVc7dpGeuBSxuCSoB4qhhMSAMbv+AikIUBXI5HelmXcB1/A4obDLgZqWA0rlOuAe9CRhlwT+Ip54jA/+vSKSBwM/pUxVmJ2InAEw+buOKdEW807hj8MU4gGQHAojUhySSfxrQaJaD7HFFFIQmD60YPrS0UAGPXmjAHaiigD/9k=",
                "permalink": "https://futureofcoding.slack.com/files/U0378MDUG1Y/F04GET1KHNZ/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F04GET1KHNZ-41574171c5",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U0378MDUG1Y",
        "display_as_bot": false,
        "ts": "1671817946.273629",
        "client_msg_id": "4D18C06D-3197-4A87-BB9D-A90ACD8BD3E3",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "648f0c02-4b4b-465b-9781-46dacf2d5f2b",
        "type": "message",
        "text": "_Concepts, Techniques, and Models of Computer Programming_ is well worth anyone's time.",
        "user": "U013ZLJARC7",
        "ts": "1671818151.213169",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6J00",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Concepts, Techniques, and Models of Computer Programming",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is well worth anyone's time."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "98EC6223-B50F-4658-AB71-A90ABCCB2709",
        "type": "message",
        "text": "Ooh thanks for the rec!",
        "user": "U0378MDUG1Y",
        "ts": "1671820867.065459",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+kT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ooh thanks for the rec!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "41DA420B-8AED-4BB4-A9C4-C912335F2516",
        "type": "message",
        "text": "oh gosh it\u2019s 900+ pages :smiling_face_with_tear: ",
        "user": "U0378MDUG1Y",
        "ts": "1671820886.638299",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rp1R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh gosh it\u2019s 900+ pages "
                            },
                            {
                                "type": "emoji",
                                "name": "smiling_face_with_tear",
                                "unicode": "1f972"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1671820999.000000"
        },
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "cc8a8156-82f8-41a7-adfb-e1c11a801d9c",
        "type": "message",
        "text": "A couple of times in the past I've tried and failed to find the place in this diagram (\"Figure 2\") for my own language.\n\nAnyone else have this problem? :open_mouth:",
        "user": "UE6EFEPTQ",
        "ts": "1671823889.074529",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SRK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A couple of times in the past I've tried and failed to find the place in this diagram (\"Figure 2\") for my own language.\n\nAnyone else have this problem? "
                            },
                            {
                                "type": "emoji",
                                "name": "open_mouth",
                                "unicode": "1f62e"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1671823921.000000"
        },
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "3D842033-1AF7-4A41-9B66-2E5CB081BBF4",
        "type": "message",
        "text": "Me too. Term rewriting is not in the diagram, whose entry point into Turing completeness is labelled \u201cprocedures\u201d. But it\u2019s a good book nevertheless.",
        "user": "UJBAJNFLK",
        "ts": "1671824671.448509",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AVMw7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Me too. Term rewriting is not in the diagram, whose entry point into Turing completeness is labelled \u201cprocedures\u201d. But it\u2019s a good book nevertheless."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "146000cb-10b4-4787-8ebe-12e4681cee65",
        "type": "message",
        "text": "Right: mine is akin to term rewriting",
        "user": "UE6EFEPTQ",
        "ts": "1671826025.379839",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qmaD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Right: mine is akin to term rewriting"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "a69ce2f9-a71c-4217-af53-5844803483ce",
        "type": "message",
        "text": "Although for me they needn't be TC, cos they transform persistent state",
        "user": "UE6EFEPTQ",
        "ts": "1671826097.364769",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dkel2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Although for me they needn't be TC, cos they transform persistent state"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "841bae6a-0fd7-4b7b-abd8-d27fcec1f489",
        "type": "message",
        "text": "So have to terminate for one thing!",
        "user": "UE6EFEPTQ",
        "ts": "1671826119.346209",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EsF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So have to terminate for one thing!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "85a69ded-5b87-4936-8cb4-a3795e482851",
        "type": "message",
        "text": "I have always wondered about the relation that PL people have with term rewriting. They know it, they refer to it, they use it in tools, but they don't seem to consider it a foundation for PLs. I am aware of exactly one PL based on term rewriting: Pure <https://agraef.github.io/pure-lang/>. On the other hand, there are plenty of systems based on term rewriting that are PLs without programming being their main purpose. Computer algebra systems, for example.",
        "user": "UJBAJNFLK",
        "ts": "1671874365.788029",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uEqz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have always wondered about the relation that PL people have with term rewriting. They know it, they refer to it, they use it in tools, but they don't seem to consider it a foundation for PLs. I am aware of exactly one PL based on term rewriting: Pure "
                            },
                            {
                                "type": "link",
                                "url": "https://agraef.github.io/pure-lang/"
                            },
                            {
                                "type": "text",
                                "text": ". On the other hand, there are plenty of systems based on term rewriting that are PLs without programming being their main purpose. Computer algebra systems, for example."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "6b15f5bc-00ae-458b-a9d5-15640c2e6391",
        "type": "message",
        "text": "\"Sure, here is a list of general-purpose programming languages that make use of term rewriting:\n\nMaude: Maude is a high-performance, reflective, executable specification language that supports both equational and rewriting logic. It is based on the idea of term rewriting and is used for specifying and prototyping systems, as well as for verification and validation of software.\n\nPure: Pure is a functional programming language that is based on term rewriting. It is a high-level, concise, and expressive language that is designed for rapid prototyping and development of numerical and symbolic computing applications. Pure is implemented in C and uses term rewriting to implement its functional language features, including pattern matching, anonymous functions, and higher-order functions.\n\"",
        "user": "UE6EFEPTQ",
        "ts": "1671891510.644899",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tlTGo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Sure, here is a list of general-purpose programming languages that make use of term rewriting:\n\nMaude: Maude is a high-performance, reflective, executable specification language that supports both equational and rewriting logic. It is based on the idea of term rewriting and is used for specifying and prototyping systems, as well as for verification and validation of software.\n\nPure: Pure is a functional programming language that is based on term rewriting. It is a high-level, concise, and expressive language that is designed for rapid prototyping and development of numerical and symbolic computing applications. Pure is implemented in C and uses term rewriting to implement its functional language features, including pattern matching, anonymous functions, and higher-order functions.\n\""
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1671900097.000000"
        },
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "d87977f0-0c81-418b-a2fa-4f71d36a275b",
        "type": "message",
        "text": "I asked ChatGPT :smiley::smiley:",
        "user": "UE6EFEPTQ",
        "ts": "1671891542.160249",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NHyja",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I asked ChatGPT "
                            },
                            {
                                "type": "emoji",
                                "name": "smiley",
                                "unicode": "1f603"
                            },
                            {
                                "type": "emoji",
                                "name": "smiley",
                                "unicode": "1f603"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "10c500de-1eb2-4b55-adcb-8207cdc1f747",
        "type": "message",
        "text": "Actually isn't Clean one?",
        "user": "UE6EFEPTQ",
        "ts": "1671891744.410099",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IUR5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Actually isn't Clean one?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "818adf57-4a7c-464d-b76e-d6dc2e2b23e3",
        "type": "message",
        "text": "Aha! <https://en.m.wikipedia.org/wiki/Category:Term-rewriting_programming_languages|https://en.m.wikipedia.org/wiki/Category:Term-rewriting_programming_languages>",
        "user": "UE6EFEPTQ",
        "ts": "1671891764.535189",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n19Uk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Aha! "
                            },
                            {
                                "type": "link",
                                "url": "https://en.m.wikipedia.org/wiki/Category:Term-rewriting_programming_languages",
                                "text": "https://en.m.wikipedia.org/wiki/Category:Term-rewriting_programming_languages"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://en.m.wikipedia.org/wiki/Category:Term-rewriting_programming_languages",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png",
                "id": 1,
                "original_url": "https://en.m.wikipedia.org/wiki/Category:Term-rewriting_programming_languages",
                "fallback": "wikipedia: Category:Term-rewriting programming languages",
                "text": "This category lists those functional languages that are based on term-rewriting instead of the lambda calculus.",
                "title": "Category:Term-rewriting programming languages",
                "title_link": "https://en.m.wikipedia.org/wiki/Category:Term-rewriting_programming_languages",
                "author_name": "Wikipedia",
                "author_link": "https://en.wikipedia.org/"
            }
        ],
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "00133f30-f905-42bd-b68d-14db563e8a9a",
        "type": "message",
        "text": "Interesting, thanks! Wikipedia is still more useful than ChatGPT :slightly_smiling_face:\n\nMaude and its ancestor OBJ are in the same category as computer algebra system in my opinion: Turing-complete languages that are not practically useful for programming. I have actually used Maude quite a bit as I my original idea was to turn Maude into a digital scientific notation, rather than invent my own. But Maude is a closed universe: you cannot interface to code nor data that is not a Maude module.\n\n\"Wolfram language\" is just the new name for Mathematica. Which is by now more than a computer algebra system, but I am not sure I'd call it a programming language. It's in an interesting grey zone (which I'd love to see more of).\n\nI don't know much about the other languages listed on Wikipedia. I have heard of Clean and Refal, but just enough to recognize the names.",
        "user": "UJBAJNFLK",
        "ts": "1671957488.931349",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iz6sC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting, thanks! Wikipedia is still more useful than ChatGPT "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMaude and its ancestor OBJ are in the same category as computer algebra system in my opinion: Turing-complete languages that are not practically useful for programming. I have actually used Maude quite a bit as I my original idea was to turn Maude into a digital scientific notation, rather than invent my own. But Maude is a closed universe: you cannot interface to code nor data that is not a Maude module.\n\n\"Wolfram language\" is just the new name for Mathematica. Which is by now more than a computer algebra system, but I am not sure I'd call it a programming language. It's in an interesting grey zone (which I'd love to see more of).\n\nI don't know much about the other languages listed on Wikipedia. I have heard of Clean and Refal, but just enough to recognize the names."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1671957593.000000"
        },
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "cd55c250-8b0f-4ad8-a072-6e6a10f9bd09",
        "type": "message",
        "text": "What's your language/project, <@UJBAJNFLK>? You're not in the spreadsheet!\n\n<https://docs.google.com/spreadsheets/d/12sTu7RT-s_QlAupY1v-3DfI1Mm9NEX5YMWWTDAKHLfc/edit#gid=0>",
        "user": "UE6EFEPTQ",
        "ts": "1672010583.421479",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D10Px",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What's your language/project, "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": "? You're not in the spreadsheet!\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://docs.google.com/spreadsheets/d/12sTu7RT-s_QlAupY1v-3DfI1Mm9NEX5YMWWTDAKHLfc/edit#gid=0"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "client_msg_id": "d8e21b32-1f05-46cf-ad7a-f9a917546f8b",
        "type": "message",
        "text": "Thanks for the reminder <@UE6EFEPTQ>. I just added my project (last column for now).",
        "user": "UJBAJNFLK",
        "ts": "1672041528.252169",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i1/L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the reminder "
                            },
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": ". I just added my project (last column for now)."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1671817682.189589",
        "parent_user_id": "U0378MDUG1Y"
    }
]