[
    {
        "type": "message",
        "text": "Hello friendly internet people!\n\nI\u2019m happy to share the current state of my tiny, incomplete, toy of an AR project for iOS / macOS designed to parse, analyze, trace, and render Swift application runtimes in 3D space. I\u2019m posting the Github link here, and I thank anyone and everyone many times in advance for taking a curious moment to take a peek, and maybe even share your enthusiasm and interests!\n\nI am absolutely open to critiques, comments, questions, thoughts, and of course offers to work alongside you and your like-wise visualization/AR/VR obsessed team &lt;3\n\n<https://github.com/tikimcfee/LookAtThat>",
        "files": [
            {
                "id": "F03DWSSF10D",
                "created": 1651636357,
                "timestamp": 1651636357,
                "name": "Screen Shot 2022-05-03 at 8.52.30 PM.png",
                "title": "Screen Shot 2022-05-03 at 8.52.30 PM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U03E4LY27FS",
                "editable": false,
                "size": 897910,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F03DWSSF10D/screen_shot_2022-05-03_at_8.52.30_pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F03DWSSF10D/download/screen_shot_2022-05-03_at_8.52.30_pm.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 176,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 235,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 353,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 392,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 470,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F03DWSSF10D-0cf4abdc4e/screen_shot_2022-05-03_at_8.52.30_pm_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 502,
                "original_w": 3144,
                "original_h": 1540,
                "thumb_tiny": "AwAXADCsdpcgEg57VWbrTpf9Y31pgHNNtsC8OgoqsJnUdQRUscu/ORjFAiYt+7JHaoTI+fvGpf8Alm1Vz96kMZL/AK1qYOop8v8ArWpg6igCSSMIowckmnwfdP1on+6PrRB90/Wq6i6FhRlCPWo/IOc7hUidKfSY0f/Z",
                "permalink": "https://futureofcoding.slack.com/files/U03E4LY27FS/F03DWSSF10D/screen_shot_2022-05-03_at_8.52.30_pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F03DWSSF10D-a3f61a43ba",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U03E4LY27FS",
        "display_as_bot": false,
        "ts": "1651636380.628219",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Khg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello friendly internet people!\n\nI\u2019m happy to share the current state of my tiny, incomplete, toy of an AR project for iOS / macOS designed to parse, analyze, trace, and render Swift application runtimes in 3D space. I\u2019m posting the Github link here, and I thank anyone and everyone many times in advance for taking a curious moment to take a peek, and maybe even share your enthusiasm and interests!\n\nI am absolutely open to critiques, comments, questions, thoughts, and of course offers to work alongside you and your like-wise visualization/AR/VR obsessed team <3\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/tikimcfee/LookAtThat"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "60484a7e-9eea-4762-a5e3-f26122767518",
        "thread_ts": "1651636380.628219",
        "reply_count": 14,
        "reply_users_count": 3,
        "latest_reply": "1652016909.768669",
        "reply_users": [
            "UA14TGLTC",
            "U03E4LY27FS",
            "U85HCL7JP"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "thumbsup_all",
                "users": [
                    "U01HKV85Y1J",
                    "U02E4DAQGSZ",
                    "UA14TGLTC",
                    "U85HCL7JP"
                ],
                "count": 4
            },
            {
                "name": "clap",
                "users": [
                    "U014K6216PK"
                ],
                "count": 1
            },
            {
                "name": "amiga-tick",
                "users": [
                    "U014K6216PK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "10b7fcba-b7d6-4cde-b4a1-1452f29f3fa8",
        "type": "message",
        "text": "Having tried it, what were your main impressions?",
        "user": "UA14TGLTC",
        "ts": "1651799066.659799",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6I97",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Having tried it, what were your main impressions?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "3c78c34f-5cd7-4ae0-a2c1-88686cad4acd",
        "type": "message",
        "text": "Well I\u2019m mostly just happy to hear it ran on someone else\u2019s machine, haha. I\u2019m curious what you mean - what my impressions were of where I\u2019ve managed to get so far?",
        "user": "U03E4LY27FS",
        "ts": "1651799182.829789",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g17",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well I\u2019m mostly just happy to hear it ran on someone else\u2019s machine, haha. I\u2019m curious what you mean - what my impressions were of where I\u2019ve managed to get so far?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "0aab5b38-a562-49f3-8b0e-8da7c8db43f3",
        "type": "message",
        "text": "Of the experience.  What did it feel like to you to have your code out there in space?  I have my own strong feelings, but I wanted to ask before sharing.",
        "user": "UA14TGLTC",
        "ts": "1651799251.393449",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dRIBz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Of the experience.  What did it feel like to you to have your code out there in space?  I have my own strong feelings, but I wanted to ask before sharing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "59094844-944b-4b44-8e15-4b089faecbef",
        "type": "message",
        "text": "Oh! :heart:\n\nThe very first time I managed to get the code appearing on the phone, I had a strange overwhelming sense that I had suddenly gotten a picture of what I was actually writing. I had a sudden shift of \u201cOh, well I guess\u2026 that\u2019s how much is actually there.\u201d I started to recognize little patterns in the size and shape of what I wrote. When I loaded up other projects, I saw much wider files, deeper \u2018stacks\u2019, and without seeing the code itself, I felt like I had a sudden familiarity. Like walking into a room you\u2019ve never been in before, but recognizing walls, furniture, interesting bits that seem visually distinct.\n\nSorry if that\u2019s a bit dramatic. I really enjoy this project, haha.",
        "user": "U03E4LY27FS",
        "ts": "1651799615.388739",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03E4LY27FS",
            "ts": "1651799819.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UcV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh! "
                            },
                            {
                                "type": "emoji",
                                "name": "heart"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe very first time I managed to get the code appearing on the phone, I had a strange overwhelming sense that I had suddenly gotten a picture of what I was actually writing. I had a sudden shift of \u201cOh, well I guess\u2026 that\u2019s how much is actually there.\u201d I started to recognize little patterns in the size and shape of what I wrote. When I loaded up other projects, I saw much wider files, deeper \u2018stacks\u2019, and without seeing the code itself, I felt like I had a sudden familiarity. Like walking into a room you\u2019ve never been in before, but recognizing walls, furniture, interesting bits that seem visually distinct.\n\nSorry if that\u2019s a bit dramatic. I really enjoy this project, haha."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "da6ba172-a499-4c70-bc32-350440d770d0",
        "type": "message",
        "text": "It\u2019s goofy how excited I am to hear your experience, haha.",
        "user": "U03E4LY27FS",
        "ts": "1651800008.742649",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9BF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s goofy how excited I am to hear your experience, haha."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "type": "message",
        "text": "This looks really cool!\nI haven't run the project, can you explain me whats the code layout shown in this gif? How is it constructed?",
        "files": [
            {
                "id": "F03EH2C9FPD",
                "created": 1651923460,
                "timestamp": 1651923460,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "U85HCL7JP",
                "editable": false,
                "size": 54209,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F03EH2C9FPD/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F03EH2C9FPD/download/image_from_ios.jpg",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 208,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 278,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_720.jpg",
                "thumb_720_w": 720,
                "thumb_720_h": 417,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 463,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_960.jpg",
                "thumb_960_w": 960,
                "thumb_960_h": 555,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EH2C9FPD-b280320bb6/image_from_ios_1024.jpg",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 592,
                "original_w": 1853,
                "original_h": 1072,
                "thumb_tiny": "AwAbADCtO0qyykSOAGOOaQTSCTBLc/7VTTqC0mRnk8VXYtw23p2zTQmTea/95vzo81/7zfnUCyFjgL+tKXIOMZ4z1p6CJvNf+83506ORzIo3N1Heqvnf7NS28m6dBjHNGgak8n+tf6moCDWo0EZYkryT6mk+zxf3f1NJOw2rmQkbKwyO1SY9q0/s8X939TR9ni/u/qaLhYyGX5tuO3FSwpidG75rS+zxf3f1NKIIgQdv6mi4WP/Z",
                "permalink": "https://futureofcoding.slack.com/files/U85HCL7JP/F03EH2C9FPD/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F03EH2C9FPD-b9fb01952c",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U85HCL7JP",
        "display_as_bot": false,
        "ts": "1651923481.012799",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o8ono",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks really cool!\nI haven't run the project, can you explain me whats the code layout shown in this gif? How is it constructed?"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "88638D56-C6FB-4CEA-98E6-13456F7FF1A1",
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "DF7DC5B8-17B6-495A-B64D-FF76C8F82C01",
        "type": "message",
        "text": "Have you thought of how to represent code using 3 dimensions? \nI see in projects like this that code is always flat (2D) but we have 3 dimensions available!",
        "user": "U85HCL7JP",
        "ts": "1651923636.506469",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QfUFP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you thought of how to represent code using 3 dimensions? \n"
                            },
                            {
                                "type": "text",
                                "text": "I see in projects like this that code is always flat (2D) but we have 3 dimensions available!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS",
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "<@U85HCL7JP> Hey there, I\u2019m glad you like it! I can and I will happily. I even made another small demo gif. I\u2019m going to try to put some more samples on the github page to help too, because it\u2019s got a few more bells and whistles that kinda fit together.\n\nIn that screenshot, the blue rectangles are directories. They are \u201cstacked\u201d by their depth in a directory tree, and every file is a simple long black rectangle rendered like a big sheet of paper. The trick, though, is that each glyph of text on the sheet is a 3d node - it can move and interact in space!\n\nIn the gif, you\u2019ll see I\u2019m grabbing some directory out of a new rendered stack. Then, I turn on \u2018hover info\u2019, which shows the results of hit-testing the nodes underneath the mouse arrow. Finally, it does some syntax tree walking to figure out what the syntax/semantics are of that individual glyph, and all of its associated nodes. As I click in the AST node list, you can see the text that represents that piece of the syntax tree \u2018highlighting\u2019 and gaining some z-depth and color. And, as more nested stuff is selected, the nodes are free to move even further away to demonstrate that deeper nesting.\n\nThat\u2019s one of the first pieces of none-2d-only sample I\u2019ve got. I\u2019m not too far away from doing things like, \u201cgive me all the nodes for class declarations and make a grid out of them\u201d or \u201cstack up all the functions and order them by width then height\u201d. This is where you come in - help me make more! :wink:",
        "files": [
            {
                "id": "F03EAJWTR1U",
                "created": 1651934246,
                "timestamp": 1651934246,
                "name": "DemoText.gif",
                "title": "DemoText.gif",
                "mimetype": "image/gif",
                "filetype": "gif",
                "pretty_type": "GIF",
                "user": "U03E4LY27FS",
                "editable": false,
                "size": 10372689,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F03EAJWTR1U/demotext.gif",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F03EAJWTR1U/download/demotext.gif",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 203,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 270,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 405,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 450,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 540,
                "thumb_360_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_360.gif",
                "thumb_480_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_480.gif",
                "original_w": 960,
                "original_h": 540,
                "deanimate": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_deanimate.png",
                "deanimate_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F03EAJWTR1U-be01718dc9/demotext_deanimate_gif.png",
                "thumb_tiny": "AwAbADCKkf7ppaR/umgCI9eR2phFPJIPFMOT2NAB2p8f314pv4GnpneKAJyh60mKkboKbQAmBRgUtFACYFLiiigD/9k=",
                "permalink": "https://futureofcoding.slack.com/files/U03E4LY27FS/F03EAJWTR1U/demotext.gif",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F03EAJWTR1U-2acf8f14ee",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U03E4LY27FS",
        "display_as_bot": false,
        "ts": "1651934413.909269",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "slx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " Hey there, I\u2019m glad you like it! I can and I will happily. I even made another small demo gif. I\u2019m going to try to put some more samples on the github page to help too, because it\u2019s got a few more bells and whistles that kinda fit together.\n\nIn that screenshot, the blue rectangles are directories. They are \u201cstacked\u201d by their depth in a directory tree, and every file is a simple long black rectangle rendered like a big sheet of paper. The trick, though, is that each glyph of text on the sheet is a 3d node - it can move and interact in space!\n\nIn the gif, you\u2019ll see I\u2019m grabbing some directory out of a new rendered stack. Then, I turn on \u2018hover info\u2019, which shows the results of hit-testing the nodes underneath the mouse arrow. Finally, it does some syntax tree walking to figure out what the syntax/semantics are of that individual glyph, and all of its associated nodes. As I click in the AST node list, you can see the text that represents that piece of the syntax tree \u2018highlighting\u2019 and gaining some z-depth and color. And, as more nested stuff is selected, the nodes are free to move even further away to demonstrate that deeper nesting.\n\nThat\u2019s one of the first pieces of none-2d-only sample I\u2019ve got. I\u2019m not too far away from doing things like, \u201cgive me all the nodes for class declarations and make a grid out of them\u201d or \u201cstack up all the functions and order them by width then height\u201d. This is where you come in - help me make more! "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "edited": {
            "user": "U03E4LY27FS",
            "ts": "1651934531.000000"
        },
        "client_msg_id": "51dc64b9-b3dd-4188-9fc6-442c1090d202",
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "bee7aa07-b240-4d38-a5c5-7a2ef514a4f0",
        "type": "message",
        "text": "And to add on because I\u2019m a chatterbox, something on my radar is a \u201cmetaphor mode\u201d where you can swap the rendering of each syntax item into a generic shape or back to text. Something like \u201cclasses are cubes, protocols are spheres, functions are pyramids\u201d and then having them hierarchically organized in a similar manner to the directory. All ways to get \u201cquick visual insight\u201d into what\u2019s currently rendered. Then, of course, there\u2019s things like \u201cdraw a line through these functions to show their execution order\u201d - I\u2019m working on that with the execution trace now, and the flashing text is showing each traced call happening in order. Making a directed line from that dealing with loops and the like is a burning goal..",
        "user": "U03E4LY27FS",
        "ts": "1651935242.907139",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n4voL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And to add on because I\u2019m a chatterbox, something on my radar is a \u201cmetaphor mode\u201d where you can swap the rendering of each syntax item into a generic shape or back to text. Something like \u201cclasses are cubes, protocols are spheres, functions are pyramids\u201d and then having them hierarchically organized in a similar manner to the directory. All ways to get \u201cquick visual insight\u201d into what\u2019s currently rendered. Then, of course, there\u2019s things like \u201cdraw a line through these functions to show their execution order\u201d - I\u2019m working on that with the execution trace now, and the flashing text is showing each traced call happening in order. Making a directed line from that dealing with loops and the like is a burning goal.."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "1CDB49A7-AF89-409C-B833-B72E74CE6C1D",
        "type": "message",
        "text": "Thanks for the detailed explanation <@U03E4LY27FS> ! Do you have a roadmap for the features you would like to add to the project?",
        "user": "U85HCL7JP",
        "ts": "1651937868.675569",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FGi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the detailed explanation "
                            },
                            {
                                "type": "user",
                                "user_id": "U03E4LY27FS"
                            },
                            {
                                "type": "text",
                                "text": " ! Do you have a roadmap for the features you would like to add to the project?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "5a1fa74a-4d4e-4659-a70d-33e9492552fd",
        "type": "message",
        "text": "It\u2019s a pleasure sir. However, I fear no roadmap that another human would find legible, heh. But now that you mention it, I think that\u2019s the focus for today. I want to get a few more samples on the page, and a part of that will be figuring out where I am. I\u2019m very curious if you have some ideas to bounce my way - what kinds of features would you like to see? (no pun intended. ok maybe a little.)    Let\u2019s say sky\u2019s the limit - what do you _wish_ you saw this doing?",
        "user": "U03E4LY27FS",
        "ts": "1651938043.363249",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dMh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s a pleasure sir. However, I fear no roadmap that another human would find legible, heh. But now that you mention it, I think that\u2019s the focus for today. I want to get a few more samples on the page, and a part of that will be figuring out where I am. I\u2019m very curious if you have some ideas to bounce my way - what kinds of features would you like to see? (no pun intended. ok maybe a little.)    Let\u2019s say sky\u2019s the limit - what do you "
                            },
                            {
                                "type": "text",
                                "text": "wish",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you saw this doing?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "bb39bcf8-cc12-4b14-ae62-9f5c0792a3c7",
        "type": "message",
        "text": "<@U03E4LY27FS> Thanks for sharing!  It can be dramatic!  I'm into visualizing execution traces.  Imagine each step as a little wooden strip, a popsicle stick.  Now you have a chain of them, a ribbon, millions of links long.  Use rules to fold that ribbon.\n\nFor example, here's a standard view that I like.  Developed in stages:\n1. Put each step below its predecessor.  The ribbon goes from the sky to the underworld.\n2. If a step is a call, put it to the right of its predecessor.  Now, the ribbon zigs from left to right.\n3. If a step is a return, put it to the left of its predecessor.  Now, the ribbon zigs and zags.  It's still quite tall.\n4. If there's a gap between a step and the one visually above it, collapse it.  Now this structure is compact with lots and lots of overlap in the middle.\n5. If some steps are on top of each other, put earlier steps in front of later steps.  Now we a nicely oriented 3D tree.  Left to right shows call stack depth.  Top to bottom is order of execution.  Front to back shows things at the same depth with the stuff the executed first in front.\nWalking around the tree gives you some perspective.   More comes from, say, making distances smaller the deeper you are in the stack.  It still looks like a mess.  But for me the real, real mind blower was to add a breeze.  Suddenly the connections in this elaborate structure are as easy to see as the separate branches of a real tree.",
        "user": "UA14TGLTC",
        "ts": "1651984070.639409",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/P2/j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03E4LY27FS"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for sharing!  It can be dramatic!  I'm into visualizing execution traces.  Imagine each step as a little wooden strip, a popsicle stick.  Now you have a chain of them, a ribbon, millions of links long.  Use rules to fold that ribbon.\n\nFor example, here's a standard view that I like.  Developed in stages:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Put each step below its predecessor.  The ribbon goes from the sky to the underworld."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If a step is a call, put it to the right of its predecessor.  Now, the ribbon zigs from left to right."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If a step is a return, put it to the left of its predecessor.  Now, the ribbon zigs and zags.  It's still quite tall."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If there's a gap between a step and the one visually above it, collapse it.  Now this structure is compact with lots and lots of overlap in the middle."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If some steps are on top of each other, put earlier steps in front of later steps.  Now we a nicely oriented 3D tree.  Left to right shows call stack depth.  Top to bottom is order of execution.  Front to back shows things at the same depth with the stuff the executed first in front."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWalking around the tree gives you some perspective.   More comes from, say, making distances smaller the deeper you are in the stack.  It still looks like a mess.  But for me the real, real mind blower was to add a breeze.  Suddenly the connections in this elaborate structure are as easy to see as the separate branches of a real tree."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "EB4CA158-5DA5-475B-A935-569C8BBFB315",
        "type": "message",
        "text": "<@UA14TGLTC> I'm really chewing on this layout algorithm. I'm trying to think how I would implement this with my current structures. The library currently traces entry and exit of calls, so I could handle the left/right distinction. The list is a set of ids, so theoretically it's not too hard to pull from the list as many times as can be rendered. The sky's the limit indeed.\n\nThis may sound simple, but I could render the persisted UUIDs that represent the call stack into a text layer. Then, stack these text-popsicle-sticks, and arrange them with the left/right pattern. The ifs have a static length so that's easy to make basic assumptions on for layout. It'll look like a big block of code, but indeed, with all those gaps and zig zagging, little mountains. I have a few questions about implementing that sort of packing algorithm! Haha.\n\nYou mentioned introducing a breeze - I'm not sure about that one, is that a technique for some kind of graph interaction? This is a first for me all around for this tech and these ideas, so I have a ton to learn and absorb.",
        "user": "U03E4LY27FS",
        "ts": "1651987551.541299",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03E4LY27FS",
            "ts": "1651987648.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MgW/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " I'm really chewing on this layout algorithm. I'm trying to think how I would implement this with my current structures. The library currently traces entry and exit of calls, so I could handle the left/right distinction. The list is a set of ids, so theoretically it's not too hard to pull from the list as many times as can be rendered. The sky's the limit indeed.\n\nThis may sound simple, but I could render the persisted UUIDs that represent the call stack into a text layer. Then, stack these text-popsicle-sticks, and arrange them with the left/right pattern. The ifs have a static length so that's easy to make basic assumptions on for layout. It'll look like a big block of code, but indeed, with all those gaps and zig zagging, little mountains. I have a few questions about implementing that sort of packing algorithm! Haha.\n\nYou mentioned introducing a breeze - I'm not sure about that one, is that a technique for some kind of graph interaction? This is a first for me all around for this tech and these ideas, so I have a ton to learn and absorb."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    },
    {
        "client_msg_id": "789537D0-111C-41FF-AAF3-EEB8570A3AD2",
        "type": "message",
        "text": "<@UA14TGLTC> that sounds cool! Have you seen any programs that let you visualize execution traces?",
        "user": "U85HCL7JP",
        "ts": "1652016909.768669",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/mG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " that sounds cool! Have you seen any programs that let you visualize execution traces?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651636380.628219",
        "parent_user_id": "U03E4LY27FS"
    }
]