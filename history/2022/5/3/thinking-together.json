[
    {
        "client_msg_id": "0746e008-65c3-43de-a536-54091f1d0854",
        "type": "message",
        "text": "*Visualizing data structures (e.g. in PostgreSQL)*\n\nWhen we think about the data structures our programs use or the execution flow of our programs, I\u2019m pretty sure we all think visually and if we had to explain it to someone we would be drawing diagrams on a whiteboard. Yet pretty much all our coding and debugging is text-based. We are forced to visualize things in our minds.\n\nI\u2019ve been debugging the PostgreSQL codebase to better understand how things work. I think a lot of people treat it like a scary magical black box, but it\u2019s quite easy to debug a query\u2019s execution path, and start to understand how it works.\n\nWhen we learn about databases, say from Andy Pavlo\u2019s CMU database course, there are a bunch of core diagrams used to explain things. Like the parse tree, logical plan tree, physical plan tree, disk storage layout, btree/bitmap/hashmap index, etc.\n\nSo what I was thinking was to instrument the PostgreSQL C codebase (via LLVM-IR), and then visualize some of the key data structures and stores. Imagine how easy it would be to teach database internals, if you could type in a query, and then visually step through the actual execution of the query with visual diagrams. I would imagine that any PowerPoint slides and diagrams could be replaced by this visual interface with a slider and some filtering options for what to show.",
        "user": "U03DEDRSHJA",
        "ts": "1651530151.507669",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HwDn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Visualizing data structures (e.g. in PostgreSQL)",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nWhen we think about the data structures our programs use or the execution flow of our programs, I\u2019m pretty sure we all think visually and if we had to explain it to someone we would be drawing diagrams on a whiteboard. Yet pretty much all our coding and debugging is text-based. We are forced to visualize things in our minds.\n\nI\u2019ve been debugging the PostgreSQL codebase to better understand how things work. I think a lot of people treat it like a scary magical black box, but it\u2019s quite easy to debug a query\u2019s execution path, and start to understand how it works.\n\nWhen we learn about databases, say from Andy Pavlo\u2019s CMU database course, there are a bunch of core diagrams used to explain things. Like the parse tree, logical plan tree, physical plan tree, disk storage layout, btree/bitmap/hashmap index, etc.\n\nSo what I was thinking was to instrument the PostgreSQL C codebase (via LLVM-IR), and then visualize some of the key data structures and stores. Imagine how easy it would be to teach database internals, if you could type in a query, and then visually step through the actual execution of the query with visual diagrams. I would imagine that any PowerPoint slides and diagrams could be replaced by this visual interface with a slider and some filtering options for what to show."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651530151.507669",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1651729599.192149",
        "reply_users": [
            "U03E4LY27FS",
            "U013ZLJARC7",
            "UDQBTJ211",
            "U02E4DAQGSZ"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UML4ZEKDK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "CB4A4447-9599-46AA-A86B-B494ABD25AB6",
        "type": "message",
        "text": "Vaughan, I'd like to personally offer my services to help with this! I'm writing an AR/VR application PoC for macOS/iOS that reads, analyzes, renders, traces, and plays back an executed path through code. It sounds very much like the raw set of tools that might help to put this together. Is this something you might find interesting?",
        "user": "U03E4LY27FS",
        "ts": "1651533647.171129",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BD00",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Vaughan, I'd like to personally offer my services to help with this! I'm writing an AR/VR application PoC for macOS/iOS that reads, analyzes, renders, traces, and plays back an executed path through code. It sounds very much like the raw set of tools that might help to put this together. Is this something you might find interesting?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651530151.507669",
        "parent_user_id": "U03DEDRSHJA",
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "UA14TGLTC",
                    "U03DEDRSHJA",
                    "U02NU8FTL5N",
                    "UCUSW7WVD"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "5d9b4fe9-c966-4a20-9142-b21170a3e2b7",
        "type": "message",
        "text": "Showing traces and visual structures is great for understanding :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1651560984.635089",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Khe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Showing traces and visual structures is great for understanding "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651530151.507669",
        "parent_user_id": "U03DEDRSHJA"
    },
    {
        "client_msg_id": "fdd4c4d8-6cf2-44b0-a436-4962f60f62c9",
        "type": "message",
        "text": "The hard part seems to be knowing the right level of detail to show. This is the bit that seems to need human-level intelligence. A lot of visualization tools produce unintelligible spaghetti when run against real data.",
        "user": "UDQBTJ211",
        "ts": "1651579878.499209",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NVHuh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The hard part seems to be knowing the right level of detail to show. This is the bit that seems to need human-level intelligence. A lot of visualization tools produce unintelligible spaghetti when run against real data."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651530151.507669",
        "parent_user_id": "U03DEDRSHJA",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03DEDRSHJA",
                    "U03E4LY27FS",
                    "U013ZLJARC7"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d58b6aff-b44e-4717-8c16-2bd4718d61c1",
        "type": "message",
        "text": "<@U013ZLJARC7> <@UDQBTJ211>\nI\u2019m happy to say I\u2019ve finally made the repo public and am excited to share with anyone willing to lend an eye or ear or hand or other useful appendage.\n<https://github.com/tikimcfee/LookAtThat>",
        "user": "U03E4LY27FS",
        "ts": "1651635912.201219",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ry5DW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": "\nI\u2019m happy to say I\u2019ve finally made the repo public and am excited to share with anyone willing to lend an eye or ear or hand or other useful appendage.\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/tikimcfee/LookAtThat"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651530151.507669",
        "parent_user_id": "U03DEDRSHJA"
    },
    {
        "client_msg_id": "323b7f62-97ef-4b9d-8c76-57ef85913436",
        "type": "message",
        "text": "I am hoping to achieve something similar with a Firebase server implementation (<https://observablehq.com/@tomlarkworthy/firebase-server-prototype-1>) It leaves its execution trace in the notebook, and you can interact with the request processing live using Chrome dev tools in the browser,  but unfortunately at the moment you have to be the owner of the notebook to have authority to attach the live coding hooks.  There is an embedded video of it working though.\n\nThe bit I am working on at the moment is explaining causal consistency &amp; at-least-once semantics. But I hit a fairly hard wall there as creating bespoke diagrams for each concept is quite a lot of work and each is quite a difficult concept. Consistency is super important for a DB but it does not so much manifest in data-structures but why components are connected in the order they are. Checking for causal consistency is kinda hard but it would be a visualization of each participants history on some load testing data.\n\nAnyway, my broader point is that I am super interested in collaboration with visualizing DB concepts. Very interested in what topics you will focus on.",
        "user": "U02E4DAQGSZ",
        "ts": "1651729599.192149",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QbKU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am hoping to achieve something similar with a Firebase server implementation ("
                            },
                            {
                                "type": "link",
                                "url": "https://observablehq.com/@tomlarkworthy/firebase-server-prototype-1"
                            },
                            {
                                "type": "text",
                                "text": ") It leaves its execution trace in the notebook, and you can interact with the request processing live using Chrome dev tools in the browser,  but unfortunately at the moment you have to be the owner of the notebook to have authority to attach the live coding hooks.  There is an embedded video of it working though.\n\nThe bit I am working on at the moment is explaining causal consistency & at-least-once semantics. But I hit a fairly hard wall there as creating bespoke diagrams for each concept is quite a lot of work and each is quite a difficult concept. Consistency is super important for a DB but it does not so much manifest in data-structures but why components are connected in the order they are. Checking for causal consistency is kinda hard but it would be a visualization of each participants history on some load testing data.\n\nAnyway, my broader point is that I am super interested in collaboration with visualizing DB concepts. Very interested in what topics you will focus on."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1651530151.507669",
        "parent_user_id": "U03DEDRSHJA",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03DEDRSHJA",
                    "U03E4LY27FS"
                ],
                "count": 2
            }
        ]
    }
]