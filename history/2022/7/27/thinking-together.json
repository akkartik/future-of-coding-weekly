[
    {
        "type": "message",
        "text": "A few days ago, I shared a link to this visual theorem proving system: <http://incredible.pm/>\n\nIt doesn\u2019t have Dependent Type Theory yet, so it can\u2019t quite do theorems about natural numbers yet. But it does go all the way to Simply Typed Lambda Calculus.\nI found it fascinating and have been solving the puzzles. Here\u2019s an idea that it triggered:\n\nWhat if we could build physical Lego-like blocks that represent these kind of reasoning and their shapes and ports support syntax-less proofs? Wires can carry truth values just like this simulator and variables can be introduced with specific connector shapes. Bugs like cyclic reasoning etc can probably be detected with feedback/amplification etc.\n\nMay be the idea is far-fetched but there are examples of people using physical programming blocks which are Turing-complete like Scratch and the block shapes naturally eliminate syntax errors and basic mistakes.",
        "files": [
            {
                "id": "F03R080V4J2",
                "created": 1658921243,
                "timestamp": 1658921243,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U018S42NMMM",
                "editable": false,
                "size": 74722,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F03R080V4J2/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F03R080V4J2/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 128,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 171,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 257,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 285,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 342,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R080V4J2-cc594f1462/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 365,
                "original_w": 2254,
                "original_h": 804,
                "thumb_tiny": "AwARADDTozRznrRQAlLSfWloAKKKQ5yMHAoAWiiigAooooAKKKKAP//Z",
                "permalink": "https://futureofcoding.slack.com/files/U018S42NMMM/F03R080V4J2/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F03R080V4J2-6af6479cfe",
                "is_starred": false,
                "has_rich_preview": false
            },
            {
                "id": "F03R99M2BPW",
                "created": 1658921405,
                "timestamp": 1658921405,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U018S42NMMM",
                "editable": false,
                "size": 56891,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F03R99M2BPW/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F03R99M2BPW/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 187,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 250,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 375,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 417,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 500,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R99M2BPW-a48419bf3f/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 533,
                "original_w": 1398,
                "original_h": 728,
                "thumb_tiny": "AwAYADDTozzimuxQZClvYUgHzlumeuaAHEgdTSg5prAEUb/mxg4xnNADqKaHUtjIzjNKGBJAOcUABGaMUtFACYpNv0p1FADQgHYfhS4Gc0tFAH//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/U018S42NMMM/F03R99M2BPW/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F03R99M2BPW-0c40906389",
                "is_starred": false,
                "has_rich_preview": false
            },
            {
                "id": "F03R6R9TK9R",
                "created": 1658921818,
                "timestamp": 1658921818,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U018S42NMMM",
                "editable": false,
                "size": 465725,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F03R6R9TK9R/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F03R6R9TK9R/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 338,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 450,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 676,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 751,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 901,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F03R6R9TK9R-d4a6d430db/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 961,
                "original_w": 1068,
                "original_h": 1002,
                "thumb_tiny": "AwAtADDRdwgBamtMi98/SmXZwq/WoNuQKaRXupXZZ89Pej7QnoaijiDHGcVJ9nX+8aNATiyVWDKGHelqMfJtUHI6VJSJuV7von1pi44zU08Rl24IGPWoQO1N2tqKb0SH/KKcFyMgUxUJOKnUFVA9Ky5U+pMRm0+lPQEDmlJIGcUKcihRSZYtVOQfSrdIVBOSAa0Jkrlbce3FL5j/AN41ZooSS6C5X3IEZmcAnIqcAAcUUUaFJWP/2Q==",
                "permalink": "https://futureofcoding.slack.com/files/U018S42NMMM/F03R6R9TK9R/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F03R6R9TK9R-924c311247",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U018S42NMMM",
        "ts": "1658922038.027239",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Wow",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A few days ago, I shared a link to this visual theorem proving system: "
                            },
                            {
                                "type": "link",
                                "url": "http://incredible.pm/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt doesn\u2019t have Dependent Type Theory yet, so it can\u2019t quite do theorems about natural numbers yet. But it does go all the way to Simply Typed Lambda Calculus.\nI found it fascinating and have been solving the puzzles. Here\u2019s an idea that it triggered:\n\nWhat if we could build physical Lego-like blocks that represent these kind of reasoning and their shapes and ports support syntax-less proofs? Wires can carry truth values just like this simulator and variables can be introduced with specific connector shapes. Bugs like cyclic reasoning etc can probably be detected with feedback/amplification etc.\n\nMay be the idea is far-fetched but there are examples of people using physical programming blocks which are Turing-complete like Scratch and the block shapes naturally eliminate syntax errors and basic mistakes."
                            }
                        ]
                    }
                ]
            }
        ],
        "edited": {
            "user": "U018S42NMMM",
            "ts": "1658922095.000000"
        },
        "client_msg_id": "5bbde74e-02de-420a-8d4a-93fc40b42e8d",
        "thread_ts": "1658922038.027239",
        "reply_count": 6,
        "reply_users_count": 5,
        "latest_reply": "1659169007.150249",
        "reply_users": [
            "U03RH5DFJ57",
            "U023V63MF6V",
            "UA14TGLTC",
            "UFPRPSA4S",
            "U018S42NMMM"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U014WA16VNJ",
                    "UFPRPSA4S",
                    "USH01JEDQ",
                    "U03RH5DFJ57"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "b9727847-ee6e-4f86-9db3-5ea0675a6e99",
        "type": "message",
        "text": "really love the idea of the shape of the blocks preventing errors. Would be super interesting to see if it also encourages exploration / curiosity. Maybe there\u2019s a block you\u2019ve never used before but it shares the shape with a block you\u2019re familiar with, maybe you\u2019d try it!\n\nI haven\u2019t used this myself, but this product appears to use the same shapes as the physical blocks you\u2019ve shared above \u2014 <https://thunkable.com/#/>",
        "user": "U03RH5DFJ57",
        "ts": "1658952491.229759",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://thunkable.com/#/",
                "image_url": "https://thunkable.com/img/og_logo.png",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 100380,
                "service_icon": "https://thunkable.com/favicon.png",
                "id": 1,
                "original_url": "https://thunkable.com/#/",
                "fallback": "Thunkable: Build powerful, native mobile apps without coding.: Thunkable: Best no code app builder | No code app creation",
                "text": "Thunkable is the no-code platform to build powerful, native mobile apps. With the simple drag-and-drop builder, open APIs, and advanced customization capabilities, we make it easy to bring your ideas to life. Get started for free today!",
                "title": "Thunkable: Best no code app builder | No code app creation",
                "title_link": "https://thunkable.com/#/",
                "service_name": "Thunkable: Build powerful, native mobile apps without coding."
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ftk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "really love the idea of the shape of the blocks preventing errors. Would be super interesting to see if it also encourages exploration / curiosity. Maybe there\u2019s a block you\u2019ve never used before but it shares the shape with a block you\u2019re familiar with, maybe you\u2019d try it!\n\nI haven\u2019t used this myself, but this product appears to use the same shapes as the physical blocks you\u2019ve shared above \u2014 "
                            },
                            {
                                "type": "link",
                                "url": "https://thunkable.com/#/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658922038.027239",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "93a7d6e8-2124-4890-b014-6fc4f3aa805e",
        "type": "message",
        "text": "<https://www.blawx.com/> is doing a domain specific version of it for legal",
        "user": "U023V63MF6V",
        "ts": "1658968430.622769",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HZo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.blawx.com/"
                            },
                            {
                                "type": "text",
                                "text": " is doing a domain specific version of it for legal"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658922038.027239",
        "parent_user_id": "U018S42NMMM",
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "U03RH5DFJ57"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "447ddb72-b40c-4b6c-8346-eb8ae803ecde",
        "type": "message",
        "text": "String diagrams come to mind <https://ncatlab.org/nlab/show/string+diagram>.",
        "user": "UA14TGLTC",
        "ts": "1659043943.720679",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wBKh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "String diagrams come to mind "
                            },
                            {
                                "type": "link",
                                "url": "https://ncatlab.org/nlab/show/string+diagram"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658922038.027239",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "0d4aea12-3f26-498f-864f-c4a6737f3f26",
        "type": "message",
        "text": "Sorin Lerner has a blocks-kind-of prototype for proofs in natural deduction. It's called \"Polymorphic Blocks\". Here is a link to a site where he talks about it: <https://cseweb.ucsd.edu/~lerner/pg.html> .",
        "user": "UFPRPSA4S",
        "ts": "1659047200.864989",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LOg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorin Lerner has a blocks-kind-of prototype for proofs in natural deduction. It's called \"Polymorphic Blocks\". Here is a link to a site where he talks about it: "
                            },
                            {
                                "type": "link",
                                "url": "https://cseweb.ucsd.edu/~lerner/pg.html"
                            },
                            {
                                "type": "text",
                                "text": " ."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658922038.027239",
        "parent_user_id": "U018S42NMMM",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "U018S42NMMM"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "527d1eba-43b0-45b4-b508-944d64b34ae9",
        "type": "message",
        "text": "<@UFPRPSA4S> Polymorphic blocks was a fantastic share. I can't find the actual game but Sorin's talk was super-interesting. Thanks for sharing!\n\n<@UA14TGLTC> I'll have to find a less technical treatment of string diagrams to understand them. :grin:",
        "user": "U018S42NMMM",
        "ts": "1659104878.252949",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AWJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFPRPSA4S"
                            },
                            {
                                "type": "text",
                                "text": " Polymorphic blocks was a fantastic share. I can't find the actual game but Sorin's talk was super-interesting. Thanks for sharing!\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " I'll have to find a less technical treatment of string diagrams to understand them. "
                            },
                            {
                                "type": "emoji",
                                "name": "grin",
                                "unicode": "1f601"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658922038.027239",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "55429ad1-1610-4959-8f3a-6a349f6a5f98",
        "type": "message",
        "text": "That is oh so fair!  Here's the least technical introduction I know.  <https://graphicallinearalgebra.net/>",
        "user": "UA14TGLTC",
        "ts": "1659169007.150249",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://graphicallinearalgebra.net/",
                "thumb_url": "https://graphicallinearalgebra.files.wordpress.com/2015/04/dec4.jpg?w=300&fit=200%2C150",
                "thumb_width": 200,
                "thumb_height": 39,
                "service_icon": "https://s2.wp.com/i/webclip.png",
                "id": 1,
                "original_url": "https://graphicallinearalgebra.net/",
                "fallback": "Graphical Linear Algebra Link: Index",
                "text": "Applications are open for the ACT Applied Category Theory Research School 2018!\nAnd because arithmetic science and geometric science are connected, and support one another, the full knowledge of numbers cannot be presented without encountering some geometry, or without seeing that operating in this way on numbers is close to geometry; the method is full of many proofs and demonstrations that are made with geometric figures.\nFibonacci, preface to Liber Abaci\n(first published 1202, 1228 manuscript translated by Lawrence E. Sigler)\n\n\nIf you like this blog, please subscribe to get email updates when new articles are published. You will find a subscription link at the bottom of this page.\nGraphical linear algebra is a work in progress, and there are many open research threads. We are looking for PhD students, so please consider applying!\nThis blog is written in English. To read and contribute to translations (Dutch, French, German,&hellip;) see this page by Vincent Verheyen.\nIntroduction\nEpisode 1&nbsp;&ndash; Mak&eacute;l&eacute;l&eacute; and Linear Algebra\nEpisode 2 &ndash; Methodology, Handwaving and Diagrams\nAdding and Copying\nEpisode 3 &ndash; Adding (Part 1) and Mr Fibonacci\nEpisode 4 &ndash; Dumbing Down and Magic Lego\nEpisode 5 &ndash; Spoilers, Adding (Part 2) and Zero\nEpisode 6 &ndash; Crema di Mascarpone and Diagrammatic Reasoning\nEpisode 7 &ndash; Copying, Discarding and The Slogan\nEpisode 8 &ndash; When Adding met Copying&hellip;\nEpisode 9 &ndash; Natural numbers, diagrammatically\nMatrices and PROPs\nEpisode 10 &ndash; Paths and Matrices\nEpisode 11 &ndash; From Diagrams to Matrices\nEpisode 12 &ndash; Monoidal Categories and PROPs (Part 1)\nEpisode 13 &ndash; PROPs (Part 2) and Permutations\nEpisode 14 &ndash; Homomorphisms of PROPs\nEpisode 15 &ndash; Matrices, diagrammatically\nEpisode 16 &ndash; Trust the Homomorphism, for it is Fully Faithful\nIntegers and Relations\nEpisode 17 &ndash; Maths with Diagrams\nEpisode 18 &ndash; Introducing the Antipode\nEpisode 19 &ndash; Integer matrices\nEpisode 20 &ndash; Causality, Feedback and Relations\nEpisode 21 &ndash; Functions and Relations, diagrammatically\nEpisode 22 &ndash; The Frobenius Equation\nEpisode 23 &ndash; Frobenius Snakes and Spiders\nFractions and Spaces\nEpisode 24 &ndash; Bringing it all together\nEpisode 25 &ndash; Fractions, diagrammatically\nEpisode 26 &ndash; Keep Calm and Divide by Zero\nEpisode 27 &ndash; Linear Relations\nEpisode 28 &ndash; Subspaces, diagrammatically\nEpisode 29 &ndash; Dividing by zero to invert matrices\nEpisode 30 &ndash; The essence of graphical linear algebra\nRedundancy &ndash; A trilogy by Jason Erbele\nEpisode R1 &ndash; Redundancy and Zebra Snakes\n&nbsp;\nInterlude &ndash; string diagrams and resource-sensitive syntax\nWhy string diagrams?\nSequences and Signal Flow Graphs\nEpisode 31 &ndash; Fibonacci and sustainable rabbit farming\n&nbsp;\nOut of order (for now)\nOrthogonality and projections\nEigenstuff, diagrammatically\n&nbsp;\nContributions\nDeterminants and the Lindstr&ouml;m-Gessel-Vienot Lemma &ndash; by Solomon Maina\n&nbsp;\n&nbsp;\nOfftopic\nSometimes this blog actually looks like a blog.\n16 September 2016 &ndash; Leicester and the battle for universities\n16 April 2017 &ndash;&nbsp;&hellip;, a monoid is a category, a category is a monad, a monad is a monoid, &hellip;\n&nbsp;10 May 2017 &ndash;&nbsp;1st Workshop on String Diagrams in Computation, Logic, and Physics\n3 October 2018 &ndash; ACT 2018 &ndash;&nbsp;Applied Category Theory Research&nbsp;School",
                "title": "Index",
                "title_link": "https://graphicallinearalgebra.net/",
                "author_name": "pawel",
                "author_link": "https://graphicallinearalgebra.net/author/pawelsobocinski/",
                "service_name": "Graphical Linear Algebra",
                "service_url": "http://graphicallinearalgebra.net/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AqSiV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That is oh so fair!  Here's the least technical introduction I know.  "
                            },
                            {
                                "type": "link",
                                "url": "https://graphicallinearalgebra.net/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658922038.027239",
        "parent_user_id": "U018S42NMMM",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U018S42NMMM"
                ],
                "count": 1
            }
        ]
    }
]