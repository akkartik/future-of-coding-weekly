[
    {
        "client_msg_id": "e362d26c-86ae-483e-bdae-3122ee4ef4b2",
        "type": "message",
        "text": "<@U02U0AS3J49> did you have something to do with <https://medium.com/@ishtiaque/no-code-isnt-scalable-our-learnings-at-finn-going-from-1000-toward-100-000-car-subscriptions-ac98e752fc61>? The images look _awfully_ similar to your <https://jasonmorrissc.github.io/post/2022-02-24_no-code>",
        "user": "UCUSW7WVD",
        "ts": "1658717052.828609",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V1QQB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": " did you have something to do with "
                            },
                            {
                                "type": "link",
                                "url": "https://medium.com/@ishtiaque/no-code-isnt-scalable-our-learnings-at-finn-going-from-1000-toward-100-000-car-subscriptions-ac98e752fc61"
                            },
                            {
                                "type": "text",
                                "text": "? The images look "
                            },
                            {
                                "type": "text",
                                "text": "awfully",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " similar to your "
                            },
                            {
                                "type": "link",
                                "url": "https://jasonmorrissc.github.io/post/2022-02-24_no-code"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658717052.828609",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1658881608.302769",
        "reply_users": [
            "U02U0AS3J49",
            "UCUSW7WVD",
            "U01JNTE35QS"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "03082531-3227-490d-8f2b-62911c87b202",
        "type": "message",
        "text": "No, nothing to do with it. I see they have linked to my blog for credit for the one image.",
        "user": "U02U0AS3J49",
        "ts": "1658717477.335769",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eOl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, nothing to do with it. I see they have linked to my blog for credit for the one image."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658717052.828609",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "bb0fdb19-1303-427f-8e1d-e18ae9c6293c",
        "type": "message",
        "text": "Oh interesting, sorry I missed that.",
        "user": "UCUSW7WVD",
        "ts": "1658717605.269789",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mnf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh interesting, sorry I missed that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658717052.828609",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "2e2ba1b8-814c-49c4-a381-6b19a92b30a7",
        "type": "message",
        "text": "Thanks for pointing it out. Interesting to see what sorts of things get traction.",
        "user": "U02U0AS3J49",
        "ts": "1658717678.323019",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XuBOL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for pointing it out. Interesting to see what sorts of things get traction."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658717052.828609",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ad5f22ac-85fc-422f-8b3c-2599882b7d9a",
        "type": "message",
        "text": "A very nice (longish but enjoyable) read this morning. Performance comparison: counting words in Python, C/C++, Awk, Rust, and more - <https://benhoyt.com/writings/count-words/|https://benhoyt.com/writings/count-words/>",
        "user": "UPVBV34EL",
        "ts": "1658719664.388359",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "weu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A very nice (longish but enjoyable) read this morning. Performance comparison: counting words in Python, C/C++, Awk, Rust, and more - "
                            },
                            {
                                "type": "link",
                                "url": "https://benhoyt.com/writings/count-words/",
                                "text": "https://benhoyt.com/writings/count-words/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658719664.388359",
        "reply_count": 7,
        "reply_users_count": 3,
        "latest_reply": "1658906950.413889",
        "reply_users": [
            "U013ZLJARC7",
            "U03LT7540HZ",
            "UA14TGLTC"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "612176c8-8c95-47bc-b358-e8ac5ce857d8",
        "type": "message",
        "text": "N.B. the \"optimized\" awk example is just the normal way to do it in awk. :slightly_smiling_face:\n\nI'm pleasantly surprised by the performance of the Java version. OTOH, the Common Lisp implementation looks like it was written by someone who doesn't know very much CL. :man-shrugging::skin-tone-2:",
        "user": "U013ZLJARC7",
        "ts": "1658739685.711059",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z59",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "N.B. the \"optimized\" awk example is just the normal way to do it in awk. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI'm pleasantly surprised by the performance of the Java version. OTOH, the Common Lisp implementation looks like it was written by someone who doesn't know very much CL. "
                            },
                            {
                                "type": "emoji",
                                "name": "man-shrugging",
                                "unicode": "1f937-1f3fb-200d-2642-fe0f",
                                "skin_tone": 2
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658719664.388359",
        "parent_user_id": "UPVBV34EL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPVBV34EL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7f5dab11-5614-4f2d-9314-4d6022bcf553",
        "type": "message",
        "text": "that's one of the problem with contrived examples for benchmarks, the implementation quality is disputed, as is the task for comparison",
        "user": "U03LT7540HZ",
        "ts": "1658777923.530639",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x=c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's one of the problem with contrived examples for benchmarks, the implementation quality is disputed, as is the task for comparison"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658719664.388359",
        "parent_user_id": "UPVBV34EL",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U013ZLJARC7",
                    "UPVBV34EL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b56a538f-c3f9-4099-bf24-ff4c19216603",
        "type": "message",
        "text": "That, and very few real programs spend all their time doing &lt;whatever microbenchmark&gt;.",
        "user": "U013ZLJARC7",
        "ts": "1658818098.559019",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GOrbi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That, and very few real programs spend all their time doing <whatever microbenchmark>."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658719664.388359",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "client_msg_id": "a3c953a7-d2f0-4f01-909d-c6892e87d4bd",
        "type": "message",
        "text": "For benchmarking this is not a good task.  As the kind of thing I write all the time, the start of an interview for fresh grads, it's not so bad.  Let's see now.\n\nHmm, this Ruby smells...\n```counts = Hash.new(0)\nSTDIN.each_line { |line| line.downcase.split.each { |w| counts[w] += 1 }}\ncounts.sort_by { |k,v| -v }.each { |k,v| puts \"#{k} #{v}\" }```\nold.  A quick round of golf:\n```STDIN.flat_map{_1.downcase.split}.\n  tally.sort_by{-_2}.\n  each{puts _1.join(\" \")}```\nIt only goes to show that counting things is a common Rubyism.\n\nGames like this always remind me of the _The Evolution of a Haskell Programmer_ <https://pages.cpsc.ucalgary.ca/~robin/class/449/Evolution.htm>.",
        "user": "UA14TGLTC",
        "ts": "1658825714.755789",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pVfSK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For benchmarking this is not a good task.  As the kind of thing I write all the time, the start of an interview for fresh grads, it's not so bad.  Let's see now.\n\nHmm, this Ruby smells...\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "counts = Hash.new(0)\nSTDIN.each_line { |line| line.downcase.split.each { |w| counts[w] += 1 }}\ncounts.sort_by { |k,v| -v }.each { |k,v| puts \"#{k} #{v}\" }"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "old.  A quick round of golf:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "STDIN.flat_map{_1.downcase.split}.\n  tally.sort_by{-_2}.\n  each{puts _1.join(\" \")}"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It only goes to show that counting things is a common Rubyism.\n\nGames like this always remind me of the "
                            },
                            {
                                "type": "text",
                                "text": "The Evolution of a Haskell Programmer ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https://pages.cpsc.ucalgary.ca/~robin/class/449/Evolution.htm"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658719664.388359",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "client_msg_id": "c9343671-8628-4e88-a24a-805f35d91e8d",
        "type": "message",
        "text": "`cat file.txt | wc -w`",
        "user": "U03LT7540HZ",
        "ts": "1658866898.991459",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Te3k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "cat file.txt | wc -w",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658719664.388359",
        "parent_user_id": "UPVBV34EL",
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0043928d-a294-49c8-9722-8a806c3b2753",
        "type": "message",
        "text": "I suppose they are counting how many times each word appears...",
        "user": "U03LT7540HZ",
        "ts": "1658866928.429499",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "66s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose they are counting how many times each word appears..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658719664.388359",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "client_msg_id": "8bd41914-253d-43a9-81a8-81cebb171114",
        "type": "message",
        "text": "I feel like this is a strange way to look at no-code platforms. They seem to have jumped to conclusions on the workings of these kinds of platform based on a few (IMHO not designed for scale and extensibility) exemplars.",
        "user": "U01JNTE35QS",
        "ts": "1658881608.302769",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=XWOs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like this is a strange way to look at no-code platforms. They seem to have jumped to conclusions on the workings of these kinds of platform based on a few (IMHO not designed for scale and extensibility) exemplars."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658717052.828609",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "cec80f5e-201e-4067-a2d2-347b2fae4af8",
        "type": "message",
        "text": "<https://porkmail.org/era/unix/award>",
        "user": "U013ZLJARC7",
        "ts": "1658906950.413889",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vh3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://porkmail.org/era/unix/award"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1658719664.388359",
        "parent_user_id": "UPVBV34EL"
    }
]