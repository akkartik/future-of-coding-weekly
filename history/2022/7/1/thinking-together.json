[
    {
        "client_msg_id": "2ddf43bd-a702-4f8b-a07a-42ed2e33f180",
        "type": "message",
        "text": "I'm looking for some pointers/articles/papers on abstractions for incremental computations. Something that describes a Computation that can compute a value on demand and has Dependencies and the value is invalidated when one of the Dependencies change... and a Computation can also be a Dependency of another computation. But more detailed and more rigorous. Has anybody ever seen such a thing?",
        "user": "UNKSN1MRQ",
        "ts": "1656690451.872139",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ms3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm looking for some pointers/articles/papers on abstractions for incremental computations. Something that describes a Computation that can compute a value on demand and has Dependencies and the value is invalidated when one of the Dependencies change... and a Computation can also be a Dependency of another computation. But more detailed and more rigorous. Has anybody ever seen such a thing?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "reply_count": 20,
        "reply_users_count": 13,
        "latest_reply": "1656864191.367979",
        "reply_users": [
            "UJBAJNFLK",
            "UBN9AFS0N",
            "UEBG0NPDK",
            "UK3LH8CF5",
            "UNKSN1MRQ",
            "U03LT7540HZ",
            "U71PMQ1V0",
            "U03LMRC6FFY",
            "U0378MDUG1Y",
            "U02E4DAQGSZ",
            "UCUSW7WVD",
            "UUQ2EQW21",
            "U022YTVTSR5"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1656864191.367979",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "FCB03580-3CE6-4132-BC5B-476541C1AD10",
        "type": "message",
        "text": "Would dataflow fit your requirement list? <https://en.wikipedia.org/wiki/Dataflow|https://en.wikipedia.org/wiki/Dataflow>",
        "user": "UJBAJNFLK",
        "ts": "1656690734.784459",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pSuxt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "dataflow"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "fit"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "your"
                            },
                            {
                                "type": "text",
                                "text": " requirement "
                            },
                            {
                                "type": "text",
                                "text": "list?"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Dataflow",
                                "text": "https://en.wikipedia.org/wiki/Dataflow"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "d1210ae3-6054-4aca-845f-928a187446b5",
        "type": "message",
        "text": "Timely Dataflow: <https://dl.acm.org/doi/abs/10.1145/2517349.2522738>",
        "user": "UBN9AFS0N",
        "ts": "1656690736.580249",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ET4gQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Timely Dataflow: "
                            },
                            {
                                "type": "link",
                                "url": "https://dl.acm.org/doi/abs/10.1145/2517349.2522738"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "9d3acf9f-2fc7-438b-b23a-c538b5e734da",
        "type": "message",
        "text": "Diferential Dataflow: <https://link.springer.com/content/pdf/10.1007/978-3-662-46678-0_5.pdf>",
        "user": "UBN9AFS0N",
        "ts": "1656690762.746619",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mr8uQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Diferential Dataflow: "
                            },
                            {
                                "type": "link",
                                "url": "https://link.springer.com/content/pdf/10.1007/978-3-662-46678-0_5.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "bfdac731-fd54-4b7f-b3cf-4de99d4d7688",
        "type": "message",
        "text": "More \"concrete\": <https://materialize.com/life-in-differential-dataflow/>",
        "user": "UBN9AFS0N",
        "ts": "1656690849.496649",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://materialize.com/life-in-differential-dataflow/",
                "ts": 1610382781,
                "image_url": "https://materialize.com/wp-content/uploads/2021/01/Differential-Dataflow.jpg",
                "image_width": 624,
                "image_height": 250,
                "image_bytes": 173979,
                "service_icon": "https://materialize.com/wp-content/themes/materializeKNI/img/favicon.ico",
                "id": 1,
                "original_url": "https://materialize.com/life-in-differential-dataflow/",
                "fallback": "Materialize: Life in Differential Dataflow - Materialize",
                "text": "I\u2019ve been working at Materialize for almost a year now, and I have really enjoyed learning about and using Differential Dataflow (hereafter just Differential) in my day-to-day work. In this post, I\u2019ll introduce Differential and talk through implementing a few common programming problems like list intersection and everyone\u2019s favorite, FizzBuzz, as dataflow programs. Finally, I\u2019ll [\u2026]",
                "title": "Life in Differential Dataflow - Materialize",
                "title_link": "https://materialize.com/life-in-differential-dataflow/",
                "service_name": "Materialize",
                "fields": [
                    {
                        "value": "wpengine",
                        "title": "Written by",
                        "short": true
                    },
                    {
                        "value": "23 minutes",
                        "title": "Est. reading time",
                        "short": true
                    }
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l8q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More \"concrete\": "
                            },
                            {
                                "type": "link",
                                "url": "https://materialize.com/life-in-differential-dataflow/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "b219f739-854b-469c-8f30-2dbee2f18bf3",
        "type": "message",
        "text": "Things to look up: Adapton, Self adjusting computation, dataflow, Salsa (rust), Reactive programming/systems",
        "user": "UEBG0NPDK",
        "ts": "1656691051.541299",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AdWJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Things to look up: Adapton, Self adjusting computation, dataflow, Salsa (rust), Reactive programming/systems"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "cf288d8a-0982-4de8-aff0-3b06c0e76c77",
        "type": "message",
        "text": "glimmer is another such system, though more focused on the UI side",
        "user": "UEBG0NPDK",
        "ts": "1656691090.692959",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1656691112.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0ynwZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "glimmer is another such system, though more focused on the UI side"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "ed85ca4a-18af-4e2f-94fd-59f3caf1f947",
        "type": "message",
        "text": "Jane street has a library called incremental based on works by Umut Acar. \n\n<https://blog.janestreet.com/introducing-incremental/|https://blog.janestreet.com/introducing-incremental/>\n<https://www.ccs.neu.edu/home/amal/papers/impselfadj.pdf|https://www.ccs.neu.edu/home/amal/papers/impselfadj.pdf>\n\nI've found dissertations to be the best place to learn hard technical things. They are long. But almost always assume less prior knowledge and give you lots of references.",
        "user": "UK3LH8CF5",
        "ts": "1656691486.974679",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QJMrI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Jane street has a library called incremental based on works by Umut Acar. \n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://blog.janestreet.com/introducing-incremental/",
                                "text": "https://blog.janestreet.com/introducing-incremental/"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.ccs.neu.edu/home/amal/papers/impselfadj.pdf",
                                "text": "https://www.ccs.neu.edu/home/amal/papers/impselfadj.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI've found dissertations to be the best place to learn hard technical things. They are long. But almost always assume less prior knowledge and give you lots of references."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "17822b48-4193-4208-9eec-5fd59b66d4de",
        "type": "message",
        "text": "Thank you all for all the pointers so far. I have a lot to look through :slightly_smiling_face:",
        "user": "UNKSN1MRQ",
        "ts": "1656691799.448319",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d9o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you all for all the pointers so far. I have a lot to look through "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "44e044c2-4a33-428a-980b-706d333568af",
        "type": "message",
        "text": "<https://dagger.io> can do this, built on BuildKit and CUE (cue/flow)\n\nauto dependency detection and knows when inputs have changed and something needs to be rerun / recalced",
        "user": "U03LT7540HZ",
        "ts": "1656692052.878849",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://dagger.io/",
                "thumb_url": "https://dagger.io/logo_990x520.png",
                "thumb_width": 990,
                "thumb_height": 520,
                "service_icon": "https://dagger.io/favicon.png",
                "id": 1,
                "original_url": "https://dagger.io",
                "fallback": "dagger.io",
                "text": "A portable devkit for CICD pipelines, by the creators of Docker. Powered by CUE and Buildkit.",
                "title": "dagger.io",
                "title_link": "https://dagger.io/",
                "service_name": "dagger.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X4aPe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://dagger.io"
                            },
                            {
                                "type": "text",
                                "text": " can do this, built on BuildKit and CUE (cue/flow)\n\nauto dependency detection and knows when inputs have changed and something needs to be rerun / recalced"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "77bb771a-e4b6-4506-bc8f-51b6a85ac5ec",
        "type": "message",
        "text": "It's a lot more than a devkit for CICD",
        "user": "U03LT7540HZ",
        "ts": "1656692076.435849",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OIj+9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a lot more than a devkit for CICD"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "1b9316ee-df28-45aa-b779-6fa4c3ba18bf",
        "type": "message",
        "text": "<https://www.scattered-thoughts.net/writing/an-opinionated-map-of-incremental-and-streaming-systems>",
        "user": "U71PMQ1V0",
        "ts": "1656700645.128229",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D2N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.scattered-thoughts.net/writing/an-opinionated-map-of-incremental-and-streaming-systems"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "2aab6d4c-3188-4342-a3ea-5fbc33f66f69",
        "type": "message",
        "text": "<https://www.microsoft.com/en-us/research/uploads/prod/2018/03/build-systems.pdf>",
        "user": "U71PMQ1V0",
        "ts": "1656700659.596749",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YNaQF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.microsoft.com/en-us/research/uploads/prod/2018/03/build-systems.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "f4232bd2-7d5a-41b3-9a32-dbfe92d33298",
        "type": "message",
        "text": "FRP: <http://conal.net/papers/frp.html|http://conal.net/papers/frp.html>",
        "user": "U03LMRC6FFY",
        "ts": "1656706303.749719",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b22",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FRP: "
                            },
                            {
                                "type": "link",
                                "url": "http://conal.net/papers/frp.html",
                                "text": "http://conal.net/papers/frp.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "2BCD63C0-D4BD-4679-8E99-E5468E2D51E2",
        "type": "message",
        "text": "Branching off FRP, i would recommend a javascript libray like `@vue/reactivity`, solidjs, ect.\n\n```import {ref, computed} from \u2018@vue/reactivity\u2019\n\nconst count = ref(0)\nconst doubleCount = computed(() =&gt; count.value * 2)\n\nconsole.log(count.value, doubleCount.value) // 0, 1\n\ncount.value++\n\nconsole.log(count.value, doubleCount.value) // 1, 2```\n",
        "user": "U0378MDUG1Y",
        "ts": "1656708698.743159",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1656708730.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F8jO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Branching off FRP, i would recommend a javascript libray like `@vue/reactivity`,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "solidjs,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "ect."
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "import {ref, computed} from \u2018@vue/reactivity\u2019\n\nconst count = ref(0)\nconst doubleCount = computed(() => count.value * 2)\n\nconsole.log(count.value, doubleCount.value) // 0, 1\n\ncount.value++\n\nconsole.log(count.value, doubleCount.value) // 1, 2"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "71332cb3-49bb-422c-a750-b59f73389ec9",
        "type": "message",
        "text": "<http://observablehq.com|observablehq.com> notebooks are functional reactive graphs that do the correct thing when code changes (like spreadhseets). The runtime is open source: <https://github.com/observablehq/runtime>.  An explanation of the execution is here: <https://observablehq.com/@observablehq/how-observable-runs>",
        "user": "U02E4DAQGSZ",
        "ts": "1656713956.991609",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1656714363.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BQ4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http://observablehq.com",
                                "text": "observablehq.com"
                            },
                            {
                                "type": "text",
                                "text": " notebooks are functional reactive graphs that do the correct thing when code changes (like spreadhseets). The runtime is open source: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/observablehq/runtime"
                            },
                            {
                                "type": "text",
                                "text": ".  An explanation of the execution is here: "
                            },
                            {
                                "type": "link",
                                "url": "https://observablehq.com/@observablehq/how-observable-runs"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "ae1a57cd-0a92-45aa-8357-c02360b9d5ff",
        "type": "message",
        "text": "Partial evaluation may also be relevant.",
        "user": "UCUSW7WVD",
        "ts": "1656715551.046369",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FO/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Partial evaluation may also be relevant."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "358423fa-0885-4d28-9488-1a5ba3f7e894",
        "type": "message",
        "text": "Maya uses a Directed Acyclic Graph,  I guess this is one implementation of DataFlow.  In Maya\u2019s system, nodes are invalidated when data is pushed onto connections on the node, and the dirty state is propagated to all  dependent nodes.  When connections are read, nodes are computed up the chain until the connection can be validated.  Maya has an interesting design where nodes can also be part of a hierarchy (used to evaluate a scene graph for geometry transforms, etc.). Since I read about this \u2018first\u2019, a lot of my graph designs use a similar approach; it\u2019s the first thing that made sense to me.",
        "user": "UUQ2EQW21",
        "ts": "1656748867.417859",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HgH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maya uses a Directed Acyclic Graph,  I guess this is one implementation of DataFlow.  In Maya\u2019s system, nodes are invalidated when data is pushed onto connections on the node, and the dirty state is propagated to all  dependent nodes.  When connections are read, nodes are computed up the chain until the connection can be validated.  Maya has an interesting design where nodes can also be part of a hierarchy (used to evaluate a scene graph for geometry transforms, etc.). Since I read about this \u2018first\u2019, a lot of my graph designs use a similar approach; it\u2019s the first thing that made sense to me."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "5064B977-0148-45AC-80BE-F85284B70AC1",
        "type": "message",
        "text": "Thank you all! I'm going to study Jane Street\u2019s Incremental next, and I also found the \u201cmap\u201d by <@U71PMQ1V0> very helpful.\n\nMy context is I want to prototype a system for storing DSL models in the form of ASTs and doing transformations on them (type checking, interpretation, etc.). I don\u2019t think I will find an existing implementation I could directly reuse, but I hope to borrow ideas.",
        "user": "UNKSN1MRQ",
        "ts": "1656749643.835119",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wpiP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "you"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "all!"
                            },
                            {
                                "type": "text",
                                "text": " I'm "
                            },
                            {
                                "type": "text",
                                "text": "going"
                            },
                            {
                                "type": "text",
                                "text": " to study "
                            },
                            {
                                "type": "text",
                                "text": "Jane"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "Street\u2019s"
                            },
                            {
                                "type": "text",
                                "text": " Incremental "
                            },
                            {
                                "type": "text",
                                "text": "next,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "also"
                            },
                            {
                                "type": "text",
                                "text": " found "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "\u201cmap\u201d"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "by"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U71PMQ1V0"
                            },
                            {
                                "type": "text",
                                "text": " very "
                            },
                            {
                                "type": "text",
                                "text": "helpful."
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "My"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "context is I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "want"
                            },
                            {
                                "type": "text",
                                "text": " to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "prototype "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "system"
                            },
                            {
                                "type": "text",
                                "text": " for storing "
                            },
                            {
                                "type": "text",
                                "text": "DSL"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "models"
                            },
                            {
                                "type": "text",
                                "text": " in the form of "
                            },
                            {
                                "type": "text",
                                "text": "ASTs"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "and"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "doing"
                            },
                            {
                                "type": "text",
                                "text": " transformations "
                            },
                            {
                                "type": "text",
                                "text": "on"
                            },
                            {
                                "type": "text",
                                "text": " them "
                            },
                            {
                                "type": "text",
                                "text": "(type"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "checking,"
                            },
                            {
                                "type": "text",
                                "text": " interpretation"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "etc.)."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "don\u2019t"
                            },
                            {
                                "type": "text",
                                "text": " think"
                            },
                            {
                                "type": "text",
                                "text": " I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "will"
                            },
                            {
                                "type": "text",
                                "text": " find"
                            },
                            {
                                "type": "text",
                                "text": " an"
                            },
                            {
                                "type": "text",
                                "text": " existing implementation "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "could"
                            },
                            {
                                "type": "text",
                                "text": " directly"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "reuse"
                            },
                            {
                                "type": "text",
                                "text": ", but I "
                            },
                            {
                                "type": "text",
                                "text": "hope "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " borrow"
                            },
                            {
                                "type": "text",
                                "text": " ideas."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "0CC7F706-3418-4CF1-9A66-1CB514267358",
        "type": "message",
        "text": "Adapton looks like what I\u2019m looking for, too.",
        "user": "UNKSN1MRQ",
        "ts": "1656780148.581179",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ItrA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Adapton"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "looks"
                            },
                            {
                                "type": "text",
                                "text": " like what "
                            },
                            {
                                "type": "text",
                                "text": "I\u2019m"
                            },
                            {
                                "type": "text",
                                "text": " looking for"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "too."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    },
    {
        "client_msg_id": "5066a2ec-8577-471a-8a2a-427f712ccc64",
        "type": "message",
        "text": "I love this post: <https://lord.io/spreadsheets/>\nThe \"further reading\" section at the bottom also has great pointers.",
        "user": "U022YTVTSR5",
        "ts": "1656864191.367979",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1FB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love this post: "
                            },
                            {
                                "type": "link",
                                "url": "https://lord.io/spreadsheets/"
                            },
                            {
                                "type": "text",
                                "text": "\nThe \"further reading\" section at the bottom also has great pointers."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1656690451.872139",
        "parent_user_id": "UNKSN1MRQ"
    }
]