[
    {
        "client_msg_id": "6ae9d77d-cba6-43d8-a757-97afb7d9413b",
        "type": "message",
        "text": ":movie_camera: GlooEye Week 4: Slack API, Markdown Support, JSON Interactions\n\n00:05 Slack API\n00:35 Post Message Endpoint\n01:02 Slack Block Kit Support &amp; Live Preview\n01:53 Send Message to Slack\n02:32 JSON Collapse/Expand One/All\n02:54 Conversation List Endpoint\n\n<https://www.youtube.com/watch?v=HeHzmnr_ZRE>",
        "user": "UBN9AFS0N",
        "ts": "1659011545.682509",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=HeHzmnr_ZRE",
                "thumb_url": "https://i.ytimg.com/vi/HeHzmnr_ZRE/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/HeHzmnr_ZRE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"GlooEye Week 4: Slack API, Markdown Support, JSON Interactions\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=HeHzmnr_ZRE",
                "fallback": "YouTube Video: GlooEye Week 4: Slack API, Markdown Support, JSON Interactions",
                "title": "GlooEye Week 4: Slack API, Markdown Support, JSON Interactions",
                "title_link": "https://www.youtube.com/watch?v=HeHzmnr_ZRE",
                "author_name": "Mariano Guerra",
                "author_link": "https://www.youtube.com/channel/UCClGtlJCSqySTuKL1-G2k_Q",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jET+D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "movie_camera",
                                "unicode": "1f3a5"
                            },
                            {
                                "type": "text",
                                "text": " GlooEye Week 4: Slack API, Markdown Support, JSON Interactions\n\n00:05 Slack API\n00:35 Post Message Endpoint\n01:02 Slack Block Kit Support & Live Preview\n01:53 Send Message to Slack\n02:32 JSON Collapse/Expand One/All\n02:54 Conversation List Endpoint\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=HeHzmnr_ZRE"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1659011545.682509",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1659016705.907229",
        "reply_users": [
            "U02E4DAQGSZ",
            "UBN9AFS0N"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1659016705.907229"
    },
    {
        "client_msg_id": "8cf2b195-7387-4bd9-a1d4-2b34628b226a",
        "type": "message",
        "text": "u need <https://observablehq.com/@tomlarkworthy/fetchp> :slightly_smiling_face:",
        "user": "U02E4DAQGSZ",
        "ts": "1659016135.495329",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://observablehq.com/@tomlarkworthy/fetchp",
                "ts": 1611389672,
                "image_url": "https://static.observableusercontent.com/thumbnail/393c2203e69fe8aee0d921269c8458718f9cb6ba023e7f8159e516a9608421f1.jpg",
                "image_width": 400,
                "image_height": 250,
                "image_bytes": 42516,
                "service_icon": "https://static.observablehq.com/favicon-512.0667824687f99c942a02e06e2db1a060911da0bf3606671676a255b1cf97b4fe.png",
                "id": 1,
                "original_url": "https://observablehq.com/@tomlarkworthy/fetchp",
                "fallback": "Observable: CORS Proxy fetchp",
                "text": "A drop in replacement for fetch that uses a proxy to get around CORS and can optionally mixin secrets into URL parameters and Basic Auth. Retries with exponential backoff in the case of 429 response code. When you import fetchp, you are actually statically defining a serverless-cell proxy in the consuming notebook on a unique URL. So you need to publish or link share your notebook before it works. You can restrict the allowed domains the proxy can call and inject secrets so you can narrow the flexibility of",
                "title": "CORS Proxy fetchp",
                "title_link": "https://observablehq.com/@tomlarkworthy/fetchp",
                "service_name": "Observable"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f90",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "u need "
                            },
                            {
                                "type": "link",
                                "url": "https://observablehq.com/@tomlarkworthy/fetchp"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1659011545.682509",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "dde5a62c-ec97-421f-8ac7-915ba5553e01",
        "type": "message",
        "text": "I was thinking about something like that but I need to know that the proxy is not logging the requests, since most of them have some api key in them :slightly_smiling_face:",
        "user": "UBN9AFS0N",
        "ts": "1659016438.494649",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dlNv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was thinking about something like that but I need to know that the proxy is not logging the requests, since most of them have some api key in them "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1659011545.682509",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "5038a955-c7d9-46f7-8374-7d19a7a5e1bd",
        "type": "message",
        "text": "the proxy is open source by design, the code is in the notebook I linked. part of webcode's aim is to  run publicly auditable code, extending open source to the server in a new meaningful way. The webcode runtime is a bit of a binary blob, you can see its code <https://github.com/endpointservices/webcode.run|here> and soon you can self-host it, but the point of fetchp is that is it is implemented in userspace service, using code hsoted by an independant 3rd party (observablehq) so you can kinda trust its not doing any shennanigans coz you can see the code, or fork the notebook for your own implementation of fetchp",
        "user": "U02E4DAQGSZ",
        "ts": "1659016705.907229",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1659016769.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D6hb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the proxy is open source by design, the code is in the notebook I linked. part of webcode's aim is to  run publicly auditable code, extending open source to the server in a new meaningful way. The webcode runtime is a bit of a binary blob, you can see its code "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/endpointservices/webcode.run",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": " and soon you can self-host it, but the point of fetchp is that is it is implemented in userspace service, using code hsoted by an independant 3rd party (observablehq) so you can kinda trust its not doing any shennanigans coz you can see the code, or fork the notebook for your own implementation of fetchp"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1659011545.682509",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]