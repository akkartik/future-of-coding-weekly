[
    {
        "client_msg_id": "8e9b645a-b7e7-4b8e-8ce6-0ff2169971dd",
        "type": "message",
        "text": "Superficial Simplicity\n\n\"For the last decade I\u2019ve chased and wrestled with the ideal of \u201csimple\u201d software, but I\u2019ve come to see it as a false summit and want to spend some ink on why in the hope that it can lead to a better understanding of simplicity and more intelligent conversations about complexity.\"\n\n<https://arrdem.com/2022/07/04/superficial_simplicity/>",
        "user": "UBN9AFS0N",
        "ts": "1657092913.777719",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iziy9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Superficial Simplicity\n\n\"For the last decade I\u2019ve chased and wrestled with the ideal of \u201csimple\u201d software, but I\u2019ve come to see it as a false summit and want to spend some ink on why in the hope that it can lead to a better understanding of simplicity and more intelligent conversations about complexity.\"\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://arrdem.com/2022/07/04/superficial_simplicity/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "reply_count": 16,
        "reply_users_count": 3,
        "latest_reply": "1657264483.606359",
        "reply_users": [
            "UK3LH8CF5",
            "UCUSW7WVD",
            "U013ZLJARC7"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1657264483.606359",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UK3LH8CF5",
                    "U0245E9RB2B",
                    "U014WA16VNJ",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "c96b5024-d9d3-4826-b999-e118b455dd72",
        "type": "message",
        "text": "Squeak Smalltalk 6.0 Released\n\nWhat's your reason for not using Smalltalk? :smile:\n\n<https://twitter.com/LinqLover/status/1544584834034663428>",
        "user": "UBN9AFS0N",
        "ts": "1657104717.142299",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1657106590.000000"
        },
        "attachments": [
            {
                "from_url": "https://twitter.com/LinqLover/status/1544584834034663428",
                "ts": 1657092696,
                "image_url": "https://pbs.twimg.com/media/FW93s1rWYAIPVMn.png",
                "image_width": 589,
                "image_height": 589,
                "image_bytes": 66251,
                "id": 1,
                "original_url": "https://twitter.com/LinqLover/status/1544584834034663428",
                "fallback": "<https://twitter.com/LinqLover|@LinqLover>: :mega: We finally have released Squeak 6.0! :tada:\n\nSome highlights: high-DPI support, improved TrueType support, new SistaV1 bytecode set, and many improvements to our programming tools for code writing, object inspection, and process debugging. :confetti_ball:\n\n<https://squeak.org/> <https://pbs.twimg.com/media/FW93s1rWYAIPVMn.png>",
                "text": ":mega: We finally have released Squeak 6.0! :tada:\n\nSome highlights: high-DPI support, improved TrueType support, new SistaV1 bytecode set, and many improvements to our programming tools for code writing, object inspection, and process debugging. :confetti_ball:\n\n<https://squeak.org/> <https://pbs.twimg.com/media/FW93s1rWYAIPVMn.png>",
                "author_name": "Christoph Thiede",
                "author_link": "https://twitter.com/LinqLover/status/1544584834034663428",
                "author_icon": "https://pbs.twimg.com/profile_images/1343538936245874689/3mfXI406_normal.jpg",
                "author_subname": "@LinqLover",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xv9le",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Squeak Smalltalk 6.0 Released\n\nWhat's your reason for not using Smalltalk? "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/LinqLover/status/1544584834034663428"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657104717.142299",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1657121776.319189",
        "reply_users": [
            "UJBAJNFLK",
            "U01HKV85Y1J"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1657121776.319189",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01HKV85Y1J",
                    "U014WA16VNJ",
                    "UA14TGLTC"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d4149936-ad1b-4c24-9fe5-4fbcbc39846a",
        "type": "message",
        "text": "Squeak actually was my main reason for not using Smalltalk, during the period when I believed it was the only option I had. Its generous use of colors creates visual overload for me. It's only when I discovered Pharo with its much more sober look that I explored Smalltalk more seriously. And since then I have been using it more and more.",
        "user": "UJBAJNFLK",
        "ts": "1657110567.145029",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hSi5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Squeak actually was my main reason for not using Smalltalk, during the period when I believed it was the only option I had. Its generous use of colors creates visual overload for me. It's only when I discovered Pharo with its much more sober look that I explored Smalltalk more seriously. And since then I have been using it more and more."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657104717.142299",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ab4f4cd4-abbe-4e90-9c9e-ce8a190ff1db",
        "type": "message",
        "text": "Literally came here to post this. I think this tension is an important one. Simplicity (even in the Rich Hickey sense) isn't an absolute good. Nor do I think it is quite as clear cut objective as Rich thinks.\n\nAnd yet, I think an emphasis on simplicity has helped me tremendously in developing my own taste.\n\nClojure's focus on simplicity has helped it be an incredibly productive tool. But it also introduces many frustrations (error messages, lack of java.lang.Function integration, etc).\n\n\nOther than moderation, how can we better articulate this view point? This distinction isn't quite the same one as worse is better. Are there any good articulations of this middle ground in a more detailed way?",
        "user": "UK3LH8CF5",
        "ts": "1657119528.661059",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iB17",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Literally came here to post this. I think this tension is an important one. Simplicity (even in the Rich Hickey sense) isn't an absolute good. Nor do I think it is quite as clear cut objective as Rich thinks.\n\nAnd yet, I think an emphasis on simplicity has helped me tremendously in developing my own taste.\n\nClojure's focus on simplicity has helped it be an incredibly productive tool. But it also introduces many frustrations (error messages, lack of java.lang.Function integration, etc).\n\n\nOther than moderation, how can we better articulate this view point? This distinction isn't quite the same one as worse is better. Are there any good articulations of this middle ground in a more detailed way?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "c994a60a-0a8e-427d-8c00-9f9f46e67a1d",
        "type": "message",
        "text": "Squeak was my first \"real programming\" experience. I absolutely love it, and I'm so happy it continues to exist. Congrats Squeak team! :tada:",
        "user": "U01HKV85Y1J",
        "ts": "1657121776.319189",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ks8F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Squeak was my first \"real programming\" experience. I absolutely love it, and I'm so happy it continues to exist. Congrats Squeak team! "
                            },
                            {
                                "type": "emoji",
                                "name": "tada",
                                "unicode": "1f389"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657104717.142299",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "f5970185-39d8-4769-9097-c6f38ede9f25",
        "type": "message",
        "text": "There's some discussion of interface vs implementation complexity in the literature: <https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch13s01.html>\n\nThe more recent <https://vitalik.ca/general/2022/02/28/complexity.html> is also in this vein.\n\nOverall, though, I find this tradition of writing to not be very actionable. Einstein said all that needed to be said: keep things as simple as possible but no simpler. Now everyone knows to try to keep things parsimonious. Slightly fewer people know to take the whole stack of dependencies into account when measuring complexity, though the recent focus on software supply chains helps here. For the most part we've accomplished what we can with broad generalizations. What remains is the centuries-long task of hill-climbing to simpler solutions in all the domains where software is eating the world.",
        "user": "UCUSW7WVD",
        "ts": "1657176667.596309",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y4db",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's some discussion of interface vs implementation complexity in the literature: "
                            },
                            {
                                "type": "link",
                                "url": "https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch13s01.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe more recent "
                            },
                            {
                                "type": "link",
                                "url": "https://vitalik.ca/general/2022/02/28/complexity.html"
                            },
                            {
                                "type": "text",
                                "text": " is also in this vein.\n\nOverall, though, I find this tradition of writing to not be very actionable. Einstein said all that needed to be said: keep things as simple as possible but no simpler. Now everyone knows to try to keep things parsimonious. Slightly fewer people know to take the whole stack of dependencies into account when measuring complexity, though the recent focus on software supply chains helps here. For the most part we've accomplished what we can with broad generalizations. What remains is the centuries-long task of hill-climbing to simpler solutions in all the domains where software is eating the world."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "ebdb9c9f-2c18-44c9-80e4-6182384d23a8",
        "type": "message",
        "text": "It seems to me that in order for something to be successful as a catchy meme it must be compressed into a somewhat ambiguous bromide. So, you get things like \"simple, not easy\" that resonate with different people for different reasons, until a backlash forms among those who find problems with their particular interpretation of the phrase. :man-shrugging::skin-tone-2:",
        "user": "U013ZLJARC7",
        "ts": "1657219158.113779",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F=Fp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It seems to me that in order for something to be successful as a catchy meme it must be compressed into a somewhat ambiguous bromide. So, you get things like \"simple, not easy\" that resonate with different people for different reasons, until a backlash forms among those who find problems with their particular interpretation of the phrase. "
                            },
                            {
                                "type": "emoji",
                                "name": "man-shrugging",
                                "unicode": "1f937-1f3fb-200d-2642-fe0f",
                                "skin_tone": 2
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            },
            {
                "name": "point_up_2",
                "users": [
                    "U03JUAWDVSR"
                ],
                "count": 1
            },
            {
                "name": "cry",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "30DC84BE-F78C-454B-9C35-F7A5DFEF84CB",
        "type": "message",
        "text": "Ehh, not sure I agree. I think anyone embedded in the clojure world long enough has a very similar conception of what we summarize as \u201csimple vs easy\u201d. I don\u2019t think there is a backlash against \u201ctheir particular interpretation\u201d. There is a real disagreement, not a linguistic one.",
        "user": "UK3LH8CF5",
        "ts": "1657219984.017679",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AH0/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ehh,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "not"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "sure"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "agree."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "think"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "anyone"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "embedded"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "clojure"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "world"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "long"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "enough"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "has"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "very"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "similar"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "conception"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "of"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "what"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "we"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "summarize"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "as"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "\u201csimple"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "vs"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "easy\u201d."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "don\u2019t"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "think"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "there"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "is"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "backlash"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "against"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "\u201ctheir"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "particular"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "interpretation\u201d."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "There"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "is"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "real"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "disagreement,"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "not"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "linguistic"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "one."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e72f57a3-653c-43c5-a7d8-dcc5755ef30b",
        "type": "message",
        "text": "well, I  found the linked piece did not make very much sense in the context of _my_ understanding of what it means, and I count myself as fairly involved with the Clojure world, so...",
        "user": "U013ZLJARC7",
        "ts": "1657221437.712859",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1657221524.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RPaNJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "well, I  found the linked piece did not make very much sense in the context of "
                            },
                            {
                                "type": "text",
                                "text": "my",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " understanding of what it means, and I count myself as fairly involved with the Clojure world, so..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "49de6729-ee6b-4170-8e12-cbf4e42e217a",
        "type": "message",
        "text": "Could that not be that the author didn't state things clearly or that you didn't understand what they intended to say rather than that they misunderstood the clojure simplicity doctrine? I wouldn't endorse what is in that blog post. I saw it as pointing in a direction rather than making a strong point. \n\nIf we take your point about this article though, I'd ask, what counts as disagreement that is non-linguistic?\n\n Jonathan Blows approach to Jai and the games he writes are decidedly non-hickian. I think a clear case of disagreement. As far as I know, he has never heard Rich Hickey so can't have misunderstood him.  The disagreement is one of actions and values rather than understanding. \n\nI find attractive bits in both of these approaches. I find that Rich is wrong about simple, in his sense, being objective. Are these disagreements or misunderstandings?",
        "user": "UK3LH8CF5",
        "ts": "1657221966.105879",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rrI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could that not be that the author didn't state things clearly or that you didn't understand what they intended to say rather than that they misunderstood the clojure simplicity doctrine? I wouldn't endorse what is in that blog post. I saw it as pointing in a direction rather than making a strong point. \n\nIf we take your point about this article though, I'd ask, what counts as disagreement that is non-linguistic?\n\n Jonathan Blows approach to Jai and the games he writes are decidedly non-hickian. I think a clear case of disagreement. As far as I know, he has never heard Rich Hickey so can't have misunderstood him.  The disagreement is one of actions and values rather than understanding. \n\nI find attractive bits in both of these approaches. I find that Rich is wrong about simple, in his sense, being objective. Are these disagreements or misunderstandings?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "048b8a86-9b9e-44ad-8f5b-16faa6e8da86",
        "type": "message",
        "text": "&gt; rather than that they misunderstood the clojure simplicity doctrine?\nThis suggests to me that you most assuredly did not understand what I was saying, anyway :joy_cat:",
        "user": "U013ZLJARC7",
        "ts": "1657223416.920189",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HoX",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "rather than that they misunderstood the clojure simplicity doctrine?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This suggests to me that you most assuredly did not understand what I was saying, anyway "
                            },
                            {
                                "type": "emoji",
                                "name": "joy_cat",
                                "unicode": "1f639"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "d8af6e20-6b26-4462-b3e2-ec3ad47de793",
        "type": "message",
        "text": "Hahaha. I mean it's seems we are doomed to not understand. For what it's worth, I assumed you'd take issue with that phrase. But what words should we use to summarize the clojure language, Rich's personal views and the clojure ecosystems relation to \"simple\"? How else are we supposed to describe the ascewing of certain features? The breaking of norms? The rethinking of best practices? Etc. All the things the clojure community does that separates it from other language communities?",
        "user": "UK3LH8CF5",
        "ts": "1657223647.723139",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "psE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hahaha. I mean it's seems we are doomed to not understand. For what it's worth, I assumed you'd take issue with that phrase. But what words should we use to summarize the clojure language, Rich's personal views and the clojure ecosystems relation to \"simple\"? How else are we supposed to describe the ascewing of certain features? The breaking of norms? The rethinking of best practices? Etc. All the things the clojure community does that separates it from other language communities?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "3075f147-4411-4fc8-89ef-0ef633ef9e41",
        "type": "message",
        "text": "It isn't that I \"don't think he understood it\", it's that it does not contain enough semantic content to stand alone and thus must (like nearly everything humans being say) be evaluated in some frame. The frame that he's using here leads him to analyze something different from what I _think_ Hickey means in his own frame.",
        "user": "U013ZLJARC7",
        "ts": "1657223732.054699",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r7WM9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It isn't that I \"don't think he understood it\", it's that it does not contain enough semantic content to stand alone and thus must (like nearly everything humans being say) be evaluated in some frame. The frame that he's using here leads him to analyze something different from what I "
                            },
                            {
                                "type": "text",
                                "text": "think",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Hickey means in his own frame."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "f4d92b0e-0173-4d46-93cc-ee344514364e",
        "type": "message",
        "text": "Of course, I could be mistaken about what Hickey thinks. I do have the benefit of having had very long careers building many kinds of things and developing a craftperson's intuition for \"simplicity\" (in some sense of the word), and I have chatted with him about the topic. :man-shrugging::skin-tone-2:",
        "user": "U013ZLJARC7",
        "ts": "1657223949.971929",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YzO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Of course, I could be mistaken about what Hickey thinks. I do have the benefit of having had very long careers building many kinds of things and developing a craftperson's intuition for \"simplicity\" (in some sense of the word), and I have chatted with him about the topic. "
                            },
                            {
                                "type": "emoji",
                                "name": "man-shrugging",
                                "unicode": "1f937-1f3fb-200d-2642-fe0f",
                                "skin_tone": 2
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "903f12ee-284e-401b-8e84-fc1da5460d59",
        "type": "message",
        "text": "So that goes back to what I asked, what must one do to prove that they are actually disagreeing with what you think Rich means? Must they prove they think the same thing you think Rich means? \n\nI don't think the author even attempted to explicate Rich's views. Just pointed in that direction. My chosen frame was to assume understanding and interpret in light of that.",
        "user": "UK3LH8CF5",
        "ts": "1657224041.066319",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/WJX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So that goes back to what I asked, what must one do to prove that they are actually disagreeing with what you think Rich means? Must they prove they think the same thing you think Rich means? \n\nI don't think the author even attempted to explicate Rich's views. Just pointed in that direction. My chosen frame was to assume understanding and interpret in light of that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "b6714686-42e8-43a4-88df-03d41f4dbf19",
        "type": "message",
        "text": "Again, \"understanding\" isn't the right frame for what I'm saying :joy_cat:",
        "user": "U013ZLJARC7",
        "ts": "1657224071.105889",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DRk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Again, \"understanding\" isn't the right frame for what I'm saying "
                            },
                            {
                                "type": "emoji",
                                "name": "joy_cat",
                                "unicode": "1f639"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "de5a8d74-b1cf-4a46-a632-31eda1777fa2",
        "type": "message",
        "text": "If you look at the decisions taken in the creation of Clojure, Datomic, and various other bits and pieces, there's mostly just a kind of pragmatism that's immediately recognizable to many old-timers. It is a perspective that has baked into it the perspective that <@UCUSW7WVD> was pointing to above, re: interface vs implementation, &amp;c. I'm off to bed now. :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1657224386.643129",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O2vH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you look at the decisions taken in the creation of Clojure, Datomic, and various other bits and pieces, there's mostly just a kind of pragmatism that's immediately recognizable to many old-timers. It is a perspective that has baked into it the perspective that "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " was pointing to above, re: interface vs implementation, &c. I'm off to bed now. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "ad2959d9-6c8a-4c4f-ba80-cb6312ef242d",
        "type": "message",
        "text": "You said that the author misinterpreted Rich. I take that to mean he misunderstood Rich. I don't see a way to separate these things. \n\nMy point has been that I don't think we should assume he misinterpreted. And my further meta-point is a frustration with this rhetorical move of claiming people's attempts at substantial disagreement to be merely semantic disagreements (eg misinterpretations). \n\n\nClaiming the author is backlashing against their own particular interpretation rather than disagreeing with Rich makes it very hard to know what counts as disagreement. I am sincerely asking, how can people signal true disagreement rather than misinterpretation? \n\nJonathan Blow also takes an old school pragmatism that is directly opposite of Rich's. A dislike for GC. A belief that allocation vs initialization is a key important concept to allow in a language. A dislike for \"fancy\" data structure. A dislike for immutability, purity, etc. \n\nI don't think old school sensibility is where the disagreement lies. Nor in interface vs implementation. Rich's view against pattern matching for example does not seem to consistent in either of these. \n\nFor what it's worth I know people who have worked directly with Rich who have said things similar to what I believe this blog post is getting at.",
        "user": "UK3LH8CF5",
        "ts": "1657225559.418449",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c5V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You said that the author misinterpreted Rich. I take that to mean he misunderstood Rich. I don't see a way to separate these things. \n\nMy point has been that I don't think we should assume he misinterpreted. And my further meta-point is a frustration with this rhetorical move of claiming people's attempts at substantial disagreement to be merely semantic disagreements (eg misinterpretations). \n\n\nClaiming the author is backlashing against their own particular interpretation rather than disagreeing with Rich makes it very hard to know what counts as disagreement. I am sincerely asking, how can people signal true disagreement rather than misinterpretation? \n\nJonathan Blow also takes an old school pragmatism that is directly opposite of Rich's. A dislike for GC. A belief that allocation vs initialization is a key important concept to allow in a language. A dislike for \"fancy\" data structure. A dislike for immutability, purity, etc. \n\nI don't think old school sensibility is where the disagreement lies. Nor in interface vs implementation. Rich's view against pattern matching for example does not seem to consistent in either of these. \n\nFor what it's worth I know people who have worked directly with Rich who have said things similar to what I believe this blog post is getting at."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "6913a143-a0ff-4530-b9ad-10df744d9858",
        "type": "message",
        "text": "&gt; what tools effectively help users manage \u201ccomplexity\u201d, how and why.\n&gt; \nThe social norms of a community influence the complexity of solutions it comes up with far more than its tools. OP mentions Unix, but Unix wasn't just a tool, it was also a community with its own ethos and philosophy, the \"Unix Way\".\n\nThe problem with Unix was not that the tools were simple in implementation (though they were). They worked fine for the social context they were designed for. The problem was that its success caused Unix to overflow out to communities that didn't share its social norms. Leading to lamentations like <http://harmful.cat-v.org/cat-v|http://harmful.cat-v.org/cat-v>\n\nThe unsolved problem -- the _unsolvable_ problem, IMO -- is how to keep communities from getting to Eternal September, where they overflow to newcomers and the culture fractures.",
        "user": "UCUSW7WVD",
        "ts": "1657233771.241589",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l8c7",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what tools effectively help users manage \u201ccomplexity\u201d, how and why.\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe social norms of a community influence the complexity of solutions it comes up with far more than its tools. OP mentions Unix, but Unix wasn't just a tool, it was also a community with its own ethos and philosophy, the \"Unix Way\".\n\nThe problem with Unix was not that the tools were simple in implementation (though they were). They worked fine for the social context they were designed for. The problem was that its success caused Unix to overflow out to communities that didn't share its social norms. Leading to lamentations like "
                            },
                            {
                                "type": "link",
                                "url": "http://harmful.cat-v.org/cat-v",
                                "text": "http://harmful.cat-v.org/cat-v"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe unsolved problem -- the "
                            },
                            {
                                "type": "text",
                                "text": "unsolvable",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " problem, IMO -- is how to keep communities from getting to Eternal September, where they overflow to newcomers and the culture fractures."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "1dd9fedf-e01b-4d7c-bfb1-404ca17cb9ba",
        "type": "message",
        "text": "&gt; You said that the author misinterpreted Rich.\nI most assuredly did not. When I say that each person has a particular interpretation, that does _not_ mean that there's a platonic ideal somewhere that they're getting _wrong_. Does that help clarify what I'm saying?\n\nAs for Blow's preferences, I doubt very much that Rich would disagree on those points _in Blow's context of use_. Rich has been quite clear that he designed Clojure for writing the kinds of programs he writes (again, frame/context). Many properties of Clojure that make writing correct programs easier come at a cost, and sometimes one cannot afford to pay those costs in a particular situation. These same concerns are also why the largest share of my own career output (counted in LoC) has been C + asm.",
        "user": "U013ZLJARC7",
        "ts": "1657264483.606359",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PWfPJ",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You said that the author misinterpreted Rich."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI most assuredly did not. When I say that each person has a particular interpretation, that does "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mean that there's a platonic ideal somewhere that they're getting "
                            },
                            {
                                "type": "text",
                                "text": "wrong",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Does that help clarify what I'm saying?\n\nAs for Blow's preferences, I doubt very much that Rich would disagree on those points "
                            },
                            {
                                "type": "text",
                                "text": "in Blow's context of use",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Rich has been quite clear that he designed Clojure for writing the kinds of programs he writes (again, frame/context). Many properties of Clojure that make writing correct programs easier come at a cost, and sometimes one cannot afford to pay those costs in a particular situation. These same concerns are also why the largest share of my own career output (counted in LoC) has been C + asm."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1657092913.777719",
        "parent_user_id": "UBN9AFS0N"
    }
]