[
    {
        "client_msg_id": "c0a37e9d-52dc-4f9c-98a1-7f75faa67afd",
        "type": "message",
        "text": "More adventures in sandboxing[1][2]\n\nI've been working on a Zettelkasten app: <https://archive.org/details/akkartik-teliva-2022-02-10> (video; 4 minutes)\n\nOne interesting insight here was that putting raw file operations directly in `main` makes the app easy to audit. You can inspect just that one function and give just it permissions to perform file operations on your computer, while denying them to the rest of the app including callees of `main`.\n\nAnyways, I'd love to hear thoughts on this. I don't have experience with note-taking apps, and my UX skills suck. Let me know if you have suggestions, feature ideas, or if you'd like a private copy tailored for yourself. <https://buttondown.email/hillelwayne/archive/situated-software/|Situated software> and all that.\n\nMain project page: <https://github.com/akkartik/teliva>\n\n[1] <https://futureofcoding.slack.com/archives/C0120A3L30R/p1640501578098600>\n[2] <https://futureofcoding.slack.com/archives/CCL5VVBAN/p1644198434431509>",
        "user": "UCUSW7WVD",
        "ts": "1644566388.438689",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://archive.org/details/akkartik-teliva-2022-02-10",
                "thumb_url": "https://archive.org/download/akkartik-teliva-2022-02-10/akkartik-teliva-2022-02-10.thumbs/akkartik-teliva-2022-02-10_000057.jpg",
                "thumb_width": 720,
                "thumb_height": 406,
                "service_icon": "https://archive.org/favicon.ico",
                "id": 1,
                "original_url": "https://archive.org/details/akkartik-teliva-2022-02-10",
                "fallback": "Internet Archive: 2022-02-10: Zettelkasten, sandboxing, OpenBSD : Kartik Agaram : Free Download, Borrow, and Streaming : Internet Archive",
                "text": "A Zettelkasten app on Teliva, the rugged platform for little sandboxed text-mode apps that you can safely try out and tailor to your needs.Today's demo was...",
                "title": "2022-02-10: Zettelkasten, sandboxing, OpenBSD : Kartik Agaram : Free Download, Borrow, and Streaming : Internet Archive",
                "title_link": "https://archive.org/details/akkartik-teliva-2022-02-10",
                "service_name": "Internet Archive"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hKdwH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More adventures in sandboxing[1][2]\n\nI've been working on a Zettelkasten app: "
                            },
                            {
                                "type": "link",
                                "url": "https://archive.org/details/akkartik-teliva-2022-02-10"
                            },
                            {
                                "type": "text",
                                "text": " (video; 4 minutes)\n\nOne interesting insight here was that putting raw file operations directly in "
                            },
                            {
                                "type": "text",
                                "text": "main",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " makes the app easy to audit. You can inspect just that one function and give just it permissions to perform file operations on your computer, while denying them to the rest of the app including callees of "
                            },
                            {
                                "type": "text",
                                "text": "main",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nAnyways, I'd love to hear thoughts on this. I don't have experience with note-taking apps, and my UX skills suck. Let me know if you have suggestions, feature ideas, or if you'd like a private copy tailored for yourself. "
                            },
                            {
                                "type": "link",
                                "url": "https://buttondown.email/hillelwayne/archive/situated-software/",
                                "text": "Situated software"
                            },
                            {
                                "type": "text",
                                "text": " and all that.\n\nMain project page: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/teliva"
                            },
                            {
                                "type": "text",
                                "text": "\n\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C0120A3L30R/p1640501578098600"
                            },
                            {
                                "type": "text",
                                "text": "\n[2] "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1644198434431509"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1644566388.438689",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1644799670.600499",
        "reply_users": [
            "UJBAJNFLK",
            "UCUSW7WVD"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "U0123H7JRDM",
                    "UA14TGLTC"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "95c75ded-7267-489a-a257-94aa02c43b38",
        "type": "message",
        "text": "For those following along on the development of Clerk, we're preparing to ship a feature where you can livecode HTML controls in the notebook view that have two-way binding to Clojure state atoms on the JVM side. This allows for moldable user interface development in the context of one's usual editor environment. There are a couple of examples in the images attached to this tweet: :slightly_smiling_face:\n<https://twitter.com/jackrusher/status/1492110714588250118?s=20&amp;t=kHaW82d1qYPo8pEEEJzQJw>",
        "user": "U013ZLJARC7",
        "ts": "1644583137.458289",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://twitter.com/jackrusher/status/1492110714588250118?s=20&amp;t=kHaW82d1qYPo8pEEEJzQJw",
                "ts": 1644581891,
                "image_url": "https://pbs.twimg.com/media/FLUIrOKXsAMegB4.jpg",
                "image_width": 1062,
                "image_height": 1200,
                "image_bytes": 116278,
                "id": 1,
                "original_url": "https://twitter.com/jackrusher/status/1492110714588250118?s=20&amp;t=kHaW82d1qYPo8pEEEJzQJw",
                "fallback": "<https://twitter.com/jackrusher|@jackrusher>: Working on the documentation notebook for some very cool new Clerk features today... <https://pbs.twimg.com/media/FLUIrOKXsAMegB4.jpg>",
                "text": "Working on the documentation notebook for some very cool new Clerk features today... <https://pbs.twimg.com/media/FLUIrOKXsAMegB4.jpg>",
                "author_name": "Jack Rusher",
                "author_link": "https://twitter.com/jackrusher/status/1492110714588250118",
                "author_icon": "https://pbs.twimg.com/profile_images/931507447088500736/j50JPYN5_normal.jpg",
                "author_subname": "@jackrusher",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "image_url": "https://pbs.twimg.com/media/FLUKtQpXwAUv_U3.jpg",
                "image_width": 773,
                "image_height": 1200,
                "image_bytes": 130056,
                "id": 2,
                "fallback": "773x1200px image",
                "text": "<https://pbs.twimg.com/media/FLUKtQpXwAUv_U3.jpg>"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iD+N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For those following along on the development of Clerk, we're preparing to ship a feature where you can livecode HTML controls in the notebook view that have two-way binding to Clojure state atoms on the JVM side. This allows for moldable user interface development in the context of one's usual editor environment. There are a couple of examples in the images attached to this tweet: "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/jackrusher/status/1492110714588250118?s=20&t=kHaW82d1qYPo8pEEEJzQJw"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "UA14TGLTC",
                    "UMV4B97GT"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0a29d333-e584-4bd2-a412-75c5ce01be65",
        "type": "message",
        "text": "That's an interesting demo application in that it is (1) well suited to text mode and (2) a nice use case for situated / personalizable software.\nAs an implementation of Zettelkasten, however, it looks rather weird. The idea of the \"box of index cards\" is precisely not to impose any hierarchy on the notes. Instead, you have references to the cards' unique IDs (which are the titles in some implementations). A basic operation which needs good UI support is thus to look up a card while you are working on another one, for inserting a link.",
        "user": "UJBAJNFLK",
        "ts": "1644745630.743279",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1644745716.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CX8eA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's an interesting demo application in that it is (1) well suited to text mode and (2) a nice use case for situated / personalizable software.\nAs an implementation of Zettelkasten, however, it looks rather weird. The idea of the \"box of index cards\" is precisely not to impose any hierarchy on the notes. Instead, you have references to the cards' unique IDs (which are the titles in some implementations). A basic operation which needs good UI support is thus to look up a card while you are working on another one, for inserting a link."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1644566388.438689",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7f6b55e3-d08d-41ea-ac1b-a751308dc7b0",
        "type": "message",
        "text": "Thanks! Yeah I haven't demoed that yet. As a teaser notice the little stripes of color above the menu at the bottom of the screen.\n\nIt seems to me that the way you name IDs in Z is intended precisely to impose hierarchy. Zettel 1a1 is 'under' 1a in a way that is hard to undo after the fact. All you can do is insert more links in between, or let this side atrophy and copy the cards to 1b to try again.\n\nCross-links are expensive in space, and you can't live with them alone.\n\nI'd love to be corrected on this score. I'm not actually a Z practitioner, and here I'm deliberately trying to build something for others rather than myself. I'm also curious if you consider Workflowy, Roam et al. reasonable implementations of Z, because to me they've always seemed internally consistent, but something different, more wiki-like.",
        "user": "UCUSW7WVD",
        "ts": "1644762972.517389",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1644765273.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x7qK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! Yeah I haven't demoed that yet. As a teaser notice the little stripes of color above the menu at the bottom of the screen.\n\nIt seems to me that the way you name IDs in Z is intended precisely to impose hierarchy. Zettel 1a1 is 'under' 1a in a way that is hard to undo after the fact. All you can do is insert more links in between, or let this side atrophy and copy the cards to 1b to try again.\n\nCross-links are expensive in space, and you can't live with them alone.\n\nI'd love to be corrected on this score. I'm not actually a Z practitioner, and here I'm deliberately trying to build something for others rather than myself. I'm also curious if you consider Workflowy, Roam et al. reasonable implementations of Z, because to me they've always seemed internally consistent, but something different, more wiki-like."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1644566388.438689",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "a9961f96-db35-4ca9-878b-93376ea98f50",
        "type": "message",
        "text": "Hmm, then again I just remembered that you _can_ link to or transclude specific paragraphs in Roam: <https://youtube.com/watch?v=WJO7l10xO3g|https://youtube.com/watch?v=WJO7l10xO3g>",
        "user": "UCUSW7WVD",
        "ts": "1644799670.600499",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://youtube.com/watch?v=WJO7l10xO3g",
                "thumb_url": "https://i.ytimg.com/vi/WJO7l10xO3g/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/WJO7l10xO3g?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtube.com/watch?v=WJO7l10xO3g",
                "fallback": "YouTube Video: How to Use BLOCK REFERENCES in Roam Research - for Beginners",
                "title": "How to Use BLOCK REFERENCES in Roam Research - for Beginners",
                "title_link": "https://youtube.com/watch?v=WJO7l10xO3g",
                "author_name": "Eshan Khadaroo",
                "author_link": "https://www.youtube.com/channel/UCyH9gfCxVi9plyOT79kPsdA",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vKWW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm, then again I just remembered that you "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " link to or transclude specific paragraphs in Roam: "
                            },
                            {
                                "type": "link",
                                "url": "https://youtube.com/watch?v=WJO7l10xO3g",
                                "text": "https://youtube.com/watch?v=WJO7l10xO3g"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1644566388.438689",
        "parent_user_id": "UCUSW7WVD"
    }
]