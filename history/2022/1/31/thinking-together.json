[
    {
        "client_msg_id": "FD388582-EEAD-46F0-9670-B8DA9A62E5B1",
        "type": "message",
        "text": "beautiful take on novelty in science i think many of us will relate to\n\nnovelty as \u2018complex, difficult\u2019 vs novelty as \u2018breathing for the first time\u2019\n<https://perceiving-systems.blog/en/news/novelty-in-science|https://perceiving-systems.blog/en/news/novelty-in-science>",
        "user": "U9C92716C",
        "ts": "1643603346.771949",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oGqB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "beautiful take on novelty in science i think many of us will relate to\n\nnovelty as \u2018complex, difficult\u2019 vs novelty as \u2018breathing for the first time\u2019\n"
                            },
                            {
                                "type": "link",
                                "url": "https://perceiving-systems.blog/en/news/novelty-in-science",
                                "text": "https://perceiving-systems.blog/en/news/novelty-in-science"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK",
                    "U8A5MS6R1"
                ],
                "count": 2
            },
            {
                "name": "eyes",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0a12259e-619a-48fb-845b-7e750488726a",
        "type": "message",
        "text": "Hello there. I've been dreaming for years about a 2D spatial interface for laying out and editing / manipulating files in a filesystem (something like a local miro for my pc). I've recently attempted to build something using <https://github.com/anvaka/panzoom>  which is great, but I'm pushing it beyond its limit, I think (or my own). I want a solid, intuitive (google maps-like) rendering and interaction to build off of. I mainly program in and prefer web technologies. But if there is something like panzoom for python or java or something, I'll do that instead. Does anyone have any recommendations? panzoom is the closest library I've found that is generic enough and flexible enough to do what I want, but I'm running into bizarre problems with it that I just don't want to deal with. Any recommendations for other libraries would be very appreciated! Thanks :slightly_smiling_face:",
        "user": "U01HKV85Y1J",
        "ts": "1643604696.171209",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nL1FD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello there. I've been dreaming for years about a 2D spatial interface for laying out and editing / manipulating files in a filesystem (something like a local miro for my pc). I've recently attempted to build something using "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/anvaka/panzoom"
                            },
                            {
                                "type": "text",
                                "text": "  which is great, but I'm pushing it beyond its limit, I think (or my own). I want a solid, intuitive (google maps-like) rendering and interaction to build off of. I mainly program in and prefer web technologies. But if there is something like panzoom for python or java or something, I'll do that instead. Does anyone have any recommendations? panzoom is the closest library I've found that is generic enough and flexible enough to do what I want, but I'm running into bizarre problems with it that I just don't want to deal with. Any recommendations for other libraries would be very appreciated! Thanks "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643604696.171209",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1643648005.602979",
        "reply_users": [
            "U01ULEWACPP",
            "U01HKV85Y1J",
            "UK3LH8CF5"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "15A4F100-3BFD-4A6D-A589-9CCC45284B75",
        "type": "message",
        "text": "Sounds like you might want to use WebGL for better rendering performance? A friend of mine maintains this Open Source project that can visualize massive visual collections: <https://vikusviewer.fh-potsdam.de/|https://vikusviewer.fh-potsdam.de/>",
        "user": "U01ULEWACPP",
        "ts": "1643618131.628319",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vol",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds like you might want to use WebGL for better rendering performance? A friend of mine maintains this Open Source project that can visualize massive visual collections: "
                            },
                            {
                                "type": "link",
                                "url": "https://vikusviewer.fh-potsdam.de/",
                                "text": "https://vikusviewer.fh-potsdam.de/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643604696.171209",
        "parent_user_id": "U01HKV85Y1J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c9202367-2552-4092-991b-20b67f557016",
        "type": "message",
        "text": "Thanks for this link! I'll check to see if I can adapt the panning and zooming to what I need. :thumbsup_all:",
        "user": "U01HKV85Y1J",
        "ts": "1643637451.652759",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Eg+Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for this link! I'll check to see if I can adapt the panning and zooming to what I need. "
                            },
                            {
                                "type": "emoji",
                                "name": "thumbsup_all"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643604696.171209",
        "parent_user_id": "U01HKV85Y1J"
    },
    {
        "client_msg_id": "B80D0D91-63A2-4235-B2FF-386BEE5494F4",
        "type": "message",
        "text": "I\u2019d definitely suggest trying to craft the panning and zooming yourself. Not because you necessarily will get it better than everyone else, but because\n\n1. It will be crafted specifically to your needs\n\n2. You will learn what things are hard and be able to better evaluate a library",
        "user": "UK3LH8CF5",
        "ts": "1643644165.410949",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1643644190.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0cu5E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019d definitely suggest trying to craft the panning and zooming yourself. Not because you necessarily will get it better than everyone else, but because\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "It will be crafted specifically to your needs"
                                    },
                                    {
                                        "type": "text",
                                        "text": "\n"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "You will learn what things are hard and be able to better evaluate a library"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "thread_ts": "1643604696.171209",
        "parent_user_id": "U01HKV85Y1J"
    },
    {
        "client_msg_id": "92617189-6cba-4a9e-b6d2-f4a8cd316126",
        "type": "message",
        "text": "Thanks! I have actually implemented panning / zooming in the past, and as you say I learned how to better evaluate libraries. I do really like panzoom, it is *almost* perfect for my needs; I just seem to be pushing it to its limits. If I don't find a better option, I will just stick with it and hope to overcome the issues I'm running up against.",
        "user": "U01HKV85Y1J",
        "ts": "1643648005.602979",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6vN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! I have actually implemented panning / zooming in the past, and as you say I learned how to better evaluate libraries. I do really like panzoom, it is "
                            },
                            {
                                "type": "text",
                                "text": "almost",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " perfect for my needs; I just seem to be pushing it to its limits. If I don't find a better option, I will just stick with it and hope to overcome the issues I'm running up against."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643604696.171209",
        "parent_user_id": "U01HKV85Y1J"
    },
    {
        "client_msg_id": "21e2b5d5-54ed-446d-8050-b997f4dcabb2",
        "type": "message",
        "text": "what's the best \"thing\" you have seen/read to turn a tree into a table? something like <https://stedolan.github.io/jq/|jq>\n\nvisual things more than welcome",
        "user": "UBN9AFS0N",
        "ts": "1643657057.708549",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1643657068.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oFwV0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what's the best \"thing\" you have seen/read to turn a tree into a table? something like "
                            },
                            {
                                "type": "link",
                                "url": "https://stedolan.github.io/jq/",
                                "text": "jq"
                            },
                            {
                                "type": "text",
                                "text": "\n\nvisual things more than welcome"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "reply_count": 11,
        "reply_users_count": 4,
        "latest_reply": "1643856408.126739",
        "reply_users": [
            "U02C3SH9L2J",
            "UBN9AFS0N",
            "U02E4DAQGSZ",
            "U0264CJ5W83"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1643856408.126739"
    },
    {
        "client_msg_id": "1ff07874-e2ff-4081-acab-72aba5706271",
        "type": "message",
        "text": "is there any datalog implementation I can use from a browser? how datalog-y can I get with a graph database or RDF?",
        "user": "UBN9AFS0N",
        "ts": "1643657108.889469",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ihS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is there any datalog implementation I can use from a browser? how datalog-y can I get with a graph database or RDF?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "reply_count": 8,
        "reply_users_count": 5,
        "latest_reply": "1643856310.122409",
        "reply_users": [
            "UBN9AFS0N",
            "U013ZLJARC7",
            "U01HKV85Y1J",
            "UCGAK10LS",
            "U0264CJ5W83"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1643856310.122409"
    },
    {
        "client_msg_id": "84b45fad-2471-412b-98f6-d609ea9ab9e0",
        "type": "message",
        "text": "<@U71PMQ1V0> :point_up::skin-tone-4:",
        "user": "UBN9AFS0N",
        "ts": "1643657156.171979",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uty",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U71PMQ1V0"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "point_up",
                                "skin_tone": 4
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0d36637c-1a96-4ad5-88b5-99815494d3e9",
        "type": "message",
        "text": "Several! :slightly_smiling_face: <https://github.com/tonsky/datascript|DataScript> is popular in the Clojure world, if you'd like to give that a go.",
        "user": "U013ZLJARC7",
        "ts": "1643657642.417469",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PkCp0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Several! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/tonsky/datascript",
                                "text": "DataScript"
                            },
                            {
                                "type": "text",
                                "text": " is popular in the Clojure world, if you'd like to give that a go."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "point_up_2",
                "users": [
                    "U71PMQ1V0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "627ea7b5-756f-4281-b132-c3427341837c",
        "type": "message",
        "text": "(Also, re: RDF, SPARQL is literally a Datalog implementation.)",
        "user": "U013ZLJARC7",
        "ts": "1643659025.710299",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eeJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Also, re: RDF, SPARQL is literally a Datalog implementation.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "1287e8d3-b287-4765-b35e-48a7e18c2dd6",
        "type": "message",
        "text": "erlang's mnesia is very datalogish, if you're in the elixir/erlang world",
        "user": "U01HKV85Y1J",
        "ts": "1643659453.442829",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7af",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "erlang's mnesia is very datalogish, if you're in the elixir/erlang world"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "1b77f20a-0610-40fd-b906-8c7ddf02f362",
        "type": "message",
        "text": "I've used it, it's not so dynamic and the query language is tied to tables",
        "user": "UBN9AFS0N",
        "ts": "1643665293.948609",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1643665322.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sEpSh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've used it, it's not so dynamic and the query language is tied to tables"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "e04453b3-438c-4a83-bc5d-ba74f7918ffd",
        "type": "message",
        "text": "it's relational-ish",
        "user": "UBN9AFS0N",
        "ts": "1643665298.727359",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1643665311.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NUBI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's relational-ish"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "cb8dc7aa-2f3d-44d1-8e3f-773cdf02390c",
        "type": "message",
        "text": "Trusty `console.table` in Chrome Devtools does it",
        "user": "U02C3SH9L2J",
        "ts": "1643667220.657089",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XJk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Trusty "
                            },
                            {
                                "type": "text",
                                "text": "console.table",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in Chrome Devtools does it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "15c65c8c-afa0-42af-b946-7abbf1bda608",
        "type": "message",
        "text": "data already has to have a tabular structure",
        "user": "UBN9AFS0N",
        "ts": "1643667434.399719",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PXQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "data already has to have a tabular structure"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "5995e936-00f8-40d1-8084-190d1a32b26f",
        "type": "message",
        "text": "I mean flatten a subset of a deeply nested tree into a table",
        "user": "UBN9AFS0N",
        "ts": "1643667451.860389",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TQT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean flatten a subset of a deeply nested tree into a table"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "bc687022-68db-43c2-997b-650070880749",
        "type": "message",
        "text": "yeah for some reason I thought it did by concatenating key names as it recursed down an arbitrary but that must\u2019ve been a different tool",
        "user": "U02C3SH9L2J",
        "ts": "1643667774.765709",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1HZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah for some reason I thought it did by concatenating key names as it recursed down an arbitrary but that must\u2019ve been a different tool"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "8f2cf6ed-9a1e-4e6f-8fa6-c7c6d550d8bc",
        "type": "message",
        "text": "underscore flatten or d3 merge ?\nquite often I just use reduce tho",
        "user": "U02E4DAQGSZ",
        "ts": "1643725329.722119",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "on5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "underscore flatten or d3 merge ?\nquite often I just use reduce tho"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "8ae3a0cd-2495-4ccb-92c2-f2ed4246b854",
        "type": "message",
        "text": "not generic enough, I mean something like a graphql result or an ast",
        "user": "UBN9AFS0N",
        "ts": "1643726689.589969",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p4Vj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "not generic enough, I mean something like a graphql result or an ast"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "29091f19-faf0-4c13-9c40-65117e8676de",
        "type": "message",
        "text": "liek XPATH kinda thing",
        "user": "U02E4DAQGSZ",
        "ts": "1643727269.939049",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M41N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "liek XPATH kinda thing"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "67b10558-d702-4c07-92c0-7ed80e32ef20",
        "type": "message",
        "text": "Oh I have used this one before <https://www.npmjs.com/package/jsonpath>, though I later found I could get away with underscores _.get(object, path, [default]) for my application",
        "user": "U02E4DAQGSZ",
        "ts": "1643727501.834139",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.npmjs.com/package/jsonpath",
                "thumb_url": "https://static.npmjs.com/338e4905a2684ca96e08c7780fc68412.png",
                "thumb_width": 1200,
                "thumb_height": 630,
                "service_icon": "https://static.npmjs.com/58a19602036db1daee0d7863c94673a4.png",
                "id": 1,
                "original_url": "https://www.npmjs.com/package/jsonpath",
                "fallback": "npm: jsonpath",
                "text": "Query JavaScript objects with JSONPath expressions. Robust / safe JSONPath engine for Node.js.. Latest version: 1.1.1, last published: 10 months ago. Start using jsonpath in your project by running `npm i jsonpath`. There are 928 other projects in the npm registry using jsonpath.",
                "title": "jsonpath",
                "title_link": "https://www.npmjs.com/package/jsonpath",
                "service_name": "npm"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4nh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh I have used this one before "
                            },
                            {
                                "type": "link",
                                "url": "https://www.npmjs.com/package/jsonpath"
                            },
                            {
                                "type": "text",
                                "text": ", though I later found I could get away with underscores _.get(object, path, [default]) for my application"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "8ad71b86-38bf-43f7-9c39-17a94268c67d",
        "type": "message",
        "text": "if you are doing complex queries it might be worth loading sqlite.js",
        "user": "U02E4DAQGSZ",
        "ts": "1643727549.043549",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LvcZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you are doing complex queries it might be worth loading sqlite.js"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "894245d2-9144-4f2b-ae85-d223f6d01e43",
        "type": "message",
        "text": "or by table are you asking for a dataframe type thingy? <https://github.com/uwdata/arquero> I guess I am confused by what you are looking for. The term 'table' is ambiguous (SQL table, HTML Table, Mathematical Table) and hardly relates to jq in my world.",
        "user": "U02E4DAQGSZ",
        "ts": "1643732614.466729",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://github.com/uwdata/arquero",
                "image_url": "https://repository-images.githubusercontent.com/291996157/6c4cdd80-ed1e-11ea-8e9b-00f25c2a36b8",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 41090,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/uwdata/arquero",
                "fallback": "GitHub: GitHub - uwdata/arquero: Query processing and transformation of array-backed data tables.",
                "text": "Query processing and transformation of array-backed data tables. - GitHub - uwdata/arquero: Query processing and transformation of array-backed data tables.",
                "title": "GitHub - uwdata/arquero: Query processing and transformation of array-backed data tables.",
                "title_link": "https://github.com/uwdata/arquero",
                "service_name": "GitHub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2OhJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "or by table are you asking for a dataframe type thingy? "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/uwdata/arquero"
                            },
                            {
                                "type": "text",
                                "text": " I guess I am confused by what you are looking for. The term 'table' is ambiguous (SQL table, HTML Table, Mathematical Table) and hardly relates to jq in my world."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "45056afb-5b09-43e4-ab13-4384e4e95643",
        "type": "message",
        "text": "Graph databases are the antithesis of Datalog. They reject the core tenets of relational programming:\n\u2022 Data independence (evaluate programs by *joins*, not by pointer traversal).\n\u2022 Relations of arbitrary arity (not just arities 1 and 2).\nThat's an answer to part of your question, anyway :innocent:.",
        "user": "UCGAK10LS",
        "ts": "1643775604.872829",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mpPe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Graph databases are the antithesis of Datalog. They reject the core tenets of relational programming:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Data independence (evaluate programs by "
                                    },
                                    {
                                        "type": "text",
                                        "text": "joins",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", not by pointer traversal)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Relations of arbitrary arity (not just arities 1 and 2)."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's an answer to part of your question, anyway "
                            },
                            {
                                "type": "emoji",
                                "name": "innocent"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "2267538f-5d95-4bab-a1dd-5698a52712ea",
        "type": "message",
        "text": "I've been working on a datalog module for rakudo that would integrate directly into the language that can use different backends but it's probably not near what you'd like.  (rakudo has a javascript backend that you could probably use in a browser)",
        "user": "U0264CJ5W83",
        "ts": "1643856310.122409",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d+TyD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been working on a datalog module for rakudo that would integrate directly into the language that can use different backends but it's probably not near what you'd like.  (rakudo has a javascript backend that you could probably use in a browser)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657108.889469",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "f102de06-772e-48b1-918b-8456c77226eb",
        "type": "message",
        "text": "<@U025PBD75TM> has a jq like module written in bash if you're using it in the command line. <https://github.com/dnmfarrell/jp/>",
        "user": "U0264CJ5W83",
        "ts": "1643856408.126739",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://github.com/dnmfarrell/jp/",
                "image_url": "https://opengraph.githubassets.com/05c7f2f99ef4762a388ac2cb0569f39fe3c45af8b644bf9270b0b7772aaf968a/dnmfarrell/jp",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 97479,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/dnmfarrell/jp/",
                "fallback": "GitHub: GitHub - dnmfarrell/jp: Validate and transform JSON with Bash",
                "text": "Validate and transform JSON with Bash. Contribute to dnmfarrell/jp development by creating an account on GitHub.",
                "title": "GitHub - dnmfarrell/jp: Validate and transform JSON with Bash",
                "title_link": "https://github.com/dnmfarrell/jp/",
                "service_name": "GitHub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jhl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U025PBD75TM"
                            },
                            {
                                "type": "text",
                                "text": " has a jq like module written in bash if you're using it in the command line. "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/dnmfarrell/jp/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1643657057.708549",
        "parent_user_id": "UBN9AFS0N"
    }
]