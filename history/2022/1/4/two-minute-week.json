[
    {
        "client_msg_id": "a621d3bc-2148-4f9a-bff2-c19e687982a4",
        "type": "message",
        "text": "Hey everyone! Here is a very brief overview of what we\u2019ve been building to enable us developers to *create and share full-stack web apps without storing each other\u2019s data*. We\u2019ll be providing more details each week! Don\u2019t hesitate to drop any questions below  <https://share.descript.com/view/LW69H0AkbuM?transcript=false>",
        "user": "U02C3SH9L2J",
        "ts": "1641330394.111100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://share.descript.com/view/LW69H0AkbuM?transcript=false",
                "video_html": "<iframe src=\"https://share.descript.com/embed/LW69H0AkbuM?autoplay=1\" width=\"640\" height=\"360\" allowfullscreen=\"\"></iframe>",
                "video_html_width": 640,
                "video_html_height": 360,
                "thumb_url": "https://d1d3n03t5zntha.cloudfront.net/b8b58afd-8a1e-4d97-b8b9-97cc1af5139f/media_stream-1b6a343fb05e46069f95d19e7b5afa43.jpg",
                "thumb_width": 1920,
                "thumb_height": 1080,
                "id": 1,
                "original_url": "https://share.descript.com/view/LW69H0AkbuM?transcript=false",
                "fallback": "Descript Video: Screen Recording",
                "title": "Screen Recording",
                "title_link": "https://share.descript.com/view/LW69H0AkbuM?transcript=false",
                "author_name": "Matthew Linkous",
                "service_name": "Descript",
                "service_url": "https://www.descript.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T1eZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey everyone! Here is a very brief overview of what we\u2019ve been building to enable us developers to "
                            },
                            {
                                "type": "text",
                                "text": "create and share full-stack web apps without storing each other\u2019s data",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". We\u2019ll be providing more details each week! Don\u2019t hesitate to drop any questions below  "
                            },
                            {
                                "type": "link",
                                "url": "https://share.descript.com/view/LW69H0AkbuM?transcript=false"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "reply_count": 15,
        "reply_users_count": 3,
        "latest_reply": "1641558649.002000",
        "reply_users": [
            "U02NN5F35L1",
            "U013ZLJARC7",
            "U02C3SH9L2J"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0223KS9WAJ",
                    "USH01JEDQ"
                ],
                "count": 2
            },
            {
                "name": "clap",
                "users": [
                    "U02NN5F35L1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7a1b6b8c-c6a3-4b1a-ab08-f592221ca4ad",
        "type": "message",
        "text": "Cool! Do you have some kind of protocol to ensure the web apps can access and use the personal cloud data in a reliable way?",
        "user": "U02NN5F35L1",
        "ts": "1641367577.111500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xwTC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool! Do you have some kind of protocol to ensure the web apps can access and use the personal cloud data in a reliable way?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "444766ac-dfea-49a6-95ba-e0eb73ca0ab8",
        "type": "message",
        "text": "Do you have a longer writeup somewhere?",
        "user": "U013ZLJARC7",
        "ts": "1641375963.111800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x7Tz9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you have a longer writeup somewhere?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "9801dea4-90e8-4855-bb3d-2d25d205b799",
        "type": "message",
        "text": "<@U02NN5F35L1> yep! Currently it\u2019s pretty simple but each web app is served on its own subdomain with strict <https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP|CSP rules> to prevent sending data to external servers. To actually persist data an app can connect to any number of \u201cagents\u201d (which are hosted isolated backends) but it must declare which ones it connects to in its manifest so the user can see. Each agent will have access to a separate, isolated part of the users database and are decoupled from the frontend app. So, for example, that means the \u201ccalendar agent\u201d can be used by multiple apps so that you can have a canonical place for all your events. And in your frontend app, you don\u2019t have to do _any_ authentication, authorization, or API-key management. You just declare in your config/manifest which agents your app interacts with and then you can use those API\u2019s directly. Does that makes sense?",
        "user": "U02C3SH9L2J",
        "ts": "1641394131.112000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP",
                "image_url": "https://developer.mozilla.org/mdn-social-share.0ca9dbda.png",
                "image_width": 444,
                "image_height": 250,
                "image_bytes": 12123,
                "service_icon": "https://developer.mozilla.org/apple-touch-icon.0ea0fa02.png",
                "id": 1,
                "original_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP",
                "fallback": "Content Security Policy (CSP) - HTTP | MDN",
                "text": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross-Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft, to site defacement, to malware distribution.",
                "title": "Content Security Policy (CSP) - HTTP | MDN",
                "title_link": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP",
                "service_name": "developer.mozilla.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c+0R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02NN5F35L1"
                            },
                            {
                                "type": "text",
                                "text": " yep! Currently it\u2019s pretty simple but each web app is served on its own subdomain with strict "
                            },
                            {
                                "type": "link",
                                "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP",
                                "text": "CSP rules"
                            },
                            {
                                "type": "text",
                                "text": " to prevent sending data to external servers. To actually persist data an app can connect to any number of \u201cagents\u201d (which are hosted isolated backends) but it must declare which ones it connects to in its manifest so the user can see. Each agent will have access to a separate, isolated part of the users database and are decoupled from the frontend app. So, for example, that means the \u201ccalendar agent\u201d can be used by multiple apps so that you can have a canonical place for all your events. And in your frontend app, you don\u2019t have to do "
                            },
                            {
                                "type": "text",
                                "text": "any",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " authentication, authorization, or API-key management. You just declare in your config/manifest which agents your app interacts with and then you can use those API\u2019s directly. Does that makes sense?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "0bc7e1e5-c570-4145-9ac1-1b096de790eb",
        "type": "message",
        "text": "<@U013ZLJARC7> ^ my response above might shed some light but we are working on a written overview as well as some preliminary documentation. We\u2019ve also begun pulling out and open-sourcing our Agent runtime (effectively serverless, isolated JS functions) if you\u2019re interested in following that: <https://github.com/aspen-cloud/runtime>",
        "user": "U02C3SH9L2J",
        "ts": "1641394361.112300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://github.com/aspen-cloud/runtime",
                "image_url": "https://opengraph.githubassets.com/fe18b18886dfe3b04be5fa38108c4bfa8cf6a389c34e62857ebef4513aae64e9/aspen-cloud/runtime",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 42552,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/aspen-cloud/runtime",
                "fallback": "GitHub: GitHub - aspen-cloud/runtime",
                "text": "Contribute to aspen-cloud/runtime development by creating an account on GitHub.",
                "title": "GitHub - aspen-cloud/runtime",
                "title_link": "https://github.com/aspen-cloud/runtime",
                "service_name": "GitHub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Yc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " ^ my response above might shed some light but we are working on a written overview as well as some preliminary documentation. We\u2019ve also begun pulling out and open-sourcing our Agent runtime (effectively serverless, isolated JS functions) if you\u2019re interested in following that: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/aspen-cloud/runtime"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "301b969b-6a8b-4ded-9c13-ee992ebf0c79",
        "type": "message",
        "text": "<@U02C3SH9L2J> It does make sense\u2014thanks! I like the idea of owning my data and letting third parties access it in a controllable way.\n\nTwo thoughts come to mind.\n\nOne, it seems similar to how Apple and Google let apps access location, photos, health etc. data. Would you want people to clone this data somehow, or start from scratch?\n\nTwo, why don\u2019t we have something like that already? The idea seems good for the user in principle, so I wonder what may be the reasons it hasn\u2019t really materialized in the past, and what may be different now.\n\nI think what you\u2019re working on could be really awesome!",
        "user": "U02NN5F35L1",
        "ts": "1641398634.112600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L0P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02C3SH9L2J"
                            },
                            {
                                "type": "text",
                                "text": " It does make sense\u2014thanks! I like the idea of owning my data and letting third parties access it in a controllable way.\n\nTwo thoughts come to mind.\n\nOne, it seems similar to how Apple and Google let apps access location, photos, health etc. data. Would you want people to clone this data somehow, or start from scratch?\n\nTwo, why don\u2019t we have something like that already? The idea seems good for the user in principle, so I wonder what may be the reasons it hasn\u2019t really materialized in the past, and what may be different now.\n\nI think what you\u2019re working on could be really awesome!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "0315a6f5-42f5-4011-aa6e-463ad56c88d2",
        "type": "message",
        "text": "<@U02NN5F35L1> Great observation! We model a lot of ideas around permissions on the patterns used in mobile app ecosystems, and even take it step further by limiting networking.\n1. Re: cloning existing data vs starting anew, we decided to build from scratch so a user will have a clean, single source of truth while still having the ability to write some code (and potentially publish it for others to install with a click!) that can import data from other sources with an API.  We would happily assist someone in making an agent that pulled, for example, Google calendar data into your Aspen calendar.  \n2.  It\u2019s a great question. I think previous attempts at creating personal servers with one-click installable apps have started with existing open-source projects and used ordinary linux VM\u2019s; this however, is fairly costly to the user (paying when not using), still fairly technical to manage, and the existing apps tend to be either low quality or aimed towards developers. Our platform is effectively \u201cserverless\u201d so it is much less expensive to run, has a uniform application model so you can much more easily work with the underlying data and API\u2019s, and should be much easier for non-technical users to use. ",
        "user": "U02C3SH9L2J",
        "ts": "1641404314.112800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tPGK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02NN5F35L1"
                            },
                            {
                                "type": "text",
                                "text": " Great observation! We model a lot of ideas around permissions on the patterns used in mobile app ecosystems, and even take it step further by limiting networking.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Re: cloning existing data vs starting anew, we decided to build from scratch so a user will have a clean, single source of truth while still having the ability to write some code (and potentially publish it for others to install with a click!) that can import data from other sources with an API.  We would happily assist someone in making an agent that pulled, for example, Google calendar data into your Aspen calendar.  "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": " It\u2019s a great question. I think previous attempts at creating personal servers with one-click installable apps have started with existing open-source projects and used ordinary linux VM\u2019s; this however, is fairly costly to the user (paying when not using), still fairly technical to manage, and the existing apps tend to be either low quality or aimed towards developers. Our platform is effectively \u201cserverless\u201d so it is much less expensive to run, has a uniform application model so you can much more easily work with the underlying data and API\u2019s, and should be much easier for non-technical users to use. "
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "4c02a90f-d248-49f0-9dd7-892ca8423958",
        "type": "message",
        "text": "The other problem is existing apps tend to roll their own authentication and data storage so making them work with an existing platform is very difficult. What ends up happening is, you log into the \u201cplatform\u201d and then have to again log into each app which likely has it\u2019s own Postgres process running, etc. Overall, the existing solutions are very clunky and inefficient.",
        "user": "U02C3SH9L2J",
        "ts": "1641404440.113000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TCcPl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The other problem is existing apps tend to roll their own authentication and data storage so making them work with an existing platform is very difficult. What ends up happening is, you log into the \u201cplatform\u201d and then have to again log into each app which likely has it\u2019s own Postgres process running, etc. Overall, the existing solutions are very clunky and inefficient."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "32851dfb-6e60-4215-8556-c8630b993a31",
        "type": "message",
        "text": "Great follow-up, thanks <@U02C3SH9L2J>.\n\nThis makes sense to me. It may be indeed the case that nobody\u2019s come up with a working, easy to use solution to this.\n\nYour mention of your platform being serverless stood out to me, because I assume data can be both written and read in my personal cloud. I saw your GitHub repo mentioned an append-only log, I wonder if that has something to do with it? You write by appending, and reading is a matter of reading a \u201cstatic file\u201d?\n\nI\u2019m interested in your approach because I was thinking of making a similar thing for UI on the web. Many UI elements reuse the same logic, and only differ in styling. So you could define the logic once with statecharts, for example, and then let people style those elements with styles from their \u201cpersonal style cloud\u201d.",
        "user": "U02NN5F35L1",
        "ts": "1641454005.000300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pMoT3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great follow-up, thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U02C3SH9L2J"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nThis makes sense to me. It may be indeed the case that nobody\u2019s come up with a working, easy to use solution to this.\n\nYour mention of your platform being serverless stood out to me, because I assume data can be both written and read in my personal cloud. I saw your GitHub repo mentioned an append-only log, I wonder if that has something to do with it? You write by appending, and reading is a matter of reading a \u201cstatic file\u201d?\n\nI\u2019m interested in your approach because I was thinking of making a similar thing for UI on the web. Many UI elements reuse the same logic, and only differ in styling. So you could define the logic once with statecharts, for example, and then let people style those elements with styles from their \u201cpersonal style cloud\u201d."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "688fe2b9-76a8-4b0a-9dcf-8f26cef1bd7f",
        "type": "message",
        "text": "I built a prototype of a thing like this in 2010. The main problems with adoption were: app devs aren't interested in building for a platform without users, and users aren't interested in signing up for a service unless it has a killer app. Do you have any plans to overcome this trap?",
        "user": "U013ZLJARC7",
        "ts": "1641459983.000600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q8DG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I built a prototype of a thing like this in 2010. The main problems with adoption were: app devs aren't interested in building for a platform without users, and users aren't interested in signing up for a service unless it has a killer app. Do you have any plans to overcome this trap?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "28812e5c-6e94-45a6-8c45-6ce44f632fd9",
        "type": "message",
        "text": "<@U013ZLJARC7> yeah that\u2019s exactly right and easily the biggest risk in building something like this. I think it\u2019s going to be very difficult to overcome no matter what. But we\u2019re trying a couple things:\n\nFirst, we\u2019re prioritizing getting Aspen in to the hands of people that are both devs _and_ users (like the lovely folks in this community!) so we can all build apps for ourselves and each other.\n\nSecond, while we probably won\u2019t directly come up with the killer app on our own, we\u2019re working really hard to provide the right tools and complementary API\u2019s for the developer or designer who does have the brilliant idea. For example, we\u2019ve noticed a lot of really cool productivity apps like Superhuman or Cron, are primarily innovating on the frontend. So we\u2019re trying to provide robust, canonical agent (i.e. backend) implementations of common API\u2019s like calendar, messaging, documents, etc. This way if someone has a great idea for an app, they can skip all the of the tedious authentication, authorization, db management, token management, etc and just build the frontend of their dreams. Same goes for backend devs who don\u2019t want to bother with a frontend: they can just build and upload an agent for others to use from the terminal or connect to their own frontend.\n\nIt\u2019s going to be a challenge but we\u2019re very committed to our mission and will spend whatever time and effort it takes to polish the UI, refine the API,  and support the developers.",
        "user": "U02C3SH9L2J",
        "ts": "1641478803.000800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ruWmG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " yeah that\u2019s exactly right and easily the biggest risk in building something like this. I think it\u2019s going to be very difficult to overcome no matter what. But we\u2019re trying a couple things:\n\nFirst, we\u2019re prioritizing getting Aspen in to the hands of people that are both devs "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " users (like the lovely folks in this community!) so we can all build apps for ourselves and each other.\n\nSecond, while we probably won\u2019t directly come up with the killer app on our own, we\u2019re working really hard to provide the right tools and complementary API\u2019s for the developer or designer who does have the brilliant idea. For example, we\u2019ve noticed a lot of really cool productivity apps like Superhuman or Cron, are primarily innovating on the frontend. So we\u2019re trying to provide robust, canonical agent (i.e. backend) implementations of common API\u2019s like calendar, messaging, documents, etc. This way if someone has a great idea for an app, they can skip all the of the tedious authentication, authorization, db management, token management, etc and just build the frontend of their dreams. Same goes for backend devs who don\u2019t want to bother with a frontend: they can just build and upload an agent for others to use from the terminal or connect to their own frontend.\n\nIt\u2019s going to be a challenge but we\u2019re very committed to our mission and will spend whatever time and effort it takes to polish the UI, refine the API,  and support the developers."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4175c8d5-81a8-48be-857c-a923013e24d1",
        "type": "message",
        "text": "<@U02NN5F35L1> yeah that\u2019s pretty much it. We\u2019re working on a more detailed overview with explainer graphics to fully illustrate how persistence works. But the main way to persist data is to store events on an append-only log. It\u2019s not a static file but we inject a runtime object into the agents code so they can call methods like `pushEvent` and create projections of the data through aggregations. If you\u2019ve used Redux, it\u2019s a very similar pattern except in Aspen it runs on the server and is automatically persisted.\n\nHere is an example of a task manager agent I made: <https://github.com/matlin/todos-backend/blob/main/src/index.ts>\nDisclaimer: some of these API\u2019s will very likely change",
        "user": "U02C3SH9L2J",
        "ts": "1641479486.001000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://github.com/matlin/todos-backend/blob/main/src/index.ts",
                "image_url": "https://opengraph.githubassets.com/b62f938c8fc88d6cda8c23cc05993bf61a968ab0385cf20c8b6cded7b1f6c8d8/matlin/todos-backend",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 128867,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/matlin/todos-backend/blob/main/src/index.ts",
                "fallback": "GitHub: todos-backend/index.ts at main \u00b7 matlin/todos-backend",
                "text": "Simple Todo List Agent for Aspen PC. Contribute to matlin/todos-backend development by creating an account on GitHub.",
                "title": "todos-backend/index.ts at main \u00b7 matlin/todos-backend",
                "title_link": "https://github.com/matlin/todos-backend/blob/main/src/index.ts",
                "service_name": "GitHub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kFed1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02NN5F35L1"
                            },
                            {
                                "type": "text",
                                "text": " yeah that\u2019s pretty much it. We\u2019re working on a more detailed overview with explainer graphics to fully illustrate how persistence works. But the main way to persist data is to store events on an append-only log. It\u2019s not a static file but we inject a runtime object into the agents code so they can call methods like "
                            },
                            {
                                "type": "text",
                                "text": "pushEvent",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and create projections of the data through aggregations. If you\u2019ve used Redux, it\u2019s a very similar pattern except in Aspen it runs on the server and is automatically persisted.\n\nHere is an example of a task manager agent I made: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/matlin/todos-backend/blob/main/src/index.ts"
                            },
                            {
                                "type": "text",
                                "text": "\nDisclaimer: some of these API\u2019s will very likely change"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "d6e7c444-529a-4152-8a94-d58da1321548",
        "type": "message",
        "text": "The main thing to note with that example agent is that it\u2019s a complete backend for multi-tenant, multi-list task manager all in ~100 lines of Typescript",
        "user": "U02C3SH9L2J",
        "ts": "1641479604.001300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QkUw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The main thing to note with that example agent is that it\u2019s a complete backend for multi-tenant, multi-list task manager all in ~100 lines of Typescript"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "566aa62c-d269-4722-9361-372f567a0356",
        "type": "message",
        "text": "Nice! I haven\u2019t worked with Redux, but I have worked with XState, which also combines all logic in one massive object.\n\nWill be interested to read that overview of your persistence implementation details. In particular, timing and syncing events. Martin Kleppmann\u2019s Designing Data-Intensive Applications had some interesting discussion of this, but I\u2019m sure you know that one already!",
        "user": "U02NN5F35L1",
        "ts": "1641484665.001500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ljLG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice! I haven\u2019t worked with Redux, but I have worked with XState, which also combines all logic in one massive object.\n\nWill be interested to read that overview of your persistence implementation details. In particular, timing and syncing events. Martin Kleppmann\u2019s Designing Data-Intensive Applications had some interesting discussion of this, but I\u2019m sure you know that one already!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "1b79298a-2c69-459e-a16d-37555519d095",
        "type": "message",
        "text": "Martin\u2019s work is definitely a big influence. Currently everything is serialized on the server but this obviously doesn\u2019t scale in terms of latency from the client so we have an implementation that acts mostly like a CRDT that we\u2019ll share more details on in the future!",
        "user": "U02C3SH9L2J",
        "ts": "1641508317.001700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lwu6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Martin\u2019s work is definitely a big influence. Currently everything is serialized on the server but this obviously doesn\u2019t scale in terms of latency from the client so we have an implementation that acts mostly like a CRDT that we\u2019ll share more details on in the future!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "9a4eb074-7cb9-427f-afb9-e67863d23686",
        "type": "message",
        "text": "Good luck and keep us posted :slightly_smiling_face:",
        "user": "U02NN5F35L1",
        "ts": "1641558649.002000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xZ9h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good luck and keep us posted "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1641330394.111100",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    }
]