[
    {
        "client_msg_id": "ee92d819-a37e-4861-b9df-77fb21766b5e",
        "type": "message",
        "text": "&gt; In the early to mid-1990\u2019s, I was composing a document and needed to find and insert some information from another program. To do this, I had to leave my text editor, search for and launch another application, browse for the information I was looking for, format it appropriately for my source needs, and then switch back to where I was in my original text editor. All of this took minutes, and more importantly, took me out of the flow of what I was writing. There had to be a better way, I thought.\n&gt; \n&gt; As a result, I devised what I called \u201cThe Invisible Interface\u201d. The idea was to use the computer\u2019s clipboard as an interpretable information bus for retrieving information I wanted without ever having to leave the application, or even the very text line, I was working on. As an example, I would type something like, \u201cPlease send the package to my sister\u2019s address\u201d. I would then select and copy to the clipboard the phrase \u201cmy sister\u2019s address\u201d, hit a function key to request processing, and I would instantly hear an audio cue: \u201cbing\u201d if successful, \u201cbong\u201d if the system was not able to resolve the phrase to more specific information. If I heard a \u201cbing\u201d, I would hit the paste command in my editor, and it would replace the selected text \u201cmy sister\u2019s address\u201d with \u201cSara Cheyer, 123 Main St. Town, State, 91101\u201d. I connected a myriad of databases and information sources, and could instantly and painlessly retrieve all sorts of information by a concise, direct phrase inserted in-line in the context of what I was doing: \u201cpopulation of South America\u2019s largest country\u201d, \u201cemail for my boss\u201d, \u201cfree time on Thursday\u201d, \u201cflower in French\u201d, etc.\n&gt; \n-- Adam Cheyer, \"Interpretable and Executable text\", in The Future of Text (<https://futuretextpublishing.com/future-of-text-2020-download|https://futuretextpublishing.com/future-of-text-2020-download>)",
        "user": "UCUSW7WVD",
        "ts": "1665329842.045579",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1665329876.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pGIuF",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the early to mid-1990\u2019s, I was composing a document and needed to find and insert some information from another program. To do this, I had to leave my text editor, search for and launch another application, browse for the information I was looking for, format it appropriately for my source needs, and then switch back to where I was in my original text editor. All of this took minutes, and more importantly, took me out of the flow of what I was writing. There had to be a better way, I thought.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "As a result, I devised what I called \u201cThe Invisible Interface\u201d. The idea was to use the computer\u2019s clipboard as an interpretable information bus for retrieving information I wanted without ever having to leave the application, or even the very text line, I was working on. As an example, I would type something like, \u201cPlease send the package to my sister\u2019s address\u201d. I would then select and copy to the clipboard the phrase \u201cmy sister\u2019s address\u201d, hit a function key to request processing, and I would instantly hear an audio cue: \u201cbing\u201d if successful, \u201cbong\u201d if the system was not able to resolve the phrase to more specific information. If I heard a \u201cbing\u201d, I would hit the paste command in my editor, and it would replace the selected text \u201cmy sister\u2019s address\u201d with \u201cSara Cheyer, 123 Main St. Town, State, 91101\u201d. I connected a myriad of databases and information sources, and could instantly and painlessly retrieve all sorts of information by a concise, direct phrase inserted in-line in the context of what I was doing: \u201cpopulation of South America\u2019s largest country\u201d, \u201cemail for my boss\u201d, \u201cfree time on Thursday\u201d, \u201cflower in French\u201d, etc.\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n-- Adam Cheyer, \"Interpretable and Executable text\", in The Future of Text ("
                            },
                            {
                                "type": "link",
                                "url": "https://futuretextpublishing.com/future-of-text-2020-download",
                                "text": "https://futuretextpublishing.com/future-of-text-2020-download"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "reply_count": 8,
        "reply_users_count": 5,
        "latest_reply": "1665350107.681689",
        "reply_users": [
            "U03LTF5NFPC",
            "U71PMQ1V0",
            "UDQBTJ211",
            "UCUSW7WVD",
            "U016VUZGUUQ"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "06A838DA-7B9B-4958-BA6C-8447D06C1FEE",
        "type": "message",
        "text": "sounds kind of like what google/amazon/apple/everybody is trying to do with an \u201cassistant\u201d, but they have pretty bad incentives compared to what they were trying to build in this snippet",
        "user": "U03LTF5NFPC",
        "ts": "1665331488.056759",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03LTF5NFPC",
            "ts": "1665331499.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dIt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sounds kind of like what google/amazon/apple/everybody is trying to do with an \u201cassistant\u201d, but they have pretty bad incentives compared to what they were trying to build in this snippet"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "13c0d42a-19e6-42e3-b7bc-887c7b8e4dcb",
        "type": "message",
        "text": "Maybe closer to the way that andoid/ios parse text messages to look for address, phone numbers etc and attach actions to them.",
        "user": "U71PMQ1V0",
        "ts": "1665337310.465509",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PQ8Sl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe closer to the way that andoid/ios parse text messages to look for address, phone numbers etc and attach actions to them."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ca00a9fd-24de-4353-b8b2-7eb57c5e68bb",
        "type": "message",
        "text": "This sparked a loosely related idea. The clipboard could have worked the other way around - you \"paste\" into the location, then go and look for the thing to \"copy\" there. This would allow the computer to know the destination context during the search, which might be helpful.",
        "user": "UDQBTJ211",
        "ts": "1665341184.903469",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y=s7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This sparked a loosely related idea. The clipboard could have worked the other way around - you \"paste\" into the location, then go and look for the thing to \"copy\" there. This would allow the computer to know the destination context during the search, which might be helpful."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d82d994e-dc05-418a-8fb6-f0bd47d602b4",
        "type": "message",
        "text": "That sounds vaguely like how Plan 9 UIs work.\n\nThis approach has been speaking more to me since I declared bankruptcy on the Unix terminal and wrote off all my accumulated expertise there as a sunk cost. When I switch to a canvas of pixels as a more timeless foundation I find myself building little keyboard shortcuts into the desktop environment that put things on the clipboard that I can paste into my canvas. For example I have a shortcut that copies the current timestamp into the clipboard, and another shortcut that _prepends_ the current timestamp to clipboard contents.",
        "user": "UCUSW7WVD",
        "ts": "1665343672.088709",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1665343780.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R+Pxx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That sounds vaguely like how Plan 9 UIs work.\n\nThis approach has been speaking more to me since I declared bankruptcy on the Unix terminal and wrote off all my accumulated expertise there as a sunk cost. When I switch to a canvas of pixels as a more timeless foundation I find myself building little keyboard shortcuts into the desktop environment that put things on the clipboard that I can paste into my canvas. For example I have a shortcut that copies the current timestamp into the clipboard, and another shortcut that "
                            },
                            {
                                "type": "text",
                                "text": "prepends",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the current timestamp to clipboard contents."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "614C00A5-8650-46F4-9B5D-35F1BC8EE884",
        "type": "message",
        "text": "&gt; This approach has been speaking more to me since I declared bankruptcy on the Unix terminal and wrote off all my accumulated expertise there as a sunk cost.\nDo tell",
        "user": "U03LTF5NFPC",
        "ts": "1665343904.440959",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q11",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This approach has been speaking more to me since I declared bankruptcy on the Unix terminal and wrote off all my accumulated expertise there as a sunk cost"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Do tell"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "85027879-5e0b-42e6-a149-312aa875b86b",
        "type": "message",
        "text": "It'll take a while, but basically there's an emergent story arc in the updates I have not been shy about sharing here over the last 4 years.",
        "user": "UCUSW7WVD",
        "ts": "1665345479.553099",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XLL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It'll take a while, but basically there's an emergent story arc in the updates I have not been shy about sharing here over the last 4 years."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "6f7da982-a61e-4834-b02f-22c1c66d8166",
        "type": "message",
        "text": "Reminds me of the idea in The Humane Interface to use selections as arguments to programs. I like that approach better. I definitely don't love the idea of combining \"copying\" something we're never going to paste with a subsequent operation explicitly designed to work on invisible arguments with maybe-invisible results (please never make anything dependent on audio cues, btw, personally I want my computers to be absolutely silent unless I'm specifically listening to media).\n\nIncreased visibility and selections are honking great ideas, let's do more of those.",
        "user": "U016VUZGUUQ",
        "ts": "1665349688.780489",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U016VUZGUUQ",
            "ts": "1665349903.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qD3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me of the idea in The Humane Interface to use selections as arguments to programs. I like that approach better. I definitely don't love the idea of combining \"copying\" something we're never going to paste with a subsequent operation explicitly designed to work on invisible arguments with maybe-invisible results (please never make anything dependent on audio cues, btw, personally I want my computers to be absolutely silent unless I'm specifically listening to media).\n\nIncreased visibility and selections are honking great ideas, let's do more of those."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "ace5e939-ca71-4841-9dbf-4a790e19801c",
        "type": "message",
        "text": "<@UDQBTJ211> I like this idea a lot, but not the \"copy-paste\" terminology attached to it :D. I might like it even better than the Raskin/Humane Interface idea of polluting your content with command arguments (I guess that made more sense when we didn't expect version history everywhere?).",
        "user": "U016VUZGUUQ",
        "ts": "1665350107.681689",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U016VUZGUUQ",
            "ts": "1665350122.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UtJHV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " I like this idea a lot, but not the \"copy-paste\" terminology attached to it :D. I might like it even better than the Raskin/Humane Interface idea of polluting your content with command arguments (I guess that made more sense when we didn't expect version history everywhere?)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665329842.045579",
        "parent_user_id": "UCUSW7WVD"
    }
]