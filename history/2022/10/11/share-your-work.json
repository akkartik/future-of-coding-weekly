[
    {
        "client_msg_id": "2615d2b9-7f66-407b-91a5-e65ebf8788eb",
        "type": "message",
        "text": "My talk from Strange Loop is out. There will soon be a mini-site with a transcript, references, and a few additional notes and corrections.\n<https://www.youtube.com/watch?v=8Ab3ArE8W3s>",
        "user": "U013ZLJARC7",
        "ts": "1665503282.267399",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=8Ab3ArE8W3s",
                "thumb_url": "https://i.ytimg.com/vi/8Ab3ArE8W3s/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/8Ab3ArE8W3s?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"&quot;Stop Writing Dead Programs&quot; by Jack Rusher (Strange Loop 2022)\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=8Ab3ArE8W3s",
                "fallback": "YouTube Video: \"Stop Writing Dead Programs\" by Jack Rusher (Strange Loop 2022)",
                "title": "\"Stop Writing Dead Programs\" by Jack Rusher (Strange Loop 2022)",
                "title_link": "https://www.youtube.com/watch?v=8Ab3ArE8W3s",
                "author_name": "Strange Loop Conference",
                "author_link": "https://www.youtube.com/c/StrangeLoopConf",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qqkck",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My talk from Strange Loop is out. There will soon be a mini-site with a transcript, references, and a few additional notes and corrections.\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=8Ab3ArE8W3s"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "reply_count": 14,
        "reply_users_count": 8,
        "latest_reply": "1665657755.966509",
        "reply_users": [
            "UEBG0NPDK",
            "U03LMRE6MQE",
            "U03PS6X1J14",
            "U013ZLJARC7",
            "UCUSW7WVD",
            "UJBAJNFLK",
            "UJFN50C00",
            "UA14TGLTC"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UUQ2EQW21",
                    "UJFN50C00"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK",
                    "UTGN8SP1P",
                    "UCUSW7WVD",
                    "U0123H7JRDM",
                    "UML4ZEKDK",
                    "URKQXRCAC",
                    "U03GBV8B58V"
                ],
                "count": 7
            },
            {
                "name": "bulb",
                "users": [
                    "U023V63MF6V",
                    "UJFN50C00",
                    "U0123H7JRDM"
                ],
                "count": 3
            },
            {
                "name": "clap",
                "users": [
                    "U03PS6X1J14"
                ],
                "count": 1
            },
            {
                "name": "boom",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            },
            {
                "name": "the_horns",
                "users": [
                    "UF6RLAL7J",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "7c01195f-8bdc-4b01-bddd-2f8bf38543a3",
        "type": "message",
        "text": "I loved the flippancy. Made it very entertaining :smile:",
        "user": "UEBG0NPDK",
        "ts": "1665506980.042189",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1665507023.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U2Cl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I loved the flippancy. Made it very entertaining "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U03PS6X1J14",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "laughing",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            },
            {
                "name": "pray",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "17a2a669-b61f-44cf-989c-13cf44d6bdad",
        "type": "message",
        "text": "<@U013ZLJARC7> thanks for the talk. More engaging to most. Also I've moved from working on erlang to golang so might be sharing it at the office :slightly_smiling_face:\n\nI will be watching this many times more. I think I can probably use it as a shopping list of features to add to my language/editor.",
        "user": "U03LMRE6MQE",
        "ts": "1665512005.002979",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2dCUk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " thanks for the talk. More engaging to most. Also I've moved from working on erlang to golang so might be sharing it at the office "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI will be watching this many times more. I think I can probably use it as a shopping list of features to add to my language/editor."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "541eea96-6507-41b5-96c9-92b8571e0d49",
        "type": "message",
        "text": "Are they any systems that have done a particularly interesting job of having strong type checking of code that is \"Repl'd\" into a running system",
        "user": "U03LMRE6MQE",
        "ts": "1665512053.169929",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SevEj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are they any systems that have done a particularly interesting job of having strong type checking of code that is \"Repl'd\" into a running system"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "c60bd677-3098-48be-83f8-7e00a8f29546",
        "type": "message",
        "text": "Great talk. Makes me wish I had gone to Strange Loop now. :simple_smile:",
        "user": "U03PS6X1J14",
        "ts": "1665515562.519019",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CQXww",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great talk. Makes me wish I had gone to Strange Loop now. "
                            },
                            {
                                "type": "emoji",
                                "name": "simple_smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "d47d07c7-00df-4907-841f-b082cb20f319",
        "type": "message",
        "text": "<@U03LMRE6MQE> Haskell has `ghci`, but it dumps core surprisingly often (perhaps it isn't correct by construction?). OCaml's `utop` is better, and the implementors have recently suggested that the current state of the compiler admits further improvements to its interactivity. The team working on Hazel have told me that they'll be exploring live coding in an environment with typed holes in the near future. There are also Lisp dialects \u2014 most notably Shen \u2014  that support an interesting hybrid way of working; definitely worth checking it out.",
        "user": "U013ZLJARC7",
        "ts": "1665520986.644549",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fofhO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03LMRE6MQE"
                            },
                            {
                                "type": "text",
                                "text": " Haskell has "
                            },
                            {
                                "type": "text",
                                "text": "ghci",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but it dumps core surprisingly often (perhaps it isn't correct by construction?). OCaml's "
                            },
                            {
                                "type": "text",
                                "text": "utop",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is better, and the implementors have recently suggested that the current state of the compiler admits further improvements to its interactivity. The team working on Hazel have told me that they'll be exploring live coding in an environment with typed holes in the near future. There are also Lisp dialects \u2014 most notably Shen \u2014  that support an interesting hybrid way of working; definitely worth checking it out."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "ee383c57-2045-478b-99b6-1e41f5e15fd0",
        "type": "message",
        "text": "As someone who has very much not yet internalized the enlightenment of \"debuggability &gt; correct by construction\" but wants to, I'd like to make a tangential and simultaneously sadder point.\n\nWith modern logging frameworks it's non-trivial to determine if a debug print is working like it should. You don't see a test print, do you have the right logging level, is it logging to the right sink, are the logs from the container making it out of the container, etc., etc. So _not only_ are we still living in the mainframe+teletype era, we're actively moving in the _wrong_ direction. At least when we programmed with teletypes on mainframes we didn't have to worry if a print was getting intercepted before it got on paper.",
        "user": "UCUSW7WVD",
        "ts": "1665552381.564759",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1665552438.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jEB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As someone who has very much not yet internalized the enlightenment of \"debuggability > correct by construction\" but wants to, I'd like to make a tangential and simultaneously sadder point.\n\nWith modern logging frameworks it's non-trivial to determine if a debug print is working like it should. You don't see a test print, do you have the right logging level, is it logging to the right sink, are the logs from the container making it out of the container, etc., etc. So "
                            },
                            {
                                "type": "text",
                                "text": "not only",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are we still living in the mainframe+teletype era, we're actively moving in the "
                            },
                            {
                                "type": "text",
                                "text": "wrong",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " direction. At least when we programmed with teletypes on mainframes we didn't have to worry if a print was getting intercepted before it got on paper."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK",
                    "U013ZLJARC7",
                    "UML4ZEKDK",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "3356cfc0-1b86-48a3-9a64-27067ce0ab53",
        "type": "message",
        "text": "<@UCUSW7WVD> The paper discussed elsewhere (<https://futureofcoding.slack.com/archives/C037X8XMFB3/p1665216779308789>) provides one response to the question why (and when) \"debuggability &gt; correct by construction\". Summary: quite often you don't understand your problem space well enough to do \"correct by construction\". Debugging is not only fixing bugs in the code, but also improving your understanding.",
        "user": "UJBAJNFLK",
        "ts": "1665560352.713419",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1665560422.000000"
        },
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C037X8XMFB3/p1665216779308789",
                "ts": "1665216779.308789",
                "author_id": "U0378MDUG1Y",
                "channel_id": "C037X8XMFB3",
                "channel_team": "T5TCAFTA9",
                "channel_name": "reading-together",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C037X8XMFB3",
                        "ts": "1665216779.308789",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "nS93",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "\u201cFormality Considered Harmful: Experiences, Emerging Themes, and Directions on the Use of Formal Representations in Interactive Systems\u201d by Shipman and Marshall (1999)\n\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_quote",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "In this paper, we describe how creators of systems that support intellectual work like design, writing, or organizing and interpreting information are particularly at risk of expecting too great a level of formality from their users. To understand the effects of imposing or requiring formality, we draw on our own experiences designing and using such systems."
                                                }
                                            ],
                                            "border": 0
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "\n"
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "http://www.csdl.tamu.edu/~shipman/formality-paper/harmful.html",
                                                    "text": "http://www.csdl.tamu.edu/~shipman/formality-paper/harmful.html"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C037X8XMFB3/p1665216779308789",
                "fallback": "[October 8th, 2022 1:12 AM] chris.shank.23: \u201cFormality Considered Harmful: Experiences, Emerging Themes, and Directions on the Use of Formal Representations in Interactive Systems\u201d by Shipman and Marshall (1999)\n\n&gt; In this paper, we describe how creators of systems that support intellectual work like design, writing, or organizing and interpreting information are particularly at risk of expecting too great a level of formality from their users. To understand the effects of imposing or requiring formality, we draw on our own experiences designing and using such systems.\n<http://www.csdl.tamu.edu/~shipman/formality-paper/harmful.html|http://www.csdl.tamu.edu/~shipman/formality-paper/harmful.html>",
                "text": "\u201cFormality Considered Harmful: Experiences, Emerging Themes, and Directions on the Use of Formal Representations in Interactive Systems\u201d by Shipman and Marshall (1999)\n\n&gt; In this paper, we describe how creators of systems that support intellectual work like design, writing, or organizing and interpreting information are particularly at risk of expecting too great a level of formality from their users. To understand the effects of imposing or requiring formality, we draw on our own experiences designing and using such systems.\n<http://www.csdl.tamu.edu/~shipman/formality-paper/harmful.html|http://www.csdl.tamu.edu/~shipman/formality-paper/harmful.html>",
                "author_name": "Christopher Shank",
                "author_link": "https://futureofcoding.slack.com/team/U0378MDUG1Y",
                "author_icon": "https://avatars.slack-edge.com/2022-03-23/3286745266387_1092a4f970985ebc8d2b_48.png",
                "author_subname": "Christopher Shank",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in #reading-together"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fYaO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " The paper discussed elsewhere ("
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C037X8XMFB3/p1665216779308789"
                            },
                            {
                                "type": "text",
                                "text": ") provides one response to the question why (and when) \"debuggability > correct by construction\". Summary: quite often you don't understand your problem space well enough to do \"correct by construction\". Debugging is not only fixing bugs in the code, but also improving your understanding."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "UML4ZEKDK",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "b5cfa457-bb17-4118-a8a0-85401e1a8cd3",
        "type": "message",
        "text": "<@U013ZLJARC7> interesting mention of propagators here.  Are you aware of the \"goblins\" project of Christine Webber <https://spritely.institute/goblins/> ?",
        "user": "UJFN50C00",
        "ts": "1665568950.367339",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xAe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " interesting mention of propagators here.  Are you aware of the \"goblins\" project of Christine Webber "
                            },
                            {
                                "type": "link",
                                "url": "https://spritely.institute/goblins/"
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "602b82a1-eb18-4eb7-9238-aee53d21d7ea",
        "type": "message",
        "text": "Seems very intersting to see goblins at the foundation of spritely as a new experiment in the socially networked space",
        "user": "UJFN50C00",
        "ts": "1665568973.419469",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rtg1X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Seems very intersting to see goblins at the foundation of spritely as a new experiment in the socially networked space"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "fd47b22a-09a3-44d6-be04-60ccd98a6595",
        "type": "message",
        "text": "<@UJFN50C00> yeah, it's cool :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1665593181.472429",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yj57P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJFN50C00"
                            },
                            {
                                "type": "text",
                                "text": " yeah, it's cool "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "20f21cbc-728c-4676-891e-8e053b30a35a",
        "type": "message",
        "text": "After a frustrating day in the office, mostly struggling to get my debugger to work, I have one possible answer to the question, \"why are things not better than in the days of punch cards?\"\n\nWe don't know how to keep working things working over time, how to keep things from sucking with scale (more users, more use cases). Without that technology -- *for the sorts of large applications one typically deals with in commercial settings* -- it still seems worth being minimalist with the stack one depends on, that one's application sits on top of.\n\nLike, I'm not sure it's even realistic to expect progress in software tools. Moloch evolves, but in ways that are inscrutable to human values.\n\n(I'll still work on these ideas on the side. But only because I can control application size when I'm working by myself. Moloch ignores me cowering behind my tree stump.)",
        "user": "UCUSW7WVD",
        "ts": "1665621472.914939",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1665621516.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xMT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After a frustrating day in the office, mostly struggling to get my debugger to work, I have one possible answer to the question, \"why are things not better than in the days of punch cards?\"\n\nWe don't know how to keep working things working over time, how to keep things from sucking with scale (more users, more use cases). Without that technology -- "
                            },
                            {
                                "type": "text",
                                "text": "for the sorts of large applications one typically deals with in commercial settings",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " -- it still seems worth being minimalist with the stack one depends on, that one's application sits on top of.\n\nLike, I'm not sure it's even realistic to expect progress in software tools. Moloch evolves, but in ways that are inscrutable to human values.\n\n(I'll still work on these ideas on the side. But only because I can control application size when I'm working by myself. Moloch ignores me cowering behind my tree stump.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "8f24cafe-9a0b-4ade-82b7-0cc852e2d1a9",
        "type": "message",
        "text": "Trying to reformulate <@UCUSW7WVD>'s insight in a less depressing way :wink:\nWe have been building more and more complex software over the decades by piling up layer after layer. That makes the lower layers a kind of basic infrastructure that becomes impossible to evolve, because lots of people's uncoordinated decisions depend on it.\nPut differently: we still use terminals emulating punched cards for the same reasons that constrain cars to the width of a horse carriage (which is what defined the width of roads).\nYou can avoid the inertia of the past in a small controlled environment (just you, or a small team). But evolving the mainstream to better infrastructure is a collective action problem - and those are well known to be hard.",
        "user": "UJBAJNFLK",
        "ts": "1665639816.893849",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1665644103.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pGdT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Trying to reformulate "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "'s insight in a less depressing way "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": "\nWe have been building more and more complex software over the decades by piling up layer after layer. That makes the lower layers a kind of basic infrastructure that becomes impossible to evolve, because lots of people's uncoordinated decisions depend on it.\nPut differently: we still use terminals emulating punched cards for the same reasons that constrain cars to the width of a horse carriage (which is what defined the width of roads).\nYou can avoid the inertia of the past in a small controlled environment (just you, or a small team). But evolving the mainstream to better infrastructure is a collective action problem - and those are well known to be hard."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "bulb",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3831988f-9ff7-40fb-9901-6d2d0e01bfb2",
        "type": "message",
        "text": "Correct, non-trivial constructions come with mastery of the domain \u2014 usually after a lot of debugging.  Debugging lets you dodge bullets.  Correctness is when don't need to.  Whether it's even possible to shave off edge cases depends on the substance of the domain.",
        "user": "UA14TGLTC",
        "ts": "1665646035.333659",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k1tkn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Correct, non-trivial constructions come with mastery of the domain \u2014 usually after a lot of debugging.  Debugging lets you dodge bullets.  Correctness is when don't need to.  Whether it's even possible to shave off edge cases depends on the substance of the domain."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "type": "message",
        "text": "A relevant slide from <https://www.youtube.com/watch?v=2MYzvQ1v8Ww|Gerald Sussmans talk at Scheme'22>:",
        "files": [
            {
                "id": "F046C4FMQ4B",
                "created": 1665657749,
                "timestamp": 1665657749,
                "name": "sussman-on-programming.png",
                "title": "sussman-on-programming.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UJBAJNFLK",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 201493,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F046C4FMQ4B/sussman-on-programming.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F046C4FMQ4B/download/sussman-on-programming.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F046C4FMQ4B-e18ff50642/sussman-on-programming_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F046C4FMQ4B-e18ff50642/sussman-on-programming_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F046C4FMQ4B-e18ff50642/sussman-on-programming_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 239,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F046C4FMQ4B-e18ff50642/sussman-on-programming_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 319,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F046C4FMQ4B-e18ff50642/sussman-on-programming_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F046C4FMQ4B-e18ff50642/sussman-on-programming_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 479,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F046C4FMQ4B-e18ff50642/sussman-on-programming_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 532,
                "original_w": 863,
                "original_h": 574,
                "thumb_tiny": "AwAfADDSwB3P50nH979aU9KYaAHggd/1pajNKPdjQA+ikAB5BP50tACE4HSmd6fkUwjk0AKAMdvxo49VpMUYNAC8eq08ADoKYMj0p2RQB//Z",
                "permalink": "https://futureofcoding.slack.com/files/UJBAJNFLK/F046C4FMQ4B/sussman-on-programming.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F046C4FMQ4B-4f065089f0",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UJBAJNFLK",
        "display_as_bot": false,
        "ts": "1665657755.966509",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U6Hk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A relevant slide from "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=2MYzvQ1v8Ww",
                                "text": "Gerald Sussmans talk at Scheme'22"
                            },
                            {
                                "type": "text",
                                "text": ":"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "f7954abc-d56b-4702-9372-fab08db83dd0",
        "thread_ts": "1665503282.267399",
        "parent_user_id": "U013ZLJARC7",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=2MYzvQ1v8Ww",
                "thumb_url": "https://i.ytimg.com/vi/2MYzvQ1v8Ww/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/2MYzvQ1v8Ww?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"[Scheme&#39;22]  Programming is (should be) fun!\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=2MYzvQ1v8Ww",
                "fallback": "YouTube Video: [Scheme'22]  Programming is (should be) fun!",
                "title": "[Scheme'22]  Programming is (should be) fun!",
                "title_link": "https://www.youtube.com/watch?v=2MYzvQ1v8Ww",
                "author_name": "ACM SIGPLAN",
                "author_link": "https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]