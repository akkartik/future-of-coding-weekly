[
    {
        "client_msg_id": "77084010-3474-4071-946d-0f7172a4c5ab",
        "type": "message",
        "text": "The spaced repetition hack sounds awesome, love to hear more about how you did that if you have any links or other resources!",
        "user": "UE0ETTCG7",
        "ts": "1600217707.455300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q=Wb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The spaced repetition hack sounds awesome, love to hear more about how you did that if you have any links or other resources!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "6395781a-8d53-42ca-9a7c-b699809eae4a",
        "type": "message",
        "text": "I have some old blog posts from back when I used to do more customization:\n\n<http://akkartik.name/bash.html>\n<http://www.google.com/search?q=+site%3Awww.vim.org+kartik+agaram>\n<http://akkartik.name/lisp.html>\n<http://akkartik.name/desktop.html> (endless time spent on colors)\n<http://akkartik.name/firefox.html>\n\nHere's something more substantial I made: OCR for VNC <http://akkartik.name/vnc.html>. Still quite proud of this one. Only Windows programming I've ever done. I used it all the time for 5 years, but I haven't used it in 12 years.\n\nOther more substantial things:\n<http://akkartik.name/codelog.html> was how I got into the habit of using version control.\n<http://akkartik.name/post/2010-09-25-05-29-01-soc> (a suite of scripts for slicing and dicing data from shell scripts)",
        "user": "UCUSW7WVD",
        "ts": "1600229570.455800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600229690.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y=+3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have some old blog posts from back when I used to do more customization:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/bash.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http://www.google.com/search?q=+site%3Awww.vim.org+kartik+agaram"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/lisp.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/desktop.html"
                            },
                            {
                                "type": "text",
                                "text": " (endless time spent on colors)\n"
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/firefox.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHere's something more substantial I made: OCR for VNC "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/vnc.html"
                            },
                            {
                                "type": "text",
                                "text": ". Still quite proud of this one. Only Windows programming I've ever done. I used it all the time for 5 years, but I haven't used it in 12 years.\n\nOther more substantial things:\n"
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/codelog.html"
                            },
                            {
                                "type": "text",
                                "text": " was how I got into the habit of using version control.\n"
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/post/2010-09-25-05-29-01-soc"
                            },
                            {
                                "type": "text",
                                "text": " (a suite of scripts for slicing and dicing data from shell scripts)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "90340b76-018a-4262-897b-72e6625be554",
        "type": "message",
        "text": "These days I try to minimize my desires, mostly so I can leave my existing computer faster for a Mu computer.\n\nI stopped writing Firefox extensions after the RSS feedreader extension I wrote (<https://github.com/akkartik/spew>) stopped working. I'm still in mourning about this one, the second betrayal around RSS feeds.\n\nI still tweak colors: <https://lobste.rs/s/yn8drc/context_coloring#c_3do8ct>\n\nHere's a recent hack to get Vim windows to be first class with tmux windows: <https://www.reddit.com/r/vim/comments/22ixkq/navigate_around_vim_and_tmux_panes_painlessly/cgnnnai/?context=3>\n\nAnd then I added a feature to the way my editor shows git diffs in the margins: <https://mastodon.social/@akkartik/103994830568601931>\n\nI don't know if these examples satisfy your 3 categories..",
        "user": "UCUSW7WVD",
        "ts": "1600229996.456100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600230580.000000"
        },
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "akkartik/spew",
                "title_link": "https://github.com/akkartik/spew",
                "text": "UI-less firefox extension feedreader. Contribute to akkartik/spew development by creating an account on GitHub.",
                "fallback": "GitHub: akkartik/spew",
                "thumb_url": "https://avatars3.githubusercontent.com/u/3161?s=400&v=4",
                "from_url": "https://github.com/akkartik/spew",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/akkartik/spew"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JIlLm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "These days I try to minimize my desires, mostly so I can leave my existing computer faster for a Mu computer.\n\nI stopped writing Firefox extensions after the RSS feedreader extension I wrote ("
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/spew"
                            },
                            {
                                "type": "text",
                                "text": ") stopped working. I'm still in mourning about this one, the second betrayal around RSS feeds.\n\nI still tweak colors: "
                            },
                            {
                                "type": "link",
                                "url": "https://lobste.rs/s/yn8drc/context_coloring#c_3do8ct"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHere's a recent hack to get Vim windows to be first class with tmux windows: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.reddit.com/r/vim/comments/22ixkq/navigate_around_vim_and_tmux_panes_painlessly/cgnnnai/?context=3"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAnd then I added a feature to the way my editor shows git diffs in the margins: "
                            },
                            {
                                "type": "link",
                                "url": "https://mastodon.social/@akkartik/103994830568601931"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI don't know if these examples satisfy your 3 categories.."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "9450112b-7e5b-4e26-9f89-83302de291e1",
        "type": "message",
        "text": "RSS feeds are a whole separate chapter of my life. Here's a list of feed aggregators I've built, in autobiographical order:\n\n2004: <http://akkartik.name/agg/rwir.tgz>\n2008: <http://akkartik.name/newsflash>\n2009: <https://github.com/akkartik/readwarp>\n2015: <https://github.com/akkartik/spew>\n\nHonorable mention to my old HN reader:\n2008, 2011: <http://akkartik.name/hackerstream>",
        "user": "UCUSW7WVD",
        "ts": "1600230350.456700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600282484.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/7DHy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "RSS feeds are a whole separate chapter of my life. Here's a list of feed aggregators I've built, in autobiographical order:\n\n2004: "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/agg/rwir.tgz"
                            },
                            {
                                "type": "text",
                                "text": "\n2008: "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/newsflash"
                            },
                            {
                                "type": "text",
                                "text": "\n2009: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/readwarp"
                            },
                            {
                                "type": "text",
                                "text": "\n2015: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/spew"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHonorable mention to my old HN reader:\n2008, 2011: "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/hackerstream"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "7735205b-a382-4864-81be-0c0d7bc5e6a5",
        "type": "message",
        "text": "Who here is working on a logic programming system? I feel if there are a few of us it could be nice to form a little subgroup to share questions and ideas that require a background in logic programming.\n\nPerhaps there are not many of us, though.",
        "user": "UCGAK10LS",
        "ts": "1600231488.459700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FqI3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Who here is working on a logic programming system? I feel if there are a few of us it could be nice to form a little subgroup to share questions and ideas that require a background in logic programming.\n\nPerhaps there are not many of us, though."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "reply_count": 18,
        "reply_users_count": 10,
        "latest_reply": "1600473673.006000",
        "reply_users": [
            "UC2A2ARPT",
            "UN9SCH5RD",
            "UCGAK10LS",
            "UDKTZSD6H",
            "UA14TGLTC",
            "UHWC9PXBL",
            "U016VUZGUUQ",
            "U01A1C2K8MP",
            "U013ZLJARC7",
            "U013HU44GLS"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "2b794338-d418-48e3-be31-73f5800174d9",
        "type": "message",
        "text": "If we get enough buy-in, I'd be happy to spin up a subject-specific channel for that. (Now that we have the new `of-` naming scheme, I am more inclined to let us experiment with various subject-specific channels, since they are sort of clustered together in the channel list and thus easier to manage)",
        "user": "UC2A2ARPT",
        "ts": "1600231599.459800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HYYP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If we get enough buy-in, I'd be happy to spin up a subject-specific channel for that. (Now that we have the new "
                            },
                            {
                                "type": "text",
                                "text": "of-",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " naming scheme, I am more inclined to let us experiment with various subject-specific channels, since they are sort of clustered together in the channel list and thus easier to manage)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UAJ9DV971"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "0caff452-9c22-4194-bf41-6500fb05e2b9",
        "type": "message",
        "text": "what is a logic programming system? Prolog like programming language?",
        "user": "UN9SCH5RD",
        "ts": "1600232023.460100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e=A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what is a logic programming system? Prolog like programming language?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "274A948B-1041-4F3F-BD70-294F200DDAA7",
        "type": "message",
        "text": "Prolog is one example of a logic programming language, though there are many other (niche) examples that are very different. The main qualifier is that the semantics of a logic programming language is based directly on some variant or extension of first-order logic, as opposed to Von Neumann machines or lambda calculus.",
        "user": "UCGAK10LS",
        "ts": "1600233098.463700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x81+w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Prolog is one example of a logic programming language, though there are many other (niche) examples that are very different. The main qualifier is that the semantics of a logic programming language is based directly on some variant or extension of first-order logic, as opposed to Von Neumann machines or lambda calculus."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "3db4ca17-ee25-4b24-be10-5f61ad707a70",
        "type": "message",
        "text": "<@UN9SCH5RD> It's fairly common, around here, to say \"programming system\" as a superset of \"programming language\", so as to include means of programming that aren't text-based or otherwise resembling traditional PLs.",
        "user": "UC2A2ARPT",
        "ts": "1600233195.463900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1600233230.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uEj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN9SCH5RD"
                            },
                            {
                                "type": "text",
                                "text": " It's fairly common, around here, to say \"programming system\" as a superset of \"programming language\", so as to include means of programming that aren't text-based or otherwise resembling traditional PLs."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UDKTZSD6H",
                    "U013ZLJARC7"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "2deb0fe5-461e-4636-a7f4-08ea40131b69",
        "type": "message",
        "text": "<@UE0ETTCG7> I believe I got this idea from Andy Matuschak\n<https://notes.andymatuschak.org/z8aZybuJJopS5fL7TnPou2JcmCsBUJeqirbBh|https://notes.andymatuschak.org/z8aZybuJJopS5fL7TnPou2JcmCsBUJeqirbBh>\n<https://notes.andymatuschak.org/z7yRMBXGc81KkUwLxefodzfnnfKXx63vXzP88|https://notes.andymatuschak.org/z7yRMBXGc81KkUwLxefodzfnnfKXx63vXzP88>\n\nFor implementation, I used org-fc as a base and my hacks are here: <https://github.com/rasendubi/dotfiles#org-fc-review-todos|https://github.com/rasendubi/dotfiles#org-fc-review-todos>",
        "user": "UPX3PH28N",
        "ts": "1600234823.464400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "rasendubi/dotfiles",
                "title_link": "https://github.com/rasendubi/dotfiles#org-fc-review-todos",
                "text": "My dotfiles. Contribute to rasendubi/dotfiles development by creating an account on GitHub.",
                "fallback": "GitHub: rasendubi/dotfiles",
                "thumb_url": "https://avatars0.githubusercontent.com/u/1366419?s=400&v=4",
                "from_url": "https://github.com/rasendubi/dotfiles#org-fc-review-todos",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/rasendubi/dotfiles#org-fc-review-todos"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f7/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " I believe I got this idea from Andy Matuschak\n"
                            },
                            {
                                "type": "link",
                                "url": "https://notes.andymatuschak.org/z8aZybuJJopS5fL7TnPou2JcmCsBUJeqirbBh",
                                "text": "https://notes.andymatuschak.org/z8aZybuJJopS5fL7TnPou2JcmCsBUJeqirbBh"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://notes.andymatuschak.org/z7yRMBXGc81KkUwLxefodzfnnfKXx63vXzP88",
                                "text": "https://notes.andymatuschak.org/z7yRMBXGc81KkUwLxefodzfnnfKXx63vXzP88"
                            },
                            {
                                "type": "text",
                                "text": "\n\nFor implementation, I used org-fc as a base and my hacks are here: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/rasendubi/dotfiles#org-fc-review-todos",
                                "text": "https://github.com/rasendubi/dotfiles#org-fc-review-todos"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "925d9f54-c5c1-4e47-91bb-da1d0522a5c9",
        "type": "message",
        "text": "oh I see",
        "user": "UN9SCH5RD",
        "ts": "1600236901.464700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=4N6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh I see"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6d3ee897-ee16-49a4-b840-83da7860f957",
        "type": "message",
        "text": "\"tools that separates the complexity component of a program from the underlying behavior it would eventually produce, and then let you manipulate code so the behavior is fixed\"\nI'm not sure if optimization is on your mind here, but look up the Halide \"language\" (a C++ DSL), which allows the behavior to be specified separately from the execution plan. Also I heard TVM is related, as well as a new pair of languages called Rise &amp; Elevate for algorithm optimization.",
        "user": "UD6EXQVM0",
        "ts": "1600241417.465000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1600241546.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3De",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"tools that separates the complexity component of a program from the underlying behavior it would eventually produce, and then let you manipulate code so the behavior is fixed\"\nI'm not sure if optimization is on your mind here, but look up the Halide \"language\" (a C++ DSL), which allows the behavior to be specified separately from the execution plan. Also I heard TVM is related, as well as a new pair of languages called Rise & Elevate for algorithm optimization."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599805535.266400",
        "parent_user_id": "UFPRPSA4S"
    },
    {
        "client_msg_id": "e7fc7421-a71f-4fd1-b462-5d4218a4e9e0",
        "type": "message",
        "text": "1. I probably spend 20-&gt;30% of all development time on CI/Deployment/Testing/Cross Platform Builds/CMake.  So scripting Travis and AppVeyor typically.  This is often a tedious burden, but I do it because I think cross platform code is important.  All significant projects should build/work on Linux/Mac/PC as a minimum, and have continuous integration.\n2/3 I have a batch file called 'j' which is a single character shortcut mechanism:\n\u2022 j t foo           (find foo in all files recursively using RipGrep, with my favourite pattern of file to search)\n\u2022 j j                  (open the batch file to add more commands)\n\u2022 j merge CL   (merge a commit into my P4 working tree - for work stuff)\netc.\nI maintain my vimscripts on a regular basis, but that is usually just adding plugins to the editor.  I have several other batch files particularly for things I do on the day job that are tedious.  Usually if I can't remember the syntax of a command on a regular basis I make a macro.  All my scripts live in my dropbox and are accessible from anywhere.  One example of such a script is 'git-squash' which rewrites history and squashes a bunch of commits into a single commit; useful before publishing, since I commit often.  Things like that.....\nZep is an example of building a tool for programming; but it is not at the point where I can use it for general day to day tasks; mostly because it lacks intellisense for C++.",
        "user": "UUQ2EQW21",
        "ts": "1600241749.465400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bN6",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I probably spend 20->30% of all development time on CI/Deployment/Testing/Cross Platform Builds/CMake.  So scripting Travis and AppVeyor typically.  This is often a tedious burden, but I do it because I think cross platform code is important.  All significant projects should build/work on Linux/Mac/PC as a minimum, and have continuous integration."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "2/3 I have a batch file called 'j' which is a single character shortcut mechanism:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "j t foo           (find foo in all files recursively using RipGrep, with my favourite pattern of file to search)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "j j                  (open the batch file to add more commands)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "j merge CL   (merge a commit into my P4 working tree - for work stuff)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "etc.\nI maintain my vimscripts on a regular basis, but that is usually just adding plugins to the editor.  I have several other batch files particularly for things I do on the day job that are tedious.  Usually if I can't remember the syntax of a command on a regular basis I make a macro.  All my scripts live in my dropbox and are accessible from anywhere.  One example of such a script is 'git-squash' which rewrites history and squashes a bunch of commits into a single commit; useful before publishing, since I commit often.  Things like that.....\nZep is an example of building a tool for programming; but it is not at the point where I can use it for general day to day tasks; mostly because it lacks intellisense for C++."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "Hi! I've got an updated answer to an old, but interesting question: I'm thinking of running skia in the browser (that's the stack figma uses). It's quite accessible via their 'canvaskit': <https://skia.org/user/modules/canvaskit>",
        "user": "UFZFETUH1",
        "ts": "1600246145.466000",
        "thread_ts": "1596459342.091100",
        "root": {
            "client_msg_id": "66b6088e-c1c7-476b-8b31-ce0eae616028",
            "type": "message",
            "text": "Hey guys, question for everyone who's making a desktop visual lang: what do you use for rendering and why?",
            "user": "U017P07TA8L",
            "ts": "1596459342.091100",
            "team": "T5TCAFTA9",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "DDUv4",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Hey guys, question for everyone who's making a desktop visual lang: what do you use for rendering and why?"
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1596459342.091100",
            "reply_count": 102,
            "reply_users_count": 12,
            "latest_reply": "1600328231.479100",
            "reply_users": [
                "UUQ2EQW21",
                "U017P07TA8L",
                "U013HU44GLS",
                "UFZFETUH1",
                "ULM3U6275",
                "UBSMEUXAA",
                "UE6EFEPTQ",
                "U01003H81UM",
                "UJN1TAYEQ",
                "UDQBTJ211",
                "UBN9AFS0N",
                "U013ZLJARC7"
            ],
            "subscribed": true,
            "last_read": "1600328231.479100"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IuB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi! I've got an updated answer to an old, but interesting question: I'm thinking of running skia in the browser (that's the stack figma uses). It's quite accessible via their 'canvaskit': "
                            },
                            {
                                "type": "link",
                                "url": "https://skia.org/user/modules/canvaskit"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "494d97f1-91e1-4ed3-ad2e-b482047f30eb",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UAJ9DV971",
                    "UMWF81HTP",
                    "UHWC9PXBL"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "d4f176cb-2f22-4391-b75b-68973f36e53d",
        "type": "message",
        "text": "I have a side project that involves doing something like: <https://alexwarth.github.io/projects/nl-datalog> So I guess I\u2019m in.",
        "user": "UDKTZSD6H",
        "ts": "1600246901.466300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xsb/m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a side project that involves doing something like: "
                            },
                            {
                                "type": "link",
                                "url": "https://alexwarth.github.io/projects/nl-datalog"
                            },
                            {
                                "type": "text",
                                "text": " So I guess I\u2019m in."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "7a25c9eb-16f7-4ca4-b8ed-875017a9d470",
        "type": "message",
        "text": "Yes, <@UN9SCH5RD> basically Prolog like, though, I'd say the most important logic programming characteristic is unification: you can have a variable with an indeterminate value, which gets pinned down as you use it.  This allows for a bigger tent than includes databases, SAT solvers, and optimizers so-called Linear Programming, Quadratic Programming, Mixed Integer Programming (and what pays my bills at the end of the day).  I guess quantum computing ends up in there too.  Let's throw in some kinds of probabilistic programing while we're at it what with variables representing probability distributions.",
        "user": "UA14TGLTC",
        "ts": "1600247166.466500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qw0qk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, "
                            },
                            {
                                "type": "user",
                                "user_id": "UN9SCH5RD"
                            },
                            {
                                "type": "text",
                                "text": " basically Prolog like, though, I'd say the most important logic programming characteristic is unification: you can have a variable with an indeterminate value, which gets pinned down as you use it.  This allows for a bigger tent than includes databases, SAT solvers, and optimizers so-called Linear Programming, Quadratic Programming, Mixed Integer Programming (and what pays my bills at the end of the day).  I guess quantum computing ends up in there too.  Let's throw in some kinds of probabilistic programing while we're at it what with variables representing probability distributions."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "c707c42a-c4f3-4679-8301-f38136f995f5",
        "type": "message",
        "text": "This looks great, very keen to stress test it",
        "user": "UDQBTJ211",
        "ts": "1600247248.466700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l4tvL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks great, very keen to stress test it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596459342.091100",
        "parent_user_id": "U017P07TA8L"
    },
    {
        "client_msg_id": "95e4a7f0-4a24-4a31-a206-a899b48f4c45",
        "type": "message",
        "text": "does it provide some extra functionality not exposed by browser's canvas? because afaik browsers use skia for the canvas implementation?",
        "user": "UBN9AFS0N",
        "ts": "1600247287.466900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+btX4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "does it provide some extra functionality not exposed by browser's canvas? because afaik browsers use skia for the canvas implementation?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596459342.091100",
        "parent_user_id": "U017P07TA8L"
    },
    {
        "client_msg_id": "9073c5d3-9d67-4373-bf02-93fc689ba008",
        "type": "message",
        "text": "Yes! <@UBN9AFS0N> . One critical thing that I've been missing is way more control over text rendering. You can measure the text size, find the position at which to place underlines, get the caret index for clicks, etc.",
        "user": "UFZFETUH1",
        "ts": "1600247598.467100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AYW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " . One critical thing that I've been missing is way more control over text rendering. You can measure the text size, find the position at which to place underlines, get the caret index for clicks, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596459342.091100",
        "parent_user_id": "U017P07TA8L",
        "reactions": [
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9846fa80-c8a3-4cab-95d1-84fe62bc7695",
        "type": "message",
        "text": "Those things haven't been standardized for canvas, yet. All there is for canvas is measuring text width (but not height), and optionally giving a desired maximum width for text layout, but no control over whether to justify text, left or right align it, etc.",
        "user": "UFZFETUH1",
        "ts": "1600247682.467300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WfPvr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Those things haven't been standardized for canvas, yet. All there is for canvas is measuring text width (but not height), and optionally giving a desired maximum width for text layout, but no control over whether to justify text, left or right align it, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596459342.091100",
        "parent_user_id": "U017P07TA8L"
    },
    {
        "client_msg_id": "702815cb-94ab-415d-b600-52bf86d2ebfd",
        "type": "message",
        "text": "(why do all my sentences end with etc.?)",
        "user": "UFZFETUH1",
        "ts": "1600247713.467600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0OL/A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(why do all my sentences end with etc.?)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596459342.091100",
        "parent_user_id": "U017P07TA8L"
    },
    {
        "client_msg_id": "3EB1A6AA-AF5F-4541-B99F-66C3EB64E484",
        "type": "message",
        "text": "if constraint solving counts, i\u2019m in",
        "user": "UHWC9PXBL",
        "ts": "1600269902.468800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nATE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if constraint solving counts, i\u2019m in"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UA14TGLTC",
                    "U013ZLJARC7"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "389383f4-6745-4a16-8610-cf1fa7ac0b75",
        "type": "message",
        "text": "<@UPX3PH28N> Great set of links, thanks for sharing! Anyone interested in managing their todo list inbox should take a look at those links, Andy has described some problems I have with inboxes that I've never seen put into words. `org-fc` also looks like an awesome tool.",
        "user": "UE0ETTCG7",
        "ts": "1600274934.469400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8pp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UPX3PH28N"
                            },
                            {
                                "type": "text",
                                "text": " Great set of links, thanks for sharing! Anyone interested in managing their todo list inbox should take a look at those links, Andy has described some problems I have with inboxes that I've never seen put into words. "
                            },
                            {
                                "type": "text",
                                "text": "org-fc",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " also looks like an awesome tool."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "a80bac85-3e76-4f5e-a05d-eec21b3afc45",
        "type": "message",
        "text": "<@UCUSW7WVD> Wow, that's a lot of stuff! You've been busy. An observation I have is that many of the things you've listed to me would fully qualify as side projects, perhaps even potential businesses (e.g., OCR for VNC). E.g., things that are big enough that I'd want to share them, which definitely has an order of magnitude more cost.\n\nOne of the things that I find rewarding about smaller personal scripts and customizations (some of yours are in this category too) is that you can go from having an idea to adding it to your workflow in a single sitting. There's almost no other use of programming that has a fast ROI like that, usually you're writing code that will be used in the distant future, often by someone that isn't youself... Just an observation.",
        "user": "UE0ETTCG7",
        "ts": "1600275436.469600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "trr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Wow, that's a lot of stuff! You've been busy. An observation I have is that many of the things you've listed to me would fully qualify as side projects, perhaps even potential businesses (e.g., OCR for VNC). E.g., things that are big enough that I'd want to share them, which definitely has an order of magnitude more cost.\n\nOne of the things that I find rewarding about smaller personal scripts and customizations (some of yours are in this category too) is that you can go from having an idea to adding it to your workflow in a single sitting. There's almost no other use of programming that has a fast ROI like that, usually you're writing code that will be used in the distant future, often by someone that isn't youself... Just an observation."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "45dca01c-ff54-49e5-b499-2795dd5b6341",
        "type": "message",
        "text": "<@UUQ2EQW21> These examples are very similar to things I do, e.g., creating single-letter commands for common actions. I wonder what the common characteristic for people you compress there workflow into less and less keystrokes like this is. Personally, I'd describe it as \"doesn't like doing tedious work\", but that feels wrong because that sounds like everyone. I keep coming back to some sort of ever present frustration, like using a computer when it's not customized feels like trying to force Playdough through a straw, I'd be curious if you (or others) have this same feeling and that's what drives you to customize?",
        "user": "UE0ETTCG7",
        "ts": "1600275916.469800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uB8a8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " These examples are very similar to things I do, e.g., creating single-letter commands for common actions. I wonder what the common characteristic for people you compress there workflow into less and less keystrokes like this is. Personally, I'd describe it as \"doesn't like doing tedious work\", but that feels wrong because that sounds like everyone. I keep coming back to some sort of ever present frustration, like using a computer when it's not customized feels like trying to force Playdough through a straw, I'd be curious if you (or others) have this same feeling and that's what drives you to customize?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "589c996e-0cea-454b-b370-d132cc4abb15",
        "type": "message",
        "text": "I would definitely lurk in such a channel.",
        "user": "U016VUZGUUQ",
        "ts": "1600278549.470100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q6tY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would definitely lurk in such a channel."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b89208ee-7588-4cb3-8043-fae97af4a65e",
        "type": "message",
        "text": "<@UE0ETTCG7> You're right that many of the things here could be made for others. _But they were not._ My only goal with them was to serve myself, and I did them incrementally in between other projects (ok, sometimes procrastinating from grad school research) and called them closed when they were good enough. OCR for VNC happened over a long weekend, though I planned for it in advance. That's the outside limit on how far in the future I was planning for. Everything was incremental, even if I accumulated infrastructure over time and built up on things from years ago.\n\nIn fact, this is one of my frustrations with the world we live in: things that look like they _could_ be for others are _assumed_ to be for others and treated on that footing. It's incredibly frustrating to me that Firefox killed the old extensions even for people who were building for themselves. Before the final cut it was frustrating that there was a period of 2 years where Firefox supported old extensions but only if you went through their app store process and got your extension reviewed. Even if you had no intention of providing it to others! This is all kinds of fucked up. Again and again this world starts out building things to be hackable -- _and then throws that capability away_.\n\nThis is why I'm bearish on projects like <@UCDBW1H26>'s Wildcard. It's just a recipe for losing work on somebody else's schedule. I'll never _ever_ contribute to any sort of plugin or extension economy again. Even if it's open source.\n\nYou care about programming for yourself. Don't tell me to think of these as side projects! That's like the salesman who starts recommending the competitor's product :slightly_smiling_face:",
        "user": "UCUSW7WVD",
        "ts": "1600281369.470300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ql0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " You're right that many of the things here could be made for others. "
                            },
                            {
                                "type": "text",
                                "text": "But they were not.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " My only goal with them was to serve myself, and I did them incrementally in between other projects (ok, sometimes procrastinating from grad school research) and called them closed when they were good enough. OCR for VNC happened over a long weekend, though I planned for it in advance. That's the outside limit on how far in the future I was planning for. Everything was incremental, even if I accumulated infrastructure over time and built up on things from years ago.\n\nIn fact, this is one of my frustrations with the world we live in: things that look like they "
                            },
                            {
                                "type": "text",
                                "text": "could",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be for others are "
                            },
                            {
                                "type": "text",
                                "text": "assumed",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to be for others and treated on that footing. It's incredibly frustrating to me that Firefox killed the old extensions even for people who were building for themselves. Before the final cut it was frustrating that there was a period of 2 years where Firefox supported old extensions but only if you went through their app store process and got your extension reviewed. Even if you had no intention of providing it to others! This is all kinds of fucked up. Again and again this world starts out building things to be hackable -- "
                            },
                            {
                                "type": "text",
                                "text": "and then throws that capability away",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nThis is why I'm bearish on projects like "
                            },
                            {
                                "type": "user",
                                "user_id": "UCDBW1H26"
                            },
                            {
                                "type": "text",
                                "text": "'s Wildcard. It's just a recipe for losing work on somebody else's schedule. I'll never "
                            },
                            {
                                "type": "text",
                                "text": "ever",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " contribute to any sort of plugin or extension economy again. Even if it's open source.\n\nYou care about programming for yourself. Don't tell me to think of these as side projects! That's like the salesman who starts recommending the competitor's product "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4de71592-233c-417b-a539-868866c800be",
        "type": "message",
        "text": "i would also lurk. i'm learning about datalog",
        "user": "U01A1C2K8MP",
        "ts": "1600281565.470500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PGX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i would also lurk. i'm learning about datalog"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "d283b5ca-cbed-49eb-a1a5-faeb47a9bef1",
        "type": "message",
        "text": "<@UDKTZSD6H> the link seems broken",
        "user": "U01A1C2K8MP",
        "ts": "1600281613.470700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XKX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": " the link seems broken"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6c1f614c-aa52-4c9b-8a8f-9c952fc85a83",
        "type": "message",
        "text": "I hugely resonate with <@UJBAJNFLK>'s observation that our modern measures of value are blind to this kind of activity. It's the best explanation I've yet found for why we hold on to compatibility in all sorts of places where it makes no sense -- but then give it up in places where it makes no sense. Vim still supports building on Amiga, just because it was a commercial entity long long ago. But scientists using Python 2 for themselves, that never ever showed up on any statement of assets, so it's fair game.",
        "user": "UCUSW7WVD",
        "ts": "1600281628.470900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600281789.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PKvt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hugely resonate with "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": "'s observation that our modern measures of value are blind to this kind of activity. It's the best explanation I've yet found for why we hold on to compatibility in all sorts of places where it makes no sense -- but then give it up in places where it makes no sense. Vim still supports building on Amiga, just because it was a commercial entity long long ago. But scientists using Python 2 for themselves, that never ever showed up on any statement of assets, so it's fair game."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "U013ZLJARC7",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "2F4D22D9-146D-4382-8103-653FBACC0D29",
        "type": "message",
        "text": "(Just to be clear, I didn\u2019t mean to suggest you made these for others, or that you should treat them as side projects, just that for me personally, they\u2019re big enough that I\u2019d have to think of them as side projects. Just in my own personal categorization of types of work I do.)",
        "user": "UE0ETTCG7",
        "ts": "1600282101.477000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TqR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Just to be clear, I didn\u2019t mean to suggest you made these for others, or that you should treat them as side projects, just that for me personally, they\u2019re big enough that I\u2019d have to think of them as side projects. Just in my own personal categorization of types of work I do.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1326A968-8B20-4406-B44B-E946F40AB309",
        "type": "message",
        "text": "This part really resonated with me, I think everyone who gets into customization has been burned by something before:\n\n&gt; It's incredibly frustrating to me that Firefox killed the old extensions even for people who were building for themselves. Before the final cut it was frustrating that there was a period of 2 years where Firefox supported old extensions but only if you went through their app store process and got your extension reviewed. Even if you had no intention of providing it to others! This is all kinds of fucked up. Again and again this world starts out building things to be hackable -- and then throws that capability away.\n\n&gt; This is why I'm bearish on projects like <@UCDBW1H26>'s Wildcard. It's just a recipe for losing work on somebody else's schedule. I'll never ever contribute to any sort of plugin or extension economy again. Even if it's open source.\n\nMy solution to this has been to do everything in Bash with a thin layer to interface with a larger program or ecosystem. Just because Bash is always there and it never changes.",
        "user": "UE0ETTCG7",
        "ts": "1600282283.477400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X9Tu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This part really resonated with me, I think everyone who gets into customization has been burned by something before:\n\n> It's incredibly frustrating to me that Firefox killed the old extensions even for people who were building for themselves. Before the final cut it was frustrating that there was a period of 2 years where Firefox supported old extensions but only if you went through their app store process and got your extension reviewed. Even if you had no intention of providing it to others! This is all kinds of fucked up. Again and again this world starts out building things to be hackable -- and then throws that capability away.\n\n> This is why I'm bearish on projects like "
                            },
                            {
                                "type": "user",
                                "user_id": "UCDBW1H26"
                            },
                            {
                                "type": "text",
                                "text": "'s Wildcard. It's just a recipe for losing work on somebody else's schedule. I'll never ever contribute to any sort of plugin or extension economy again. Even if it's open source.\n\nMy solution to this has been to do everything in Bash with a thin layer to interface with a larger program or ecosystem. Just because Bash is always there and it never changes."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ac69908d-aa70-4673-be6b-0d16dd91eeb7",
        "type": "message",
        "text": "Until it does :japanese_ogre:",
        "user": "UCUSW7WVD",
        "ts": "1600282328.477700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7l5E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Until it does "
                            },
                            {
                                "type": "emoji",
                                "name": "japanese_ogre"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "crossed_fingers",
                "users": [
                    "UE0ETTCG7",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]