[
    {
        "client_msg_id": "ac326d93-28d7-42d8-aa65-8c1d8f373c5f",
        "type": "message",
        "text": "It's probably been said in the other 109 comments, but more people would shell script if the tool names and interfaces weren't so incredibly unmemorable. Is anti-memorable a thing?  (I just decided it is.) The interface kinda stinks.\n\nGit has an anti-memorable user interface, but by building GitHub and the GitHub desktop on top, it's now pretty easy to use without the fear of never seeing your code again. More people use git (i'm guessing) than shell scripts, even though its command line interface is irregular, dangerous, and unpredictable.",
        "user": "U01A1C2K8MP",
        "ts": "1599695998.193200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ls=x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's probably been said in the other 109 comments, but more people would shell script if the tool names and interfaces weren't so incredibly unmemorable. Is anti-memorable a thing?  (I just decided it is.) The interface kinda stinks.\n\nGit has an anti-memorable user interface, but by building GitHub and the GitHub desktop on top, it's now pretty easy to use without the fear of never seeing your code again. More people use git (i'm guessing) than shell scripts, even though its command line interface is irregular, dangerous, and unpredictable."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "C31A36F7-6230-453D-AA4E-FCFBD17F9F5A",
        "type": "message",
        "text": "was just checking out some of bessemer\u2019s recently released investment memos and i think an argument can be made that Shopify is actually a great example of an end-user programming success story: <https://www.bvp.com/memos/shopify|https://www.bvp.com/memos/shopify>",
        "user": "UHWC9PXBL",
        "ts": "1599700226.194800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1599700277.000000"
        },
        "attachments": [
            {
                "title": "Shopify",
                "title_link": "https://www.bvp.com/memos/shopify",
                "fallback": "Shopify",
                "image_url": "https://www.bvp.com/assets/media/memos-template_banner_2-min.png",
                "from_url": "https://www.bvp.com/memos/shopify",
                "image_width": 417,
                "image_height": 250,
                "image_bytes": 23886,
                "service_icon": "https://www.bvp.com/favicon.ico",
                "service_name": "bvp.com",
                "id": 1,
                "original_url": "https://www.bvp.com/memos/shopify"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xNHo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "was just checking out some of bessemer\u2019s recently released investment memos and i think an argument can be made that Shopify is actually a great example of an end-user programming success story: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.bvp.com/memos/shopify",
                                "text": "https://www.bvp.com/memos/shopify"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "a15d7303-6bac-4fda-8aed-eac7f38c058d",
        "type": "message",
        "text": "yeah I agree. Shopify is a beast of a company and they aren\u2019t interested in trying to centralize everyone onto a vague platform like Medium did. They embraced \u201cthe edges\u201d",
        "user": "UAJKEBGP8",
        "ts": "1599700580.195300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fDrVS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah I agree. Shopify is a beast of a company and they aren\u2019t interested in trying to centralize everyone onto a vague platform like Medium did. They embraced \u201cthe edges\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "6c4c617e-55d8-468d-9764-289c13b8171d",
        "type": "message",
        "text": "I might be missing it in the thread here, but one reason even programmers don't script things is that there's no good way to do it, a huge gap between interacting with a GUI and automating the interactions.",
        "user": "UA14TGLTC",
        "ts": "1599717734.196100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cy1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I might be missing it in the thread here, but one reason even programmers don't script things is that there's no good way to do it, a huge gap between interacting with a GUI and automating the interactions."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "point_up_2",
                "users": [
                    "U01A0KANUUU",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "fecdef40-2a18-4541-bcee-2bd15cf542c5",
        "type": "message",
        "text": "Coming back to this thread, I am wondering; what is that \"programmer\" category? Professional software developers, perhaps? Is that a sufficienly homogeneous group in their professional practices to discuss how much they develop software for their own needs?",
        "user": "UJBAJNFLK",
        "ts": "1599718668.204300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Js",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Coming back to this thread, I am wondering; what is that \"programmer\" category? Professional software developers, perhaps? Is that a sufficienly homogeneous group in their professional practices to discuss how much they develop software for their own needs?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "56ddcd71-c33e-496c-863f-e148d66d653d",
        "type": "message",
        "text": "I'm going to start an opinionated overflow thread for the previous discussion (<https://futureofcoding.slack.com/archives/C5T9GPWFL/p1599588394135900>)\n\n_Why programmers *shouldn't* program for themselves_ (my editorializing)\n\nFocusing on \"quantity of programming\" feels like the wrong frame. My ideal society of people educated in programming may not involve most people actually doing much programming most days. What matters is the _potential_. Compounding advantages from programming for one day per year.\n\n* Impulse to generalize is self-limiting (some maintenance burden may be irreducible). A good end-user computer needs to be extremely parsimonious in out-of-the-box capabilities, and leave lots of space for users to \"pollute\" it with what they care about. Give people space to make mistakes, raze things and start over. If it's too built-up, it discourages experimentation and customization.\n* Baiting big to catch small. (<https://xkcd.com/1319>) The long tail of manual tasks are not really economic to automate just for oneself.\n* First-world problems. Until we get good sensors/actuators, programming is kiddie-pool stuff for the most part. \"I wrote a script that lets me open projects easily so that I can write more scripts.\" There's more to life. (Not for me, but for most people :smile:)\n\n_Why programmers don't program for themselves_ (snapshot summary of the previous thread)\n\n* Interoperability limitations. Between any putative new script and other devices, platforms, programs.\n* GUI limitations.\n* Operational/maintenance burden (Ivan Illich). Keeping up with security advisories, for example (<https://mastodon.social/@akkartik/104790515855023278>)\n* Programming for employers sucking up all the oxygen. Building for oneself is economically invisible in the current paradigm. (Thanks <@UJBAJNFLK>.)\n* Long-term trend towards locked-down, consumption-oriented devices. Morlocks turning Eloi.\n* Lack of DIY culture. Programming for others may be poor preparation for listening to one's own needs (e.g. <https://mastodon.social/@akkartik/103994830568601931>). Perhaps the original sin was framing programming as driven by exernal \"requirements\"? But computers always had to start out expensive; hard to imagine how we could dodge that bullet..\n* Fragmentation in incumbent programming models. High barrier to entry for exploring new programming models.\n* Poor discoverability/unmemorability/anti-memorability.\n\n(Bullets are not disjoint, just interlocking/overlapping frames I've been finding useful.)",
        "user": "UCUSW7WVD",
        "ts": "1599719973.216100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599720402.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "syyCe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm going to start an opinionated overflow thread for the previous discussion ("
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1599588394135900"
                            },
                            {
                                "type": "text",
                                "text": ")\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Why programmers ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "shouldn't",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " program for themselves",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (my editorializing)\n\nFocusing on \"quantity of programming\" feels like the wrong frame. My ideal society of people educated in programming may not involve most people actually doing much programming most days. What matters is the "
                            },
                            {
                                "type": "text",
                                "text": "potential",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Compounding advantages from programming for one day per year.\n\n* Impulse to generalize is self-limiting (some maintenance burden may be irreducible). A good end-user computer needs to be extremely parsimonious in out-of-the-box capabilities, and leave lots of space for users to \"pollute\" it with what they care about. Give people space to make mistakes, raze things and start over. If it's too built-up, it discourages experimentation and customization.\n* Baiting big to catch small. ("
                            },
                            {
                                "type": "link",
                                "url": "https://xkcd.com/1319"
                            },
                            {
                                "type": "text",
                                "text": ") The long tail of manual tasks are not really economic to automate just for oneself.\n* First-world problems. Until we get good sensors/actuators, programming is kiddie-pool stuff for the most part. \"I wrote a script that lets me open projects easily so that I can write more scripts.\" There's more to life. (Not for me, but for most people "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": ")\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Why programmers don't program for themselves",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (snapshot summary of the previous thread)\n\n* Interoperability limitations. Between any putative new script and other devices, platforms, programs.\n* GUI limitations.\n* Operational/maintenance burden (Ivan Illich). Keeping up with security advisories, for example ("
                            },
                            {
                                "type": "link",
                                "url": "https://mastodon.social/@akkartik/104790515855023278"
                            },
                            {
                                "type": "text",
                                "text": ")\n* Programming for employers sucking up all the oxygen. Building for oneself is economically invisible in the current paradigm. (Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": ".)\n* Long-term trend towards locked-down, consumption-oriented devices. Morlocks turning Eloi.\n* Lack of DIY culture. Programming for others may be poor preparation for listening to one's own needs (e.g. "
                            },
                            {
                                "type": "link",
                                "url": "https://mastodon.social/@akkartik/103994830568601931"
                            },
                            {
                                "type": "text",
                                "text": "). Perhaps the original sin was framing programming as driven by exernal \"requirements\"? But computers always had to start out expensive; hard to imagine how we could dodge that bullet..\n* Fragmentation in incumbent programming models. High barrier to entry for exploring new programming models.\n* Poor discoverability/unmemorability/anti-memorability.\n\n(Bullets are not disjoint, just interlocking/overlapping frames I've been finding useful.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "reply_count": 22,
        "reply_users_count": 10,
        "latest_reply": "1599993679.362900",
        "reply_users": [
            "U013ZLJARC7",
            "U5STGTB3J",
            "U010328JA1E",
            "UE0ETTCG7",
            "UJBAJNFLK",
            "U016VUZGUUQ",
            "UCUSW7WVD",
            "U71PMQ1V0",
            "UPX3PH28N",
            "U01A57MG2HM"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UERRYNVMM",
                    "U5STGTB3J",
                    "UJBAJNFLK",
                    "U016VUZGUUQ",
                    "U01A1C2K8MP",
                    "UBSMEUXAA",
                    "UJ6LDMMN0"
                ],
                "count": 8
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "41871d15-a740-480a-bf9e-c0e7a9e4f7e1",
        "type": "message",
        "text": "As someone who comes from the antediluvian era when personal computers were _personal_, that was one of the most depressing threads I've read since joining this community. :disappointed_relieved:",
        "user": "U013ZLJARC7",
        "ts": "1599726375.217000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FC3P/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As someone who comes from the antediluvian era when personal computers were "
                            },
                            {
                                "type": "text",
                                "text": "personal",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", that was one of the most depressing threads I've read since joining this community. "
                            },
                            {
                                "type": "emoji",
                                "name": "disappointed_relieved"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U5STGTB3J",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "U71PMQ1V0"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "0d188d36-6a61-4fcc-a16d-fb9ccbcea6c2",
        "type": "message",
        "text": "Yes! Sadly.\n\nThe more I learn about that \"antediluvian era\" the more I think we have this whole thing backwards. Back then, people like Alan Kay were trying to figure out how to make computers work for everybody. \"Programmer\" was just a synonym for \"computer user\".\n\nBut then we somehow accepted the idea that it's better to distinguish between so-called \"experts\" that can create all the software for \"not experts\" to use, even though these \"experts\" knew nothing of what the \"not experts\" really wanted to achieve. Primarily it seems, so we can sell a sh*tload of products and turn a planetary-scale nuclear attack-proof knowledge-sharing computer network into a shopping mall.\n\nThe result is that now everything is so complicated that not even the \"experts\" find it feasible to do most things with a computer themselves, and the \"not experts\" are now convinced that they can't possibly learn how to do anything useful with computers unless somebody else creates it for them.\n\nWe should've never stopped trying to make computers work for everyone.\nAnd we should've kept talking about the \"medium\" aspect of computing more.",
        "user": "U5STGTB3J",
        "ts": "1599735053.217600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VpLAR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! Sadly.\n\nThe more I learn about that \"antediluvian era\" the more I think we have this whole thing backwards. Back then, people like Alan Kay were trying to figure out how to make computers work for everybody. \"Programmer\" was just a synonym for \"computer user\".\n\nBut then we somehow accepted the idea that it's better to distinguish between so-called \"experts\" that can create all the software for \"not experts\" to use, even though these \"experts\" knew nothing of what the \"not experts\" really wanted to achieve. Primarily it seems, so we can sell a sh*tload of products and turn a planetary-scale nuclear attack-proof knowledge-sharing computer network into a shopping mall.\n\nThe result is that now everything is so complicated that not even the \"experts\" find it feasible to do most things with a computer themselves, and the \"not experts\" are now convinced that they can't possibly learn how to do anything useful with computers unless somebody else creates it for them.\n\nWe should've never stopped trying to make computers work for everyone.\nAnd we should've kept talking about the \"medium\" aspect of computing more."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "UHWC9PXBL",
                    "U01661S9F34"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "98db7cb4-636c-4c1d-8230-fab9ba267c74",
        "type": "message",
        "text": "Ah, sorry, that turned into a not very constructive rant\u2026 I do appreciate that there are still a few people trying to make computers work for everyone, and in this community in particular.\n\nThis whole \"end-user programming\" thing (even though I've adapted to use the term because otherwise it just makes communication more complicated than it already is) just feels totally backwards to me \u2014 starting from a programmer mindset and trying to invent an easier way for non-programmers to do programmer things just seems wrong, wrong, wrong to me.\n\nWe need better options for non-programmers to teach us how to use computers in ways that are more useful and more relevant.",
        "user": "U5STGTB3J",
        "ts": "1599735459.217800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ons",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, sorry, that turned into a not very constructive rant\u2026 I do appreciate that there are still a few people trying to make computers work for everyone, and in this community in particular.\n\nThis whole \"end-user programming\" thing (even though I've adapted to use the term because otherwise it just makes communication more complicated than it already is) just feels totally backwards to me \u2014 starting from a programmer mindset and trying to invent an easier way for non-programmers to do programmer things just seems wrong, wrong, wrong to me.\n\nWe need better options for non-programmers to teach us how to use computers in ways that are more useful and more relevant."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "4acc3eee-f496-4856-908f-bebc810211b6",
        "type": "message",
        "text": "<@U5STGTB3J> (last paragraph) have you expanded on it elsewhere?",
        "user": "U010328JA1E",
        "ts": "1599738222.218000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D1B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " (last paragraph) have you expanded on it elsewhere?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "720065BC-0596-4150-94CF-87785BC61346",
        "type": "message",
        "text": "<@U010328JA1E> I have a lot more thoughts about it than I have written down anywhere (yet?). Every once in a while I keep rambling about it here. What I did write down elsewhere is this: <https://stefan-lesser.com/2019/12/13/democratize-programming/|https://stefan-lesser.com/2019/12/13/democratize-programming/>",
        "user": "U5STGTB3J",
        "ts": "1599743355.221900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HBkjO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U010328JA1E"
                            },
                            {
                                "type": "text",
                                "text": " I have a lot more thoughts about it than I have written down anywhere (yet?). Every once in a while I keep rambling about it here. What I did write down elsewhere is this: "
                            },
                            {
                                "type": "link",
                                "url": "https://stefan-lesser.com/2019/12/13/democratize-programming/",
                                "text": "https://stefan-lesser.com/2019/12/13/democratize-programming/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U010328JA1E"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7c494a33-181b-4412-bfc7-8835fc72541c",
        "type": "message",
        "text": "<@U013ZLJARC7> Regarding the thread being depressing, I personally am more hopeful after the realization I made here <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1599666723187800?thread_ts=1599588394.135900&amp;cid=C5T9GPWFL> That I think a better place to look at how programmers use programming for themselves is to create things to share with others. E.g., it seems to me that things are like personal sites and side projects (sharing) are much more common than using programming to improve personal productivity. Correspondingly, it seems to me that the most fruitful area in end-user programming would likely be in making it as easy as possible for non-programmers to share their creations with others. I think the history of the web also reflects this, with the move towards services that remove the technical hurdles to sharing (e.g., Twitter/Medium, for better or worse) and the current no-code movement.",
        "user": "UE0ETTCG7",
        "ts": "1599748283.222600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1599666723187800?thread_ts=1599588394.135900&amp;cid=C5T9GPWFL",
                "fallback": "[September 9th, 2020 8:52 AM] services: The theme of the responses here seems to be: Only a small percentage of people are interested in using programming to improve their own workflow, *but much more people are interested in using programming to build things to share*. Which I think resolves my initial conundrum about programmers not using programming to solve their own problems: I was looking at scripting and customization, but what I probably should have been looking at is things like side projects and personal sites. Which to me seem much more popular than scripting/customization?\n\nThere might be a lesson for end-using programming here too: It's probably better to focus on tools that let people create things for other people than it is to focus on anything that you'd call \"automation\".  For whatever reason most people aren't interested in automation (maybe just because it's not worth the time, e.g., the relevant xkcds)? But they are interested in building things to share, e.g., see the Hollow Knight example above. This seems consistent with the no code movement going on as well.",
                "ts": "1599666723.187800",
                "author_id": "UE0ETTCG7",
                "author_subname": "Roben Kleene",
                "channel_id": "C5T9GPWFL",
                "channel_name": "thinking-together",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "The theme of the responses here seems to be: Only a small percentage of people are interested in using programming to improve their own workflow, *but much more people are interested in using programming to build things to share*. Which I think resolves my initial conundrum about programmers not using programming to solve their own problems: I was looking at scripting and customization, but what I probably should have been looking at is things like side projects and personal sites. Which to me seem much more popular than scripting/customization?\n\nThere might be a lesson for end-using programming here too: It's probably better to focus on tools that let people create things for other people than it is to focus on anything that you'd call \"automation\".  For whatever reason most people aren't interested in automation (maybe just because it's not worth the time, e.g., the relevant xkcds)? But they are interested in building things to share, e.g., see the Hollow Knight example above. This seems consistent with the no code movement going on as well.",
                "author_name": "Roben Kleene",
                "author_link": "https://futureofcoding.slack.com/team/UE0ETTCG7",
                "author_icon": "https://avatars.slack-edge.com/2018-11-08/475666469605_2d5718395ee31c13bb5d_48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1599666723187800?thread_ts=1599588394.135900&amp;cid=C5T9GPWFL",
                "footer": "From a thread in #thinking-together"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9v2a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " Regarding the thread being depressing, I personally am more hopeful after the realization I made here "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1599666723187800?thread_ts=1599588394.135900&cid=C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " That I think a better place to look at how programmers use programming for themselves is to create things to share with others. E.g., it seems to me that things are like personal sites and side projects (sharing) are much more common than using programming to improve personal productivity. Correspondingly, it seems to me that the most fruitful area in end-user programming would likely be in making it as easy as possible for non-programmers to share their creations with others. I think the history of the web also reflects this, with the move towards services that remove the technical hurdles to sharing (e.g., Twitter/Medium, for better or worse) and the current no-code movement."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "5c072962-7625-445a-adec-82abbd5ef96c",
        "type": "message",
        "text": "I am from that antediluvian era as well, my first computer (<https://en.wikipedia.org/wiki/Colour_Genie>) was so personal that it didn't even have any connection to the outside world other than via physical artefacts (cassette tapes). But I never left the universe of end-user programming. All the software I write is for my own use. Often published for sharing with others, but never written exclusively for that purpose. From this perspective, the evolution of the last 30 years looks like computers becoming ever more powerful and at the same time ever more difficult to use. I spend more time today on administrative overhead (software updates, ...) than I did 30 years ago.",
        "user": "UJBAJNFLK",
        "ts": "1599752170.223400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TUV/n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am from that antediluvian era as well, my first computer ("
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Colour_Genie"
                            },
                            {
                                "type": "text",
                                "text": ") was so personal that it didn't even have any connection to the outside world other than via physical artefacts (cassette tapes). But I never left the universe of end-user programming. All the software I write is for my own use. Often published for sharing with others, but never written exclusively for that purpose. From this perspective, the evolution of the last 30 years looks like computers becoming ever more powerful and at the same time ever more difficult to use. I spend more time today on administrative overhead (software updates, ...) than I did 30 years ago."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "9ae52631-d641-456f-b748-6b655677a1de",
        "type": "message",
        "text": "Related to Roben's point, I've always thought it should be easy to share workspace customizations and the like as well as code. Config packages should be easy to create, install, and uninstall.",
        "user": "U016VUZGUUQ",
        "ts": "1599758691.223800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cp0wv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Related to Roben's point, I've always thought it should be easy to share workspace customizations and the like as well as code. Config packages should be easy to create, install, and uninstall."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ce86c7fd-9a16-46bd-9c9c-4e38dc652a36",
        "type": "message",
        "text": "<@U016VUZGUUQ> I think the right way to share workspace customization is as \"naked code\". Copy-pasting fragments. One link from my OP above is relevant: <https://mastodon.social/@akkartik/103994830568601931>. My argument goes like this:\n\n* Settings often grow in an unruly fashion compared to codebases. We're more careful about organizing modules in a repo than we are in adding knobs to a config file. Even though the modules are internal details and the config file is externally visible.\n* Settings in config files often depend on each other in subtle, hard-to-debug ways.\n* Creating packages to manage customizations requires dealing with these dependencies. That creates a lot of bloat to sense lots of different combinations of settings and behave appropriately.\n* The bloat hinders further customization. People start to rely more on packages created by others, and the muscle of doing your own customization atrophies.\n\nBottomline: If you make something look polished, people will assume someone else should make it. If you make it look half-assed, it will encourage, even _beg for_, helping oneself. This is a case where worse is actually better, not just pragmatically but really.",
        "user": "UCUSW7WVD",
        "ts": "1599759722.224400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599759914.000000"
        },
        "attachments": [
            {
                "service_name": "Mastodon",
                "title": "Kartik Agaram (@akkartik@mastodon.social)",
                "title_link": "https://mastodon.social/@akkartik/103994830568601931",
                "text": "*Yak shave of the day* My editor shows signs on the margins to indicate changes since last commit. I wanted it to show diffs from an arbitrary commit. This feature request had been understandably refused a year ago: <https://github.com/mhinz/vim-signify/issues/232> So I fixed it for myself, in 3 easy steps: 1. Find a simpler version: 1650 =&gt; 900 lines. 2. Delete even more code: -600 lines. 3. Add the feature: +2 lines. The final result only works for me. I believe we should share raw VimScript, not packages.",
                "fallback": "Mastodon: Kartik Agaram (@akkartik@mastodon.social)",
                "thumb_url": "https://files.mastodon.social/accounts/avatars/000/255/426/original/92e4e4f2f51a1701.png",
                "from_url": "https://mastodon.social/@akkartik/103994830568601931",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https://mastodon.social/favicon.ico",
                "id": 1,
                "original_url": "https://mastodon.social/@akkartik/103994830568601931"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6LHI3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " I think the right way to share workspace customization is as \"naked code\". Copy-pasting fragments. One link from my OP above is relevant: "
                            },
                            {
                                "type": "link",
                                "url": "https://mastodon.social/@akkartik/103994830568601931"
                            },
                            {
                                "type": "text",
                                "text": ". My argument goes like this:\n\n* Settings often grow in an unruly fashion compared to codebases. We're more careful about organizing modules in a repo than we are in adding knobs to a config file. Even though the modules are internal details and the config file is externally visible.\n* Settings in config files often depend on each other in subtle, hard-to-debug ways.\n* Creating packages to manage customizations requires dealing with these dependencies. That creates a lot of bloat to sense lots of different combinations of settings and behave appropriately.\n* The bloat hinders further customization. People start to rely more on packages created by others, and the muscle of doing your own customization atrophies.\n\nBottomline: If you make something look polished, people will assume someone else should make it. If you make it look half-assed, it will encourage, even "
                            },
                            {
                                "type": "text",
                                "text": "beg for",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", helping oneself. This is a case where worse is actually better, not just pragmatically but really."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "60fc1841-9bbb-45c3-919f-c4787a20c846",
        "type": "message",
        "text": "<@UJBAJNFLK> I, too, still write tools for myself constantly, including little 10-15 minute programs meant to be thrown away. All I could think looking at that thread is that if one's normal toolchain makes producing nonce personal code that difficult, something has gone terribly wrong.\n\n<@UE0ETTCG7> The first time we used Maria.cloud to teach a class of novices we added a feature where any \"cell\" in a notebook could be shared as a an \"app\" -- a view onto the whole notebook via an interactive graphical cell -- with a single mouse click. At the end of the first day everyone had made a game or some art, and they loved sending around their creations. It was great. So, yes, this is definitely something \"non-programmers\" (rather, not yet programmers!) respond to quite readily.",
        "user": "U013ZLJARC7",
        "ts": "1599759839.224700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qvB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I, too, still write tools for myself constantly, including little 10-15 minute programs meant to be thrown away. All I could think looking at that thread is that if one's normal toolchain makes producing nonce personal code that difficult, something has gone terribly wrong.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " The first time we used Maria.cloud to teach a class of novices we added a feature where any \"cell\" in a notebook could be shared as a an \"app\" -- a view onto the whole notebook via an interactive graphical cell -- with a single mouse click. At the end of the first day everyone had made a game or some art, and they loved sending around their creations. It was great. So, yes, this is definitely something \"non-programmers\" (rather, not yet programmers!) respond to quite readily."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "0a201753-9c34-4345-bc38-81b6a927ce5a",
        "type": "message",
        "text": "Aye aye aye, what a cool idea, a social networking platform based around sharing little interactive bits of code. Twitter x CodePen",
        "user": "UE0ETTCG7",
        "ts": "1599760219.225200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ZhZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Aye aye aye, what a cool idea, a social networking platform based around sharing little interactive bits of code. Twitter x CodePen"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "c0a3ad68-bf8a-4482-9533-55c893d86886",
        "type": "message",
        "text": "<@UCUSW7WVD> you argument is compelling for text config files as they are today. However, looking to the future, blobs of text config can't be the only way people make customizations. The whole hidden dependency thing especially needs to die (that alone would take you a long way). Basically what I mean by \"it should be easy\" is that the obstacles in your post should be defeated. :)",
        "user": "U016VUZGUUQ",
        "ts": "1599761138.225400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M=TE6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " you argument is compelling for text config files as they are today. However, looking to the future, blobs of text config can't be the only way people make customizations. The whole hidden dependency thing especially needs to die (that alone would take you a long way). Basically what I mean by \"it should be easy\" is that the obstacles in your post should be defeated. :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "b38fc80b-571c-4334-94ad-12b8dcad552f",
        "type": "message",
        "text": "Totally agreed. But it's not really about text. In fact, text helps here because it's still easier in 2020 to throw text into a random text box than it is to attach files to it.\n\nThe real problem is the indisciplined dependencies, and it's a devilishly subtle problem. For the obstacles to be defeated we need somehow for everybody to do \"the right thing\" -- even after we figure out the rules of engagement. I don't know how to even start attacking that social-organization problem.\n\nIn the meantime, it seems to me the best way to share customization is to encourage sharing what works for you, with the expectation that others will need to tweak it to get it working for themselves. It's fiddly and annoying, but still on balance better than the current world of pervasive learned helplessness.",
        "user": "UCUSW7WVD",
        "ts": "1599762670.225800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599762767.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6xIJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Totally agreed. But it's not really about text. In fact, text helps here because it's still easier in 2020 to throw text into a random text box than it is to attach files to it.\n\nThe real problem is the indisciplined dependencies, and it's a devilishly subtle problem. For the obstacles to be defeated we need somehow for everybody to do \"the right thing\" -- even after we figure out the rules of engagement. I don't know how to even start attacking that social-organization problem.\n\nIn the meantime, it seems to me the best way to share customization is to encourage sharing what works for you, with the expectation that others will need to tweak it to get it working for themselves. It's fiddly and annoying, but still on balance better than the current world of pervasive learned helplessness."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            }
        ]
    }
]