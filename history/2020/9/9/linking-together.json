[
    {
        "client_msg_id": "4de7ef77-85f5-45d3-88fe-fe4b35bef35d",
        "type": "message",
        "text": "Some very nice affordances for concatenative programming! Appears abandoned, which is a shame because this deserves further development...",
        "user": "U013ZLJARC7",
        "ts": "1599632090.118000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GOYXx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some very nice affordances for concatenative programming! Appears abandoned, which is a shame because this deserves further development..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "b7c0be8e-3aad-4bce-8749-fda2aa865c56",
        "type": "message",
        "text": "The little exchange between <@UCUSW7WVD> and <@UHWC9PXBL> is telling: we have come to consider the distinction between writing and debugging code as something fundamental. Which I think is mainly the fault of compilers. There's a development style popular with some Smalltalkers, a variant of test-driven development, in which most code is written in the debugger as a \"fix\" to failing tests. There is also a lot of overlap with <@U6KQ2S410>\u2019s work on subtext.",
        "user": "UJBAJNFLK",
        "ts": "1599632574.118200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "25eNr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The little exchange between "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " is telling: we have come to consider the distinction between writing and debugging code as something fundamental. Which I think is mainly the fault of compilers. There's a development style popular with some Smalltalkers, a variant of test-driven development, in which most code is written in the debugger as a \"fix\" to failing tests. There is also a lot of overlap with "
                            },
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": "\u2019s work on subtext."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7",
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "U01A1C2K8MP"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1ee2c2ce-fa92-4aa2-80de-59619a2bdda7",
        "type": "message",
        "text": "Funny thing was, as I was asking those questions the thing I was really thinking about was <@UBKNXPBAB>'s PANE. It seemed somehow undesirable that the UI here had lots of \"mutation\" going on in the same part of the screen, where \"the PANE way\" would be to show all the states of the stack at once, which feels nice and \"functional/immutable\". But that property of PANE is also shared by logs if you set them up right. So I \"simplified down\" to time-travel debugging.\n\nBret Victor's \"Magic Ink\" paper makes the same point: just show all the data so it can be just read, rather than requiring operations to see different peepholes of it: <http://worrydream.com/MagicInk/#interactivity_considered_harmful>",
        "user": "UCUSW7WVD",
        "ts": "1599632785.118500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599633073.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S1RR9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Funny thing was, as I was asking those questions the thing I was really thinking about was "
                            },
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": "'s PANE. It seemed somehow undesirable that the UI here had lots of \"mutation\" going on in the same part of the screen, where \"the PANE way\" would be to show all the states of the stack at once, which feels nice and \"functional/immutable\". But that property of PANE is also shared by logs if you set them up right. So I \"simplified down\" to time-travel debugging.\n\nBret Victor's \"Magic Ink\" paper makes the same point: just show all the data so it can be just read, rather than requiring operations to see different peepholes of it: "
                            },
                            {
                                "type": "link",
                                "url": "http://worrydream.com/MagicInk/#interactivity_considered_harmful"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "23a66529-5eaa-4d94-9396-44f6f00ac007",
        "type": "message",
        "text": "I finally got around to finishing the video. Extremely thought-provoking. It's kinda interesting to think of PANE and Brief as two poles with complementary strengths and weaknesses (with LoGlo in the uncanny valley in between)\n\n* PANE shows everything, but it's less dense. A single value is often printed in multiple places on screen. In Brief there's a designated place for showing runtime values, so less real estate is expended on them.\n* Brief shows a stack at the top level, but once definitions are created they get 'reified' into textual definitions. This is nice and dense, but solves just one level of the problem of not making me simulate in my head. I kept waiting for the author to show some way to \"drill down\" into a defined word to visualize how it constructs its intermediate results, but that still seems to be an open problem. It's also a little klunky that there are two ways visually to represent the same expression, one with boxes and the other in plain text.\n* LoGlo seems to have the drawbacks of both. It doesn't have any way to show intermediate stack states, and it also has no way to drill down into intermediate expressions the way PANE does.",
        "user": "UCUSW7WVD",
        "ts": "1599634775.118800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599635113.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Ip",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I finally got around to finishing the video. Extremely thought-provoking. It's kinda interesting to think of PANE and Brief as two poles with complementary strengths and weaknesses (with LoGlo in the uncanny valley in between)\n\n* PANE shows everything, but it's less dense. A single value is often printed in multiple places on screen. In Brief there's a designated place for showing runtime values, so less real estate is expended on them.\n* Brief shows a stack at the top level, but once definitions are created they get 'reified' into textual definitions. This is nice and dense, but solves just one level of the problem of not making me simulate in my head. I kept waiting for the author to show some way to \"drill down\" into a defined word to visualize how it constructs its intermediate results, but that still seems to be an open problem. It's also a little klunky that there are two ways visually to represent the same expression, one with boxes and the other in plain text.\n* LoGlo seems to have the drawbacks of both. It doesn't have any way to show intermediate stack states, and it also has no way to drill down into intermediate expressions the way PANE does."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "88b728b6-d457-49ea-920e-8497bb4c9b34",
        "type": "message",
        "text": "<@UCUSW7WVD> In addition to sharing <@UJBAJNFLK>'s impression, it also felt in reading that exchange that what _stack_ means is rather special in this sort of language, which would wrong-foot someone who hasn't done a bit of programming in this paradigm.",
        "user": "U013ZLJARC7",
        "ts": "1599637788.119400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "got",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " In addition to sharing "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": "'s impression, it also felt in reading that exchange that what "
                            },
                            {
                                "type": "text",
                                "text": "stack",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " means is rather special in this sort of language, which would wrong-foot someone who hasn't done a bit of programming in this paradigm."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "a8982277-ec1d-4a65-a8b6-20e03e3bf347",
        "type": "message",
        "text": "Thanks for sharing <@USH01JEDQ>!\n\nAnd after seeing the video I also wanted to share the same screenshot as you! :slightly_smiling_face: Especially the one about the requirements for shipping a package.\n\nI rewrite it here so it can be searchable/copy-pasteable:\n&gt; It's a cultural norm that *every package* ships with:\n&gt; 1. Code\n&gt; 2. Documentation\n&gt; 3. Custom editor integration",
        "user": "UJ6LDMMN0",
        "ts": "1599642767.120700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pdqb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing "
                            },
                            {
                                "type": "user",
                                "user_id": "USH01JEDQ"
                            },
                            {
                                "type": "text",
                                "text": "!\n\nAnd after seeing the video I also wanted to share the same screenshot as you! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " Especially the one about the requirements for shipping a package.\n\nI rewrite it here so it can be searchable/copy-pasteable:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a cultural norm that "
                            },
                            {
                                "type": "text",
                                "text": "every package",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ships with:\n1. Code\n2. Documentation\n3. Custom editor integration"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599590101.104700",
        "parent_user_id": "USH01JEDQ",
        "reactions": [
            {
                "name": "rainbow",
                "users": [
                    "USH01JEDQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "57e7d33b-eb2c-411b-887c-6175d88ea33a",
        "type": "message",
        "text": "I really like this idea",
        "user": "UJ6LDMMN0",
        "ts": "1599642790.120900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UNq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like this idea"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599590101.104700",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "f029ba2b-8108-4599-815b-99bcd394de43",
        "type": "message",
        "text": "Very interesting! I agree with previous comments and want to add that something nice here is some kind of programming by example then refactor to extract and create new abstractions.",
        "user": "UJ6LDMMN0",
        "ts": "1599643779.121700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i+TZC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting! I agree with previous comments and want to add that something nice here is some kind of programming by example then refactor to extract and create new abstractions."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "780b5228-507d-4717-b0df-2b50a335db58",
        "type": "message",
        "text": "<@U013ZLJARC7> Hmm, can you elaborate on how 'stack' is special? I _have_ done a bit of Forth, RPN isn't new to me..",
        "user": "UCUSW7WVD",
        "ts": "1599660823.122400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599663757.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Odl+F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " Hmm, can you elaborate on how 'stack' is special? I "
                            },
                            {
                                "type": "text",
                                "text": "have ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "done a bit of Forth, RPN isn't new to me.."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "3d4fad56-a096-48c5-a3e4-7d3852f031de",
        "type": "message",
        "text": "<https://blog.ltse.com/the-long-term-stock-exchange-opens-for-business-38b13f51e87b>",
        "user": "UBN9AFS0N",
        "ts": "1599662212.122700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Medium",
                "title": "The Long-Term Stock Exchange opens for business",
                "title_link": "https://blog.ltse.com/the-long-term-stock-exchange-opens-for-business-38b13f51e87b",
                "text": "A public market with a mission to support companies and investors who share a long-term vision",
                "fallback": "Medium: The Long-Term Stock Exchange opens for business",
                "image_url": "https://miro.medium.com/max/1200/1*MPJD9WihZSvMBOdy7rHpYw.jpeg",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "2 min read",
                        "short": true
                    }
                ],
                "ts": 1599651571,
                "from_url": "https://blog.ltse.com/the-long-term-stock-exchange-opens-for-business-38b13f51e87b",
                "image_width": 444,
                "image_height": 250,
                "image_bytes": 180650,
                "service_icon": "https://cdn-images-1.medium.com/fit/c/152/152/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 1,
                "original_url": "https://blog.ltse.com/the-long-term-stock-exchange-opens-for-business-38b13f51e87b"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NgA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://blog.ltse.com/the-long-term-stock-exchange-opens-for-business-38b13f51e87b"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599662212.122700",
        "reply_count": 5,
        "reply_users_count": 2,
        "latest_reply": "1599664005.124500",
        "reply_users": [
            "UAJKEBGP8",
            "UUQ2EQW21"
        ],
        "subscribed": true,
        "last_read": "1599664005.124500"
    },
    {
        "client_msg_id": "42b6124a-0551-4617-be24-bc986ae9899a",
        "type": "message",
        "text": "excited for this, Ries has been working on this for like a decade I think. But there\u2019s like 0 details on what makes this different than a regular stock exchange besides \u201chey guys, we do LT investing here\u201d",
        "user": "UAJKEBGP8",
        "ts": "1599662786.122900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W/G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "excited for this, Ries has been working on this for like a decade I think. But there\u2019s like 0 details on what makes this different than a regular stock exchange besides \u201chey guys, we do LT investing here\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599662212.122700",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "829b2286-9f3c-4695-89da-61e20410b6e4",
        "type": "message",
        "text": "<@UCUSW7WVD> What I was vaguely gesturing towards is that in most high level languages the implicit mental model uses variables to represent an unbounded number of pseudo-registers while the stack is a _largely invisible_ piece of machinery that facilitates function calls under the covers. In such a language, reifying the stack is a natural debugging affordance because it reveals that hidden mechanism. In concatenative languages, we invert that mental model by centering the stack and mostly pretending that there are no registers/variables. This makes the feeling of the stack very different in, say, FORTH vs Pascal.",
        "user": "U013ZLJARC7",
        "ts": "1599663203.123100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tcZGc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " What I was vaguely gesturing towards is that in most high level languages the implicit mental model uses variables to represent an unbounded number of pseudo-registers while the stack is a "
                            },
                            {
                                "type": "text",
                                "text": "largely invisible",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " piece of machinery that facilitates function calls under the covers. In such a language, reifying the stack is a natural debugging affordance because it reveals that hidden mechanism. In concatenative languages, we invert that mental model by centering the stack and mostly pretending that there are no registers/variables. This makes the feeling of the stack very different in, say, FORTH vs Pascal."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0124c4f9-16d6-4f13-a2f9-b7fc7c501a4d",
        "type": "message",
        "text": "The website seems to be a lot of marketing without any actual exchange as far as I can see.",
        "user": "UUQ2EQW21",
        "ts": "1599663530.123300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MN3=b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The website seems to be a lot of marketing without any actual exchange as far as I can see."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599662212.122700",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "599e1a41-1d0e-40a6-b31c-cac6a72fe4f5",
        "type": "message",
        "text": "From other places:\n\n\u2022 \u201cIn an earlier SEC filing, LTSE said that its corporate governance rules might include: increased voting rights for shareholders who hold company stock for long periods of time, restrictions on offering short-term incentives to executives, disclosure of impact of any stock buybacks, and requiring companies to have a board-level long-term product and strategy committee.<https://en.wikipedia.org/wiki/Long-Term_Stock_Exchange#cite_note-qz2-9|[9]>\u201d\n\u2022 Some loose guidelines here - <https://longtermstockexchange.com/listings>",
        "user": "UAJKEBGP8",
        "ts": "1599663603.123500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "A principles-based approach",
                "title_link": "https://longtermstockexchange.com/listings",
                "text": "Long-term-oriented software tools and investors",
                "fallback": "A principles-based approach",
                "from_url": "https://longtermstockexchange.com/listings",
                "service_icon": "https://longtermstockexchange.com/icons/icon-48x48.png?v=98834bb2f1f0224edfaee309ba747ef7",
                "service_name": "longtermstockexchange.com",
                "id": 1,
                "original_url": "https://longtermstockexchange.com/listings"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/ef",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From other places:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\u201cIn an earlier SEC filing, LTSE said that its corporate governance rules might include: increased voting rights for shareholders who hold company stock for long periods of time, restrictions on offering short-term incentives to executives, disclosure of impact of any stock buybacks, and requiring companies to have a board-level long-term product and strategy committee."
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://en.wikipedia.org/wiki/Long-Term_Stock_Exchange#cite_note-qz2-9",
                                        "text": "[9]"
                                    },
                                    {
                                        "type": "text",
                                        "text": "\u201d"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Some loose guidelines here - "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://longtermstockexchange.com/listings"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1599662212.122700",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "e00ef3b0-691f-4666-9777-b3de39feb353",
        "type": "message",
        "text": "but its nothing like a B-corp, which has more strict rules (but is also kinda vague tbh)",
        "user": "UAJKEBGP8",
        "ts": "1599663613.123800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Paac",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but its nothing like a B-corp, which has more strict rules (but is also kinda vague tbh)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599662212.122700",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "d7d6dbb1-016b-4ed8-8d74-65bf8565f2d2",
        "type": "message",
        "text": "The thing that was mind-bending to me a few years ago was that by splitting up the arg and return address stacks procedures could pass args to _callees of callees_! There's no well-defined stack-frame.",
        "user": "UCUSW7WVD",
        "ts": "1599663865.124200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599665480.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bwt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The thing that was mind-bending to me a few years ago was that by splitting up the arg and return address stacks procedures could pass args to "
                            },
                            {
                                "type": "text",
                                "text": "callees of callees",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "! There's no well-defined stack-frame."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599592790.107800",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "974e4288-7ea8-4879-8f3f-0d2712ef1ad2",
        "type": "message",
        "text": "I quite like the look of the small exchange over at tastytrade, but I'm done with trading for the time being :wink:",
        "user": "UUQ2EQW21",
        "ts": "1599664005.124500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+XVm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I quite like the look of the small exchange over at tastytrade, but I'm done with trading for the time being "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1599662212.122700",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "1AB745E9-247E-40C9-8EBD-B10EAFDBA367",
        "type": "message",
        "text": "<https://journeyapps.com/engineering-blog/no-code-vs-pro-code-a-new-hope/|https://journeyapps.com/engineering-blog/no-code-vs-pro-code-a-new-hope/>",
        "user": "U019CPED6T1",
        "ts": "1599668244.125100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "No-Code vs Pro-Code: A New Hope",
                "title_link": "https://journeyapps.com/engineering-blog/no-code-vs-pro-code-a-new-hope/",
                "text": "We set two high level goals for ourselves: help companies write great software much more productively, and let them do this using modern software technologies and best practices, without the typical barriers. We decided that the best thing we could do was to build a next-generation IDE that has the power and flexibility of pro-code at its core, but also has the high development velocity and easy adoption of no-code/low-code platforms.",
                "fallback": "No-Code vs Pro-Code: A New Hope",
                "image_url": "https://journeyapps.com/assets/images/blog/2020-09-08-no-code-vs-pro-code-a-new-hope/0.png",
                "from_url": "https://journeyapps.com/engineering-blog/no-code-vs-pro-code-a-new-hope/",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 275905,
                "service_icon": "https://journeyapps.com/assets/images/favicon.png",
                "service_name": "journeyapps.com",
                "id": 1,
                "original_url": "https://journeyapps.com/engineering-blog/no-code-vs-pro-code-a-new-hope/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q34",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://journeyapps.com/engineering-blog/no-code-vs-pro-code-a-new-hope/",
                                "text": "https://journeyapps.com/engineering-blog/no-code-vs-pro-code-a-new-hope/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "US6TKS2HW"
                ],
                "count": 1
            }
        ]
    }
]