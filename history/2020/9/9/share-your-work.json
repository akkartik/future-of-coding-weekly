[
    {
        "client_msg_id": "20e82bbd-4426-4c7e-b68d-f1aed46c65f1",
        "type": "message",
        "text": "<@U8A5MS6R1> you make a good point about the principles involved in implementing this (that if a particular layer is hidden, actions which operate on other layers shouldn't be able to affect it): my intuition was almost the complete opposite in the sense that clipboard operations would need to operate on all the layers at once, regardless of their visibility (which was part of the reason I opted to explore the \"always show invisibles\" route rather than attempting to implement some sort of position-preserving operations or other magic). I suppose this is a consequence of the serial nature of text, its an inherently linear medium...",
        "user": "UG0EL18H3",
        "ts": "1599632825.192600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AttlE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " you make a good point about the principles involved in implementing this (that if a particular layer is hidden, actions which operate on other layers shouldn't be able to affect it): my intuition was almost the complete opposite in the sense that clipboard operations would need to operate on all the layers at once, regardless of their visibility (which was part of the reason I opted to explore the \"always show invisibles\" route rather than attempting to implement some sort of position-preserving operations or other magic). I suppose this is a consequence of the serial nature of text, its an inherently linear medium..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "02a292c7-b372-4e79-b578-10933d03bbf2",
        "type": "message",
        "text": "<@UG0EL18H3> Yes I can see if I have one hidden sentence in the 'draft' layer, it clearly belongs in the surrounding context and should travel with it. In fact most layer use cases might be like this. I've implemented layers by 'collapsing' instead of hiding - the layer collapses into a single character. Maybe this sets the expectation wrt moving and deletion?",
        "user": "U8A5MS6R1",
        "ts": "1599634617.192900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ixZS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UG0EL18H3"
                            },
                            {
                                "type": "text",
                                "text": " Yes I can see if I have one hidden sentence in the 'draft' layer, it clearly belongs in the surrounding context and should travel with it. In fact most layer use cases might be like this. I've implemented layers by 'collapsing' instead of hiding - the layer collapses into a single character. Maybe this sets the expectation wrt moving and deletion?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "0e4f8a6f-d895-4d6b-8d47-c415bb27ce1f",
        "type": "message",
        "text": "Thanks for sharing this, it seems very interesting! Of course, I'd love to see screenshots and videos if this is possible! :slightly_smiling_face:",
        "user": "UJ6LDMMN0",
        "ts": "1599641583.193500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AjKj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing this, it seems very interesting! Of course, I'd love to see screenshots and videos if this is possible! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598552082.107500",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "6cd5e55c-85ab-42e3-9fb3-2aa68381d592",
        "type": "message",
        "text": "Interesting <@U8A5MS6R1> - I had been intending to do the same thing; collapse to an 'indicator' for the hidden layer points, but it didn't occur to me that this helps the problem of working on hidden layers because you can see what you are copying, etc. I wonder if that is more of an argument for destroying layer content if it is visibly present and collapsed.   Perhaps the 'transport' or 'delete' option could be a user option.  And perhaps deleting hidden layer content could move that content onto a special 'deleted' layer....",
        "user": "UUQ2EQW21",
        "ts": "1599646777.193700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aqv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " - I had been intending to do the same thing; collapse to an 'indicator' for the hidden layer points, but it didn't occur to me that this helps the problem of working on hidden layers because you can see what you are copying, etc. I wonder if that is more of an argument for destroying layer content if it is visibly present and collapsed.   Perhaps the 'transport' or 'delete' option could be a user option.  And perhaps deleting hidden layer content could move that content onto a special 'deleted' layer...."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "4399030d-11f1-4094-afb6-34f4197c8705",
        "type": "message",
        "text": "To counter what I was saying earlier (hidden layers should not be affected), one observation is that there is no absolute coordinate system in layered text. In 2d graphics, each layer is independently grounded to a stable absolute coordinate system. All movement is relative to the absolute coordinate system. (Is this true? I haven't used 2d drawing that much)\n\nIn text all we have are relative coordinates. So when moving text chunks, we're not just moving the content, we're also possibly moving the coordinate system - the ground itself is moving. In other words, the principle 'hidden layers should not be affected' seems to be on shaky ground.",
        "user": "U8A5MS6R1",
        "ts": "1599668288.194100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1599668574.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DKH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To counter what I was saying earlier (hidden layers should not be affected), one observation is that there is no absolute coordinate system in layered text. In 2d graphics, each layer is independently grounded to a stable absolute coordinate system. All movement is relative to the absolute coordinate system. (Is this true? I haven't used 2d drawing that much)\n\nIn text all we have are relative coordinates. So when moving text chunks, we're not just moving the content, we're also possibly moving the coordinate system - the ground itself is moving. In other words, the principle 'hidden layers should not be affected' seems to be on shaky ground."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "bb1acb0a-8576-492b-a1e6-ccb08c6fd9ae",
        "type": "message",
        "text": "<@UUQ2EQW21> the 'deleted' layer idea is brilliant.",
        "user": "U8A5MS6R1",
        "ts": "1599673742.194400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ocz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " the 'deleted' layer idea is brilliant."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "f57b374b-7e54-4a52-8e54-f3605948910b",
        "type": "message",
        "text": "I have a feeling that part of the difficulty is in porting a layer-oblivious concept of \"selection\" to a layered context. Selections have to know what layers they contain and maybe which they skip, and make it clear to the user. If you're writing a long text, different use cases will call for including the outline layer or just the \"final text\" layer in a copy-paste.\n\nIdea 1: only show placeholders for layers when they are in or next to a selection/the cursor. Idea 2: part of the UI display of a selection is a layer-selector similar to the one for the whole document, so you can choose to exclude layers within the range defined by the selection (at which point it starts acting like a multi-selection.)",
        "user": "U016VUZGUUQ",
        "ts": "1599680504.194700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sCoc8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a feeling that part of the difficulty is in porting a layer-oblivious concept of \"selection\" to a layered context. Selections have to know what layers they contain and maybe which they skip, and make it clear to the user. If you're writing a long text, different use cases will call for including the outline layer or just the \"final text\" layer in a copy-paste.\n\nIdea 1: only show placeholders for layers when they are in or next to a selection/the cursor. Idea 2: part of the UI display of a selection is a layer-selector similar to the one for the whole document, so you can choose to exclude layers within the range defined by the selection (at which point it starts acting like a multi-selection.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "785EF190-CD84-4A4A-8DC1-CB3C9E398B19",
        "type": "message",
        "text": "Text is a linear sequence of characters and selections are just ranges in that linear sequence. Introducing different layers means at least introducing some form of hierarchy that breaks all the simple algorithms that work well with ranges in sequences.\n\nCutting a range out of a linear sequence only makes sense if the sequence is the ultimate truth \u2014 but then you can\u2019t model different layers with it. Adding layers means you fundamentally change the core data model from something as simple as a sequence to something more complex like a tree or worse.\n\nBut that\u2019s a great direction to think in. We need to figure that out for structural editing too.",
        "user": "U5STGTB3J",
        "ts": "1599685375.206100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VG6O3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Text is a linear sequence of characters and selections are just ranges in that linear sequence. Introducing different layers means at least introducing some form of hierarchy that breaks all the simple algorithms that work well with ranges in sequences.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Cutting a range out of a linear sequence only makes sense if the sequence is the ultimate truth \u2014 but then you can\u2019t model different layers with it. Adding layers means you fundamentally change the core data model from something as simple as a sequence to something more complex like a tree or worse.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "But that\u2019s a great direction to think in. We need to figure that out for structural editing too."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "3bd777d0-2f8f-46b5-964e-25837faa041c",
        "type": "message",
        "text": "I don't see any potential for recursive hierarchy in the mockup that kicked off this thread. I think there have been a couple conflicting models discussed here, but that one is pretty flat AFAICT. I think it's basically a sequence of (layer_tag, text).\n\nAs long as all the layers need to be contiguous but non-overlapping, i.e. perfectly cover the range [0,n), then the linear sequence with layer metadata is an equally valid ultimate truth (in a certain sense anyway?) to a sequence of layer segments. I don't necessarily want to get bogged down in the representation of a selection, but I think an index range is not crazy. Algorithms on pointers into this structure are going to be tricky regardless.",
        "user": "U016VUZGUUQ",
        "ts": "1599686977.206300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zp8m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't see any potential for recursive hierarchy in the mockup that kicked off this thread. I think there have been a couple conflicting models discussed here, but that one is pretty flat AFAICT. I think it's basically a sequence of (layer_tag, text).\n\nAs long as all the layers need to be contiguous but non-overlapping, i.e. perfectly cover the range [0,n), then the linear sequence with layer metadata is an equally valid ultimate truth (in a certain sense anyway?) to a sequence of layer segments. I don't necessarily want to get bogged down in the representation of a selection, but I think an index range is not crazy. Algorithms on pointers into this structure are going to be tricky regardless."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    }
]