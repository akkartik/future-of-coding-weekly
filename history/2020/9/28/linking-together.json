[
    {
        "client_msg_id": "3864a6e7-1409-4951-98d9-c487392fd770",
        "type": "message",
        "text": "Maybe I'm mis-understanding what you're looking for. Here's HTML live preview in VSCode\n\n<https://www.youtube.com/watch?v=4-VhMGFe_1k>",
        "user": "UC6997THT",
        "ts": "1601260483.033300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Live HTML Preview in VSCode",
                "title_link": "https://www.youtube.com/watch?v=4-VhMGFe_1k",
                "author_name": "greggman",
                "author_link": "https://www.youtube.com/user/gmanjapan",
                "thumb_url": "https://i.ytimg.com/vi/4-VhMGFe_1k/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Live HTML Preview in VSCode",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/4-VhMGFe_1k?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://www.youtube.com/watch?v=4-VhMGFe_1k",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=4-VhMGFe_1k"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aI7W+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe I'm mis-understanding what you're looking for. Here's HTML live preview in VSCode\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=4-VhMGFe_1k"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "df437526-ea6e-4300-ac43-127c3a409a5a",
        "type": "message",
        "text": "Using this plugin\n\n<https://marketplace.visualstudio.com/items?itemName=daiyy.quick-html-previewer>",
        "user": "UC6997THT",
        "ts": "1601260507.033600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Quick HTML Previewer - Visual Studio Marketplace",
                "title_link": "https://marketplace.visualstudio.com/items?itemName=daiyy.quick-html-previewer",
                "text": "Extension for Visual Studio Code - Edit and preview HTML documents in VS Code",
                "fallback": "Quick HTML Previewer - Visual Studio Marketplace",
                "thumb_url": "https://daiyy.gallerycdn.vsassets.io/extensions/daiyy/quick-html-previewer/1.0.1/1572103922713/Microsoft.VisualStudio.Services.Icons.Default",
                "from_url": "https://marketplace.visualstudio.com/items?itemName=daiyy.quick-html-previewer",
                "thumb_width": 345,
                "thumb_height": 343,
                "service_icon": "https://marketplace.visualstudio.com/favicon.ico",
                "service_name": "marketplace.visualstudio.com",
                "id": 1,
                "original_url": "https://marketplace.visualstudio.com/items?itemName=daiyy.quick-html-previewer"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nGW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using this plugin\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://marketplace.visualstudio.com/items?itemName=daiyy.quick-html-previewer"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "3cb7488b-2639-43ba-8669-5c6eb3e2788d",
        "type": "message",
        "text": "I agree with you the Chrome DevTools are better than the VSC Debugger. I don't know what if any features of the Chrome DevTools can't be written via chrome  extensions (since there are extensions that add features to the devtools)\n\nAFAIK most of the DevTools are written in JavaScript using the extension API so it might be possible for VSCode to apply them to an HTML page, though I suspect rather than copy the tools they should just let the HTML plugin expose the existing devtools for its preview.\n\nYou might also argue that trying to stuff too many things into one place might make it jack of all trades master of none. It might be better to talk to the Chrome team and see if they can come up with an API to tell you embed your editor of choice in the devtools? I don't know. At some point it feels like the 2 things are going to conflict with each other. VSC is a code editor, not a JavaScript editor, so I'd prefer it not hard code a JavaScript debugger and then in turn need a C++ debugger, C# debugger, a Swift debugger, a Rust debugger, etc...  At the same time, of course I want better tools period.",
        "user": "UC6997THT",
        "ts": "1601261176.033900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S50d3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with you the Chrome DevTools are better than the VSC Debugger. I don't know what if any features of the Chrome DevTools can't be written via chrome  extensions (since there are extensions that add features to the devtools)\n\nAFAIK most of the DevTools are written in JavaScript using the extension API so it might be possible for VSCode to apply them to an HTML page, though I suspect rather than copy the tools they should just let the HTML plugin expose the existing devtools for its preview.\n\nYou might also argue that trying to stuff too many things into one place might make it jack of all trades master of none. It might be better to talk to the Chrome team and see if they can come up with an API to tell you embed your editor of choice in the devtools? I don't know. At some point it feels like the 2 things are going to conflict with each other. VSC is a code editor, not a JavaScript editor, so I'd prefer it not hard code a JavaScript debugger and then in turn need a C++ debugger, C# debugger, a Swift debugger, a Rust debugger, etc...  At the same time, of course I want better tools period."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "7c52e237-5b43-4142-9648-ce61f581ad38",
        "type": "message",
        "text": "A few maybe relevant links.\n\nYou can run the devtools on the devtools (debug the debugger)\n\n<https://docs.google.com/document/d/1WNF-KqRSzPLUUfZqQG5AFeU_Ll8TfWYcJasa_XGf7ro/edit#>\n\nOnly pointing that out just to show that the devtools are written in JavaScript so if you feel like contributing you can either copy them into an vscode plugin, or add/propose changes to chrome to help get the solution you're looking for.",
        "user": "UC6997THT",
        "ts": "1601261415.034100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yXk7F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A few maybe relevant links.\n\nYou can run the devtools on the devtools (debug the debugger)\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://docs.google.com/document/d/1WNF-KqRSzPLUUfZqQG5AFeU_Ll8TfWYcJasa_XGf7ro/edit#"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOnly pointing that out just to show that the devtools are written in JavaScript so if you feel like contributing you can either copy them into an vscode plugin, or add/propose changes to chrome to help get the solution you're looking for."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "5260209c-8495-4bff-86f4-dd7318db95b6",
        "type": "message",
        "text": "<@U013ZLJARC7> Finally got around to look at this in the detail it deserves. Lots of overlap with my own <https://github.com/activepapers/activepapers-pharo|ActivePapers>  project in spirit, but a completely different substrate and technology stack. More in a comment on Sam's post!",
        "user": "UJBAJNFLK",
        "ts": "1601283237.034400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "activepapers/activepapers-pharo",
                "title_link": "https://github.com/activepapers/activepapers-pharo",
                "text": "Pharo edition of ActivePapers. Contribute to activepapers/activepapers-pharo development by creating an account on GitHub.",
                "fallback": "GitHub: activepapers/activepapers-pharo",
                "thumb_url": "https://avatars2.githubusercontent.com/u/5982082?s=400&v=4",
                "from_url": "https://github.com/activepapers/activepapers-pharo",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/activepapers/activepapers-pharo"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vtlQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " Finally got around to look at this in the detail it deserves. Lots of overlap with my own "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/activepapers/activepapers-pharo",
                                "text": "ActivePapers"
                            },
                            {
                                "type": "text",
                                "text": "  project in spirit, but a completely different substrate and technology stack. More in a comment on Sam's post!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601110753.013900",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "fa8a252b-8053-4266-85a9-216b304aa19f",
        "type": "message",
        "text": "<@U013ZLJARC7> By way of review, I did play with Obsidian for a bit. I liked the simplicity, and thought it was well put together.  The link map is cute, though I'm not sure I would use it for anything useful - perhaps it would help find related things if I had a very big database.  I imported my personal vimwiki into it, and it went without a hitch.\nThe splitting works well, and you can customize all the hotkeys.  There are lots of settings, but they get out of the way and the interface is pretty clean.\nThe only real problem I have with it is that I can't use Vim keystrokes to edit the text.  But in general it seems like a really nice tool for building a markdown database.",
        "user": "UUQ2EQW21",
        "ts": "1601286076.034700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JxauY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " By way of review, I did play with Obsidian for a bit. I liked the simplicity, and thought it was well put together.  The link map is cute, though I'm not sure I would use it for anything useful - perhaps it would help find related things if I had a very big database.  I imported my personal vimwiki into it, and it went without a hitch.\nThe splitting works well, and you can customize all the hotkeys.  There are lots of settings, but they get out of the way and the interface is pretty clean.\nThe only real problem I have with it is that I can't use Vim keystrokes to edit the text.  But in general it seems like a really nice tool for building a markdown database."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601034603.006400",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "420417F9-A23C-49D1-B966-40B01ABD3A00",
        "type": "message",
        "text": "I think the confusion was just because I mentioned live browser for previewing HTML, but that\u2019s just one use case. The real goal is of course better dev tool integration when making entire web apps.\n\nI\u2019m not sure the line between JavaScript editor and code editor matters much. VS Code is Chromium, the dev tools are already bundled in to it. And of course any special dev tools could (and probably should) be extensions, just like everything else. The VS Code app just doesn\u2019t expose things like Chromium web views and the dev tools to extension developers, if they did, I\u2019m guessing this work would already be well underway.\n\nThe assumption I\u2019m challenging is whether the dev tools should be part of the IDE or the browser (I don\u2019t see the benefit of VS Code in Chrome, I want my dev tools next to the source code). I think they\u2019d be more useful as part of the IDE (via extensions), because they\u2019d have more seamless interaction with the source files. This is how Xcode (the other dev environment I know well) works, and I\u2019d imagine most IDEs for non-web programming language. The whole browser dev tools concept seems to be a historical artifact of there not having been a better place to put these tools before, but with VS Code where it is today is argue that\u2019s a better place now.\n\n(Running a web server process in the terminal is another similar historical artifact. VS Code has a decent solution to this with `launch.json` files.)\n",
        "user": "UE0ETTCG7",
        "ts": "1601294832.035500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7OV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the confusion was just because I mentioned live browser for previewing HTML, but that\u2019s just one use case. The real goal is of course better dev tool integration when making entire web apps.\n\nI\u2019m not sure the line between JavaScript editor and code editor matters much. VS Code is Chromium, the dev tools are already bundled in to it. And of course any special dev tools could (and probably should) be extensions, just like everything else. The VS Code app just doesn\u2019t expose things like Chromium web views and the dev tools to extension developers, if they did, I\u2019m guessing this work would already be well underway.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "The assumption I\u2019m challenging is whether the dev tools should be part of the IDE or the browser (I don\u2019t see the benefit of VS Code in Chrome, I want my dev tools next to the source code). I think they\u2019d be more useful as part of the IDE (via extensions), because they\u2019d have more seamless interaction with the source files. This is how Xcode (the other dev environment I know well) works, and I\u2019d imagine most IDEs for non-web programming language. The whole browser dev tools concept seems to be a historical artifact of there not having been a better place to put these tools before, but with VS Code where it is today is argue that\u2019s a better place now.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n(Running a web server process in the terminal is another similar historical artifact. VS Code has a decent solution to this with `launch.json` files.)\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "27B6E1E7-6826-4F3D-8536-DF751476CF98",
        "type": "message",
        "text": "Regarding \u201cI don't know what if any features of the Chrome DevTools can't be written via chrome  extensions (since there are extensions that add features to the devtools)\u201d. The idea is to be able to jump to the relevant files in your editor from the dev tools, like easily edit the source HTML for a tag. You can do this today with Workspaces but it\u2019s so many steps to setup because the dev tools are so far from the IDE that it\u2019s not worth it to use. It\u2019s UX problems being solved here, not what\u2019s technically possible.",
        "user": "UE0ETTCG7",
        "ts": "1601295418.036400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SzOw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding \u201cI don't know what if any features of the Chrome DevTools can't be written via chrome  extensions (since there are extensions that add features to the devtools)\u201d. The idea is to be able to jump to the relevant files in your editor from the dev tools, like easily edit the source HTML for a tag. You can do this today with Workspaces but it\u2019s so many steps to setup because the dev tools are so far from the IDE that it\u2019s not worth it to use. It\u2019s UX problems being solved here, not what\u2019s technically possible."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600866849.001600",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "0f51352e-7ea4-4277-a6e5-a96c9a500b31",
        "type": "message",
        "text": "I read the introduction blogpost for ActivePapers and attempted to watch the screencast, but the link is dead! Do you have the video hosted anywhere now? :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1601296896.036600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1601297003.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HoD6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I read the introduction blogpost for ActivePapers and attempted to watch the screencast, but the link is dead! Do you have the video hosted anywhere now? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601110753.013900",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "21bdbed3-1320-4c41-b86c-bbbe86f57442",
        "type": "message",
        "text": "<@UUQ2EQW21> As someone with a significant investment in his editor, I understand. Using a tool that fights my muscle memory is not very compelling. Thanks for the capsule review!",
        "user": "U013ZLJARC7",
        "ts": "1601296962.036800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AG0A=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " As someone with a significant investment in his editor, I understand. Using a tool that fights my muscle memory is not very compelling. Thanks for the capsule review!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601034603.006400",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "4aac86dc-ef9d-4568-8a68-f0249cb523c7",
        "type": "message",
        "text": "My trouble is I want it all:\n\u2022 A markdown database I can trivially edit in Vim.\n\u2022 A single command deploy of my database to a website for browsing\n\u2022 The ability to make a slide presentation as a markdown file (Obsidian does this, though I haven't got around to trying it yet)\n\u2022 The ability to live-code at any point in the text and see the output inline with controls for users to play with (Jupyter, etc.)\nThat last part is the hard part, obviously.  Your link this morning showing off the Dynamic notebook had me excited for sure....\nWhen this is done well, it is great:\n<https://thebookofshaders.com/02/>",
        "user": "UUQ2EQW21",
        "ts": "1601297707.037100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1601297747.000000"
        },
        "attachments": [
            {
                "title": "The Book of Shaders",
                "title_link": "https://thebookofshaders.com/02/",
                "text": "Gentle step-by-step guide through the abstract and complex universe of Fragment Shaders.",
                "fallback": "The Book of Shaders",
                "image_url": "http://thebookofshaders.com/thumb.png",
                "image_width": 250,
                "image_height": 250,
                "from_url": "https://thebookofshaders.com/02/",
                "image_bytes": 65483,
                "service_name": "thebookofshaders.com",
                "id": 1,
                "original_url": "https://thebookofshaders.com/02/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Xz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My trouble is I want it all:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A markdown database I can trivially edit in Vim."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A single command deploy of my database to a website for browsing"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The ability to make a slide presentation as a markdown file (Obsidian does this, though I haven't got around to trying it yet)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The ability to live-code at any point in the text and see the output inline with controls for users to play with (Jupyter, etc.)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That last part is the hard part, obviously.  Your link this morning showing off the Dynamic notebook had me excited for sure....\nWhen this is done well, it is great:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://thebookofshaders.com/02/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601034603.006400",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "919b0b28-85cc-473b-a135-ee778d204cd1",
        "type": "message",
        "text": "<@UUQ2EQW21> This is a similar set of requirements to what I was looking for which makes me wonder whether you've considered the \"role your own with an existing text editor\" approach I mentioned above? I suspect you have, and are really just looking for something that has those features built-in, but I'd be curious to hear your reasons explicitly.\n\nHere's how I solve your requirements (so far, with gaps that illustrate the issues with this approach, but I'm playing the long game...):\n\n- This is of course solved, the whole approach is based on this. Text files not a db though, which in my opinion is better.\n- I haven't built this yet, except in my head, but the idea is just to make a script that either deploys via GitHub Pages, or a simply static site using Pug JS's built-in Markdown support.\n- There are a few solutions for doing this. I use Deckset (<https://www.deckset.com/>) (Mac only).\n- For the last one, I used to be really excited about this, but I've drifted from it for various reasons that aren't really important (mainly just it seems like anything I'd use this for, I can probably do faster in Excel). If I were trying to do this today though, I'd use VS Code, which has some interesting looking notebook support, although I've never tried it. For the record, one of the main goals for my app Repla (<https://repla.app/plugins/live-coding/>) is to do this type of thing in a text editor agnostic way. But like I've said I've drifted a bit from the idea.",
        "user": "UE0ETTCG7",
        "ts": "1601306191.037500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1601306197.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aww=w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " This is a similar set of requirements to what I was looking for which makes me wonder whether you've considered the \"role your own with an existing text editor\" approach I mentioned above? I suspect you have, and are really just looking for something that has those features built-in, but I'd be curious to hear your reasons explicitly.\n\nHere's how I solve your requirements (so far, with gaps that illustrate the issues with this approach, but I'm playing the long game...):\n\n- This is of course solved, the whole approach is based on this. Text files not a db though, which in my opinion is better.\n- I haven't built this yet, except in my head, but the idea is just to make a script that either deploys via GitHub Pages, or a simply static site using Pug JS's built-in Markdown support.\n- There are a few solutions for doing this. I use Deckset ("
                            },
                            {
                                "type": "link",
                                "url": "https://www.deckset.com/"
                            },
                            {
                                "type": "text",
                                "text": ") (Mac only).\n- For the last one, I used to be really excited about this, but I've drifted from it for various reasons that aren't really important (mainly just it seems like anything I'd use this for, I can probably do faster in Excel). If I were trying to do this today though, I'd use VS Code, which has some interesting looking notebook support, although I've never tried it. For the record, one of the main goals for my app Repla ("
                            },
                            {
                                "type": "link",
                                "url": "https://repla.app/plugins/live-coding/"
                            },
                            {
                                "type": "text",
                                "text": ") is to do this type of thing in a text editor agnostic way. But like I've said I've drifted a bit from the idea."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601034603.006400",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "62a84828-3358-445b-ba4e-1a65edaa77fa",
        "type": "message",
        "text": "Another great Alan Kay interview from July 2020.\n\n<https://www.youtube.com/watch?v=JZ48kogYdUA>",
        "user": "UAJKEBGP8",
        "ts": "1601307246.038300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "An interview with Alan Kay",
                "title_link": "https://www.youtube.com/watch?v=JZ48kogYdUA",
                "author_name": "JUXT",
                "author_link": "https://www.youtube.com/channel/UC5G6p4wwKuDKZsgDrbp5j5A",
                "thumb_url": "https://i.ytimg.com/vi/JZ48kogYdUA/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: An interview with Alan Kay",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/JZ48kogYdUA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=JZ48kogYdUA",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=JZ48kogYdUA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pr+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another great Alan Kay interview from July 2020.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=JZ48kogYdUA"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601307246.038300",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1601315803.039500",
        "reply_users": [
            "U01A0KANUUU"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UG0EL18H3"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "feebecdc-00f2-4647-a772-beb0e915fa2f",
        "type": "message",
        "text": "It looks like <http://peervideo.net|peervideo.net> is dead. The video for part 2 is also hosted on Vimeo (<https://vimeo.com/339361206>). I'll have to check my laptop for a copy of the first part!",
        "user": "UJBAJNFLK",
        "ts": "1601311700.038700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Vimeo",
                "service_url": "https://vimeo.com/",
                "title": "The computational notebook of the future, part 2",
                "title_link": "https://vimeo.com/339361206",
                "author_name": "Konrad Hinsen",
                "author_link": "https://vimeo.com/user99133901",
                "thumb_url": "https://i.vimeocdn.com/video/787366977_295x166.jpg",
                "thumb_width": 295,
                "thumb_height": 166,
                "text": "For explanations and links to the code, see the blog post at\n\n",
                "fallback": "Vimeo Video: The computational notebook of the future, part 2",
                "video_html": "<iframe src=\"https://player.vimeo.com/video/339361206?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"250\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen title=\"The computational notebook of the future, part 2\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 250,
                "from_url": "https://vimeo.com/339361206",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/vimeo.png",
                "id": 1,
                "original_url": "https://vimeo.com/339361206"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qX60",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It looks like "
                            },
                            {
                                "type": "link",
                                "url": "http://peervideo.net",
                                "text": "peervideo.net"
                            },
                            {
                                "type": "text",
                                "text": " is dead. The video for part 2 is also hosted on Vimeo ("
                            },
                            {
                                "type": "link",
                                "url": "https://vimeo.com/339361206"
                            },
                            {
                                "type": "text",
                                "text": "). I'll have to check my laptop for a copy of the first part!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601110753.013900",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "95f05d7f-01b7-4dac-a63c-2f272d0b52b8",
        "type": "message",
        "text": "Also found this one from July:",
        "user": "U01A0KANUUU",
        "ts": "1601315802.039300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WC=M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also found this one from July:"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601307246.038300",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "af38a2c9-e8ad-4cc7-a090-c21450985241",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=x4brxbvAqGU>",
        "user": "U01A0KANUUU",
        "ts": "1601315803.039500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Alan Kay Discussion",
                "title_link": "https://www.youtube.com/watch?v=x4brxbvAqGU",
                "author_name": "Beijing Academy of Artificial Intelligence",
                "author_link": "https://www.youtube.com/channel/UCq1_VTswb8oeYXhdkRiYhQw",
                "thumb_url": "https://i.ytimg.com/vi/x4brxbvAqGU/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Alan Kay Discussion",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/x4brxbvAqGU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=x4brxbvAqGU",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=x4brxbvAqGU"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0K89",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=x4brxbvAqGU"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601307246.038300",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UAJKEBGP8"
                ],
                "count": 2
            }
        ]
    }
]