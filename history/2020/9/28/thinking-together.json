[
    {
        "client_msg_id": "7bcb6dc1-f776-4271-8c03-b87aa7283b13",
        "type": "message",
        "text": "<@U013ZLJARC7> I wasn't thinking so much of tooling but of packages. In Common Lisp, packages are just namespaces. Live coders can modify code everywhere at any time. In Julia, as in Python or in most Schemes, live coding is limited to the \"main\" namespace (whatever it is called) and code in modules or packages can be modified predictably only by restarting the session.\nCaveat: I haven't looked seriously at Julia for more than a year. Maybe there is tooling to work around this by now.",
        "user": "UJBAJNFLK",
        "ts": "1601274308.048200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zs1KP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I wasn't thinking so much of tooling but of packages. In Common Lisp, packages are just namespaces. Live coders can modify code everywhere at any time. In Julia, as in Python or in most Schemes, live coding is limited to the \"main\" namespace (whatever it is called) and code in modules or packages can be modified predictably only by restarting the session.\nCaveat: I haven't looked seriously at Julia for more than a year. Maybe there is tooling to work around this by now."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "d2637dd0-52a8-4cc9-84fe-1f7e8d120afa",
        "type": "message",
        "text": "<@UJBAJNFLK> Schemers usually call that namespace \"the top level\", thus the phrase \"the top-level is hopeless\" among Racketeers. (I fall on the opposite side of this from Matthias Felleisen, as live-coding is my preferred way of interacting with a computer.) Anyway, yeah, one can develop Julia packages in the interactive style, but modifying someone else's package at runtime is not part of the culture.",
        "user": "U013ZLJARC7",
        "ts": "1601275682.048400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oah",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Schemers usually call that namespace \"the top level\", thus the phrase \"the top-level is hopeless\" among Racketeers. (I fall on the opposite side of this from Matthias Felleisen, as live-coding is my preferred way of interacting with a computer.) Anyway, yeah, one can develop Julia packages in the interactive style, but modifying someone else's package at runtime is not part of the culture."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "f9b3384e-5e53-42eb-86b7-8532e7bc8d39",
        "type": "message",
        "text": "<@U013ZLJARC7> The aversion to the top level is also my main gripe with Racket. As for Julia, I'd be happy to be able to live-code my own packages, which of course includes forks of someone else's packages. Is that possible now? It's a pain not to be able to restructure code as it grows because of this \"live coding only in one namespace\" restriction.",
        "user": "UJBAJNFLK",
        "ts": "1601282834.048600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XNIm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " The aversion to the top level is also my main gripe with Racket. As for Julia, I'd be happy to be able to live-code my own packages, which of course includes forks of someone else's packages. Is that possible now? It's a pain not to be able to restructure code as it grows because of this \"live coding only in one namespace\" restriction."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f6966019-3024-4195-9ab6-5b2a7e6415ea",
        "type": "message",
        "text": "Hi all! I am working for the Wikimedia Foundation where we are starting to work on a new project [1]: a wiki of functions (name is currently being discussed by the community) [2]. Imagine that for every function, you have on wiki page, where the wiki page describes what the functions does, it's formal parameters (input types, output types), etc. Each function can have several implementations associated with it (which can be built either from other functions in the wiki or be natively written in a programming language, and we plan to support many of those) and also tests. Maybe the best way to understand the project is to take a look at some of the early mockups. [3]\n\nThe functions are meant to be functional, i.e. not to rely on state (well, not too much - they are able to call out to the Web, e.g. to look up information in Wikidata, etc., so in some way, the Web does provide state. We will need to figure that part out. There's a lot of open questions around that).\n\nThe type system is also in the wiki, so that it is extensible by the community.\n\nWe are in very early development (and, in fact, hiring!) [4] I am happy to answer any questions, but I would love to invite folks to join us, either for discussing the  project, help working on it, or ask as hard questions and think about how to solve it. [5]\n\nA preprint paper with background can be found on Arxiv. [6] The paper has been accepted, but not published yet.\n\nHappy to answer any questions here, and to have discussions about what we are doing. In the future I expect us to have many questions like \"what is a good exception system\", \"do we need a type hierarchy\", \"what should the UX for the project do\", etc., so would love to have a place for that.\n\n[1] <https://meta.wikimedia.org/wiki/Abstract_Wikipedia>\n[2] <https://meta.wikimedia.org/wiki/Abstract_Wikipedia/Wiki_of_functions_naming_contest>\n[3} <https://meta.wikimedia.org/wiki/Abstract_Wikipedia/Early_mockups>\n[4] <https://boards.greenhouse.io/wikimedia/jobs/2338515>\n[5] <https://meta.wikimedia.org/wiki/Abstract_Wikipedia#Participate> - links to mailing list, chat, etc.\n[6] <https://arxiv.org/abs/2004.04733>",
        "user": "U01AD80KMLK",
        "ts": "1601330319.057300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01AD80KMLK",
            "ts": "1601338076.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PeJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all! I am working for the Wikimedia Foundation where we are starting to work on a new project [1]: a wiki of functions (name is currently being discussed by the community) [2]. Imagine that for every function, you have on wiki page, where the wiki page describes what the functions does, it's formal parameters (input types, output types), etc. Each function can have several implementations associated with it (which can be built either from other functions in the wiki or be natively written in a programming language, and we plan to support many of those) and also tests. Maybe the best way to understand the project is to take a look at some of the early mockups. [3]\n\nThe functions are meant to be functional, i.e. not to rely on state (well, not too much - they are able to call out to the Web, e.g. to look up information in Wikidata, etc., so in some way, the Web does provide state. We will need to figure that part out. There's a lot of open questions around that).\n\nThe type system is also in the wiki, so that it is extensible by the community.\n\nWe are in very early development (and, in fact, hiring!) [4] I am happy to answer any questions, but I would love to invite folks to join us, either for discussing the  project, help working on it, or ask as hard questions and think about how to solve it. [5]\n\nA preprint paper with background can be found on Arxiv. [6] The paper has been accepted, but not published yet.\n\nHappy to answer any questions here, and to have discussions about what we are doing. In the future I expect us to have many questions like \"what is a good exception system\", \"do we need a type hierarchy\", \"what should the UX for the project do\", etc., so would love to have a place for that.\n\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https://meta.wikimedia.org/wiki/Abstract_Wikipedia"
                            },
                            {
                                "type": "text",
                                "text": "\n[2] "
                            },
                            {
                                "type": "link",
                                "url": "https://meta.wikimedia.org/wiki/Abstract_Wikipedia/Wiki_of_functions_naming_contest"
                            },
                            {
                                "type": "text",
                                "text": "\n[3} "
                            },
                            {
                                "type": "link",
                                "url": "https://meta.wikimedia.org/wiki/Abstract_Wikipedia/Early_mockups"
                            },
                            {
                                "type": "text",
                                "text": "\n[4] "
                            },
                            {
                                "type": "link",
                                "url": "https://boards.greenhouse.io/wikimedia/jobs/2338515"
                            },
                            {
                                "type": "text",
                                "text": "\n[5] "
                            },
                            {
                                "type": "link",
                                "url": "https://meta.wikimedia.org/wiki/Abstract_Wikipedia#Participate"
                            },
                            {
                                "type": "text",
                                "text": " - links to mailing list, chat, etc.\n[6] "
                            },
                            {
                                "type": "link",
                                "url": "https://arxiv.org/abs/2004.04733"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601330319.057300",
        "reply_count": 22,
        "reply_users_count": 6,
        "latest_reply": "1601655054.136200",
        "reply_users": [
            "UAJKEBGP8",
            "U01AD80KMLK",
            "U01BAS8GU86",
            "UN9SCH5RD",
            "UPVBV34EL",
            "UDQKHNP51"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "rainbow",
                "users": [
                    "USH01JEDQ",
                    "U016VUZGUUQ",
                    "U01BAS8GU86",
                    "UMWF81HTP",
                    "UJBAJNFLK",
                    "U013ZLJARC7",
                    "USJ9LD0E4"
                ],
                "count": 7
            },
            {
                "name": "exploding_head",
                "users": [
                    "UHWC9PXBL",
                    "UA14TGLTC",
                    "U019CPED6T1",
                    "USJ9LD0E4"
                ],
                "count": 4
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "USJ9LD0E4"
                ],
                "count": 2
            }
        ]
    }
]