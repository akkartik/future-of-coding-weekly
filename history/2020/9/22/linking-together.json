[
    {
        "client_msg_id": "befdc03a-842e-417e-98e6-7fcb3a0bde3a",
        "type": "message",
        "text": "This project by <@UBJGA440K> deserves its own thread: <https://www.youtube.com/watch?v=F8p5bj01UWk>. Many interesting ideas, including:\n* Constantly evaluating backward slices of the current line.\n* Intelligent version of `M-x eval-sexp` that can strip out incomplete blocks.\n* Persistent interactive settings for every line/scope in a file.\n\n(Originally posted at <https://futureofcoding.slack.com/archives/C0120A3L30R/p1600695483049500?thread_ts=1600587602.007800>)",
        "user": "UCUSW7WVD",
        "ts": "1600752797.013300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600752830.000000"
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "REPL + Debugger = REPLugger: a pleasant and scalable live code editor",
                "title_link": "https://www.youtube.com/watch?v=F8p5bj01UWk",
                "author_name": "Glen Chiacchieri",
                "author_link": "https://www.youtube.com/user/Glenchx",
                "thumb_url": "https://i.ytimg.com/vi/F8p5bj01UWk/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: REPL + Debugger = REPLugger: a pleasant and scalable live code editor",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/F8p5bj01UWk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://www.youtube.com/watch?v=F8p5bj01UWk",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=F8p5bj01UWk"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zzZiA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This project by "
                            },
                            {
                                "type": "user",
                                "user_id": "UBJGA440K"
                            },
                            {
                                "type": "text",
                                "text": " deserves its own thread: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=F8p5bj01UWk"
                            },
                            {
                                "type": "text",
                                "text": ". Many interesting ideas, including:\n* Constantly evaluating backward slices of the current line.\n* Intelligent version of "
                            },
                            {
                                "type": "text",
                                "text": "M-x eval-sexp",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that can strip out incomplete blocks.\n* Persistent interactive settings for every line/scope in a file.\n\n(Originally posted at "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C0120A3L30R/p1600695483049500?thread_ts=1600587602.007800"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600752797.013300",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1600798740.017000",
        "reply_users": [
            "UHWC9PXBL",
            "UCUSW7WVD",
            "UE0H4170F"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UJBAJNFLK",
                    "UHWC9PXBL",
                    "U019CPED6T1",
                    "U016VUZGUUQ",
                    "UA14TGLTC"
                ],
                "count": 6
            }
        ]
    },
    {
        "client_msg_id": "7cbcf0ad-e129-48dc-8b4d-dab40bbd6568",
        "type": "message",
        "text": "Leif Andersen sent me a pre-print. I like the approach of the paper, which is to expand Racket's macro system to include `define-interactive-syntax` that operates at _edit_ time. (In addition to the compile time and run time execution stages.)",
        "user": "U013ZLJARC7",
        "ts": "1600756597.013600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lwR6c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Leif Andersen sent me a pre-print. I like the approach of the paper, which is to expand Racket's macro system to include "
                            },
                            {
                                "type": "text",
                                "text": "define-interactive-syntax",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that operates at "
                            },
                            {
                                "type": "text",
                                "text": "edit",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " time. (In addition to the compile time and run time execution stages.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600423022.000700",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "9DBCF548-A04C-44A8-A758-454F75B5AB99",
        "type": "message",
        "text": "all my favorite features of this have to with freely defining and passing in stuff from the right pane for variables that aren\u2019t defined yet. you get to save example arguments for your function calls! and use them to figure out states later on in your program!",
        "user": "UHWC9PXBL",
        "ts": "1600788203.016300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QzVC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "all my favorite features of this have to with freely defining and passing in stuff from the right pane for variables that aren\u2019t defined yet. you get to save example arguments for your function calls! and use them to figure out states later on in your program!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600752797.013300",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c7eadb0a-c9a7-4ee7-9fab-a541fe06dc1b",
        "type": "message",
        "text": "I forgot to mention that I also really enjoyed the description of the FlowSheets project here. I plan to learn more about it.\n\n<https://youtube.com/watch?v=y1Ca5czOY7Q|https://youtube.com/watch?v=y1Ca5czOY7Q>",
        "user": "UCUSW7WVD",
        "ts": "1600797550.016800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600800786.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Omv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I forgot to mention that I also really enjoyed the description of the FlowSheets project here. I plan to learn more about it.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://youtube.com/watch?v=y1Ca5czOY7Q",
                                "text": "https://youtube.com/watch?v=y1Ca5czOY7Q"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600752797.013300",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "f3f17256-d240-497c-9082-36d7b88e0b76",
        "type": "message",
        "text": "This is really cool, thanks for sharing. Trying to figure out if I would use it to teach (given that this was one of the motivations for the work) vs. just using the console + debugger\u2026 and I\u2019m not sure. Maybe for students who already had some programming experience? Seems like a lot of the features require some knowledge, although the UI that enables clicking around and editing values / typing in simple expressions would be relatively easy for beginners to use and is really nice\u2026 much more immediate than the debugger.",
        "user": "UE0H4170F",
        "ts": "1600798740.017000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9bj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is really cool, thanks for sharing. Trying to figure out if I would use it to teach (given that this was one of the motivations for the work) vs. just using the console + debugger\u2026 and I\u2019m not sure. Maybe for students who already had some programming experience? Seems like a lot of the features require some knowledge, although the UI that enables clicking around and editing values / typing in simple expressions would be relatively easy for beginners to use and is really nice\u2026 much more immediate than the debugger."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600752797.013300",
        "parent_user_id": "UCUSW7WVD"
    }
]