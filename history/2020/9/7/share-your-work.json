[
    {
        "client_msg_id": "aa9c7183-818a-49b6-a6f2-9af727b6fcd4",
        "type": "message",
        "text": "I'm aware, thanks :slightly_smiling_face:",
        "user": "U017GNJM021",
        "ts": "1599436418.177900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZJs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm aware, thanks "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596545313.448700",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "380a3ebf-caf0-45ba-9e6a-e50a566fb045",
        "type": "message",
        "text": "Here's a Twitter thread relevant to this topic: <https://twitter.com/codexeditor/status/1302585628178051075> Many of the features listed there should be implementable via multi-layer text or a simple extension of the idea.",
        "user": "UJBAJNFLK",
        "ts": "1599463450.178200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/codexeditor|@codexeditor>: An exploration of some of the things you can do with standoff markup in Codex that you can't do in certain ... other systems.\n\nTHREAD\n:point_down:",
                "ts": 1599395589,
                "author_name": "Codex",
                "author_link": "https://twitter.com/codexeditor/status/1302585628178051075",
                "author_icon": "https://pbs.twimg.com/profile_images/1109206014413291520/2ieEX-qr_normal.jpg",
                "author_subname": "@codexeditor",
                "text": "An exploration of some of the things you can do with standoff markup in Codex that you can't do in certain ... other systems.\n\nTHREAD\n:point_down:",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/codexeditor/status/1302585628178051075",
                "id": 1,
                "original_url": "https://twitter.com/codexeditor/status/1302585628178051075",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z9ym",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a Twitter thread relevant to this topic: "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/codexeditor/status/1302585628178051075"
                            },
                            {
                                "type": "text",
                                "text": " Many of the features listed there should be implementable via multi-layer text or a simple extension of the idea."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "type": "message",
        "text": "The concept here of standoff annotations is similar to what I've been improving in Zep, with its 'RangeMarkers' as I call them.  Originally these were for annotating source code with compile errors:",
        "files": [
            {
                "id": "F01A718A74J",
                "created": 1599467016,
                "timestamp": 1599467016,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UUQ2EQW21",
                "editable": false,
                "size": 141475,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01A718A74J/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01A718A74J/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A718A74J-7dd7a2fc1f/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A718A74J-7dd7a2fc1f/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A718A74J-7dd7a2fc1f/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 71,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A718A74J-7dd7a2fc1f/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 94,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A718A74J-7dd7a2fc1f/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A718A74J-7dd7a2fc1f/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 141,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A718A74J-7dd7a2fc1f/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 157,
                "original_w": 861,
                "original_h": 169,
                "thumb_tiny": "AwAJADCoAd/FPwc8oP1ph++aWgEx2D/coOO4Apv8JoFA2wJAP3FpDyegFDUhoJuf/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UUQ2EQW21/F01A718A74J/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01A718A74J-63e33723b7",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ULt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The concept here of standoff annotations is similar to what I've been improving in Zep, with its 'RangeMarkers' as I call them.  Originally these were for annotating source code with compile errors:"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UUQ2EQW21",
        "display_as_bot": false,
        "ts": "1599467018.178800",
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "e044112b-c6ca-4d0f-a4d8-5ed68ea36892",
        "type": "message",
        "text": "The range marker is locked to the text so that edits above/below and undo/redo will keep it consistently in the same place.  This one has an associated mark in the number column, and a tooltip.  But I have several different kinds of range marker, including simple underlines, bounding boxes around text, etc.",
        "user": "UUQ2EQW21",
        "ts": "1599467060.179300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1599467160.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1FNWz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The range marker is locked to the text so that edits above/below and undo/redo will keep it consistently in the same place.  This one has an associated mark in the number column, and a tooltip.  But I have several different kinds of range marker, including simple underlines, bounding boxes around text, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "type": "message",
        "text": "My markers can also introduce widgets into the text, such as this color swatch; in which case the text flows around them and they are effectively invisible to edit operations on the text.",
        "files": [
            {
                "id": "F01A77HTCSX",
                "created": 1599467261,
                "timestamp": 1599467261,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UUQ2EQW21",
                "editable": false,
                "size": 7538,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01A77HTCSX/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01A77HTCSX/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A77HTCSX-e927a24d54/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A77HTCSX-e927a24d54/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A77HTCSX-e927a24d54/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 138,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A77HTCSX-e927a24d54/image_160.png",
                "original_w": 469,
                "original_h": 180,
                "thumb_tiny": "AwASADCm3U/WkwMdRSt1b60mF9T+VAiSWJEYBZVcEZyKiIx3B+lLhfU/lRhfU/lQMSinYT+8fyppxng5oAc3U/Wm0rfeP1pKACiiigAooooA/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UUQ2EQW21/F01A77HTCSX/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01A77HTCSX-bca09a7522",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yqIEZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My markers can also introduce widgets into the text, such as this color swatch; in which case the text flows around them and they are effectively invisible to edit operations on the text."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UUQ2EQW21",
        "display_as_bot": false,
        "ts": "1599467300.179600",
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "1bcfc38c-58b0-47ce-be9e-78126adbda62",
        "type": "message",
        "text": "Like the standoff annotations, markers also overlap; but it is a work item to make that visibly clearer!",
        "user": "UUQ2EQW21",
        "ts": "1599467328.180000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E=yri",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Like the standoff annotations, markers also overlap; but it is a work item to make that visibly clearer!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "ed306d4f-1825-4755-94a1-d1534eae9b2c",
        "type": "message",
        "text": "There are 2 paths forward from this point:\n\u2022 Have shader-specific parsers automatically inject markers at the right point (like compile errors, or color pickers on color variables)\n\u2022 Add additional annotation information to the marker other than the tooltip.",
        "user": "UUQ2EQW21",
        "ts": "1599467481.180200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uZB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are 2 paths forward from this point:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Have shader-specific parsers automatically inject markers at the right point (like compile errors, or color pickers on color variables)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Add additional annotation information to the marker other than the tooltip."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3"
    },
    {
        "client_msg_id": "7025cec7-dd1c-4e37-8435-87266cf024e1",
        "type": "message",
        "text": "The second part is where things get interesting, and where the layer system would help a lot.  For example, if the compile error was on a layer, I could choose to show the error layer, effectively embedding all compile errors inside the text.\nMy first priority is to get easy edit widgets like the color picker to work well, but I'm spending some brain power at the moment trying to figure out how to get a layer system that works well into the editor....",
        "user": "UUQ2EQW21",
        "ts": "1599467598.180400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fz1Jq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The second part is where things get interesting, and where the layer system would help a lot.  For example, if the compile error was on a layer, I could choose to show the error layer, effectively embedding all compile errors inside the text.\nMy first priority is to get easy edit widgets like the color picker to work well, but I'm spending some brain power at the moment trying to figure out how to get a layer system that works well into the editor...."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598502207.080100",
        "parent_user_id": "UG0EL18H3",
        "reactions": [
            {
                "name": "star-struck",
                "users": [
                    "UG0EL18H3",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    }
]