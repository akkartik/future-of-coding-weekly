[
    {
        "client_msg_id": "52e26948-e1ce-4e16-87da-e7dc50d5e84b",
        "type": "message",
        "text": "<@UK3LH8CF5> the reference to idealized commit logs is really interesting. I\u2019ve also been exploring a tool that uses dynamic program slicing for program comprehension (<https://github.com/willcrichton/inliner>), although it\u2019s a little more general in that it uses several source-to-source compiler techniques for simplifying programs, not just dead code elimination. The idea of using cumulative tests to construct diffs between slices is pretty cool, haven\u2019t thought of that before.",
        "user": "UFB8STN7K",
        "ts": "1600990223.007500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "willcrichton/inliner",
                "title_link": "https://github.com/willcrichton/inliner",
                "text": "Programmable, human-readable inlining of Python code - willcrichton/inliner",
                "fallback": "GitHub: willcrichton/inliner",
                "thumb_url": "https://avatars3.githubusercontent.com/u/663326?s=400&v=4",
                "from_url": "https://github.com/willcrichton/inliner",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/willcrichton/inliner"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Akn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " the reference to idealized commit logs is really interesting. I\u2019ve also been exploring a tool that uses dynamic program slicing for program comprehension ("
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/willcrichton/inliner"
                            },
                            {
                                "type": "text",
                                "text": "), although it\u2019s a little more general in that it uses several source-to-source compiler techniques for simplifying programs, not just dead code elimination. The idea of using cumulative tests to construct diffs between slices is pretty cool, haven\u2019t thought of that before."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600909562.010100",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "cd775dfe-61d1-4223-9191-4babd33b6539",
        "type": "message",
        "text": "Looks awesome <@UFB8STN7K> ! That is the kind of thing I'm aiming to support in my language. But ideally it should take like 10 lines of code and be something you can just write on the fly. :)",
        "user": "UK3LH8CF5",
        "ts": "1600990758.007800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1600990996.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nKu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks awesome "
                            },
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " ! That is the kind of thing I'm aiming to support in my language. But ideally it should take like 10 lines of code and be something you can just write on the fly. :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600909562.010100",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "4d8ff529-f840-4983-9a57-2b0086e4df21",
        "type": "message",
        "text": "<@UK3LH8CF5> as in a goal of your language is to support high-level program transformations? Do you have an example?",
        "user": "UFB8STN7K",
        "ts": "1600992863.008100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LslW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " as in a goal of your language is to support high-level program transformations? Do you have an example?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600909562.010100",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "532fea6d-a2bb-4b85-93bf-96bd280bcf1d",
        "type": "message",
        "text": "I've been thinking lately about how our minds have infinite levels of conceptual hierarchy, but our tools are inevitably limited to some finite number. That discrepancy inevitably leads to loss of information and entropy.",
        "user": "UCUSW7WVD",
        "ts": "1600994019.008400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qLywF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking lately about how our minds have infinite levels of conceptual hierarchy, but our tools are inevitably limited to some finite number. That discrepancy inevitably leads to loss of information and entropy."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600909562.010100",
        "parent_user_id": "UFB8STN7K",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UK3LH8CF5"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e018b066-e980-44c7-8bbe-772f64226547",
        "type": "message",
        "text": "I talk a bit about the idea at the end of my talk here. <https://youtu.be/9fhnJpCgtUw|https://youtu.be/9fhnJpCgtUw> I've got a prototype I'm working on. But only so much free time to do it. \n\nBasically the idea is to base the semantics on term rewriting. So the whole language is just data transformation. Then you can have a notion of meta-execution which is rules that match on the execution data. So you can write a rule that just says, tell me the current expression, what it transforms into, and which rule and clause matched that caused that transformation. \n\nIn my prototypes that means I can make a stepping debugger in 3-5 lines of code. And then a time travel debugger in only a few more. Should soon be able to do what we are talking about above as well. \n\nBasically in order to program without a blindfold we need access to the unfolding of the execution of our programs, so why not let it be data that we can match on, query on, etc?",
        "user": "UK3LH8CF5",
        "ts": "1600997792.008700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "\"Meander: Declarative Explorations at the Limits of FP\" by Jimmy Miller",
                "title_link": "https://youtu.be/9fhnJpCgtUw",
                "author_name": "Strange Loop",
                "author_link": "https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https://i.ytimg.com/vi/9fhnJpCgtUw/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Meander: Declarative Explorations at the Limits of FP\" by Jimmy Miller",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/9fhnJpCgtUw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/9fhnJpCgtUw",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/9fhnJpCgtUw"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "apW2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I talk a bit about the idea at the end of my talk here. "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/9fhnJpCgtUw",
                                "text": "https://youtu.be/9fhnJpCgtUw"
                            },
                            {
                                "type": "text",
                                "text": " I've got a prototype I'm working on. But only so much free time to do it. \n\nBasically the idea is to base the semantics on term rewriting. So the whole language is just data transformation. Then you can have a notion of meta-execution which is rules that match on the execution data. So you can write a rule that just says, tell me the current expression, what it transforms into, and which rule and clause matched that caused that transformation. \n\nIn my prototypes that means I can make a stepping debugger in 3-5 lines of code. And then a time travel debugger in only a few more. Should soon be able to do what we are talking about above as well. \n\nBasically in order to program without a blindfold we need access to the unfolding of the execution of our programs, so why not let it be data that we can match on, query on, etc?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600909562.010100",
        "parent_user_id": "UFB8STN7K",
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "U85HCL7JP"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4440d8e7-9ef8-4458-a666-24c9a40a0360",
        "type": "message",
        "text": "I\u2019m a data scientist by background, and a lot of this PL stuff is new to me. However, I think data science is an interesting use case for innovation in PL. The most common use cases are a bit more bounded and well defined, the persona base ideal (people who just wanna do data stuff, not program), and there\u2019s a non-PL success here already (Excel!).\n\n\u2022 Are there others that are motivated by this data science use case / working on it? I know Instadeq is here, I\u2019m sure there are many others. I\u2019ve chatted with Erik Blakke about his Ultorg system.\n\u2022 Why haven\u2019t we seen a good live programming language for data science? It\u2019s so ideal for it! Everything from sampling / streaming in data results to keep things live to the fact that data analysts / scientists want to move / iterate at the speed of thought, and most of data science is this type of curiosity driven stumbling around the data-dark",
        "user": "UAJKEBGP8",
        "ts": "1601046462.012500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DKOS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m a data scientist by background, and a lot of this PL stuff is new to me. However, I think data science is an interesting use case for innovation in PL. The most common use cases are a bit more bounded and well defined, the persona base ideal (people who just wanna do data stuff, not program), and there\u2019s a non-PL success here already (Excel!).\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Are there others that are motivated by this data science use case / working on it? I know Instadeq is here, I\u2019m sure there are many others. I\u2019ve chatted with Erik Blakke about his Ultorg system."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Why haven\u2019t we seen a good live programming language for data science? It\u2019s so ideal for it! Everything from sampling / streaming in data results to keep things live to the fact that data analysts / scientists want to move / iterate at the speed of thought, and most of data science is this type of curiosity driven stumbling around the data-dark"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "reply_count": 46,
        "reply_users_count": 11,
        "latest_reply": "1601275682.048400",
        "reply_users": [
            "UBN9AFS0N",
            "U01A0KANUUU",
            "UAJKEBGP8",
            "UMH5FAW2Y",
            "U019CPED6T1",
            "UUQLAMX4H",
            "U013ZLJARC7",
            "UJBAJNFLK",
            "U01A1C2K8MP",
            "UR482RFPY",
            "UJ6LDMMN0"
        ],
        "subscribed": true,
        "last_read": "1601275682.048400",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "U01A1C2K8MP",
                    "U019CPED6T1"
                ],
                "count": 3
            },
            {
                "name": "cool",
                "users": [
                    "UUB7RA7PF"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UR482RFPY"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0002ad21-6536-4f8e-9add-dc95ab7d9b7c",
        "type": "message",
        "text": "I guess because data science as a field is fairly new and most of the people here are programmers and want to improve the tools they work with, that is, programming languages.",
        "user": "UBN9AFS0N",
        "ts": "1601047413.012700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "78yBT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess because data science as a field is fairly new and most of the people here are programmers and want to improve the tools they work with, that is, programming languages."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "304e229d-44ab-4e38-8901-feffdb0d3442",
        "type": "message",
        "text": "for example R  which is used a lot in data science was created mostly by statisticians",
        "user": "UBN9AFS0N",
        "ts": "1601047513.012900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tnh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for example R  which is used a lot in data science was created mostly by statisticians"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "28eb011d-0623-44c6-a85a-28da25a7c047",
        "type": "message",
        "text": "Have you looked at tools like Roassal?",
        "user": "U01A0KANUUU",
        "ts": "1601048407.013100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YPE8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you looked at tools like Roassal?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "427f0212-726b-4c3d-bef9-7200d87b632b",
        "type": "message",
        "text": "eh not sure I agree. Data science was the first application of programming to begin with! In the broadest sense, initially it was more simple computations",
        "user": "UAJKEBGP8",
        "ts": "1601048414.013300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kzz/j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "eh not sure I agree. Data science was the first application of programming to begin with! In the broadest sense, initially it was more simple computations"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01A1C2K8MP",
                    "UR482RFPY"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "33a48116-fa79-4043-94cb-2debf40e847e",
        "type": "message",
        "text": "R is definitely interesting. Super wonky language but very friendly for statisticians",
        "user": "UAJKEBGP8",
        "ts": "1601048428.013500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ItFA+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "R is definitely interesting. Super wonky language but very friendly for statisticians"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "b1c36430-57f1-4c30-9188-e057604c2ba2",
        "type": "message",
        "text": "at my last job we had to add an R learning track b/c Python was too much for most people (too many CS-y concepts to learn)",
        "user": "UAJKEBGP8",
        "ts": "1601048445.013700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xrz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "at my last job we had to add an R learning track b/c Python was too much for most people (too many CS-y concepts to learn)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "ff8683f5-b59d-446f-b286-e32dd5cf2116",
        "type": "message",
        "text": "with R, you just install RStudio",
        "user": "UAJKEBGP8",
        "ts": "1601048452.013900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hxx0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "with R, you just install RStudio"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "76454f31-a2a7-4015-b451-65afd79d89a6",
        "type": "message",
        "text": "I'm a data analyst working primarily in RStudio, and I'd argue that the R/RStudio/Tidyverse stack is already a very good live programming environment for data work. R's wonkiness as a language is only an issue if you're coming from a more traditional PL.  I'm also a huge fan of Observable, and with the recent release of <https://observablehq.com/@uwdata/introducing-arquero|Arquero>, Observable and JS is a viable platform for lots of data work.",
        "user": "UMH5FAW2Y",
        "ts": "1601049993.014100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Introducing Arquero",
                "title_link": "https://observablehq.com/@uwdata/introducing-arquero",
                "text": "An Observable notebook by UW Interactive Data Lab.",
                "fallback": "Introducing Arquero",
                "image_url": "https://static.observableusercontent.com/thumbnail/5cca402ade4c091211239210a626216cc34dc1c135a55ba802af6313a9d1a1f1.jpg",
                "ts": 1599513144,
                "from_url": "https://observablehq.com/@uwdata/introducing-arquero",
                "image_width": 400,
                "image_height": 250,
                "image_bytes": 9952,
                "service_icon": "https://static.observablehq.com/favicon-512.e85350a27dfadeea7c7c78c797c24419525df5579de174d86d258c40ae57473a.png",
                "service_name": "observablehq.com",
                "id": 1,
                "original_url": "https://observablehq.com/@uwdata/introducing-arquero"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CiMo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm a data analyst working primarily in RStudio, and I'd argue that the R/RStudio/Tidyverse stack is already a very good live programming environment for data work. R's wonkiness as a language is only an issue if you're coming from a more traditional PL.  I'm also a huge fan of Observable, and with the recent release of "
                            },
                            {
                                "type": "link",
                                "url": "https://observablehq.com/@uwdata/introducing-arquero",
                                "text": "Arquero"
                            },
                            {
                                "type": "text",
                                "text": ", Observable and JS is a viable platform for lots of data work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "ee3e7a67-1c64-40ee-a4d4-899bbf493b01",
        "type": "message",
        "text": "I love the premise of Observable but I personally really struggle to use JS (even their dialect of JS). I need to spend more time here",
        "user": "UAJKEBGP8",
        "ts": "1601050085.014400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kal5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love the premise of Observable but I personally really struggle to use JS (even their dialect of JS). I need to spend more time here"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "4b7d7200-28c8-434a-9d3f-520e1bc40162",
        "type": "message",
        "text": "Arquero looks neat\u2026",
        "user": "UAJKEBGP8",
        "ts": "1601050101.014600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w43f7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Arquero looks neat\u2026"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "c2121bb2-434b-47c4-80b1-e93cc448b78f",
        "type": "message",
        "text": "Yeah, Arquero is heavily influenced by R's dplyr library, which is like 70% of why I love using R, and it seems like \"tidy\" data is catching on in JS.  But both Observable and RStudio can be used without learning any command line (library installation is in-language, Observable punts on git altogether).  I think it's a really interesting question which CS concepts you need to know to be an effective data scientist (broadly defined).  My career might have gone way different if I had been able to install a Python library like 10 years ago when I starting teaching myself how to code.",
        "user": "UMH5FAW2Y",
        "ts": "1601050661.014800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3kXAq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, Arquero is heavily influenced by R's dplyr library, which is like 70% of why I love using R, and it seems like \"tidy\" data is catching on in JS.  But both Observable and RStudio can be used without learning any command line (library installation is in-language, Observable punts on git altogether).  I think it's a really interesting question which CS concepts you need to know to be an effective data scientist (broadly defined).  My career might have gone way different if I had been able to install a Python library like 10 years ago when I starting teaching myself how to code."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "204166a9-0f0b-4b94-be66-20d525a29b5b",
        "type": "message",
        "text": "interesting, what do you think would have been different about your career (hypothesizing) if you had picked up Python / grinded through the CS stuff?",
        "user": "UAJKEBGP8",
        "ts": "1601051421.015000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lUdI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "interesting, what do you think would have been different about your career (hypothesizing) if you had picked up Python / grinded through the CS stuff?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "586d7f16-c7c6-425c-b4dd-fb9353c7fe68",
        "type": "message",
        "text": "from my perspective, the \u201cCS stuff\u201d you need to know should mirror the conceptual structures in your head",
        "user": "UAJKEBGP8",
        "ts": "1601051434.015200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tGAO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from my perspective, the \u201cCS stuff\u201d you need to know should mirror the conceptual structures in your head"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "aca1d69d-609f-4269-b7f2-7849e242e055",
        "type": "message",
        "text": "tables / spreadsheets / csvs / databases are all a format, a CS concept, and a mental representation",
        "user": "UAJKEBGP8",
        "ts": "1601051456.015400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DKrc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "tables / spreadsheets / csvs / databases are all a format, a CS concept, and a mental representation"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "8440047e-d500-4456-a2af-9a21601d66db",
        "type": "message",
        "text": "In R for instance, data frames are lists of columns, but when I'm wrangling data, I don't actually think of them as such, they're just data frames.  Likewise for the non-standard evaluation that makes the syntax more user friendly that I still only vaguely understand.  I don't think loops are a particularly complicated idea, but I also don't know that loops necessary to do data work.  Excel doesn't have named functions and didn't have the concept of a table until a few years ago.  Even the different between in-memory and on-disk data feels like accidental complexity from the perspective of a data work. But I mostly mean things like git, docker, and <https://pg.ucsd.edu/command-line-bullshittery.htm|command line bullshittery>.",
        "user": "UMH5FAW2Y",
        "ts": "1601052207.015600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lkeh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In R for instance, data frames are lists of columns, but when I'm wrangling data, I don't actually think of them as such, they're just data frames.  Likewise for the non-standard evaluation that makes the syntax more user friendly that I still only vaguely understand.  I don't think loops are a particularly complicated idea, but I also don't know that loops necessary to do data work.  Excel doesn't have named functions and didn't have the concept of a table until a few years ago.  Even the different between in-memory and on-disk data feels like accidental complexity from the perspective of a data work. But I mostly mean things like git, docker, and "
                            },
                            {
                                "type": "link",
                                "url": "https://pg.ucsd.edu/command-line-bullshittery.htm",
                                "text": "command line bullshittery"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U01A1C2K8MP"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "40152588-39c6-4509-8e0a-7d55c5165eb0",
        "type": "message",
        "text": "right that makes sense",
        "user": "UAJKEBGP8",
        "ts": "1601052391.016000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oFl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "right that makes sense"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "2bb31325-711d-4083-b1a3-0c5264369d5a",
        "type": "message",
        "text": "<@UCUSW7WVD> can you expand a bit more on this:\n&gt; I've been thinking lately about how our minds have infinite levels of conceptual hierarchy, but our tools are inevitably limited to some finite number. That discrepancy inevitably leads to loss of information and entropy.",
        "user": "U85HCL7JP",
        "ts": "1601070240.016700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4c9qU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " can you expand a bit more on this:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking lately about how our minds have infinite levels of conceptual hierarchy, but our tools are inevitably limited to some finite number. That discrepancy inevitably leads to loss of information and entropy."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1600909562.010100",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "eb0082d5-77fe-42a5-9210-a5342e17bd8d",
        "type": "message",
        "text": "Mildly related, I actually have a little blog where I solve data science problems with \"esoteric\" languages. \n\nIt has mostly turned into just lesser known languages. But I am inspired by the idea of a top to bottom language built with data science at it's heart.",
        "user": "U019CPED6T1",
        "ts": "1601071014.016900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Krvh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mildly related, I actually have a little blog where I solve data science problems with \"esoteric\" languages. \n\nIt has mostly turned into just lesser known languages. But I am inspired by the idea of a top to bottom language built with data science at it's heart."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UR482RFPY"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "13f8e932-d674-425f-b816-0fbf629c2341",
        "type": "message",
        "text": "woah woah woah, I NEED to read this :slightly_smiling_face:",
        "user": "UAJKEBGP8",
        "ts": "1601071152.017200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "87c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "woah woah woah, I NEED to read this "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "24785018-af40-444f-9e5e-e106748f2000",
        "type": "message",
        "text": "I\u2019ve been thinking of starting a data tools / languages focused blog",
        "user": "UAJKEBGP8",
        "ts": "1601071168.017400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kjrI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve been thinking of starting a data tools / languages focused blog"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601046462.012500",
        "parent_user_id": "UAJKEBGP8"
    }
]