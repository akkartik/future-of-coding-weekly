[
    {
        "client_msg_id": "3354fa13-10c1-49fe-90b1-929dc31837bc",
        "type": "message",
        "text": "I don't think of Dynamicland as a 'programming' system at all. From their home page:\n&gt;  Our mission is to incubate a *humane dynamic medium*\n&gt;  whose *full power* is accessible to all people.\nSo what is a medium? It is an external representation of ideas and thought.\n\n_Writing_ is one medium, but it took ages after its inception to achieve the power and ubiquity for humans. Successively evolved, refined and morphed via other overlapping mediums such as _algebra, (bar|line) graphs_, _architecture diagrams_. The printing press had a big impact on the ubiquity of writing.\n\nDynamic screens are another kind of medium - there is overlap with _writing_ (so we got a lot of stuff for free) but _hypermedia_ and other interactive interfaces let us represent and navigate ideas in new ways, which we couldn't do with dead tree books.\n\nDynamicland is seeking a live 3D physical medium. We don't quite know how to represent ideas in this medium _yet._ I think this is what they are exploring. The programming part is a means to an end - to animate the physical - but the deeper question is how do you represent, interact with and understand ideas and thoughts in such a medium? What kinds of ideas are even better represented in such a medium? Might also take ages to discover, refine and evolve to something ubiquitous, but in this sense I think they are doing something nobody else is doing.",
        "user": "U8A5MS6R1",
        "ts": "1585351690.009000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1585351754.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9n6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think of Dynamicland as a 'programming' system at all. From their home page:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Our mission is to incubate a "
                            },
                            {
                                "type": "text",
                                "text": "humane dynamic medium",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n whose "
                            },
                            {
                                "type": "text",
                                "text": "full power",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is accessible to all people."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSo what is a medium? It is an external representation of ideas and thought.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Writing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is one medium, but it took ages after its inception to achieve the power and ubiquity for humans. Successively evolved, refined and morphed via other overlapping mediums such as "
                            },
                            {
                                "type": "text",
                                "text": "algebra, (bar|line) graphs",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "architecture diagrams",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The printing press had a big impact on the ubiquity of writing.\n\nDynamic screens are another kind of medium - there is overlap with "
                            },
                            {
                                "type": "text",
                                "text": "writing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (so we got a lot of stuff for free) but "
                            },
                            {
                                "type": "text",
                                "text": "hypermedia",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and other interactive interfaces let us represent and navigate ideas in new ways, which we couldn't do with dead tree books.\n\nDynamicland is seeking a live 3D physical medium. We don't quite know how to represent ideas in this medium "
                            },
                            {
                                "type": "text",
                                "text": "yet.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I think this is what they are exploring. The programming part is a means to an end - to animate the physical - but the deeper question is how do you represent, interact with and understand ideas and thoughts in such a medium? What kinds of ideas are even better represented in such a medium? Might also take ages to discover, refine and evolve to something ubiquitous, but in this sense I think they are doing something nobody else is doing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584957823.007100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJN1TAYEQ",
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "UCKRZS3DZ"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "2a599cf7-91c7-4157-beb3-9bec6b03f9fe",
        "type": "message",
        "text": "In general, I think being dismissive of any project is antithetical to this group's goals. After all, the most likely outcome is that _all_ our projects will be ignored by humanity. The whole point of what we're doing is look amidst the rubble of what humanity has cast aside in hopes of finding _one_ new synthesis with sticking power. Dismissing projects or causing others to dismiss projects has only downside in that context.",
        "user": "UCUSW7WVD",
        "ts": "1585351988.009500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TW/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In general, I think being dismissive of any project is antithetical to this group's goals. After all, the most likely outcome is that "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " our projects will be ignored by humanity. The whole point of what we're doing is look amidst the rubble of what humanity has cast aside in hopes of finding "
                            },
                            {
                                "type": "text",
                                "text": "one",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " new synthesis with sticking power. Dismissing projects or causing others to dismiss projects has only downside in that context."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584957823.007100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1",
                    "U5STGTB3J",
                    "UJBAJNFLK",
                    "UCKRZS3DZ",
                    "UHWC9PXBL"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "48483f38-7a08-459c-98e6-097656ebb7d6",
        "type": "message",
        "text": "I recommend Victor's talk The Humane Representation of Thought, if you haven't already seen it: <https://vimeo.com/115154289>",
        "user": "U8A5MS6R1",
        "ts": "1585353056.009900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1585353073.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ybGf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I recommend Victor's talk The Humane Representation of Thought, if you haven't already seen it: "
                            },
                            {
                                "type": "link",
                                "url": "https://vimeo.com/115154289"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584957823.007100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "497b4cf3-9b92-4608-9719-a6cd76253665",
        "type": "message",
        "text": "The worst thing that can happen to a project here in this forum is not to be criticized, but to be ignored. Out of informed criticism, something can be improved, but without criticism, there is no recognition, and that is the worst fate.\n\nI cannot comment on Dynamicland's goals. I visited there - have you? - and thoroughly inspected their technology stack. The system is extremely cumbersome, and mostly invisible. Their key interaction mechanism consists of colored dots on the border of sheet of code, that basically form a unique barcode for each program fragment, which is stored in the computer. That you can bring a piece of paper containing a filter or sort module next to another paper and the computer makes the connection seems magical, but when you diagram it on paper what is happening, you have the UNIX pipe operator working on an output of another function. Their experiments with editing on a projected keyboard showed it not to be a very handy way to edit. Research projects don't always work out so hot. DynamicLand ver 1 is a bit of a disaster, and like a mouse exploring a maze there isn't much cheese there. I think the VR-based programming world will be a much easier domain in which to build a physical interactive medium, as the single camera view is quite limiting in the DynamicLand world. If you remember the great Mario 64 game on the Nintendo 64, there was a following camera that occasionally had to be hand-tweaked by the player to fix the viewpoint. A static camera presents so many rigidities.  It was a worthwhile experiment. It just doesn't work very well, and I don't want people who haven't had a chance to visit the site in Oakland to think they are missing something amazing. Bret Victor has made some great prototypes of programming aids, and I am sure i would like the guy. I am sure version 2 will be much better.",
        "user": "UEQ6M68H0",
        "ts": "1585355183.010300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1585355920.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iV7Vm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The worst thing that can happen to a project here in this forum is not to be criticized, but to be ignored. Out of informed criticism, something can be improved, but without criticism, there is no recognition, and that is the worst fate.\n\nI cannot comment on Dynamicland's goals. I visited there - have you? - and thoroughly inspected their technology stack. The system is extremely cumbersome, and mostly invisible. Their key interaction mechanism consists of colored dots on the border of sheet of code, that basically form a unique barcode for each program fragment, which is stored in the computer. That you can bring a piece of paper containing a filter or sort module next to another paper and the computer makes the connection seems magical, but when you diagram it on paper what is happening, you have the UNIX pipe operator working on an output of another function. Their experiments with editing on a projected keyboard showed it not to be a very handy way to edit. Research projects don't always work out so hot. DynamicLand ver 1 is a bit of a disaster, and like a mouse exploring a maze there isn't much cheese there. I think the VR-based programming world will be a much easier domain in which to build a physical interactive medium, as the single camera view is quite limiting in the DynamicLand world. If you remember the great Mario 64 game on the Nintendo 64, there was a following camera that occasionally had to be hand-tweaked by the player to fix the viewpoint. A static camera presents so many rigidities.  It was a worthwhile experiment. It just doesn't work very well, and I don't want people who haven't had a chance to visit the site in Oakland to think they are missing something amazing. Bret Victor has made some great prototypes of programming aids, and I am sure i would like the guy. I am sure version 2 will be much better."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584957823.007100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "1c7020f2-a3db-42ef-a7b7-5e44dc273592",
        "type": "message",
        "text": "<https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559>",
        "user": "UF1ATC4RF",
        "ts": "1585387790.010700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Medium",
                "title": "A visual debugger for Jupyter",
                "title_link": "https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559",
                "text": "Most of the progress made in software projects comes from incrementalism. The ability to quickly see the outcome of an execution and\u2026",
                "fallback": "Medium: A visual debugger for Jupyter",
                "image_url": "https://miro.medium.com/max/1200/1*Trh8fKqP0c_4Vvnzmu5SvA.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "8 min read",
                        "short": true
                    }
                ],
                "ts": 1585213964,
                "from_url": "https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559",
                "image_width": 389,
                "image_height": 250,
                "image_bytes": 96961,
                "service_icon": "https://cdn-images-1.medium.com/fit/c/152/152/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 1,
                "original_url": "https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zDeQk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://blog.jupyter.org/a-visual-debugger-for-jupyter-914e61716559"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "636375a6-b85e-4519-b4e1-c474da52eee0",
        "type": "message",
        "text": "I've made a mess trying to respond to this on my touch screen phone, and realized I didn't even properly answer some of the questions.\n\nSo now I've got slack on my desktop, and better notes, and I'm just going to try this again while sitting and focusing better.\n\nI'll probably delete this reply too, just before I post my responses.",
        "user": "UAVCC2X70",
        "ts": "1585410542.011500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1585410639.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "05R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've made a mess trying to respond to this on my touch screen phone, and realized I didn't even properly answer some of the questions.\n\nSo now I've got slack on my desktop, and better notes, and I'm just going to try this again while sitting and focusing better.\n\nI'll probably delete this reply too, just before I post my responses."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584235196.324400",
        "parent_user_id": "U01003H81UM"
    },
    {
        "client_msg_id": "88025350-7a6b-47a0-8577-67fc569074bb",
        "type": "message",
        "text": "this seems relevant: <https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/acrobat-17.pdf>",
        "user": "UQPHR6Y3S",
        "ts": "1585412692.011900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S+Jj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this seems relevant: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/acrobat-17.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584042706.253500",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "fb2fc157-5a38-45f8-8b5a-649ad0958102",
        "type": "message",
        "text": "<https://www.dropbox.com/s/ihrg4fg3f95kakq/tyranny-apply-eval-convivial-workshop.pdf?dl=0>\n\n&gt; *Can Programmers Escape the Gentle Tyranny of call/return?*\n&gt; A paper from Marcel Weiher arguing against the prevalence of the call/return pattern and for replacing it with something more general. ",
        "user": "U8A5MS6R1",
        "ts": "1585420887.013400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ak7jU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.dropbox.com/s/ihrg4fg3f95kakq/tyranny-apply-eval-convivial-workshop.pdf?dl=0"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can Programmers Escape the Gentle Tyranny of call/return?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nA paper from Marcel Weiher arguing against the prevalence of the call/return pattern and for replacing it with something more general. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585420887.013400",
        "reply_count": 60,
        "reply_users_count": 9,
        "latest_reply": "1585734121.074900",
        "reply_users": [
            "UEQ6M68H0",
            "UBN9AFS0N",
            "UCGAK10LS",
            "UCUSW7WVD",
            "UA14TGLTC",
            "UHDQ62M4P",
            "UC2A2ARPT",
            "U8A5MS6R1",
            "UDQBTJ211"
        ],
        "subscribed": true,
        "last_read": "1585734121.074900",
        "reactions": [
            {
                "name": "the_horns::skin-tone-3",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            },
            {
                "name": "thinking_face",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UCKRZS3DZ",
                    "UDKTZSD6H"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "text": "Lately, I've been having fun reading about Jeff Raskin, here is an interview with his son about _The Humane Environment (THE),_ it's kind of a replacement for an Operating System <https://web.archive.org/web/20090416094850/http://acm.org/ubiquity/interviews/v5i21_aza.html>",
        "files": [
            {
                "id": "F010LKJRGHG",
                "created": 1585428251,
                "timestamp": 1585428251,
                "name": "Untitled",
                "title": "Untitled",
                "mimetype": "text/plain",
                "filetype": "text",
                "pretty_type": "Plain Text",
                "user": "U85HCL7JP",
                "editable": true,
                "size": 2198,
                "mode": "snippet",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F010LKJRGHG/untitled",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F010LKJRGHG/download/untitled",
                "permalink": "https://futureofcoding.slack.com/files/U85HCL7JP/F010LKJRGHG/untitled",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F010LKJRGHG-326ec6efd2",
                "edit_link": "https://futureofcoding.slack.com/files/U85HCL7JP/F010LKJRGHG/untitled/edit",
                "preview": "AZA: The fundamental idea that differentiates THE from everything else is that the world consists of exactly two distinct objects: Content and operations on that content. Things like text, images, and movies are content. Things like printing, converting to MP3, and translating to Japanese are operations. When you wish to complete a particular task you select the set of content you wish to operate upon and then issue the appropriate command to invoke the operation. If you have text selected, you can do things like move, copy, make italics, or send as e-mail. If you have an image selected, you can change its contrast, remove scratches, or send it as e-mail. You can use any command on any content at anytime. If you try to motion blur text, the system is smart enough to realize that it should be treating the text as an image and does the conversion automatically. Thus, we have done away with the idea of \"applications\" and replaced them with a more powerful and more humane paradigm.\n\nUBIQUITY: Explain that a littl...",
                "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>AZA: The fundamental idea that differentiates THE from everything else is that the world consists of exactly two distinct objects: Content and operations on that content. Things like text, images, and movies are content. Things like printing, converting to MP3, and translating to Japanese are operations. When you wish to complete a particular task you select the set of content you wish to operate upon and then issue the appropriate command to invoke the operation. If you have text selected, you can do things like move, copy, make italics, or send as e-mail. If you have an image selected, you can change its contrast, remove scratches, or send it as e-mail. You can use any command on any content at anytime. If you try to motion blur text, the system is smart enough to realize that it should be treating the text as an image and does the conversion automatically. Thus, we have done away with the idea of &quot;applications&quot; and replaced them with a more powerful and more humane paradigm.</pre></div>\n<div><pre></pre></div>\n<div><pre>UBIQUITY: Explain that a littl...</pre></div>\n</div>\n</div>\n",
                "lines": 5,
                "lines_more": 2,
                "preview_is_truncated": true,
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Qvx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lately, I've been having fun reading about Jeff Raskin, here is an interview with his son about "
                            },
                            {
                                "type": "text",
                                "text": "The Humane Environment (THE), ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "it's kind of a replacement for an Operating System"
                            },
                            {
                                "type": "text",
                                "text": " ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https://web.archive.org/web/20090416094850/http://acm.org/ubiquity/interviews/v5i21_aza.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U85HCL7JP",
        "display_as_bot": false,
        "ts": "1585428256.013700",
        "client_msg_id": "915b9549-e238-4e40-9619-7c4816ee0816",
        "thread_ts": "1585428256.013700",
        "reply_count": 5,
        "reply_users_count": 5,
        "latest_reply": "1586054205.137900",
        "reply_users": [
            "UT60XSVCN",
            "UJN1TAYEQ",
            "UA14TGLTC",
            "UHWC9PXBL",
            "U85HCL7JP"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "7d957a85-de23-449c-b57e-9b2575d6b4c2",
        "type": "message",
        "text": "You can actually use ubiquity: <https://gchristensen.github.io/ubiquitywe/|https://gchristensen.github.io/ubiquitywe/>\nIt's more than a bit underwhelming compared to their vision, but it's still a big improvement over a normal browser, especially if you know js and can write your own snippets. (I use it myself.)",
        "user": "UT60XSVCN",
        "ts": "1585428965.014100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UT60XSVCN",
            "ts": "1585428983.000000"
        },
        "attachments": [
            {
                "service_name": "Ubiquity WebExtension",
                "title": "UbiquityWE",
                "title_link": "https://gchristensen.github.io/ubiquitywe/",
                "text": "A natural language interface for web browsers",
                "fallback": "Ubiquity WebExtension: UbiquityWE",
                "from_url": "https://gchristensen.github.io/ubiquitywe/",
                "service_icon": "https://gchristensen.github.io/favicon.ico",
                "id": 1,
                "original_url": "https://gchristensen.github.io/ubiquitywe/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BFsi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can actually use ubiquity: "
                            },
                            {
                                "type": "link",
                                "url": "https://gchristensen.github.io/ubiquitywe/",
                                "text": "https://gchristensen.github.io/ubiquitywe/"
                            },
                            {
                                "type": "text",
                                "text": "\nIt's more than a bit underwhelming compared to their vision, but it's still a big improvement over a normal browser, especially if you know js and can write your own snippets. (I use it myself.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585428256.013700",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "f5caea91-cb16-4b60-8c78-73a2e444f60f",
        "type": "message",
        "text": "The article is very interesting, and shows a temperature converter as the sample project, where you will have two displays, one of deg F and deg C, and changing either one should update the other. Since i have used that example, i can see that his solution is basically identical to mine; you have an internal model of the temperature, then you have UI widgets that display that value, and dragging the widget updates the internal value which causes the widgets to get updated.\n\nHowever, the title of the workshop, that call/return is some kind of problem is not actually addressed in the article. Call/return (subroutines) are an intrinsic part of all programming, as it effectively allows you to repeat a section of code and only have 1 copy to keep working. The only reason we use subroutines is to save duplicate typing. You can always balloon up your code and have no sub-functions at all, but it would be exponentially larger in length. Almost from the first computer the call/return statement was implemented because it is so useful at constraining code length. It is not a tyrannical issue; it is one of the obvious need for eliminating redundancy which is  one of the top sources of error in software.",
        "user": "UEQ6M68H0",
        "ts": "1585433988.014700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VvCk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The article is very interesting, and shows a temperature converter as the sample project, where you will have two displays, one of deg F and deg C, and changing either one should update the other. Since i have used that example, i can see that his solution is basically identical to mine; you have an internal model of the temperature, then you have UI widgets that display that value, and dragging the widget updates the internal value which causes the widgets to get updated.\n\nHowever, the title of the workshop, that call/return is some kind of problem is not actually addressed in the article. Call/return (subroutines) are an intrinsic part of all programming, as it effectively allows you to repeat a section of code and only have 1 copy to keep working. The only reason we use subroutines is to save duplicate typing. You can always balloon up your code and have no sub-functions at all, but it would be exponentially larger in length. Almost from the first computer the call/return statement was implemented because it is so useful at constraining code length. It is not a tyrannical issue; it is one of the obvious need for eliminating redundancy which is  one of the top sources of error in software."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585420887.013400",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "ULM3U6275"
                ],
                "count": 3
            },
            {
                "name": "-1",
                "users": [
                    "UCGAK10LS",
                    "UC2A2ARPT",
                    "UEU7YT2UR"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "a3a7a3f6-148b-4a0a-a36c-de73318fd970",
        "type": "message",
        "text": "Hi <@UEQ6M68H0> I agree that the route to improvement is critique, if it uses good arguments. The Institutional Problems its solving or to be more precise it is emphasizing is that it brings the computer as a actual physical device into the center of attention. That may seem to many people in our field as something obvious or unimportant but if we took at the meta narrative I think its super important. Much effort has been put into the notion of \"cloud\" for broader society. If you think about typical interaction scenarios of \"cloud\" users I do not see good cases for humane as in IN persona human interaction while collaboration with the computer. I do see this however as a state goal for dynamic land.",
        "user": "UJFN50C00",
        "ts": "1585434147.014900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EwvPc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " I agree that the route to improvement is critique, if it uses good arguments. The Institutional Problems its solving or to be more precise it is emphasizing is that it brings the computer as a actual physical device into the center of attention. That may seem to many people in our field as something obvious or unimportant but if we took at the meta narrative I think its super important. Much effort has been put into the notion of \"cloud\" for broader society. If you think about typical interaction scenarios of \"cloud\" users I do not see good cases for humane as in IN persona human interaction while collaboration with the computer. I do see this however as a state goal for dynamic land."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1584957823.007100",
        "parent_user_id": "UBN9AFS0N"
    }
]