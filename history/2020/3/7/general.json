[
    {
        "client_msg_id": "35646124-6380-4ba5-a80b-e387f64989c3",
        "type": "message",
        "text": "It's true what Edward said about the Linux command line, that it requires a great memory, but that isn't the kind of UI being discussed in the CLUI article. The article  begins by quoting Donald Norman that search (eg, google search) is the new CLI. They go on to describe a UI where you use search to find the command you want, and you use autocomplete, drop-down menus and forms to select subcommands and options. This kind of interface is light years away from memorizing bash commands. I had extensive exposure to these kinds of interfaces in the 90's and early 2000's, and it's great experience to use a complex CLI where you don't have to memorize anything.",
        "user": "UJN1TAYEQ",
        "ts": "1583537099.097700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ydd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's true what Edward said about the Linux command line, that it requires a great memory, but that isn't the kind of UI being discussed in the CLUI article. The article  begins by quoting Donald Norman that search (eg, google search) is the new CLI. They go on to describe a UI where you use search to find the command you want, and you use autocomplete, drop-down menus and forms to select subcommands and options. This kind of interface is light years away from memorizing bash commands. I had extensive exposure to these kinds of interfaces in the 90's and early 2000's, and it's great experience to use a complex CLI where you don't have to memorize anything."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583512067.095400",
        "parent_user_id": "UKDM3GLAJ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UV287BVSA"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2204a1cf-94a3-4a93-ad8d-82ccce2c9a11",
        "type": "message",
        "text": "Hey <@UJ6LDMMN0> just seeing this. Definitely going to use an append only log. I have this feeling that I can design it in a way that doesn't need a vector clock for causal consistency, but I havent thought that through yet. Otherwise, CRDT is implemented as a higher-level concept on top of this database and required the developer to carefully model their data. For example, for good text editing CRDT, you need to model characters as a tree that you traverse depth-first to construct the string. This requires no changes to the underlying database architecture and the CRDT behavior is entirely at the application layer :slightly_smiling_face:",
        "user": "UT9TWSZB5",
        "ts": "1583542997.098000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MxH3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey "
                            },
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " just seeing this. Definitely going to use an append only log. I have this feeling that I can design it in a way that doesn't need a vector clock for causal consistency, but I havent thought that through yet. Otherwise, CRDT is implemented as a higher-level concept on top of this database and required the developer to carefully model their data. For example, for good text editing CRDT, you need to model characters as a tree that you traverse depth-first to construct the string. This requires no changes to the underlying database architecture and the CRDT behavior is entirely at the application layer "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5"
    },
    {
        "client_msg_id": "3021b690-1b03-435b-ab63-49c83c2f753a",
        "type": "message",
        "text": "why not go all the way, and instead of using wimpy google search, which has very little intelligence and uses how many inward links to rank pages which can go completely in the wrong direction, and use Watson to back up your UI? Natural language interfaces are good for low amounts of user input, but in any creative product it would be a hindrance to use a searching based interface. Video editors make tens of thousands of little tweaks, and use $1000 keyboards with jog wheels and tons of dedicated keys to speed it all up. Ultimately the best interface style all depends on how many decisions/actions the user is going to make. Frankly in word processing people loved the old IBM XT keyboard with the 10 function keys on the left. People completely understood those keys did actions, they were in a convenient and special place, and you had little plastic templates for your word processor. People loved it but unfortunately the stupid PC industry standardized on the DEC keyboard which has the function keys way up at the top where nobody can reach them or have muscle memory for them.\n\nThis idea that users are supposed to stumble around their software and ask for help using text queries is really a strange attitude about UI. Why do commands have to have so many subcommands and options?  It is kind of nutty, to use super powerful search engine technology to fix the lack of intuitive workflow and tidy organization of functions. How does one know what is possible in such a system? it is completely undiscoverable, so I say Norman is completely incorrect.  And not only that, naive users have no clue as to how to describe in proper terminology what they are trying to accomplish. So their queries will end badly. The worst systems IMHO are those that present a dark screen with no clue was to what commands or functions are available. That reminds me of a survey where programmers asked which text editor was the easiest and some nerds answered vi and emacs. Yeah, right, people love using LISP for their word processing queries. Yikes.\n\nMS won the OS game by using wizards on top of a complex dialog box tree. if you have enough wizards people don't have to learn where all the functions are buried. In this sense they were compensating for their intrinsically more complex OS than Apple offered. MS. had a lot more hardware to support; it was a practical compromise and worked rather well for them.  Apple took the tack of drastically limiting hardware options which made it possible to offer a much simpler OS interface. That split between the two companies persists, but Apple has never really been able to crack 10% market share even in their best days, due to the tradeoffs this entails.",
        "user": "UEQ6M68H0",
        "ts": "1583559889.098700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kIMC7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why not go all the way, and instead of using wimpy google search, which has very little intelligence and uses how many inward links to rank pages which can go completely in the wrong direction, and use Watson to back up your UI? Natural language interfaces are good for low amounts of user input, but in any creative product it would be a hindrance to use a searching based interface. Video editors make tens of thousands of little tweaks, and use $1000 keyboards with jog wheels and tons of dedicated keys to speed it all up. Ultimately the best interface style all depends on how many decisions/actions the user is going to make. Frankly in word processing people loved the old IBM XT keyboard with the 10 function keys on the left. People completely understood those keys did actions, they were in a convenient and special place, and you had little plastic templates for your word processor. People loved it but unfortunately the stupid PC industry standardized on the DEC keyboard which has the function keys way up at the top where nobody can reach them or have muscle memory for them.\n\nThis idea that users are supposed to stumble around their software and ask for help using text queries is really a strange attitude about UI. Why do commands have to have so many subcommands and options?  It is kind of nutty, to use super powerful search engine technology to fix the lack of intuitive workflow and tidy organization of functions. How does one know what is possible in such a system? it is completely undiscoverable, so I say Norman is completely incorrect.  And not only that, naive users have no clue as to how to describe in proper terminology what they are trying to accomplish. So their queries will end badly. The worst systems IMHO are those that present a dark screen with no clue was to what commands or functions are available. That reminds me of a survey where programmers asked which text editor was the easiest and some nerds answered vi and emacs. Yeah, right, people love using LISP for their word processing queries. Yikes.\n\nMS won the OS game by using wizards on top of a complex dialog box tree. if you have enough wizards people don't have to learn where all the functions are buried. In this sense they were compensating for their intrinsically more complex OS than Apple offered. MS. had a lot more hardware to support; it was a practical compromise and worked rather well for them.  Apple took the tack of drastically limiting hardware options which made it possible to offer a much simpler OS interface. That split between the two companies persists, but Apple has never really been able to crack 10% market share even in their best days, due to the tradeoffs this entails."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583512067.095400",
        "parent_user_id": "UKDM3GLAJ",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UV287BVSA"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2009F3B1-894B-4469-94CD-9F2971C7BB33",
        "type": "message",
        "text": "<https://youtube.com/watch?v=c6SUOeAqOjU|https://youtube.com/watch?v=c6SUOeAqOjU>",
        "user": "UC2A2ARPT",
        "ts": "1583565732.099000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Computers for Cynics 2 - It All Went Wrong at Xerox PARC",
                "title_link": "https://youtube.com/watch?v=c6SUOeAqOjU",
                "author_name": "TheTedNelson",
                "author_link": "https://www.youtube.com/user/TheTedNelson",
                "thumb_url": "https://i.ytimg.com/vi/c6SUOeAqOjU/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Computers for Cynics 2 - It All Went Wrong at Xerox PARC",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/c6SUOeAqOjU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://youtube.com/watch?v=c6SUOeAqOjU",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtube.com/watch?v=c6SUOeAqOjU"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wNx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://youtube.com/watch?v=c6SUOeAqOjU",
                                "text": "https://youtube.com/watch?v=c6SUOeAqOjU"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "reply_count": 35,
        "reply_users_count": 11,
        "latest_reply": "1585688197.059100",
        "reply_users": [
            "UC2A2ARPT",
            "UJN1TAYEQ",
            "UEQ6M68H0",
            "ULM3U6275",
            "UCUSW7WVD",
            "UJ6LDMMN0",
            "UA14TGLTC",
            "U8A5MS6R1",
            "UTM2DMHS6",
            "UJFN50C00",
            "U0112C10V4Y"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UTM2DMHS6"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "10A0AFD6-5667-4FD6-B489-E8E06654C227",
        "type": "message",
        "text": "I hadn't watched this before now. While I've heard a handful of different criticisms of PARC over the years, this one resonated with me particularly strongly. It's an interesting lens \u2014 of course Xerox the paper copier company would produce a research lab that turned computers into glorified paper copiers! If it's not a stretch to say so (it is), this story rhymes with the strategy for privatizing government-run services like healthcare in Canada: gradually open up the field for private competition, which lets corporations claim the profitable parts (Eg: elective surgeries) while the government-owned hospitals and such are left holding the bag on the more costly parts (Eg: emergency, recovery). In the case of the Alto and then the Macintosh, it's the easy-to-translate tasks that became the desktop metaphor, and the costly parts were left to the terminal, Algol-derived languages, or manual effort on the part of the user. If only the rush to privatize and productize computing hadn't happened, and we had computers designed to empower experts rather than just clerks and children.\n\nOf course, the vision pursued by Nelson (et al.) of much richer end-user programming is so foreign to me that I find myself overwhelmed imagining the complexity of it, unable to envision what it might feel like to actually have lived my whole life using such a system.",
        "user": "UC2A2ARPT",
        "ts": "1583566231.109400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1583566821.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xWh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hadn't watched this before now. While I've heard a handful of different criticisms of PARC over the years, this one resonated with me particularly strongly. It's an interesting lens \u2014 of course Xerox the paper copier company would produce a research lab that turned computers into glorified paper copiers! If it's not a stretch to say so (it is), this story rhymes with the strategy for privatizing government-run services like healthcare in Canada: gradually open up the field for private competition, which lets corporations claim the profitable parts (Eg: elective surgeries) while the government-owned hospitals and such are left holding the bag on the more costly parts (Eg: emergency, recovery). In the case of the Alto and then the Macintosh, it's the easy-to-translate tasks that became the desktop metaphor, and the costly parts were left to the terminal, Algol-derived languages, or manual effort on the part of the user. If only the rush to privatize and productize computing hadn't happened, and we had computers designed to empower experts rather than just clerks and children.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Of course, the vision pursued by Nelson (et al.) of much richer end-user programming is so foreign to me that I find myself overwhelmed imagining the complexity of it, unable to envision what it might feel like to actually have lived my whole life using such a system."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UAJ9DV971",
                    "UV287BVSA",
                    "UBSMEUXAA",
                    "UA14TGLTC"
                ],
                "count": 4
            },
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "fe37d196-f370-4e85-a443-ce89f597eccc",
        "type": "message",
        "text": "&gt;  I can't imagine why Roblox has a valuation of 4 billion when Dreams is so far beyond it.\nDreams is PS4 only, Roblox is on PC/Mac/iOS/Android. Dreams requires a high end GPU. Roblox does not. Dreams doesn't provide a marketplace. Roblox does giving people a strong insentive to try to make money (similar to youtube).\n\nAlso on the minus side, AFAIK Dreams has a pretty poor programming experience. No idea what Roblox is like but attaching wires to 3D objects is arguably not a good way to program. People do it in the same way they make giant rube goldberg machines in Minecraft to code",
        "user": "UC6997THT",
        "ts": "1583598389.111600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC6997THT",
            "ts": "1583598467.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "77Tr",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " I can't imagine why Roblox has a valuation of 4 billion when Dreams is so far beyond it."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nDreams is PS4 only, Roblox is on PC/Mac/iOS/Android. Dreams requires a high end GPU. Roblox does not. Dreams doesn't provide a marketplace. Roblox does giving people a strong insentive to try to make money (similar to youtube).\n\nAlso on the minus side, AFAIK Dreams has a pretty poor programming experience. No idea what Roblox is like but attaching wires to 3D objects is arguably not a good way to program. People do it in the same way they make giant rube goldberg machines in Minecraft to code"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582913805.047100",
        "parent_user_id": "UFB8STN7K",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2fcfa8eb-ce2d-4487-a8ff-044abbb68f2e",
        "type": "message",
        "text": "Nelson makes no distinction between the Macintosh GUI and Xerox Parc's Smalltalk environment. He calls them both \"the PUI\". They are different! Between 8:15 and 8:21, Nelson says: \"Xerox Parc took away the right to program\". That is absolutely and categorically false. Smalltalk is one of the most powerful end user programming environments ever developed. It was Steve Jobs, not Xerox Parc, who took away the right to program.",
        "user": "UJN1TAYEQ",
        "ts": "1583601414.111900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1583601489.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EGIs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nelson makes no distinction between the Macintosh GUI and Xerox Parc's Smalltalk environment. He calls them both \"the PUI\". They are different! Between 8:15 and 8:21, Nelson says: \"Xerox Parc took away the right to program\". That is absolutely and categorically false. Smalltalk is one of the most powerful end user programming environments ever developed. It was Steve Jobs, not Xerox Parc, who took away the right to program."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275",
                    "UA14TGLTC",
                    "UD6EXQVM0"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "9ee61537-acf3-4680-9b54-53420b5b20a2",
        "type": "message",
        "text": "I haven't used the Alto, but \u2014 were you truly able to reprogram the whole system? Or were there only certain areas that were reprogrammable?",
        "user": "UC2A2ARPT",
        "ts": "1583603599.112200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YfTM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't used the Alto, but \u2014 were you truly able to reprogram the whole system? Or were there only certain areas that were reprogrammable?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "7dc4aa66-6824-4204-9ccc-0877dec44d5d",
        "type": "message",
        "text": "Some fascinating history here that I hadn't heard before.\n\u2022 Doug Englebart wept when Xerox Parc broke up the NLS/Augment team.\n\u2022 \"Unix shell scripts, invented by Frenchman Louis Pouzin\" -- <https://en.wikipedia.org/wiki/Louis_Pouzin>",
        "user": "UJN1TAYEQ",
        "ts": "1583603920.112400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/M._Louis_POUZIN_2013.jpg/1200px-M._Louis_POUZIN_2013.jpg",
                "image_width": 1200,
                "image_height": 1800,
                "image_bytes": 376774,
                "title": "Louis Pouzin",
                "title_link": "https://en.wikipedia.org/wiki/Louis_Pouzin",
                "from_url": "https://en.wikipedia.org/wiki/Louis_Pouzin",
                "author_name": "Wikipedia",
                "author_link": "https://en.wikipedia.org/",
                "text": "Louis Pouzin (born 1931 in Chantenay-Saint-Imbert, Ni\u00e8vre, France) invented the datagram and designed an early packet communications network, CYCLADES.His work influenced Robert Kahn, Vinton Cerf, and others in the development of  TCP/IP protocols used by the Internet.",
                "fallback": "wikipedia: Louis Pouzin",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png",
                "id": 1,
                "original_url": "https://en.wikipedia.org/wiki/Louis_Pouzin"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dmf1l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some fascinating history here that I hadn't heard before.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Doug Englebart wept when Xerox Parc broke up the NLS/Augment team."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"Unix shell scripts, invented by Frenchman Louis Pouzin\" -- "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://en.wikipedia.org/wiki/Louis_Pouzin"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "345d022b-e79f-4bec-bd74-9c4df27fc5a0",
        "type": "message",
        "text": "&gt; I have this feeling that I can design it in a way that doesn't need a vector clock for causal consistency\nA way to have causal consistency in an append only log, is to use a combination of a Lamport timestamp and an unique session ID, i.e. an ID unique to each site of editing. You order events based on the timestamp and when two events from two sites have the same timestamp you use the ID to choose the order in a deterministic way. It is actually what I have successfully used for my implementation of CausalTree/CRDT. You can find more information about this here: <http://archagon.net/blog/2018/03/24/data-laced-with-history/>. It is a very well written article and actually it is after reading it that I work on my Rust implementation of this. Here is en excerpt, explaining the ordering of the event log:\n&gt; \"This won\u2019t be convergent by default since the operations don\u2019t have an inherent total order, but it\u2019s easy to fix this by giving each one a globally-unique ID in the form of an owner UUID\n&gt;  \n&gt; plus a Lamport timestamp. (In the diagrams below, this is encoded as \u201cSX@TY\u201d, where \u201cSX\u201d represents the UUID for site X, and Y is just the timestamp.) With this scheme, no two operations can have the same ID: operations from the same owner will have different timestamps, while operations from different owners will have different UUIDs. The Lamport timestamps will be used to sort the operations into causal order, leaving the UUIDs for tiebreaking when concurrent operations happen to have the same timestamp.\" ",
        "user": "UJ6LDMMN0",
        "ts": "1583604079.112700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Archagon Was Here",
                "title": "Data Laced with History: Causal Trees &amp; Operational CRDTs",
                "title_link": "http://archagon.net/blog/2018/03/24/data-laced-with-history/",
                "text": "An in-depth exploration of a new class of expressive, performant, and intuitive CRDTs, together with macOS and iOS sample code.",
                "fallback": "Archagon Was Here: Data Laced with History: Causal Trees &amp; Operational CRDTs",
                "thumb_url": "http://archagon.net/images/blog/causal-trees/header.jpg",
                "from_url": "http://archagon.net/blog/2018/03/24/data-laced-with-history/",
                "thumb_width": 1800,
                "thumb_height": 772,
                "service_icon": "http://archagon.net/images/favicon/favicon-96x96.png",
                "id": 1,
                "original_url": "http://archagon.net/blog/2018/03/24/data-laced-with-history/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lq9BB",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have this feeling that I can design it in a way that doesn't need a vector clock for causal consistency"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A way to have causal consistency in an append only log, is to use a combination of a Lamport timestamp and an unique session ID, i.e. an ID unique to each site of editing. You order events based on the timestamp and when two events from two sites have the same timestamp you use the ID to choose the order in a deterministic way. It is actually what I have successfully used for my implementation of CausalTree/CRDT. You can find more information about this here: "
                            },
                            {
                                "type": "link",
                                "url": "http://archagon.net/blog/2018/03/24/data-laced-with-history/"
                            },
                            {
                                "type": "text",
                                "text": ". It is a very well written article and actually it is after reading it that I work on my Rust implementation of this. Here is en excerpt, explaining the ordering of the event log:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"This won\u2019t be convergent by default since the operations don\u2019t have an inherent total order, but it\u2019s easy to fix this by giving each one a globally-unique ID in the form of an owner UUID\n \nplus a Lamport timestamp. (In the diagrams below, this is encoded as \u201cSX@TY\u201d, where \u201cSX\u201d represents the UUID for site X, and Y is just the timestamp.) With this scheme, no two operations can have the same ID: operations from the same owner will have different timestamps, while operations from different owners will have different UUIDs. The Lamport timestamps will be used to sort the operations into causal order, leaving the UUIDs for tiebreaking when concurrent operations happen to have the same timestamp.\" "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5"
    },
    {
        "client_msg_id": "e8badace-0997-42d0-a336-671af13a6b50",
        "type": "message",
        "text": "<@UC2A2ARPT> The Alto was microprogrammable, and there were different operating systems that could run on it. When I had my Xerox Parc tour, I only talked to the Smalltalk group, so maybe I saw different things than what Nelson saw. When you used Smalltalk, it essentially was the operating system. You couldn't change the microcode or the Smalltalk virtual machine using live programming in the Smalltalk environment, but everything else could be changed. Alan Kay and other members of the Smalltalk team talked about how they were going to do away with applications and do away with the operating system (the whole concept of an operating system was a mistake, they said). So I strongly disagree with Nelson blaming Xerox Parc for the tyranny of the OS and the application.",
        "user": "UJN1TAYEQ",
        "ts": "1583604355.113100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FIMNM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " The Alto was microprogrammable, and there were different operating systems that could run on it. When I had my Xerox Parc tour, I only talked to the Smalltalk group, so maybe I saw different things than what Nelson saw. When you used Smalltalk, it essentially was the operating system. You couldn't change the microcode or the Smalltalk virtual machine using live programming in the Smalltalk environment, but everything else could be changed. Alan Kay and other members of the Smalltalk team talked about how they were going to do away with applications and do away with the operating system (the whole concept of an operating system was a mistake, they said). So I strongly disagree with Nelson blaming Xerox Parc for the tyranny of the OS and the application."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA",
                    "UV287BVSA",
                    "ULM3U6275",
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "UCDBW1H26",
                    "UD6EXQVM0"
                ],
                "count": 8
            }
        ]
    },
    {
        "client_msg_id": "52501ae3-c129-4470-aa3c-a543a1a828c6",
        "type": "message",
        "text": "I don't think Xerox Parc invented the application. Some early-ish personal computer applications were Electric Pencil in 1976, WordStar in 1978, Visicalc in 1979. But the oldest application that I am aware of is Ivan Sutherland's CAD program \"Sketchpad\" in 1963.",
        "user": "UJN1TAYEQ",
        "ts": "1583604688.113400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WLrp5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think Xerox Parc invented the application. Some early-ish personal computer applications were Electric Pencil in 1976, WordStar in 1978, Visicalc in 1979. But the oldest application that I am aware of is Ivan Sutherland's CAD program \"Sketchpad\" in 1963."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "fcc50470-73b6-42ca-88f1-b159ea0d91de",
        "type": "message",
        "text": "And in my demo, there is a dynamic illustration of this event log ID for eventual consistency. If you are interested, go there: <https://ogadaki.gitlab.io/sunnytech-2019-wuer/>, then click \"show sequences\" and then \"play scenario\". Or you can use the three editors to add some characters and sometime click on \"broadcast content\". I made this demo to help understand how Causal Trees work. If you happen to use it, any feedback would be very welcome! :slightly_smiling_face:",
        "user": "UJ6LDMMN0",
        "ts": "1583604880.113600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vxjb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And in my demo, there is a dynamic illustration of this event log ID for eventual consistency. If you are interested, go there: "
                            },
                            {
                                "type": "link",
                                "url": "https://ogadaki.gitlab.io/sunnytech-2019-wuer/"
                            },
                            {
                                "type": "text",
                                "text": ", then click \"show sequences\" and then \"play scenario\". Or you can use the three editors to add some characters and sometime click on \"broadcast content\". I made this demo to help understand how Causal Trees work. If you happen to use it, any feedback would be very welcome! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5"
    },
    {
        "client_msg_id": "d408fa3a-1f94-4f7a-bd97-9dcadf72b891",
        "type": "message",
        "text": "The Xerox Star was a commercial product created by the Xerox Systems Development Department (SDD) in El Segundo. This was a different group from PARC (Palo Alto Research Center). The Star was essentially a prototype for the Apple Lisa and Macintosh, and it had all of the features that Nelson is criticizing, and blaming PARC for. The Star had a file based operating system, and desktop GUI environment with a trash can, icons, applications.",
        "user": "UJN1TAYEQ",
        "ts": "1583605203.113800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fgRu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Xerox Star was a commercial product created by the Xerox Systems Development Department (SDD) in El Segundo. This was a different group from PARC (Palo Alto Research Center). The Star was essentially a prototype for the Apple Lisa and Macintosh, and it had all of the features that Nelson is criticizing, and blaming PARC for. The Star had a file based operating system, and desktop GUI environment with a trash can, icons, applications."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "fb4ad9fe-0683-4540-8560-f56c2a9d21e9",
        "type": "message",
        "text": "Did PARC folks not have any involvement in the creation of the Star? If so, does that mean the \"desktop metaphor\" didn't come from PARC after all?",
        "user": "UC2A2ARPT",
        "ts": "1583606066.114000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D1Fc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did PARC folks not have any involvement in the creation of the Star? If so, does that mean the \"desktop metaphor\" didn't come from PARC after all?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "d1082922-3e26-463b-b26b-a4043d28ba4e",
        "type": "message",
        "text": "The Alto definitely had a \"paper metaphor\". It had a high resolution bitmap display, it displayed black text on a white background, you had a choice of fonts. You could mix text and graphics arbitrarily, just like paper. They did this in an era when paper was a much richer visual display medium than computer monitors. They were consciously simulating paper, and Nelson is attacking them for this. But the user interfaces they created using this paper metaphor looked graphically better than anything else at the time.\n\nSome PARC people were seconded to SDD for the development of the Star. By my recollection, the \"desktop\" metaphor, as I understand it, with file and application and folder icons on the deskop, and a trashcan, first appeared in the Star. I could be wrong, but I'd like to see primary sources that prove otherwise.",
        "user": "UJN1TAYEQ",
        "ts": "1583607891.114700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1583608169.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vkMwE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Alto definitely had a \"paper metaphor\". It had a high resolution bitmap display, it displayed black text on a white background, you had a choice of fonts. You could mix text and graphics arbitrarily, just like paper. They did this in an era when paper was a much richer visual display medium than computer monitors. They were consciously simulating paper, and Nelson is attacking them for this. But the user interfaces they created using this paper metaphor looked graphically better than anything else at the time.\n\nSome PARC people were seconded to SDD for the development of the Star. By my recollection, the \"desktop\" metaphor, as I understand it, with file and application and folder icons on the deskop, and a trashcan, first appeared in the Star. I could be wrong, but I'd like to see primary sources that prove otherwise."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "3f1b04ca-e266-4778-a7f5-c5925f7ed172",
        "type": "message",
        "text": "That post really made a lot of things click for me (as it did many others) when I found it. Will you be publishing your Rust implementation?",
        "user": "UD3AK9JRF",
        "ts": "1583608327.115100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V4xb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That post really made a lot of things click for me (as it did many others) when I found it. Will you be publishing your Rust implementation?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5"
    },
    {
        "client_msg_id": "C3548E9D-BC66-4143-950C-44DAF4F777B4",
        "type": "message",
        "text": "The problem with causal consistency is that the clock gets really large with an arbitrary number of collaborators... I\u2019m hoping that I can come up with some way of indexing the transaction log so I can query for the last transaction involving some fact and enforce causality that way. ",
        "user": "UT9TWSZB5",
        "ts": "1583608582.117800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hey",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The problem with causal consistency is that the clock gets really large with an arbitrary number of collaborators... I\u2019m hoping that I can come up with some way of indexing the transaction log so I can query for the last transaction involving some fact and enforce causality that way. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e5cbd844-14e2-4d78-9c6b-26cc89e3adca",
        "type": "message",
        "text": "The Xerox Alto had a 3 button mouse. There were seven \"chords\" that you could use, which gave you 7 kinds of mouse clicks. These 7 chords were assigned to different user interface functions, and the mapping changed based on context. This wasn't user friendly, so the Xerox Star simplified down to a 2 button mouse, and the Macintosh simplified further down to a 1 button mouse. There was a lot of UI design work that had to be done to take the raw ideas from the Xerox Alto and make them user friendly, and the result of all that UI design work is the modern desktop metaphor.",
        "user": "UJN1TAYEQ",
        "ts": "1583608684.118000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TYj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Xerox Alto had a 3 button mouse. There were seven \"chords\" that you could use, which gave you 7 kinds of mouse clicks. These 7 chords were assigned to different user interface functions, and the mapping changed based on context. This wasn't user friendly, so the Xerox Star simplified down to a 2 button mouse, and the Macintosh simplified further down to a 1 button mouse. There was a lot of UI design work that had to be done to take the raw ideas from the Xerox Alto and make them user friendly, and the result of all that UI design work is the modern desktop metaphor."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "A4DFACA2-B231-4189-9F67-12508E911676",
        "type": "message",
        "text": "This article looks great. Thanks for sharing :) ",
        "user": "UT9TWSZB5",
        "ts": "1583608727.118500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vJz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This article looks great. Thanks for sharing :) "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2292f7c1-646c-474f-bdf1-78f426dd4af8",
        "type": "message",
        "text": "Part of Steve Jobs work to make the Macintosh user friendly was to make it non-programmable. So I would claim that it all went wrong at Apple. The supervillian who destroyed our end-user-programming FoC future was Steve Jobs, not Alan Kay.",
        "user": "UJN1TAYEQ",
        "ts": "1583608838.118800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L5VOn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Part of Steve Jobs work to make the Macintosh user friendly was to make it non-programmable. So I would claim that it all went wrong at Apple. The supervillian who destroyed our end-user-programming FoC future was Steve Jobs, not Alan Kay."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "crying_cat_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UAHHWT22U",
                    "UCDBW1H26"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "cbce4848-8574-4b24-987f-58347d7cd051",
        "type": "message",
        "text": "This is amazing: <https://www.robinsloan.com/notes/home-cooked-app>\n\n\"It feels like during the last ~30 years food &amp; cooking have become culture in a way more similar to music (food is the new rock!) Are we in the early stages of seeing millions of folks start to make their own software?\" (<https://twitter.com/noahchestnut/status/1231982830827139072>)",
        "user": "UCUSW7WVD",
        "ts": "1583608988.119700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1583609008.000000"
        },
        "attachments": [
            {
                "service_name": "Robin Sloan",
                "title": "An app can be a home-cooked meal",
                "title_link": "https://www.robinsloan.com/notes/home-cooked-app",
                "text": "I made a messaging app for my family and my family only.",
                "fallback": "Robin Sloan: An app can be a home-cooked meal",
                "image_url": "https://www.robinsloan.com/img/boopsnoop-card-v2.png",
                "from_url": "https://www.robinsloan.com/notes/home-cooked-app",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 136386,
                "service_icon": "https://www.robinsloan.com/img/rs-icon-256.png",
                "id": 1,
                "original_url": "https://www.robinsloan.com/notes/home-cooked-app"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C3AM7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is amazing: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.robinsloan.com/notes/home-cooked-app"
                            },
                            {
                                "type": "text",
                                "text": "\n\n\"It feels like during the last ~30 years food & cooking have become culture in a way more similar to music (food is the new rock!) Are we in the early stages of seeing millions of folks start to make their own software?\" ("
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/noahchestnut/status/1231982830827139072"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583608988.119700",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1583657579.192300",
        "reply_users": [
            "UC2A2ARPT",
            "UCUSW7WVD"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UU45NNMHT",
                    "UJBAJNFLK",
                    "UC2A2ARPT",
                    "UML4ZEKDK"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "418d3fb9-008a-476c-affd-f05dc74057b6",
        "type": "message",
        "text": "That\u2019s a problem with Lamport clocks, but they give you more information than you generally need in practice. In collaborative text editing, as in git, the operations themselves form logical timelines, and the site ids of two operations are used just as tiebreakers, as Nicolas mentions.",
        "user": "UD3AK9JRF",
        "ts": "1583609312.120100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rge5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That\u2019s a problem with Lamport clocks, but they give you more information than you generally need in practice. In collaborative text editing, as in git, the operations themselves form logical timelines, and the site ids of two operations are used just as tiebreakers, as Nicolas mentions."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5"
    },
    {
        "client_msg_id": "a6924a4d-0f0b-461a-86be-e9efd4006501",
        "type": "message",
        "text": "I was the original author of WordStar 2000, the sequel to the pioneering WordStar product which was a massive success. When visiting the offices of the company, they had purchased a Xerox Star machine, which was $50,000 at the time. Although Xerox had a crack R&amp;D dept., the upper management of Xerox was full of idiots who had no clue how to enter a new business area. Through management incompetence, they failed to take advantage of their huge head start. Commodore was a typewriter company that also failed to understand computers and blew it bad. If you put a bad jockey on the fastest horse you will still lose. Leadership matters more than anything, and Xerox had a long series of bad leaders, just like IBM had after Watson retired.\n\nBy the way, Prof. Wirth of ETH who invented Pascal, Modula-2 and Oberon took a sabbatical at Xerox Parc, and after that built his own computer called the Lilith machine which was very interesting, and was the closest thing to interchangeable parts and not a strong boundary between OS and applications that Nelson would have liked.\n\nNelson also didn't mention that 3Com which pioneered ethernet also came out of PARC. Xerox has the unfortunate distinction of the company with the most inventions not commercialized due to their stupidity. The management was basically running a gold mine that discovered diamonds and threw them away.",
        "user": "UEQ6M68H0",
        "ts": "1583609732.120500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fIKe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was the original author of WordStar 2000, the sequel to the pioneering WordStar product which was a massive success. When visiting the offices of the company, they had purchased a Xerox Star machine, which was $50,000 at the time. Although Xerox had a crack R&D dept., the upper management of Xerox was full of idiots who had no clue how to enter a new business area. Through management incompetence, they failed to take advantage of their huge head start. Commodore was a typewriter company that also failed to understand computers and blew it bad. If you put a bad jockey on the fastest horse you will still lose. Leadership matters more than anything, and Xerox had a long series of bad leaders, just like IBM had after Watson retired.\n\nBy the way, Prof. Wirth of ETH who invented Pascal, Modula-2 and Oberon took a sabbatical at Xerox Parc, and after that built his own computer called the Lilith machine which was very interesting, and was the closest thing to interchangeable parts and not a strong boundary between OS and applications that Nelson would have liked.\n\nNelson also didn't mention that 3Com which pioneered ethernet also came out of PARC. Xerox has the unfortunate distinction of the company with the most inventions not commercialized due to their stupidity. The management was basically running a gold mine that discovered diamonds and threw them away."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1657ca9a-1d52-4387-9b4c-8061e26ff148",
        "type": "message",
        "text": "If we\u2019re talking about interactive, human-scale systems, though, eventual consistency isn\u2019t that impressive a goal. There\u2019s a lot of opportunity to explore different application-specific, visual presentations of timelines, for example, with or without divergence. Most of the time a user won\u2019t care, but occasionally they might ask, was the person who made this change aware of this other change? Not all forms of inconsistency can be identified at the database or application layers, or indeed encoded at all.",
        "user": "UD3AK9JRF",
        "ts": "1583609861.120700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rTi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If we\u2019re talking about interactive, human-scale systems, though, eventual consistency isn\u2019t that impressive a goal. There\u2019s a lot of opportunity to explore different application-specific, visual presentations of timelines, for example, with or without divergence. Most of the time a user won\u2019t care, but occasionally they might ask, was the person who made this change aware of this other change? Not all forms of inconsistency can be identified at the database or application layers, or indeed encoded at all."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5"
    },
    {
        "client_msg_id": "951301ef-bc91-4410-87f0-4b125d485c7a",
        "type": "message",
        "text": "They didn't even take ownership stakes in the spinoff companies. If they hadn't wanted to go into that business, they at least could have been the VC for the spinoffs. The leaders' mistakes should be studied so that people can learn from it. If they had just bought 10% of 3Com, Adobe, Apple, etc., those shares would be worth 10x what Xerox is worth today. And as an interesting side note, Xerox is attempting to buy HP because they finally decided to enter the computer business! hah what a joke, they are 40 years late to the party ;-)",
        "user": "UEQ6M68H0",
        "ts": "1583609926.120900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ef+LZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They didn't even take ownership stakes in the spinoff companies. If they hadn't wanted to go into that business, they at least could have been the VC for the spinoffs. The leaders' mistakes should be studied so that people can learn from it. If they had just bought 10% of 3Com, Adobe, Apple, etc., those shares would be worth 10x what Xerox is worth today. And as an interesting side note, Xerox is attempting to buy HP because they finally decided to enter the computer business! hah what a joke, they are 40 years late to the party ;-)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "03328f2b-9158-4bd3-9968-a24bcbc3e47f",
        "type": "message",
        "text": "I\u2019m excited to get to the point where I can explore some of these ideas, but I have a lot to do before then.",
        "user": "UD3AK9JRF",
        "ts": "1583609943.121100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i933",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m excited to get to the point where I can explore some of these ideas, but I have a lot to do before then."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582100143.211600",
        "parent_user_id": "UT9TWSZB5"
    },
    {
        "client_msg_id": "79184d41-5362-4646-87a3-244e3b247ff3",
        "type": "message",
        "text": "An alternative take on the \u201cwho ruined the computer\u201d: The problem was neither taking away or granting full modification access. It was the failure to recognize that both are necessary. We need both barriers and means to securely cross them. From this perspective, everyone on either far side of the debate would be responsible for this deep problem.",
        "user": "ULM3U6275",
        "ts": "1583610228.121300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IjLWj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An alternative take on the \u201cwho ruined the computer\u201d: The problem was neither taking away or granting full modification access. It was the failure to recognize that both are necessary. We need both barriers and means to securely cross them. From this perspective, everyone on either far side of the debate would be responsible for this deep problem."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "UCDBW1H26",
                    "UHWC9PXBL"
                ],
                "count": 6
            },
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "01d5abbc-f2f6-4911-aae5-ab3fe1665c3e",
        "type": "message",
        "text": "I saw a presentation from the CEO of Roblox the other day. He had a pretty strong long-term vision for the platform as a combination of Steam (game platform + social network), Unity (game engine + dev tools), and Second Life (customizable avatar, connected game worlds). Some interesting notes:\n\u2022 65% of 9-12 y/o in the US play Roblox (as monthly active users). They have a comparable audience size to Minecraft.\n\u2022 40% of players are female. It use to be 95/5 male/female 10 years ago.\n\u2022 They paid $100 million last year to creators on the platform.\nI hadn\u2019t realized how staggeringly big the platform is, and influential with children. Just something worth thinking about if you\u2019re trying to build for the next generation!",
        "user": "UFB8STN7K",
        "ts": "1583619221.127100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sES2i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I saw a presentation from the CEO of Roblox the other day. He had a pretty strong long-term vision for the platform as a combination of Steam (game platform + social network), Unity (game engine + dev tools), and Second Life (customizable avatar, connected game worlds). Some interesting notes:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "65% of 9-12 y/o in the US play Roblox (as monthly active users). They have a comparable audience size to Minecraft."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "40% of players are female. It use to be 95/5 male/female 10 years ago."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "They paid $100 million last year to creators on the platform."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI hadn\u2019t realized how staggeringly big the platform is, and influential with children. Just something worth thinking about if you\u2019re trying to build for the next generation!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583619221.127100",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1583727939.206000",
        "reply_users": [
            "UJKKBAMLL",
            "UC2A2ARPT",
            "UNS7QDKFV"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD",
                    "UBSMEUXAA",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UD31LGQKB"
                ],
                "count": 3
            },
            {
                "name": "astonished",
                "users": [
                    "UV287BVSA"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "837b571b-313f-4860-97a0-8cf3a2e0ccc1",
        "type": "message",
        "text": "(And as someone who learned to code in Garry\u2019s Mod, it\u2019s cool to see people get interested in using virtual worlds to teach programming!)",
        "user": "UFB8STN7K",
        "ts": "1583619242.127600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kv/cw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(And as someone who learned to code in Garry\u2019s Mod, it\u2019s cool to see people get interested in using virtual worlds to teach programming!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583619242.127600",
        "reply_count": 26,
        "reply_users_count": 4,
        "latest_reply": "1583692503.202000",
        "reply_users": [
            "UJKKBAMLL",
            "UFB8STN7K",
            "UBSMEUXAA",
            "UC2A2ARPT"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UUB7RA7PF",
                    "UHWC9PXBL",
                    "UV287BVSA",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "9e5afe8a-6096-4083-8a5a-81d3a8a5f826",
        "type": "message",
        "text": "<@UJN1TAYEQ> it does seem like PARC was the site for the invention of cut and paste, something Ted Nelson strongly opposes and with very good reason: <https://futureofcoding.slack.com/archives/C5U3SEW6A/p1583620045067100?thread_ts=1582854486.016000&amp;cid=C5U3SEW6A>",
        "user": "UCUSW7WVD",
        "ts": "1583620184.127900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1583620232.000000"
        },
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1583620045067100?thread_ts=1582854486.016000&amp;cid=C5U3SEW6A",
                "fallback": "[March 7th, 2020 2:27 PM] ak: Cross-link to a Ted Nelson rant from 2012: <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1583565732099000>. Particularly for the following passage:\n\n&gt; I learned in high school that the craft of writing consists mainly of rewriting, and that rewriting consists mainly of rearrangement. Once you\u2019ve written something it\u2019s in the wrong order. Then you cut it apart and arrange the pieces of paper in the right order. This can take some time and you may have pieces of paper lying around your desk or your bedroom floor. For hundreds of years, this process was called \u201ccut and paste.\u201d\n&gt; \n&gt; Did PARC give us a good way to cut and paste? NO! PARC gave us an abominable editing mechanism propagandistically hidden behind the former term. The abominable mechanism is a hidey hole you can put something into, and it\u2019s called \u201cthe clipboard\u201d. And hiding something in the clipboard has since 1984 been called \u201ccut\u201d. Then you choose where this one piece goes and blurp it out. And this blurp-out action has since 1984 been called \u201cpaste\u201d.\n&gt; \n&gt; Not only did PARC take away the fundamental method of reorganization, and give us a hidey hole instead, but they gave that hidey hole the name of the previous method. Which in true Orwellian style has made people forget. And the Macintosh laid it on us in 1984, the Orwellian year.\n&gt; \n&gt; Now, this twisting of the previous terminology for an entirely different function was perpetrated by\u2026 Larry Tesler, who is one of the nicest guys I know. As the Christians say, hate the sin but love the sinner. I\u2019ve been corresponding with Larry, no time to read his beautiful reply until now. He thinks, old fashioned cut and paste is a complex method for professionals and researchers. And ordinary people don\u2019t need anything better. I\u2019ll be putting his beautifully written reply in the next edition of _Geeks_.",
                "ts": "1583620045.067100",
                "author_id": "UCUSW7WVD",
                "author_subname": "Kartik Agaram",
                "channel_id": "C5U3SEW6A",
                "channel_name": "random",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "Cross-link to a Ted Nelson rant from 2012: <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1583565732099000>. Particularly for the following passage:\n\n&gt; I learned in high school that the craft of writing consists mainly of rewriting, and that rewriting consists mainly of rearrangement. Once you\u2019ve written something it\u2019s in the wrong order. Then you cut it apart and arrange the pieces of paper in the right order. This can take some time and you may have pieces of paper lying around your desk or your bedroom floor. For hundreds of years, this process was called \u201ccut and paste.\u201d\n&gt; \n&gt; Did PARC give us a good way to cut and paste? NO! PARC gave us an abominable editing mechanism propagandistically hidden behind the former term. The abominable mechanism is a hidey hole you can put something into, and it\u2019s called \u201cthe clipboard\u201d. And hiding something in the clipboard has since 1984 been called \u201ccut\u201d. Then you choose where this one piece goes and blurp it out. And this blurp-out action has since 1984 been called \u201cpaste\u201d.\n&gt; \n&gt; Not only did PARC take away the fundamental method of reorganization, and give us a hidey hole instead, but they gave that hidey hole the name of the previous method. Which in true Orwellian style has made people forget. And the Macintosh laid it on us in 1984, the Orwellian year.\n&gt; \n&gt; Now, this twisting of the previous terminology for an entirely different function was perpetrated by\u2026 Larry Tesler, who is one of the nicest guys I know. As the Christians say, hate the sin but love the sinner. I\u2019ve been corresponding with Larry, no time to read his beautiful reply until now. He thinks, old fashioned cut and paste is a complex method for professionals and researchers. And ordinary people don\u2019t need anything better. I\u2019ll be putting his beautifully written reply in the next edition of _Geeks_.",
                "author_name": "Kartik Agaram",
                "author_link": "https://futureofcoding.slack.com/team/UCUSW7WVD",
                "author_icon": "https://avatars.slack-edge.com/2019-07-14/687915485201_6e649a383cf8f9e366e3_48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1583620045067100?thread_ts=1582854486.016000&amp;cid=C5U3SEW6A",
                "footer": "From a thread in #random"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/n4d4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " it does seem like PARC was the site for the invention of cut and paste, something Ted Nelson strongly opposes and with very good reason: "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1583620045067100?thread_ts=1582854486.016000&cid=C5U3SEW6A"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1583565732.099000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    }
]