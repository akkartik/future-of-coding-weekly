[
    {
        "client_msg_id": "ed0fcb47-960e-4882-8be2-e5299eefd6ae",
        "type": "message",
        "text": "Hi Eddy, I think the idea of working backwards from the desired result is an awesome idea! Much of the problems that the software industry has are do to working with some complex mechanism (language, tool, pattern, etc.) and then trying to \"emerge\" the human model out of it -- which is completely backwards to what makes sense! That's why the human model becomes an afterthought, and software does things people don't expect, and nobody knows what to even look for to fix the situation: they're working from the wrong end!\n\nAnyway, I talked at length in another thread about my thoughts on this, and how I'm approaching the problem of getting rigid mechanism or of the way by making it possible to freely scult whatever it means to design / code / model whatever it is that one is trying to do, rather than starting with a broken model and going the other way.\n\nIt's a lot to reformulate on this context, so here's a link to that post / thread: <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1584764693467400?thread_ts=1584235196.324400&amp;cid=C5T9GPWFL|https://futureofcoding.slack.com/archives/C5T9GPWFL/p1584764693467400?thread_ts=1584235196.324400&amp;cid=C5T9GPWFL>",
        "user": "UAVCC2X70",
        "ts": "1585004552.083800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1584764693467400?thread_ts=1584235196.324400&amp;cid=C5T9GPWFL",
                "fallback": "[March 20th, 2020 9:24 PM] dcook0819: I'll explain what I'm building in phases, because it's not about the specific tool, but the process that it enables:\n\nI'm building a tool in which code and data can be edited and interacted with as live objects on a canvas. Code and data are made of the same \"building blocks\" (structural representation) that can be inspected, edited, and executed (interpreted) directly from the live structure.\n\nAll the LIVE code for the tool itself -- including the user interface and the interpreter -- is also exposed for live editing through the same interface. You can use the tool, to completely change itself (down to the metal if you like) to work completely differently. This entire transformation can happen at runtime, without the tool ever \"stopping\".\n\nWhat I'm making is much more about this self-bootstrapping ability/ process, than it is about a specific tool that works a specific way. Building a specific tool is only necessary in the first place, just to bootstrap this ability into existence. So the initial \"tool\" just has to be minimally capable, even if it sucks -- and from there, I'll evolve it into something better through direct manipulation.\n\nImagine a robot capable of physically modifying itself, and programmed to improve itself. Even if it's not great at that, it could improve it's ability to improve itself, or even it's criteria for reasoning about what that means. If you can somehow make that initial robot _at all_, no matter how crappy, then you've succeeded in bootstrapping arbitrarily better robots. That's what I'm trying to do, but with software &amp; programming.\n\nThere's more to it than that, which is my philosophy on \"programming language\" not needing to be a solidly defined thing, or perhaps not even a thing at all! What is a compiler or interpreter, other than just code that operates on code? Why not put THAT code and YOUR code all in the same bucket? Instead of code + compiler, you have code (in whatever form makes sense for the context) + other code that executes or translates that code?\n\nHere is where the line blurs between programming language, and having code that iterates over a hardcoded list to avoid having to repeat a bunch of code that differs only by specific values. That's as much of a \"language\" as the one your code is written in!\n\nNow take that to the extreme, but think of being able to customize your own visual representation and / or editor for whatever makes sense for a given context. Imagine if \"code\" could contain instructions that told your IDE how to behave? That's the same as putting your code and the code OF the IDE in the same codebase. Just like I described for removing the separation between compiler + code.\n\nOne (example) vision I have is that \"code\" for something is not a text file that you open in another tool, but a self-contained executable program that, when you run it, presents you with a custom interface / model for \"the code\", including the code of the whole running program &amp; interface that it presents. No more dependency on some other interface! It's the same idea (in a sense) as infrastructure as code, or HATEOS\n\nBut what's that? you need a Java program? Fine, click a button, and it spits out a compiled-to-Java equivalent of \"just the product code\". Any code in any language or for any system, has a structure, and there's no reason that cannot be stored and executed as a _live_ structural representation, prior to generating the actual \"compiled\" built product from it.\n\nWhat's that? Execution in the tool is not the same as execution in the JVM (or whatever other target)? Well, the tool is written \"in itself\", and you already made a generate-the-equivalent-Java-code functionality; use that on the tool itself, and bootstrap the tool right into the JVM (or what have you). That's one perk of having just some generic code model with self contained rules for execution or translation.\n\nThere are so so many things and approaches and models for what \"code\" could be and how to model or visualize it, how it can be edited or projected, and what to even DO with the code (e.g. translate it) ... a tool like this would make it very easy to explore that space.\n\nWhat if the representation I choose is not great? What if the tools and process I provide for molding better tools and processes, really sucks? Well, then I mold better things for molding better things.\n\nSoftware is not just made of levers; it's made of levers for making levers. And I want to put that power in everyone's hands. This makes sense not just for programmers, but also for everyone else: What the heck does it even mean to have the power of a computer in your hand, without actually having any power of a computer in your hand? What a joke!\n\nBut what if people suck at computer stuff, though? Well gosh, if only they had the power of a computer to assist with using the power of a computer...",
                "ts": "1584764693.467400",
                "author_id": "UAVCC2X70",
                "author_subname": "Dan Cook",
                "channel_id": "C5T9GPWFL",
                "channel_name": "general",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "I'll explain what I'm building in phases, because it's not about the specific tool, but the process that it enables:\n\nI'm building a tool in which code and data can be edited and interacted with as live objects on a canvas. Code and data are made of the same \"building blocks\" (structural representation) that can be inspected, edited, and executed (interpreted) directly from the live structure.\n\nAll the LIVE code for the tool itself -- including the user interface and the interpreter -- is also exposed for live editing through the same interface. You can use the tool, to completely change itself (down to the metal if you like) to work completely differently. This entire transformation can happen at runtime, without the tool ever \"stopping\".\n\nWhat I'm making is much more about this self-bootstrapping ability/ process, than it is about a specific tool that works a specific way. Building a specific tool is only necessary in the first place, just to bootstrap this ability into existence. So the initial \"tool\" just has to be minimally capable, even if it sucks -- and from there, I'll evolve it into something better through direct manipulation.\n\nImagine a robot capable of physically modifying itself, and programmed to improve itself. Even if it's not great at that, it could improve it's ability to improve itself, or even it's criteria for reasoning about what that means. If you can somehow make that initial robot _at all_, no matter how crappy, then you've succeeded in bootstrapping arbitrarily better robots. That's what I'm trying to do, but with software &amp; programming.\n\nThere's more to it than that, which is my philosophy on \"programming language\" not needing to be a solidly defined thing, or perhaps not even a thing at all! What is a compiler or interpreter, other than just code that operates on code? Why not put THAT code and YOUR code all in the same bucket? Instead of code + compiler, you have code (in whatever form makes sense for the context) + other code that executes or translates that code?\n\nHere is where the line blurs between programming language, and having code that iterates over a hardcoded list to avoid having to repeat a bunch of code that differs only by specific values. That's as much of a \"language\" as the one your code is written in!\n\nNow take that to the extreme, but think of being able to customize your own visual representation and / or editor for whatever makes sense for a given context. Imagine if \"code\" could contain instructions that told your IDE how to behave? That's the same as putting your code and the code OF the IDE in the same codebase. Just like I described for removing the separation between compiler + code.\n\nOne (example) vision I have is that \"code\" for something is not a text file that you open in another tool, but a self-contained executable program that, when you run it, presents you with a custom interface / model for \"the code\", including the code of the whole running program &amp; interface that it presents. No more dependency on some other interface! It's the same idea (in a sense) as infrastructure as code, or HATEOS\n\nBut what's that? you need a Java program? Fine, click a button, and it spits out a compiled-to-Java equivalent of \"just the product code\". Any code in any language or for any system, has a structure, and there's no reason that cannot be stored and executed as a _live_ structural representation, prior to generating the actual \"compiled\" built product from it.\n\nWhat's that? Execution in the tool is not the same as execution in the JVM (or whatever other target)? Well, the tool is written \"in itself\", and you already made a generate-the-equivalent-Java-code functionality; use that on the tool itself, and bootstrap the tool right into the JVM (or what have you). That's one perk of having just some generic code model with self contained rules for execution or translation.\n\nThere are so so many things and approaches and models for what \"code\" could be and how to model or visualize it, how it can be edited or projected, and what to even DO with the code (e.g. translate it) ... a tool like this would make it very easy to explore that space.\n\nWhat if the representation I choose is not great? What if the tools and process I provide for molding better tools and processes, really sucks? Well, then I mold better things for molding better things.\n\nSoftware is not just made of levers; it's made of levers for making levers. And I want to put that power in everyone's hands. This makes sense not just for programmers, but also for everyone else: What the heck does it even mean to have the power of a computer in your hand, without actually having any power of a computer in your hand? What a joke!\n\nBut what if people suck at computer stuff, though? Well gosh, if only they had the power of a computer to assist with using the power of a computer...",
                "author_name": "Dan Cook",
                "author_link": "https://futureofcoding.slack.com/team/UAVCC2X70",
                "author_icon": "https://avatars.slack-edge.com/2018-05-22/369438371830_ec35ac5b251f37e26aca_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1584764693467400?thread_ts=1584235196.324400&amp;cid=C5T9GPWFL",
                "footer": "From a thread in #general"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "saWJ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Eddy, I think the idea of working backwards from the desired result is an awesome idea! Much of the problems that the software industry has are do to working with some complex mechanism (language, tool, pattern, etc.) and then trying to \"emerge\" the human model out of it -- which is completely backwards to what makes sense! That's why the human model becomes an afterthought, and software does things people don't expect, and nobody knows what to even look for to fix the situation: they're working from the wrong end!\n\nAnyway, I talked at length in another thread about my thoughts on this, and how I'm approaching the problem of getting rigid mechanism or of the way by making it possible to freely scult whatever it means to design / code / model whatever it is that one is trying to do, rather than starting with a broken model and going the other way.\n\nIt's a lot to reformulate on this context, so here's a link to that post / thread: "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1584764693467400?thread_ts=1584235196.324400&cid=C5T9GPWFL",
                                "text": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1584764693467400?thread_ts=1584235196.324400&cid=C5T9GPWFL"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1580606860.029700",
        "parent_user_id": "UP6G25H35"
    },
    {
        "client_msg_id": "bc4ab492-1be1-4e8c-8247-40c445829859",
        "type": "message",
        "text": "Not sure if anyone is interested, but we just tweeted our first demo of Storyscript\u2019s NLP to new Code <https://twitter.com/StoryscriptHQ/status/1242469802309857286> \u2014 Thank you!",
        "user": "UJKKBAMLL",
        "ts": "1585066788.085100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/StoryscriptHQ|@StoryscriptHQ>: Send messages to <https://twitter.com/slack|@slack> when <https://twitter.com/github|@github> issues are opened.  \u2014 The #futureofwork is #storytelling with smarter #Coding and #NLP support. Anyone can code. <https://pbs.twimg.com/ext_tw_video_thumb/1242469367129845760/pu/img/p4vIjgymoqz6kP03.jpg>",
                "ts": 1585062859,
                "author_name": "Storyscript",
                "author_link": "https://twitter.com/StoryscriptHQ/status/1242469802309857286",
                "author_icon": "https://pbs.twimg.com/profile_images/1205067261859512320/Jmt8g3VT_normal.jpg",
                "author_subname": "@StoryscriptHQ",
                "text": "Send messages to <https://twitter.com/slack|@slack> when <https://twitter.com/github|@github> issues are opened.  \u2014 The #futureofwork is #storytelling with smarter #Coding and #NLP support. Anyone can code.",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/StoryscriptHQ/status/1242469802309857286",
                "thumb_url": "https://pbs.twimg.com/ext_tw_video_thumb/1242469367129845760/pu/img/p4vIjgymoqz6kP03.jpg",
                "thumb_width": 1200,
                "thumb_height": 526,
                "video_html_width": 1200,
                "video_html_height": 526,
                "video_html": "<video controls poster=\"https://pbs.twimg.com/ext_tw_video_thumb/1242469367129845760/pu/img/p4vIjgymoqz6kP03.jpg\" width=\"1200\" height=\"526\"><source type=\"video/mp4\" src=\"https://video.twimg.com/ext_tw_video/1242469367129845760/pu/vid/1644x720/Q5nsBcWdFHVjWtec.mp4?tag=10\"></video>",
                "id": 1,
                "original_url": "https://twitter.com/StoryscriptHQ/status/1242469802309857286",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qwQDl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure if anyone is interested, but we just tweeted our first demo of Storyscript\u2019s NLP to new Code "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/StoryscriptHQ/status/1242469802309857286"
                            },
                            {
                                "type": "text",
                                "text": " \u2014 Thank you!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "reply_count": 28,
        "reply_users_count": 8,
        "latest_reply": "1585170889.029400",
        "reply_users": [
            "UJKKBAMLL",
            "U85HCL7JP",
            "UC21F8Q48",
            "UT9TWSZB5",
            "UC2A2ARPT",
            "UG0EL18H3",
            "UA14TGLTC",
            "UEQ6M68H0"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC21F8Q48",
                    "UBN9AFS0N",
                    "U85HCL7JP",
                    "UJ6LDMMN0",
                    "U01038KJXRB"
                ],
                "count": 5
            },
            {
                "name": "100",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            },
            {
                "name": "heart_eyes",
                "users": [
                    "U01038KJXRB",
                    "UNCP67JSK"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "text": "PS don\u2019t look TOO much into the actual code, this was a marketing demo which stripped it down. Here is, more or less, the real code.",
        "files": [
            {
                "id": "F010NTFT5S4",
                "created": 1585066905,
                "timestamp": 1585066905,
                "name": "Screen Shot 2020-03-24 at 09.21.38.png",
                "title": "Screen Shot 2020-03-24 at 09.21.38.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UJKKBAMLL",
                "editable": false,
                "size": 56472,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F010NTFT5S4/screen_shot_2020-03-24_at_09.21.38.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F010NTFT5S4/download/screen_shot_2020-03-24_at_09.21.38.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F010NTFT5S4-24cbed274f/screen_shot_2020-03-24_at_09.21.38_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F010NTFT5S4-24cbed274f/screen_shot_2020-03-24_at_09.21.38_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F010NTFT5S4-24cbed274f/screen_shot_2020-03-24_at_09.21.38_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 192,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F010NTFT5S4-24cbed274f/screen_shot_2020-03-24_at_09.21.38_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 256,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F010NTFT5S4-24cbed274f/screen_shot_2020-03-24_at_09.21.38_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F010NTFT5S4-24cbed274f/screen_shot_2020-03-24_at_09.21.38_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 385,
                "image_exif_rotation": 1,
                "original_w": 730,
                "original_h": 390,
                "thumb_tiny": "AwAZADDRzz1/Sjd7/pSsQqkk4A70gZSAd/XkUAGe+ePpQD7/AKUblxndwPelHPINACZ5xn9KOQR3p2KKAEIBBB5Bo2gYAAwPalooATHsPyo59qWigA5o+tFFAH//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UJKKBAMLL/F010NTFT5S4/screen_shot_2020-03-24_at_09.21.38.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F010NTFT5S4-baaef23cee",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Yq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "PS don\u2019t look TOO much into the actual code, this was a marketing demo which stripped it down. Here is, more or less, the real code."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UJKKBAMLL",
        "display_as_bot": false,
        "ts": "1585066908.085300",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1585066931.000000"
        },
        "client_msg_id": "63ee1b2c-2c9a-4f54-94a3-06d4815899ba",
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "8b83e165-6893-41a3-be74-34e0def3cbd4",
        "type": "message",
        "text": "Looks cool <@UJKKBAMLL>! Do you write code in Storyscript or a phrase like the video shows?",
        "user": "U85HCL7JP",
        "ts": "1585067092.085800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DFEV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks cool "
                            },
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": "! Do you write code in Storyscript or a phrase like the video shows?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "9d79ac90-ab39-4891-9652-2e81830cd662",
        "type": "message",
        "text": "Thank you! You can do both for sure. It\u2019s more a wysiwig than an IDE. NLP is only to help you get the basics started by just having a dialog with the computer.",
        "user": "UJKKBAMLL",
        "ts": "1585067146.086000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2oQgl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you! You can do both for sure. It\u2019s more a wysiwig than an IDE. NLP is only to help you get the basics started by just having a dialog with the computer."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "484341e3-a78a-4268-a1a9-f57fc137666a",
        "type": "message",
        "text": "If anyone has a specific idea of what they want to see in Storyscript I can wip it up pretty quick. Just let me know :smile_cat:",
        "user": "UJKKBAMLL",
        "ts": "1585067199.086200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1585067221.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J41n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If anyone has a specific idea of what they want to see in Storyscript I can wip it up pretty quick. Just let me know "
                            },
                            {
                                "type": "emoji",
                                "name": "smile_cat"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "3a81aac4-915e-449e-8fee-f3e1943ecd77",
        "type": "message",
        "text": "the time is ripe for revisiting speech input for code\u2014glad to see you\u2019ve taken a shot at it!!",
        "user": "UC21F8Q48",
        "ts": "1585067454.086600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m403",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the time is ripe for revisiting speech input for code\u2014glad to see you\u2019ve taken a shot at it!!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UD31LGQKB"
                ],
                "count": 2
            },
            {
                "name": "brain",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6C72EA8C-D0E3-4655-93D1-56EBCE46620E",
        "type": "message",
        "text": "Very cool",
        "user": "UT9TWSZB5",
        "ts": "1585067628.086900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=N8Aw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very cool"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "f0850f97-bd6a-4335-9743-c289eb977f26",
        "type": "message",
        "text": "I agree Brian.  We tackle this from many sides at the same time. NLP, abstraction, serverless, deployless, and wysiwyg UI builder kits.",
        "user": "UJKKBAMLL",
        "ts": "1585067677.087300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZYapF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree Brian.  We tackle this from many sides at the same time. NLP, abstraction, serverless, deployless, and wysiwyg UI builder kits."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "bf8eed88-4cad-4b9b-9a7e-b8ea62d13dfa",
        "type": "message",
        "text": "I would say that NLP to Python, for example, does not solve infra/deploy/server issues. So the key here is higher abstraction + NLP.",
        "user": "UJKKBAMLL",
        "ts": "1585067709.087600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LEFH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would say that NLP to Python, for example, does not solve infra/deploy/server issues. So the key here is higher abstraction + NLP."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "b22dd828-4e97-496b-8a92-e13c24082b5c",
        "type": "message",
        "text": "This is great, Steve. This demo reminded me a bit of Fantastical, and I think this _small, one statement at a time_ style of NLP is a great fit for the problem domain you're talking about right now (connecting other services together) (I say \"talking about right now\" because I'm assuming you've got bigger plans for the future, too).\n\nThis seems like the sort of feature that'd lend itself really well to a playground on your website \u2014 write some NL code, see what it gets parsed into. Any plans for a public interactive demo like that?",
        "user": "UC2A2ARPT",
        "ts": "1585072332.088300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1585072357.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8NKSt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is great, Steve. This demo reminded me a bit of Fantastical, and I think this "
                            },
                            {
                                "type": "text",
                                "text": "small, one statement at a time",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " style of NLP is a great fit for the problem domain you're talking about right now (connecting other services together) (I say \"talking about right now\" because I'm assuming you've got bigger plans for the future, too).\n\nThis seems like the sort of feature that'd lend itself really well to a playground on your website \u2014 write some NL code, see what it gets parsed into. Any plans for a public interactive demo like that?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1e47c625-c635-4fe1-ae5f-703a37ee9c1a",
        "type": "message",
        "text": "Thank you Ivan! Yes, indeed this is a very small step in our journey. Our mission is much bolder.\nWe do plan to have an interactive, public, demo and live development straight on the website. It\u2019s just going to take some time before we invite people publicly. We are hand-holding customers, one-by-one for quite some time before GA.",
        "user": "UJKKBAMLL",
        "ts": "1585073176.088600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PytYu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you Ivan! Yes, indeed this is a very small step in our journey. Our mission is much bolder.\nWe do plan to have an interactive, public, demo and live development straight on the website. It\u2019s just going to take some time before we invite people publicly. We are hand-holding customers, one-by-one for quite some time before GA."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UNCP67JSK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "a4892f21-10d3-4d98-9a7f-ac407e6400b4",
        "type": "message",
        "text": "Not showing in the demo is our collaboration tools, community, sharing, FE, debugging, data layer and embedded library. We just focused on NLP in this demo only.",
        "user": "UJKKBAMLL",
        "ts": "1585073213.088800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1585073222.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OA8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not showing in the demo is our collaboration tools, community, sharing, FE, debugging, data layer and embedded library. We just focused on NLP in this demo only."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "fa9470a8-2bb4-4928-9342-bda75ba84d02",
        "type": "message",
        "text": "<@UJKKBAMLL>, is there something in Storyscript forcing versioning of the NLP model? If the NLP parses a phrase certain way today is there any way to ensure that it will be parsed the same way in the future?",
        "user": "U85HCL7JP",
        "ts": "1585088583.089700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ja46g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": ", is there something in Storyscript forcing versioning of the NLP model? If the NLP parses a phrase certain way today is there any way to ensure that it will be parsed the same way in the future?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "ce159c13-217c-4b42-8d76-d17d956c2743",
        "type": "message",
        "text": "Good question. Maybe there is some confusion however. The NL is not the source of truth: the resulting code is. The code will work always with versioning in mind, it won\u2019t break when the NLP gets smarter. So it goes. The goal of the NLP is to _assist_ users in developing complex business-logic but is *not* the only way to do it. You can of course still write code (with auto-completing, strong-type, yadda yadda). The NLP demos well and sets the tone of the product; but in the long term will be a source of creation and interaction with the user like never seen before.",
        "user": "UJKKBAMLL",
        "ts": "1585088812.089900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1585088837.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kjoR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good question. Maybe there is some confusion however. The NL is not the source of truth: the resulting code is. The code will work always with versioning in mind, it won\u2019t break when the NLP gets smarter. So it goes. The goal of the NLP is to "
                            },
                            {
                                "type": "text",
                                "text": "assist",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " users in developing complex business-logic but is "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the only way to do it. You can of course still write code (with auto-completing, strong-type, yadda yadda). The NLP demos well and sets the tone of the product; but in the long term will be a source of creation and interaction with the user like never seen before."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7a3f9455-8e1e-49bf-85a4-f18dc3c1b048",
        "type": "message",
        "text": "Let\u2019s say today, we can take a block of NL and generate only 1% code. Tomorrow 2%. Next year 20%. Then, the tipping point, and you have users that simply ask the computer to build stuff and it does it; leaving you with holes to fill in (because NL is full of holes)",
        "user": "UJKKBAMLL",
        "ts": "1585088915.090200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1585088935.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uErPZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let\u2019s say today, we can take a block of NL and generate only 1% code. Tomorrow 2%. Next year 20%. Then, the tipping point, and you have users that simply ask the computer to build stuff and it does it; leaving you with holes to fill in (because NL is full of holes)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f15049f2-6e7d-4eb5-bdf0-2f282f573fea",
        "type": "message",
        "text": "<@U85HCL7JP> Thank you and let me know if that answered the question :slightly_smiling_face:",
        "user": "UJKKBAMLL",
        "ts": "1585088978.090500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lE=r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " Thank you and let me know if that answered the question "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "763c2607-12b3-4f5c-98d3-ecfb966339af",
        "type": "message",
        "text": "Thanks for the response, yes it does answer the question",
        "user": "U85HCL7JP",
        "ts": "1585089234.090700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ihkOt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the response, yes it does answer the question"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "0ea47799-4d1b-4a49-907f-d16055b1ca13",
        "type": "message",
        "text": "That also solidifies things for me, too. FWIW, the demo definitely gave me the impression that the code is the source of truth, and the NLP is just a convenient/friendly way to generate the code with machine assistance. (Thus the Fantastical reference, since they take a very similar approach to working with calendar events.)",
        "user": "UC2A2ARPT",
        "ts": "1585090567.090900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i=lO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That also solidifies things for me, too. FWIW, the demo definitely gave me the impression that the code is the source of truth, and the NLP is just a convenient/friendly way to generate the code with machine assistance. (Thus the Fantastical reference, since they take a very similar approach to working with calendar events.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585066788.085100",
        "parent_user_id": "UJKKBAMLL"
    }
]