[
    {
        "type": "message",
        "text": "Lamdu\u2019s second 2 minute video: this time focusing on localization, which I haven\u2019t yet made any video or post about",
        "files": [
            {
                "id": "F01243B17FH",
                "created": 1587909058,
                "timestamp": 1587909058,
                "name": "2 Minute Week #2.mp4",
                "title": "2 Minute Week #2.mp4",
                "mimetype": "video/mp4",
                "filetype": "mp4",
                "pretty_type": "MPEG 4 Video",
                "user": "U79HM6726",
                "editable": false,
                "size": 12180576,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01243B17FH/2_minute_week__2.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01243B17FH/download/2_minute_week__2.mp4",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F01243B17FH-33a8dfaa50/2_minute_week__2_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/U79HM6726/F01243B17FH/2_minute_week__2.mp4",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01243B17FH-0897da4fd1",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mlCt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lamdu\u2019s second 2 minute video: this time focusing on localization, which I haven\u2019t yet made any video or post about"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U79HM6726",
        "display_as_bot": false,
        "ts": "1587909109.114500",
        "client_msg_id": "774fd035-723a-4e92-8e92-506f5eb8d818",
        "thread_ts": "1587909109.114500",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1588030797.150000",
        "reply_users": [
            "UC2A2ARPT",
            "U79HM6726",
            "UNGNT3BKR"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "clap::skin-tone-4",
                "users": [
                    "UBN9AFS0N",
                    "UCUSW7WVD",
                    "UUQ2EQW21",
                    "U85HCL7JP",
                    "U7C7B75R6",
                    "UA14TGLTC",
                    "U78TZ437S",
                    "U0118UBB41G"
                ],
                "count": 8
            },
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UD31LGQKB",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "type": "message",
        "text": "Week 2 Video of my live coding project overview, focusing on the Synthesizer currently.  I'm new to audio programming, so this has been an interesting journey.",
        "files": [
            {
                "id": "F012K6EMSHH",
                "created": 1587928100,
                "timestamp": 1587928100,
                "name": "Week2.mp4",
                "title": "Week2.mp4",
                "mimetype": "video/mp4",
                "filetype": "mp4",
                "pretty_type": "MPEG 4 Video",
                "user": "UUQ2EQW21",
                "editable": false,
                "size": 23776111,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F012K6EMSHH/week2.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F012K6EMSHH/download/week2.mp4",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F012K6EMSHH-ef921538fe/week2_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/UUQ2EQW21/F012K6EMSHH/week2.mp4",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F012K6EMSHH-086772e864",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D1FGo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Week 2 Video of my live coding project overview, focusing on the Synthesizer currently.  I'm new to audio programming, so this has been an interesting journey."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UUQ2EQW21",
        "display_as_bot": false,
        "ts": "1587928115.115000",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1587928735.000000"
        },
        "client_msg_id": "4e5eb8ce-20a4-4005-b5bd-6a16c53c235b",
        "thread_ts": "1587928115.115000",
        "reply_count": 13,
        "reply_users_count": 3,
        "latest_reply": "1587988143.144800",
        "reply_users": [
            "UUQ2EQW21",
            "UBN9AFS0N",
            "UC2A2ARPT"
        ],
        "subscribed": true,
        "last_read": "1587989860.059300",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U0118UBB41G"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2e2cad84-84ca-4c3f-a40e-b18debeed05f",
        "type": "message",
        "text": "I wanted to say a couple things in the video, but didn't remember to mention them:\n\u2022 The code is generating what might well be thought of as 'SynthDefs' in SuperCollider.  If you think of how you build a synthesizer in that tool, and then add the ability to generate a nice UI for controlling it, then that's the direction I'm going in initially.\n\u2022 The second more complex synth I show is modelled on the 'AudioKit Synth One' Open Source synthesizer.  I basically read through their DSP code and figured out how to make my synthesizer have the same layout.  This is a great way to troubleshoot my units and check that I'm getting good quality audio to match an existing sythesizer.  I've found a lot of bugs this way.  What I've learned is that somewhere between generating sine waves and modulating them, and outputting sound, there are lots of tips and tricks to making it sound nice.  I'm a GPU programmer, not an Audio guy, so that's been very helpful.  The above said, it is sometimes interesting how GPU solutions to problems often have parallels in Audio!",
        "user": "UUQ2EQW21",
        "ts": "1587930835.115700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1587930878.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jdg/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wanted to say a couple things in the video, but didn't remember to mention them:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The code is generating what might well be thought of as 'SynthDefs' in SuperCollider.  If you think of how you build a synthesizer in that tool, and then add the ability to generate a nice UI for controlling it, then that's the direction I'm going in initially."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The second more complex synth I show is modelled on the 'AudioKit Synth One' Open Source synthesizer.  I basically read through their DSP code and figured out how to make my synthesizer have the same layout.  This is a great way to troubleshoot my units and check that I'm getting good quality audio to match an existing sythesizer.  I've found a lot of bugs this way.  What I've learned is that somewhere between generating sine waves and modulating them, and outputting sound, there are lots of tips and tricks to making it sound nice.  I'm a GPU programmer, not an Audio guy, so that's been very helpful.  The above said, it is sometimes interesting how GPU solutions to problems often have parallels in Audio!"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1587928115.115000",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "b4c5abcb-2631-4484-8939-c28948ddca77",
        "type": "message",
        "text": "looks really nice! are you planning to add some scripting layer like lua to have a more dynamic way to define them other than c++?",
        "user": "UBN9AFS0N",
        "ts": "1587931778.116000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "92Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "looks really nice! are you planning to add some scripting layer like lua to have a more dynamic way to define them other than c++?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587928115.115000",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "ce29f771-5779-4fe0-98fd-47a806ee1af1",
        "type": "message",
        "text": "once you generate the sound, what do you use to play it? supercollider? something else?",
        "user": "UBN9AFS0N",
        "ts": "1587931808.116200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=+Hy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "once you generate the sound, what do you use to play it? supercollider? something else?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587928115.115000",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "E3E0CC28-F2B2-4AC1-AAF6-E764A301E432",
        "type": "message",
        "text": "Hi <@UBN9AFS0N>, I guess I didn\u2019t say it, but I have some experimental scripting already, but intending to try the language Fe as a simpler solution.  That\u2019s the Synth (it replaces SC as the audio generator).  The next part is driving the synth with note events. I have 2 approaches - firstly, the built in Orca I showed in my last video, secondly, a pattern based language I\u2019ve been experimenting with. I need to pull all these pieces together and make a unified demo - I think that will help clarify. Think \u2018single executable\u2019 with no dependencies like supercollider, etc.....",
        "user": "UUQ2EQW21",
        "ts": "1587933081.124300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PZE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": ", I guess I didn\u2019t say it, but I have some experimental scripting already, but intending to try the language Fe as a simpler solution.  That\u2019s the Synth (it replaces SC as the audio generator).  The next part is driving the synth with note events. I have 2 approaches - firstly, the built in Orca I showed in my last video, secondly, a pattern based language I\u2019ve been experimenting with. I need to pull all these pieces together and make a unified demo - I think that will help clarify. Think \u2018single executable\u2019 with no dependencies like supercollider, etc....."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587928115.115000",
        "parent_user_id": "UUQ2EQW21",
        "reactions": [
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "526c65fe-8188-4d11-9e6c-29fb484a8ef9",
        "type": "message",
        "text": "You can see WebAssembly, as web first technology that is interesting enough that it is seen useful outside the web platform. So, like Mariano points it, there are WASI initiative and all the WebAssembly runners (like wasmer) that allow you to take a WebAssembly binary and execute on any computer. Some people have even try to build some WebAssembly unikernerls.",
        "user": "UJ6LDMMN0",
        "ts": "1587935636.124800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RHZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can see WebAssembly, as web first technology that is interesting enough that it is seen useful outside the web platform. So, like Mariano points it, there are WASI initiative and all the WebAssembly runners (like wasmer) that allow you to take a WebAssembly binary and execute on any computer. Some people have even try to build some WebAssembly unikernerls."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "190bb672-6d89-4f02-b930-a5d8c0eb4214",
        "type": "message",
        "text": "Then \"why is WebAssembly special?\" It is yet another low level compilation target kind of bytcode, but well designed and with security in mind. On the security side, the WASI also add capability-based security. And there is a large adoption of this standard by the browser vendors, so I guess it is a solid ground for its future.",
        "user": "UJ6LDMMN0",
        "ts": "1587935952.125000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y2V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Then \"why is WebAssembly special?\" It is yet another low level compilation target kind of bytcode, but well designed and with security in mind. On the security side, the WASI also add capability-based security. And there is a large adoption of this standard by the browser vendors, so I guess it is a solid ground for its future."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587367625.063900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "c32c4ea3-1d33-42d3-a020-f3d1d38f4cf6",
        "type": "message",
        "text": "I probably should have done this one first as it sets the stage, but heck it is only 2 minutes so hopefully not too boring!  <https://youtu.be/9zu_i_RbtDA>",
        "user": "UEQ6M68H0",
        "ts": "1587936094.125800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Two minute Beads language intro episode  002",
                "title_link": "https://youtu.be/9zu_i_RbtDA",
                "author_name": "Edward De Jong",
                "author_link": "https://www.youtube.com/channel/UCiBO5hr2IVsYK8wiLznImTQ",
                "thumb_url": "https://i.ytimg.com/vi/9zu_i_RbtDA/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Two minute Beads language intro episode  002",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/9zu_i_RbtDA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/9zu_i_RbtDA",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/9zu_i_RbtDA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tjMB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I probably should have done this one first as it sets the stage, but heck it is only 2 minutes so hopefully not too boring!  "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/9zu_i_RbtDA"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587936094.125800",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1588060716.150900",
        "reply_users": [
            "UC2A2ARPT",
            "UBN9AFS0N",
            "UE6EFEPTQ",
            "UA14TGLTC"
        ],
        "subscribed": true,
        "last_read": "1588060716.150900",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UCUSW7WVD",
                    "U79HM6726",
                    "UBN9AFS0N",
                    "UCGAK10LS",
                    "UDQBTJ211",
                    "UA14TGLTC",
                    "UJ6LDMMN0",
                    "U0118UBB41G"
                ],
                "count": 9
            }
        ]
    }
]