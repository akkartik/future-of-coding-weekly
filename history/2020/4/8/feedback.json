[
    {
        "client_msg_id": "ba81f1c3-fda2-47e4-9ea0-41c95969912d",
        "type": "message",
        "text": "Senior developers: how would you change this post if _you_ were writing it? <http://loyc.net/2020/principles-of-programming.html>",
        "user": "UD6EXQVM0",
        "ts": "1586366880.096300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HyxH0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Senior developers: how would you change this post if "
                            },
                            {
                                "type": "text",
                                "text": "you",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " were writing it? "
                            },
                            {
                                "type": "link",
                                "url": "http://loyc.net/2020/principles-of-programming.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "reply_count": 17,
        "reply_users_count": 8,
        "latest_reply": "1586712119.112100",
        "reply_users": [
            "UT9TWSZB5",
            "UD6EXQVM0",
            "UKJGU23KP",
            "UJN1TAYEQ",
            "ULM3U6275",
            "UEQ6M68H0",
            "UA14TGLTC",
            "UUB7RA7PF"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "eee2ab58-7829-4e0f-a428-9ed95ae2a542",
        "type": "message",
        "text": "Who is your audience?",
        "user": "UT9TWSZB5",
        "ts": "1586366992.096400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "92W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Who is your audience?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c00e2912-9062-4b9c-8fa3-b6c1542294df",
        "type": "message",
        "text": "I admire how thorough you are, but the reality is that there are tons of posts on this topic and its unlikely people are going to read all of this... So concision is important. Here's something I wrote recently -- not quite my \"principles\" but I think they have a higher change of being read and understood: <https://www.notion.so/d948a936dce64832893fac481149b8d5>",
        "user": "UT9TWSZB5",
        "ts": "1586367196.096600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Chet's Workspace on Notion",
                "title": "Engineering Values",
                "title_link": "https://www.notion.so/d948a936dce64832893fac481149b8d5",
                "text": "Goals",
                "fallback": "Chet's Workspace on Notion: Engineering Values",
                "from_url": "https://www.notion.so/d948a936dce64832893fac481149b8d5",
                "id": 1,
                "original_url": "https://www.notion.so/d948a936dce64832893fac481149b8d5"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iw3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I admire how thorough you are, but the reality is that there are tons of posts on this topic and its unlikely people are going to read all of this... So concision is important. Here's something I wrote recently -- not quite my \"principles\" but I think they have a higher change of being read and understood: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.notion.so/d948a936dce64832893fac481149b8d5"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "a1ef2bd0-1892-44b6-bf13-2ef9c324c629",
        "type": "message",
        "text": "If it's too concise, readers won't learn anything. I think some \"hammering\" is needed to get through to people.",
        "user": "UD6EXQVM0",
        "ts": "1586368660.096900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "44E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If it's too concise, readers won't learn anything. I think some \"hammering\" is needed to get through to people."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "996d5eeb-1c2c-49e5-aeff-4feec0dbcc31",
        "type": "message",
        "text": "That's true. Its a balance...",
        "user": "UT9TWSZB5",
        "ts": "1586368684.097100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fAzB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's true. Its a balance..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "e391cbfb-4d62-4ccb-aeb5-56cd6d3b91c5",
        "type": "message",
        "text": "I think a long post has to have some kind of hook that will let people know early what they might get out of it that they haven\u2019t seen before.",
        "user": "UKJGU23KP",
        "ts": "1586370189.097300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qIbIi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think a long post has to have some kind of hook that will let people know early what they might get out of it that they haven\u2019t seen before."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "036927f4-0379-4c60-aecf-42ef0ec905c4",
        "type": "message",
        "text": "Summarize the 10 principles at the top.",
        "user": "UJN1TAYEQ",
        "ts": "1586374560.098100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s=zs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Summarize the 10 principles at the top."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "893424A5-840B-4BF5-9420-D9936ABBC0CA",
        "type": "message",
        "text": "I was thinking about teams having a dialog while developing in collaboration. A development process gathering people from different disciplines in a constructive discussion, learning from each other and having an application that reduce the communication barrier.",
        "user": "U0118UBB41G",
        "ts": "1586375008.102500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pp1X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was thinking about teams having a dialog while developing in collaboration. A development process gathering people from different disciplines in a constructive discussion, learning from each other and having an application that reduce the communication barrier."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585750452.046800",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "94a9d5c3-6ac4-43ef-9382-389338a12bab",
        "type": "message",
        "text": "Remove section 8.",
        "user": "ULM3U6275",
        "ts": "1586379975.102700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5k1hi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Remove section 8."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "78b56ced-8096-42f8-b9a7-70b6675b4f49",
        "type": "message",
        "text": "In section 5, i would suggest that instead of recommending tests which are extra work, you instead recommend building scaffolding permanently into the software. For example in my chess program i have a flag that lets you set up a position that allows easy testing of the trickiest features of the game, such as castling the king or en passant capturing. This saves time during user testing.\n\nsection 7, i would emphasize that comments relating to function formal parameters are far more important than any other comments. Many people use short names for parameters, and unless you know what the parameter is for, it makes it very hard to read. If you are going to only comment a little bit, spend it on the parameters.\n\nSome of your comments about performance are no longer true. For example, `JS` is now nearly as fast as `C` due to the incredible V8 engine. In many cases today the programs we run are dominated by time spent in the OS or underlying platform. In a web browser for example there is a huge overhead for each tab, often tens of megabytes, far more than our own programs. Gone are the days of low overhead operating systems; everything is a sweathog now outside of embedded systems.\n\nI also think that just tossing your readers into Functional programming without justifying it is unsound. Nested for-loops are superior to `Map/filter` because they can  be interrupted while Map cannot. `Map` is merely an encapsulation of a `for-loop` and thus is merely syntactic sugar as they call it, that also happens to remove the ability to stop precisely. You may be traversing a 2D array and want to stop on a match. How does one do that with Map? You can't. So `for-loops` are not an endangered species. In fact all of the primitive instructions as envisioned by the earliest pioneers such as arithmetic, 2-way and N-way branching, call/return, looping, will never go away; nothing wrong with learning them",
        "user": "UEQ6M68H0",
        "ts": "1586382766.103300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1586405980.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NFH+N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In section 5, i would suggest that instead of recommending tests which are extra work, you instead recommend building scaffolding permanently into the software. For example in my chess program i have a flag that lets you set up a position that allows easy testing of the trickiest features of the game, such as castling the king or en passant capturing. This saves time during user testing.\n\nsection 7, i would emphasize that comments relating to function formal parameters are far more important than any other comments. Many people use short names for parameters, and unless you know what the parameter is for, it makes it very hard to read. If you are going to only comment a little bit, spend it on the parameters.\n\nSome of your comments about performance are no longer true. For example, "
                            },
                            {
                                "type": "text",
                                "text": "JS",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is now nearly as fast as "
                            },
                            {
                                "type": "text",
                                "text": "C",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " due to the incredible V8 engine. In many cases today the programs we run are dominated by time spent in the OS or underlying platform. In a web browser for example there is a huge overhead for each tab, often tens of megabytes, far more than our own programs. Gone are the days of low overhead operating systems; everything is a sweathog now outside of embedded systems.\n\nI also think that just tossing your readers into Functional programming without justifying it is unsound. Nested for-loops are superior to "
                            },
                            {
                                "type": "text",
                                "text": "Map/filter",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " because they can  be interrupted while Map cannot. "
                            },
                            {
                                "type": "text",
                                "text": "Map",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is merely an encapsulation of a "
                            },
                            {
                                "type": "text",
                                "text": "for-loop",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and thus is merely syntactic sugar as they call it, that also happens to remove the ability to stop precisely. You may be traversing a 2D array and want to stop on a match. How does one do that with Map? You can't. So"
                            },
                            {
                                "type": "text",
                                "text": " for-loops",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are not an endangered species. In fact all of the primitive instructions as envisioned by the earliest pioneers such as arithmetic, 2-way and N-way branching, call/return, looping, will never go away; nothing wrong with learning them"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586366880.096300",
        "parent_user_id": "UD6EXQVM0"
    }
]