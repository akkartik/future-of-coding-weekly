[
    {
        "client_msg_id": "141101fc-0de9-49f4-8742-b0fed7e69e7f",
        "type": "message",
        "text": "Some pretty good stuff there man. MIT CSAIL group mentioned there has produced some pretty cool stuff in this niche.",
        "user": "UDKTZSD6H",
        "ts": "1586312747.176000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pIKU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some pretty good stuff there man. MIT CSAIL group mentioned there has produced some pretty cool stuff in this niche."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586258844.170700",
        "parent_user_id": "UF1ATC4RF"
    },
    {
        "client_msg_id": "5e845e7f-e221-4eaa-a260-a3cab4b5f47d",
        "type": "message",
        "text": "I pick up this tweet now and then and look at it: <https://twitter.com/prathyvsh/status/1238848229212598274> Also <@UC2A2ARPT>'s Hest development thread.",
        "user": "UDKTZSD6H",
        "ts": "1586313492.176900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/prathyvsh|@prathyvsh>: Still mesmerizing after 2 years and a hint at what\u2019s possible with design systems: <https://twitter.com/greje656/status/1040933692397559810>",
                "ts": 1584199409,
                "author_name": "Prathyush",
                "author_link": "https://twitter.com/prathyvsh/status/1238848229212598274",
                "author_icon": "https://pbs.twimg.com/profile_images/1157092207075061760/v_xB---l_normal.jpg",
                "author_subname": "@prathyvsh",
                "text": "Still mesmerizing after 2 years and a hint at what\u2019s possible with design systems: <https://twitter.com/greje656/status/1040933692397559810>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/prathyvsh/status/1238848229212598274",
                "id": 1,
                "original_url": "https://twitter.com/prathyvsh/status/1238848229212598274",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https://twitter.com/greje656|@greje656>: Made some more progress with my river render. Switched from using advected textures to Stefan Jeschke's Siggraph 2018 Wave Profile ideas. Looks much richer! #screenshotsaturday <https://pbs.twimg.com/ext_tw_video_thumb/1040933389879177216/pu/img/sG81an9i4PFcGYZz.jpg>",
                "ts": 1537012906,
                "author_name": "jpg",
                "author_link": "https://twitter.com/greje656/status/1040933692397559810",
                "author_icon": "https://pbs.twimg.com/profile_images/1104171716438315009/63BZm4_X_normal.jpg",
                "author_subname": "@greje656",
                "text": "Made some more progress with my river render. Switched from using advected textures to Stefan Jeschke's Siggraph 2018 Wave Profile ideas. Looks much richer! #screenshotsaturday",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/greje656/status/1040933692397559810",
                "thumb_url": "https://pbs.twimg.com/ext_tw_video_thumb/1040933389879177216/pu/img/sG81an9i4PFcGYZz.jpg",
                "thumb_width": 1024,
                "thumb_height": 512,
                "video_html_width": 1024,
                "video_html_height": 512,
                "video_html": "<video controls poster=\"https://pbs.twimg.com/ext_tw_video_thumb/1040933389879177216/pu/img/sG81an9i4PFcGYZz.jpg\" width=\"1024\" height=\"512\"><source type=\"video/mp4\" src=\"https://video.twimg.com/ext_tw_video/1040933389879177216/pu/vid/1024x512/RNfPlN38IbtrflNy.mp4?tag=5\"></video>",
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g6H6T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I pick up this tweet now and then and look at it: "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/prathyvsh/status/1238848229212598274"
                            },
                            {
                                "type": "text",
                                "text": " Also "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": "'s Hest development thread."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586022158.113700",
        "parent_user_id": "U01176YGU4W",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "58f342fb-a9ed-4204-a856-1f4c74bb7e6f",
        "type": "message",
        "text": "<@UR482RFPY> This thread might be of interest: <https://twitter.com/jonathoda/status/1247230788434886657>",
        "user": "UC2A2ARPT",
        "ts": "1586314557.177400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/jonathoda|@jonathoda>: Time to take another run at structured editing. If you could only recommend ONE paper/system to look at, what would it be?",
                "ts": 1586197967,
                "author_name": "Jonathan Edwards",
                "author_link": "https://twitter.com/jonathoda/status/1247230788434886657",
                "author_icon": "https://pbs.twimg.com/profile_images/587356046223486976/Si4vWb1__normal.jpg",
                "author_subname": "@jonathoda",
                "text": "Time to take another run at structured editing. If you could only recommend ONE paper/system to look at, what would it be?",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/jonathoda/status/1247230788434886657",
                "id": 1,
                "original_url": "https://twitter.com/jonathoda/status/1247230788434886657",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "28Pbi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UR482RFPY"
                            },
                            {
                                "type": "text",
                                "text": " This thread might be of interest: "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/jonathoda/status/1247230788434886657"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585950579.096100",
        "parent_user_id": "UR482RFPY",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCKRZS3DZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "204c536b-895e-4404-b020-703889e1cc8d",
        "type": "message",
        "text": "I'd say it all depends on what aspect of software you look at. At the most global level, incrementalism is the only way to go: lots of software systems have become critical infrastructure for modern societies, and they won't go away, nor can they be replaced overnight. At a more focused level (as in <@UEQ6M68H0>\u2019s explanation about programming languages), incrementalism mainly leads to accumulation of cruft. Many people work on better foundations for future work, but neglect building bridges to the legacy systems that we all depend on. I tend to agree with those who say that more focused (and thus simpler) languages and tools are the way to go, but unless they cooperate with the technology of the past and with each other, they won't even be an option for people who deal with information processing on the decade-or-above time scale.",
        "user": "UJBAJNFLK",
        "ts": "1586339355.177700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OyHv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd say it all depends on what aspect of software you look at. At the most global level, incrementalism is the only way to go: lots of software systems have become critical infrastructure for modern societies, and they won't go away, nor can they be replaced overnight. At a more focused level (as in "
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": "\u2019s explanation about programming languages), incrementalism mainly leads to accumulation of cruft. Many people work on better foundations for future work, but neglect building bridges to the legacy systems that we all depend on. I tend to agree with those who say that more focused (and thus simpler) languages and tools are the way to go, but unless they cooperate with the technology of the past and with each other, they won't even be an option for people who deal with information processing on the decade-or-above time scale."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586193289.167900",
        "parent_user_id": "UAHHWT22U",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6e9b59ae-a280-4867-a919-fdf370b5fe73",
        "type": "message",
        "text": "One idea I've been thinking a lot about is the GUI layout engine being an interactive system in itself and self-organising. GUI elements should be self-assembling machines trying to find the right placement for themselves. Can't really be done in React, because React makes decisions about layout",
        "user": "U0119RRB1MK",
        "ts": "1586346043.180000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0119RRB1MK",
            "ts": "1586346456.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1lVB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One idea I've been thinking a lot about is the GUI layout engine being an interactive system in itself and self-organising. GUI elements should be self-assembling machines trying to find the right placement for themselves. Can't really be done in React, because React makes decisions about layout"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "reply_count": 27,
        "reply_users_count": 8,
        "latest_reply": "1586468413.211800",
        "reply_users": [
            "UUQ2EQW21",
            "U0119RRB1MK",
            "UAJKEBGP8",
            "UNBPP291C",
            "UKDM3GLAJ",
            "UC2A2ARPT",
            "UT9TWSZB5",
            "UFEQUBNNT"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "6943cba5-6894-4373-a0bd-e43eb94aee14",
        "type": "message",
        "text": "I'd be interested in what you come up with.  As someone who has dabbled in GUI layout code, it's never easy... just writing a rectangle manager with a set of constraints that work for all use cases can be surprisingly difficult to get right.",
        "user": "UUQ2EQW21",
        "ts": "1586346453.180200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GLr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd be interested in what you come up with.  As someone who has dabbled in GUI layout code, it's never easy... just writing a rectangle manager with a set of constraints that work for all use cases can be surprisingly difficult to get right."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCKRZS3DZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d0b63c2c-21e2-478b-8d0e-3802fd1793e5",
        "type": "message",
        "text": "I've got a system that takes statements like this:\n```todoField above todosList\ntodosList above todoFilters\nsubmitTodo rightOf todoField```\nAnd turns it into a bootstrap layout using React",
        "user": "U0119RRB1MK",
        "ts": "1586346504.180500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0119RRB1MK",
            "ts": "1586346988.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RDG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've got a system that takes statements like this:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "todoField above todosList\ntodosList above todoFilters\nsubmitTodo rightOf todoField"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And turns it into a bootstrap layout using React"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "7d15b22b-93f6-47b8-a118-a00683d6d60a",
        "type": "message",
        "text": "This idea of a self-organising system that is running at all times is one I want to discuss more about",
        "user": "U0119RRB1MK",
        "ts": "1586346582.180800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DmgQX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This idea of a self-organising system that is running at all times is one I want to discuss more about"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "f8fd35a6-f14c-434d-9543-3a562f6d7210",
        "type": "message",
        "text": "The GUI subsystem is an online system - not some thing you write templates for and things are hardcoded in place",
        "user": "U0119RRB1MK",
        "ts": "1586346613.181000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fnf3V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The GUI subsystem is an online system - not some thing you write templates for and things are hardcoded in place"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "3f1da046-7273-4868-8cf3-fe85c25e0f46",
        "type": "message",
        "text": "this is maybe a stupid question \u2026 but do we need React at all here? What\u2019s preventing us (in the broader sense) from collapsing layers of abstraction and just rendering GUI elements more natively",
        "user": "UAJKEBGP8",
        "ts": "1586347092.181300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nV+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this is maybe a stupid question \u2026 but do we need React at all here? What\u2019s preventing us (in the broader sense) from collapsing layers of abstraction and just rendering GUI elements more natively"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "fa0a8897-a01a-44d0-b5c0-ce36141fef9a",
        "type": "message",
        "text": "I don't know how a layout system can use react elegantly",
        "user": "U0119RRB1MK",
        "ts": "1586351058.181600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ifA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know how a layout system can use react elegantly"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "bb5d02c2-f9fb-4f10-b8eb-530146ba7a33",
        "type": "message",
        "text": "I use react for additive guis as a way of getting the grid onto the screen ( I use the React. createElement API directly )",
        "user": "U0119RRB1MK",
        "ts": "1586351078.181800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AapFt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I use react for additive guis as a way of getting the grid onto the screen ( I use the React. createElement API directly )"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "eae06cb0-8b94-45d7-a642-56789dd93088",
        "type": "message",
        "text": "Something like masonry - a self arranging grid which you can resize",
        "user": "UNBPP291C",
        "ts": "1586352353.182000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n+DHt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something like masonry - a self arranging grid which you can resize"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "bfab40ca-2c05-4f77-9a91-52c4eaf999c2",
        "type": "message",
        "text": "in XYZ",
        "user": "UNBPP291C",
        "ts": "1586352371.182200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L/3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in XYZ"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "9828e873-21ce-4c50-b59e-0041c3c48ba3",
        "type": "message",
        "text": "I love Jquery Masonry",
        "user": "U0119RRB1MK",
        "ts": "1586352458.182400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QcS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love Jquery Masonry"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "edef9bff-4e62-4f8c-a484-1b79f3fa7244",
        "type": "message",
        "text": "I want some thing that give the layout flexibility of an IDE",
        "user": "U0119RRB1MK",
        "ts": "1586352486.182600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wy+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want some thing that give the layout flexibility of an IDE"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "42c7be61-6db0-4c62-a069-5a58baa36e1b",
        "type": "message",
        "text": "I want my whole desktop environment to behave this way. I think part of what drives people to cmd line-only work flows is that they have a consistent interface to everything, and they can lay things out in arbitrarily complex ways. I want that for the GUI. I want to drag my queue out of spotify and pin it to my slack window, and I want it to work without spotify or slack adding support for it. I want it to just work because everything is a GUI component in a sane environment. I think some difficulties in getting here are that it implies a level of customization that is very difficult to design for, but also breaks the status quo of a company shipping an application and knowing how it will look (I\u2019ve found designers very fond of knowing how things will look).",
        "user": "UKDM3GLAJ",
        "ts": "1586354857.182800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6UncO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want my whole desktop environment to behave this way. I think part of what drives people to cmd line-only work flows is that they have a consistent interface to everything, and they can lay things out in arbitrarily complex ways. I want that for the GUI. I want to drag my queue out of spotify and pin it to my slack window, and I want it to work without spotify or slack adding support for it. I want it to just work because everything is a GUI component in a sane environment. I think some difficulties in getting here are that it implies a level of customization that is very difficult to design for, but also breaks the status quo of a company shipping an application and knowing how it will look (I\u2019ve found designers very fond of knowing how things will look)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UFEQUBNNT",
                    "UMWF81HTP",
                    "UVCBBRG3G",
                    "U7C7B75R6"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "34b39566-2721-4a4a-83fd-59dc3b837308",
        "type": "message",
        "text": "If the GUI composition is just a set of rules of what appears to next eachother, then that feature (splitting out a playlist and attaching it next to slack) would be effortless",
        "user": "U0119RRB1MK",
        "ts": "1586355063.183000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hJV0W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If the GUI composition is just a set of rules of what appears to next eachother, then that feature (splitting out a playlist and attaching it next to slack) would be effortless"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "df77f9de-55a9-45dd-817a-a652417bcedd",
        "type": "message",
        "text": "I think you\u2019re right, so long as the desktop environment, slack, and spotify were all being composed by the same system. I think it changes what it means to package an application. Rather than shipping a pane of glass, you\u2019d be shipping a collection of components, with a suggested layout, knowing that the user can change it.",
        "user": "UKDM3GLAJ",
        "ts": "1586355520.183200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bW1UN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you\u2019re right, so long as the desktop environment, slack, and spotify were all being composed by the same system. I think it changes what it means to package an application. Rather than shipping a pane of glass, you\u2019d be shipping a collection of components, with a suggested layout, knowing that the user can change it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "F84803DB-32BF-49CC-B62A-4AC0BF3FC444",
        "type": "message",
        "text": "I haven't seen it mentioned, but I figure it's worth asking: how does this approach compare with something like AutoLayout in Xcode, or the GSS prototype from the (failed?)  auto-website-builder startup The Grid? They both use the cassowary constraint solver, and allow you to specify layouts in terms of approximate relationships between elements. I've heard complaints about AutoLayout being finicky to get right, that by the time you provide enough constraints to guide the layout to be mostly what you want, it's difficult to fix cases where it isn't. GSS was tremendously slow, so I think that stopped it from being viable. How would the self-assembling machines approach compared to the global constraint solver approach?",
        "user": "UC2A2ARPT",
        "ts": "1586356522.184400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1586356770.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Wf84",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't seen it mentioned, but I figure it's worth asking: how does this approach compare with something like AutoLayout in Xcode, or the GSS prototype from the (failed?)  auto-website-builder startup The Grid? They both use the cassowary constraint solver, and allow you to specify layouts in terms of approximate relationships between elements. I've heard complaints about AutoLayout being finicky to get right, that by the time you provide enough constraints to guide the layout to be mostly what you want, it's difficult to fix cases where it isn't. GSS was tremendously slow, so I think that stopped it from being viable. How would the self-assembling machines approach compared to the global constraint solver approach?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a1cd36d3-dfbe-488a-9958-f9599c199e13",
        "type": "message",
        "text": "I use a simple inequality solving algorithm to arrange items on the screen to an x,y coordinate",
        "user": "U0119RRB1MK",
        "ts": "1586359619.184800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0119RRB1MK",
            "ts": "1586360378.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uou",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I use a simple inequality solving algorithm to arrange items on the screen to an x,y coordinate"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "6ab9b95e-dcc4-4e0d-b3ab-04c448cf8ace",
        "type": "message",
        "text": "But not absolutely positioned",
        "user": "U0119RRB1MK",
        "ts": "1586359909.185000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1xQh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But not absolutely positioned"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "db3a7f0b-fa05-4f3e-9141-621c77499a12",
        "type": "message",
        "text": "<@UJBAJNFLK> good points that is an issue of scale.. being radical is easier in isolated circumstances :slightly_smiling_face:",
        "user": "UHDQ62M4P",
        "ts": "1586359977.185200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lI2ZV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " good points that is an issue of scale.. being radical is easier in isolated circumstances "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586193289.167900",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "655f9094-2315-49b7-9796-b159867cefbd",
        "type": "message",
        "text": "It's not cassowary",
        "user": "U0119RRB1MK",
        "ts": "1586360212.185400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c7Vg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's not cassowary"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "461D31AD-BB43-4D13-9849-AB51EB49B83D",
        "type": "message",
        "text": "Interesting. I immediately thought of GSS as well, but it sounds like what you\u2019re doing might be a lot simpler \u2014 sounds like you\u2019re using some layout rules to generate CSS grid layout rules. Does that sound about right?",
        "user": "UT9TWSZB5",
        "ts": "1586360581.187500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T+Bp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. I immediately thought of GSS as well, but it sounds like what you\u2019re doing might be a lot simpler \u2014 sounds like you\u2019re using some layout rules to generate CSS grid layout rules. Does that sound about right?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "4e5055fd-5462-4956-a8b3-f9b7f7f86fd8",
        "type": "message",
        "text": "Correct. I generate HTML &lt;div class=\"col\"&gt; elements to match the x,ys",
        "user": "U0119RRB1MK",
        "ts": "1586360620.187800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ARPgV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Correct. I generate HTML <div class=\"col\"> elements to match the x,ys"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "C7751492-6246-46D0-94E4-DAA8D2EF3283",
        "type": "message",
        "text": "That\u2019s a neat idea. What frustrates me still is that there is no direct manipulation interface. I hate Apple\u2019s Interface Builder, but I think there\u2019s a happy middle ground where you have a UI for manipulating layout and getting immediate feedback, meanwhile that generates readable code/layout rules so you aren\u2019t blind/locked in to the tool",
        "user": "UT9TWSZB5",
        "ts": "1586360814.190800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vLo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That\u2019s a neat idea. What frustrates me still is that there is no direct manipulation interface. I hate Apple\u2019s Interface Builder, but I think there\u2019s a happy middle ground where you have a UI for manipulating layout and getting immediate feedback, meanwhile that generates readable code/layout rules so you aren\u2019t blind/locked in to the tool"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "af455a58-9411-4d24-8256-886119cb785e",
        "type": "message",
        "text": "For <https://github.com/samsquire/additive-guis/blob/master/layout/layouter2.html|additive-guis>, the project I'm working on, the interface for customizing the GUI is to change the layout rules",
        "user": "U0119RRB1MK",
        "ts": "1586361111.191000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "samsquire/additive-guis",
                "title_link": "https://github.com/samsquire/additive-guis/blob/master/layout/layouter2.html",
                "text": "guis constructed from tuples/triples. Contribute to samsquire/additive-guis development by creating an account on GitHub.",
                "fallback": "GitHub: samsquire/additive-guis",
                "thumb_url": "https://avatars0.githubusercontent.com/u/1983701?s=400&v=4",
                "from_url": "https://github.com/samsquire/additive-guis/blob/master/layout/layouter2.html",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/samsquire/additive-guis/blob/master/layout/layouter2.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8cN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/samsquire/additive-guis/blob/master/layout/layouter2.html",
                                "text": "additive-guis"
                            },
                            {
                                "type": "text",
                                "text": ", the project I'm working on, the interface for customizing the GUI is to change the layout rules"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "d3fb8920-976e-4532-8784-269cb8eb288d",
        "type": "message",
        "text": "Pretty sweet!",
        "user": "UT9TWSZB5",
        "ts": "1586361181.191300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tcsM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pretty sweet!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "b0228bab-1c23-415b-ae48-863b6bd2c46c",
        "type": "message",
        "text": "But i'd like to see context menus have things in them",
        "user": "U0119RRB1MK",
        "ts": "1586361338.191500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vk0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But i'd like to see context menus have things in them"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "4a6f4b12-ff67-49ed-911c-11d8ade633e8",
        "type": "message",
        "text": "Like right click &gt; Insert left of, rightof, above",
        "user": "U0119RRB1MK",
        "ts": "1586361347.191700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "35xG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Like right click > Insert left of, rightof, above"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "ECCCC755-F9EB-4E5F-BAE3-5A78202AFE11",
        "type": "message",
        "text": "Are there any editors that can help me follow function tags without \u2018breaking context\u2019? Almost like how Brackets has inline CSS editing (brings up another part of the file so that you can easily compare and edit). Like floating windows, in a way.\n\nFor instance, if I click a function, I can jump / edit it without immediately exiting the file with a pop-up or like with Brackets in-line.\n\n\n<https://youtu.be/Fqt5COpqLuU|https://youtu.be/Fqt5COpqLuU>",
        "user": "USUMN6XLH",
        "ts": "1586362169.195500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Brackets inline editor",
                "title_link": "https://youtu.be/Fqt5COpqLuU",
                "author_name": "Christian Heilmann",
                "author_link": "https://www.youtube.com/user/chrisheilmann",
                "thumb_url": "https://i.ytimg.com/vi/Fqt5COpqLuU/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Brackets inline editor",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/Fqt5COpqLuU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/Fqt5COpqLuU",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/Fqt5COpqLuU"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e0/s5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there any editors that can help me follow function tags without \u2018breaking context\u2019? Almost like how Brackets has inline CSS editing (brings up another part of the file so that you can easily compare and edit). Like floating windows, in a way.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "For instance, if I click a function, I can jump / edit it without immediately exiting the file with a pop-up or like with Brackets in-line.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/Fqt5COpqLuU",
                                "text": "https://youtu.be/Fqt5COpqLuU"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586362169.195500",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1586366447.196100",
        "reply_users": [
            "UT9TWSZB5",
            "UDQBTJ211"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "0425de15-32fc-448d-8d69-642c9ac1949c",
        "type": "message",
        "text": "VSCode almost does this when you \"Find all references\"",
        "user": "UT9TWSZB5",
        "ts": "1586362786.195700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ImHqw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "VSCode almost does this when you \"Find all references\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586362169.195500",
        "parent_user_id": "USUMN6XLH"
    },
    {
        "client_msg_id": "79ae5452-5256-4ff4-88e4-c8623ff8872b",
        "type": "message",
        "text": "Would be a sweet feature request",
        "user": "UT9TWSZB5",
        "ts": "1586362797.195900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RQ/rf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would be a sweet feature request"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586362169.195500",
        "parent_user_id": "USUMN6XLH"
    },
    {
        "client_msg_id": "0ea810c9-b469-46f8-9748-b1a3332762dd",
        "type": "message",
        "text": "Code Bubbles is a bit like that <https://youtu.be/PsPX0nElJ0k|https://youtu.be/PsPX0nElJ0k>",
        "user": "UDQBTJ211",
        "ts": "1586366447.196100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Code Bubbles: Rethinking the User Interface Paradigm of Integrated Development Environments",
                "title_link": "https://youtu.be/PsPX0nElJ0k",
                "author_name": "AndrewBragdon",
                "author_link": "https://www.youtube.com/user/AndrewBragdon",
                "thumb_url": "https://i.ytimg.com/vi/PsPX0nElJ0k/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Code Bubbles: Rethinking the User Interface Paradigm of Integrated Development Environments",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/PsPX0nElJ0k?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/PsPX0nElJ0k",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/PsPX0nElJ0k"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "96V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Code Bubbles is a bit like that "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/PsPX0nElJ0k",
                                "text": "https://youtu.be/PsPX0nElJ0k"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586362169.195500",
        "parent_user_id": "USUMN6XLH",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "I haven't followed up on this line of research in a while, so I recommend seeing what's come since, but check out Supple: <http://iis.seas.harvard.edu/projects/supple/>",
        "files": [
            {
                "id": "F011ZLG9Q5N",
                "created": 1586369135,
                "timestamp": 1586369135,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UFEQUBNNT",
                "editable": false,
                "size": 308508,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F011ZLG9Q5N/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F011ZLG9Q5N/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 165,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 220,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 330,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 367,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 440,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F011ZLG9Q5N-67f9d3c09d/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 469,
                "original_w": 1296,
                "original_h": 594,
                "thumb_tiny": "AwAWADDQyaMnPWgigDpQA7cKNwphU80oByKAItzgH5qVGfcNxyKCjYPA/OhI2Dg8fnQAoFG2nUCgBuKd5Z9RSDr+NS0AR+WfUUojOetPooA//9k=",
                "permalink": "https://futureofcoding.slack.com/files/UFEQUBNNT/F011ZLG9Q5N/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F011ZLG9Q5N-b53d71c1a4",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jdk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't followed up on this line of research in a while, so I recommend seeing what's come since, but check out Supple: "
                            },
                            {
                                "type": "link",
                                "url": "http://iis.seas.harvard.edu/projects/supple/"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UFEQUBNNT",
        "display_as_bot": false,
        "ts": "1586369138.196700",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1586369213.000000"
        },
        "client_msg_id": "1f174ea2-9f96-4bda-894b-290399926865",
        "thread_ts": "1586346043.180000",
        "parent_user_id": "U0119RRB1MK"
    },
    {
        "client_msg_id": "a2b2a453-e11c-4121-9f38-68e6cc22dce3",
        "type": "message",
        "text": "<http://tomasp.net/blog/2020/cities-and-programming/|http://tomasp.net/blog/2020/cities-and-programming/>",
        "user": "U8A5MS6R1",
        "ts": "1586372344.197200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "On architecture, urban planning and software construction",
                "title_link": "http://tomasp.net/blog/2020/cities-and-programming/",
                "text": "Like software construction, architecture and urban planning often deal with complex systems that evolve over a long period of time. Some of the successful systems are also quite messy despite theories telling us that such systems should not work. These are just a few of the reasons why software engineers can learn interesting things from reading about architecture and urban planning.",
                "fallback": "On architecture, urban planning and software construction",
                "image_url": "http://tomasp.net/blog/2020/cities-and-programming/siding.jpg",
                "from_url": "http://tomasp.net/blog/2020/cities-and-programming/",
                "image_width": 378,
                "image_height": 250,
                "image_bytes": 53622,
                "service_icon": "http://tomasp.net/img/favicon-big.png",
                "service_name": "tomasp.net",
                "id": 1,
                "original_url": "http://tomasp.net/blog/2020/cities-and-programming/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7b12R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http://tomasp.net/blog/2020/cities-and-programming/",
                                "text": "http://tomasp.net/blog/2020/cities-and-programming/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586372344.197200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1586444340.201400",
        "reply_users": [
            "UKDM3GLAJ"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U85HCL7JP",
                    "UKDM3GLAJ",
                    "UFQQ3P867",
                    "UJCHWTMH6"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "ab8e798b-968f-490f-bc5a-67fd3144677f",
        "type": "message",
        "text": "The nocode (lowcode?) wars continue: <https://www.useparagon.com/>",
        "user": "UFB8STN7K",
        "ts": "1586375831.197700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Paragon - Automate your API development",
                "title_link": "https://www.useparagon.com/",
                "text": "Paragon gives you the power to visually create production-ready API workflows so you can build, ship, and scale faster. Build APIs and microservices in minutes with Paragon's visual workflow editor.",
                "fallback": "Paragon - Automate your API development",
                "thumb_url": "https://assets-global.website-files.com/5d798ca7e21ac9b8dbff0c4a/5df15ad1245d002bb0b0a265_Open%20Graph%20Image.png",
                "from_url": "https://www.useparagon.com/",
                "thumb_width": 1200,
                "thumb_height": 630,
                "service_name": "useparagon.com",
                "id": 1,
                "original_url": "https://www.useparagon.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5yDLk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The nocode (lowcode?) wars continue: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.useparagon.com/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586375831.197700",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1586457048.205300",
        "reply_users": [
            "UEQ6M68H0",
            "U8A5MS6R1",
            "UFLN9JFRT",
            "UC2A2ARPT"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "tired_face",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "70a9153b-db5d-4c87-bf29-ab1ebd194be8",
        "type": "message",
        "text": "Looks like lynx took down their What page with gifs, anyone have an archive of the page <http://lynxtool.com/What.html|lynxtool.com/What.html>? Not on way back machine (cc <@UC2A2ARPT>)",
        "user": "UU8H7M823",
        "ts": "1586375875.197900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lxMaz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks like lynx took down their What page with gifs, anyone have an archive of the page "
                            },
                            {
                                "type": "link",
                                "url": "http://lynxtool.com/What.html",
                                "text": "lynxtool.com/What.html"
                            },
                            {
                                "type": "text",
                                "text": "? Not on way back machine (cc "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586375875.197900",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1586718328.359000",
        "reply_users": [
            "UC2A2ARPT",
            "UJN1TAYEQ",
            "U6FKVSVCK",
            "UU8H7M823"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "F05D362E-B6A6-46C4-A7C4-E7DAE3DA0BCE",
        "type": "message",
        "text": "Ah bummer! I was more excited about that project than maybe any other recent VPL.",
        "user": "UC2A2ARPT",
        "ts": "1586376033.199000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r11cz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah bummer! I was more excited about that project than maybe any other recent VPL."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1586375875.197900",
        "parent_user_id": "UU8H7M823"
    }
]