[
    {
        "client_msg_id": "8bc5a2bb-67dc-499f-8e59-8677ba3bf730",
        "type": "message",
        "text": "<@UNGNT3BKR> I've been wondering something.  In your system you use tags to remember expressions; but in something like extempore he does not .  I assume (from what I've observed) that his system does know when you have modified an expression that is already playing - i.e. you don't get a duplicate event, you modify the existing one.  Otherwise all of his 'metro' expressions would end up multiplying, if that makes sense.  So I'm wondering how that works?",
        "user": "UUQ2EQW21",
        "ts": "1585846747.062400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IgAUR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNGNT3BKR"
                            },
                            {
                                "type": "text",
                                "text": " I've been wondering something.  In your system you use tags to remember expressions; but in something like extempore he does not .  I assume (from what I've observed) that his system does know when you have modified an expression that is already playing - i.e. you don't get a duplicate event, you modify the existing one.  Otherwise all of his 'metro' expressions would end up multiplying, if that makes sense.  So I'm wondering how that works?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582737045.011100",
        "parent_user_id": "UNGNT3BKR"
    },
    {
        "client_msg_id": "37a070b8-e439-4e13-9f3a-6615cc8b0067",
        "type": "message",
        "text": "Oh, I think he basically names everything; every closure or expression has a name, so I guess they get replaced.",
        "user": "UUQ2EQW21",
        "ts": "1585847279.062600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KNjvk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, I think he basically names everything; every closure or expression has a name, so I guess they get replaced."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1582737045.011100",
        "parent_user_id": "UNGNT3BKR"
    },
    {
        "client_msg_id": "5d023561-3af6-4852-b593-552fb93fa447",
        "type": "message",
        "text": "This thread might be of interest: <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1579640836237100>",
        "user": "U8A5MS6R1",
        "ts": "1585854083.062800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1579640836237100",
                "fallback": "[January 21st, 2020 1:07 PM] abersnaze: A trend in CAD has been a move to parametric design. I was wondering software design would trend the same way. What do you think?",
                "ts": "1579640836.237100",
                "author_id": "UQ706GB9U",
                "author_subname": "George Campbell",
                "channel_id": "C5T9GPWFL",
                "channel_name": "general",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "A trend in CAD has been a move to parametric design. I was wondering software design would trend the same way. What do you think?",
                "author_name": "George Campbell",
                "author_link": "https://futureofcoding.slack.com/team/UQ706GB9U",
                "author_icon": "https://secure.gravatar.com/avatar/80bf3c31da6a1f3f44e68bfe227fd35d.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1579640836237100",
                "footer": "Thread in #general"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KRXo4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This thread might be of interest: "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1579640836237100"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585750452.046800",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "type": "message",
        "text": "<@UUQ2EQW21> as far as I understand its about naming there, yes. The 'temporal recursion' basically means that every iteration the binding is resolved again and whatever is the new value for it takes over. Unlike alive that wont preserve any local state, but you can put the state in a global storage place I guess. I haven't really played with extempore myself though.",
        "user": "UNGNT3BKR",
        "ts": "1585857899.063400",
        "team": "T5TCAFTA9",
        "thread_ts": "1582737045.011100",
        "parent_user_id": "UNGNT3BKR"
    }
]