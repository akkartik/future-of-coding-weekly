[
    {
        "client_msg_id": "750BC0EF-42E7-48DA-AE0F-9B74EA7A667C",
        "type": "message",
        "text": "Does anyone know the current state of the art in functional reactive animation? I\u2018ve been reading about Conal Elliott\u2019s Fran DSL but it seems there hasn\u2019t been any recent progress in this space. I\u2019m considering writing a JavaScript implementation of that hasn\u2019t been done already <http://conal.net/fran/|http://conal.net/fran/>",
        "user": "UQ3QA3ZAR",
        "ts": "1578272464.418200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cjM0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone know the current state of the art in functional reactive animation? I\u2018ve been reading about Conal Elliott\u2019s Fran DSL but it seems there hasn\u2019t been any recent progress in this space. I\u2019m considering writing a JavaScript implementation of that hasn\u2019t been done already "
                            },
                            {
                                "type": "link",
                                "url": "http://conal.net/fran/",
                                "text": "http://conal.net/fran/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "reply_count": 41,
        "reply_users_count": 7,
        "latest_reply": "1579087879.196800",
        "reply_users": [
            "UQ3QA3ZAR",
            "UN57U8V53",
            "UJN1TAYEQ",
            "UC2A2ARPT",
            "UEQ6M68H0",
            "U5STGTB3J",
            "UA14TGLTC"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "AF878847-1C74-40D5-A02D-CAD9FDE10B6A",
        "type": "message",
        "text": "Just to clarify this a bit: I\u2019m aware of a few recent attempts at realizing FRP on the web (Cycle/Turbine), but I\u2019m wondering about anything in animation specifically.",
        "user": "UQ3QA3ZAR",
        "ts": "1578277230.421000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5S/mU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to clarify this a bit: I\u2019m aware of a few recent attempts at realizing FRP on the web (Cycle/Turbine), but I\u2019m wondering about anything in animation specifically."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "7279e7a9-f1ba-4f4f-8294-3e2ff8d6cd1b",
        "type": "message",
        "text": "What would you constitute as progress?",
        "user": "UN57U8V53",
        "ts": "1578289059.421500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Xfw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What would you constitute as progress?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "b29de987-1db5-4c42-88a4-21be652874ae",
        "type": "message",
        "text": "<@UJ6LDMMN0> I guess there is the same analogy of \"The design of a telephone was basically a hull around a machine.\" with laptops and screens. We use screens so we mold our IDE UI to the screen, which is so unnatural, as most people see with a much larger field of view with their eyes",
        "user": "UFLN9JFRT",
        "ts": "1578301890.422000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DIS0u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " I guess there is the same analogy of \"The design of a telephone was basically a hull around a machine.\" with laptops and screens. We use screens so we mold our IDE UI to the screen, which is so unnatural, as most people see with a much larger field of view with their eyes"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "F47CF098-97E5-4DCB-896E-27BA9351EF29",
        "type": "message",
        "text": "It\u2019s funny how as we move closer to AR, many limitations we accept today without even thinking much about them, can potentially fall away and be replaced by more natural interfaces. Wider field of view, peripheral vision, direct manipulation of real and virtual objects, more natural and embodied interfaces, etc.\n\nThat\u2019s why I\u2019m constantly questioning the ways we work today, because there is so much opportunity to break free of assumptions and limitations that we might not even be aware of just because we\u2019re so used to them.\n\nIt\u2019s so hard to imagine today, but it\u2019s at least possible that one day we will look back and think \u201cpressing physical keys on a keyboard \u2014 how primitive and barbaric we\u2019ve been back then\u2026\u201d or whatever you think today when you see punch cards or programming binary by flipping individual switches on a computer that filled a whole room.\n\nAh the irony, when we\u2019re all playing an ENIAC simulator game in our AR worlds, flipping switches, switching tubes, and removing actual bugs that cause bugs\u2026 :laughing:",
        "user": "U5STGTB3J",
        "ts": "1578307727.433000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kk7Eq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s funny how as we move closer to AR, many limitations we accept today without even thinking much about them, can potentially fall away and be replaced by more natural interfaces. Wider field of view, peripheral vision, direct manipulation of real and virtual objects, more natural and embodied interfaces, etc."
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "That\u2019s why I\u2019m constantly questioning the ways we work today, because there is so much opportunity to break free of assumptions and limitations that we might not even be aware of just because we\u2019re so used to them."
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "It\u2019s so hard to imagine today, but it\u2019s at least possible that one day we will look back and think \u201cpressing physical keys on a keyboard \u2014 how primitive and barbaric we\u2019ve been back then\u2026\u201d or whatever you think today when you see punch cards or programming binary by flipping individual switches on a computer that filled a whole room."
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Ah the irony, when we\u2019re all playing an ENIAC simulator game in our AR worlds, flipping switches, switching tubes, and removing actual bugs that cause bugs\u2026 "
                            },
                            {
                                "type": "emoji",
                                "name": "laughing"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "20f982b5-4b70-4308-81a1-5f37dd627dfb",
        "type": "message",
        "text": "<@U5STGTB3J> I have already thought for years that pressing physical keys on a keyboard is barbaric. I think we are in the stone age of software. Yes, I think that AR is a possible future. What is an AR headset that I could buy today to start experimenting with this?",
        "user": "UFLN9JFRT",
        "ts": "1578309078.433300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VLJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " I have already thought for years that pressing physical keys on a keyboard is barbaric. I think we are in the stone age of software. Yes, I think that AR is a possible future. What is an AR headset that I could buy today to start experimenting with this?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0"
    },
    {
        "client_msg_id": "fc2f9471-6b97-4799-a1b1-7c745c75caa1",
        "type": "message",
        "text": "<@UFLN9JFRT> I don't think there are any consumer AR headsets available right now. There's Microsoft HoloLens and Magic Leap, but depending on what exactly you want to experiment with, you might either want to look into VR instead and get a VR headset, or do the awkward AR thing on mobile platforms, where you still need at least one of your hands to hold your device as a window into the AR world.\n\nExperimenting with AR still requires a lot of imagination as the primary interaction model is still pretty much undefined. Lots of approaches and ideas, but still lacking the polish of something you'd want to sell in high volume to consumers.\nMy strategy is to wait and let Apple figure it out and then be ready with applications when they are looking for them. I think one can take an educated guess which interaction models they're aiming for\u2026\n\nWhat kinds of experiments would you like to do with AR?",
        "user": "U5STGTB3J",
        "ts": "1578311051.433500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LLRX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFLN9JFRT"
                            },
                            {
                                "type": "text",
                                "text": " I don't think there are any consumer AR headsets available right now. There's Microsoft HoloLens and Magic Leap, but depending on what exactly you want to experiment with, you might either want to look into VR instead and get a VR headset, or do the awkward AR thing on mobile platforms, where you still need at least one of your hands to hold your device as a window into the AR world.\n\nExperimenting with AR still requires a lot of imagination as the primary interaction model is still pretty much undefined. Lots of approaches and ideas, but still lacking the polish of something you'd want to sell in high volume to consumers.\nMy strategy is to wait and let Apple figure it out and then be ready with applications when they are looking for them. I think one can take an educated guess which interaction models they're aiming for\u2026\n\nWhat kinds of experiments would you like to do with AR?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0"
    },
    {
        "client_msg_id": "c7b70d56-7979-4bed-889f-a4bf45c0832d",
        "type": "message",
        "text": "<@U5STGTB3J> Ok, good info, thanks. I already have a few VR headsets, and can already build VR apps for Facebook oculus GO with Yazz Pilot, but it is just too limitedan environment since it is so hard to type in that environment so I never continued with building an IDE view in VR <https://yazz.com/app/oculus_go.html>",
        "user": "UFLN9JFRT",
        "ts": "1578311940.433700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFLN9JFRT",
            "ts": "1578312070.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TqPv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " Ok, good info, thanks. I already have a few VR headsets, and can already build VR apps for Facebook oculus GO with Yazz Pilot, but it is just too limitedan environment since it is so hard to type in that environment so I never continued with building an IDE view in VR "
                            },
                            {
                                "type": "link",
                                "url": "https://yazz.com/app/oculus_go.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0"
    },
    {
        "client_msg_id": "a670d311-e88a-40b1-b055-bf3604f8271f",
        "type": "message",
        "text": "<@U5STGTB3J> But I guess it makes sense to wait for Apple. For me though I have pushed my own IDE heavily towards AFrame and Web VR / AR, so I won't be doing any native phone stuff",
        "user": "UFLN9JFRT",
        "ts": "1578312011.433900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2kI+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " But I guess it makes sense to wait for Apple. For me though I have pushed my own IDE heavily towards AFrame and Web VR / AR, so I won't be doing any native phone stuff"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0"
    },
    {
        "client_msg_id": "b9f5227a-dba9-4cb6-b3d0-bea1d4f91e8b",
        "type": "message",
        "text": "My project, Curv, is a pure functional graphics language. Most of the effort right now is being spent on providing a powerful set of composable graphics primitives. The pure functional animation and reactive parts are very underdeveloped, but matching what is shown in the Fran tutorial is one of my goals.",
        "user": "UJN1TAYEQ",
        "ts": "1578317723.434200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XNZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My project, Curv, is a pure functional graphics language. Most of the effort right now is being spent on providing a powerful set of composable graphics primitives. The pure functional animation and reactive parts are very underdeveloped, but matching what is shown in the Fran tutorial is one of my goals."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "cd937b8c-5556-453d-a213-e43891eaa0c7",
        "type": "message",
        "text": "Recording is online now. <https://www.youtube.com/watch?v=ntaudUum06E>",
        "user": "UC21F8Q48",
        "ts": "1578318627.434400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "UIST 2019 Visions - Michel Beaudouin-Lafon: A World Without Apps",
                "title_link": "https://www.youtube.com/watch?v=ntaudUum06E",
                "author_name": "ACM SIGCHI",
                "author_link": "https://www.youtube.com/user/acmsigchi",
                "thumb_url": "https://i.ytimg.com/vi/ntaudUum06E/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: UIST 2019 Visions - Michel Beaudouin-Lafon: A World Without Apps",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/ntaudUum06E?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=ntaudUum06E",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=ntaudUum06E"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CNU/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Recording is online now. "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=ntaudUum06E"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1571778735.136700",
        "parent_user_id": "UC21F8Q48",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e06cbab8-f55d-4dad-b1d8-123ee85c5e66",
        "type": "message",
        "text": "The recording of Michel Beaudouin-Lafon\u2019s UIST visions talk,\u00a0\u201cA World Without Apps\u201d, is now online. <https://www.youtube.com/watch?v=ntaudUum06E>",
        "user": "UC21F8Q48",
        "ts": "1578318823.435400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "UIST 2019 Visions - Michel Beaudouin-Lafon: A World Without Apps",
                "title_link": "https://www.youtube.com/watch?v=ntaudUum06E",
                "author_name": "ACM SIGCHI",
                "author_link": "https://www.youtube.com/user/acmsigchi",
                "thumb_url": "https://i.ytimg.com/vi/ntaudUum06E/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: UIST 2019 Visions - Michel Beaudouin-Lafon: A World Without Apps",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/ntaudUum06E?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=ntaudUum06E",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=ntaudUum06E"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yEz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The recording of Michel Beaudouin-Lafon\u2019s UIST visions talk,\u00a0\u201cA World Without Apps\u201d, is now online. "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=ntaudUum06E"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578318823.435400",
        "reply_count": 11,
        "reply_users_count": 4,
        "latest_reply": "1578940477.172300",
        "reply_users": [
            "UC6997THT",
            "U5STGTB3J",
            "UC21F8Q48",
            "UD3AK9JRF"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "815561CA-3B68-4215-8F3E-8AA247DECCEC",
        "type": "message",
        "text": "What do you think about FRP and something like cyclejs?",
        "user": "UL3CJ7YKC",
        "ts": "1578322562.436200",
        "team": "T5TCAFTA9"
    },
    {
        "client_msg_id": "c707d22e-3823-4573-a1c9-212ce452a37c",
        "type": "message",
        "text": "The goal of Fran as I understand it was to make animation more accessible to beginner programmers. I see this concept eventually replacing Processing for generative art and animation. Progress is anything that brings us closer to mass adoption of FRP in the computer art world. Fran may have the perfect API for that already (I haven\u2019t actually used it to create anything) but the project is currently deprecated with no clear successors",
        "user": "UQ3QA3ZAR",
        "ts": "1578324510.436400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cNtI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The goal of Fran as I understand it was to make animation more accessible to beginner programmers. I see this concept eventually replacing Processing for generative art and animation. Progress is anything that brings us closer to mass adoption of FRP in the computer art world. Fran may have the perfect API for that already (I haven\u2019t actually used it to create anything) but the project is currently deprecated with no clear successors"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "511d4473-9613-4571-8706-1d01bcbafb43",
        "type": "message",
        "text": "Thanks for the link <@UJN1TAYEQ>! Really interesting, looks like the functional language compiles to frag shader code. Did you run into any major roadblocks implementing this? Conditional looping typically isn\u2019t available in shaders for example",
        "user": "UQ3QA3ZAR",
        "ts": "1578325078.436600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KeRK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the link "
                            },
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": "! Really interesting, looks like the functional language compiles to frag shader code. Did you run into any major roadblocks implementing this? Conditional looping typically isn\u2019t available in shaders for example"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "81f03c9a-86d6-40c6-8ac9-5f4015e06919",
        "type": "message",
        "text": "I'm working on this. Or rather, I'm working on an animation-programming hybrid tool that takes some inspiration from Conal's FRP, Fran, etc. I'd be excited to talk to you about FRP, your project, my project, anything!\n\nAs an aside: I ran into a wall when it came to representing numbers in the way Conal advocates \u2014 he wants everything to be exactly precise real numbers, rather than approximations using rational numbers. But of course you can't store infinite-precision real numbers in a computer.  I had a number of intense twitter thread conversations with him (and others) and arrived at the conclusion that there's no practical way to commit to real numbers once your animations pass a certain threshold of complexity. For example, there's probably no way to make something like a modern realtime 3d game where all your object positions are stored as arbitrary-precision real numbers AND you have complex collisions, since your number representations will likely explode in size as they accrete terms from all their interactions. So instead, in my system, I'm actually using only integers, since that puts me in control over when and how to throw away precision. /shrug/",
        "user": "UC2A2ARPT",
        "ts": "1578328009.436800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1578328263.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8bCcA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm working on this. Or rather, I'm working on an animation-programming hybrid tool that takes some inspiration from Conal's FRP, Fran, etc. I'd be excited to talk to you about FRP, your project, my project, anything!\n\nAs an aside: I ran into a wall when it came to representing numbers in the way Conal advocates \u2014 he wants everything to be exactly precise real numbers, rather than approximations using rational numbers. But of course you can't store infinite-precision real numbers in a computer.  I had a number of intense twitter thread conversations with him (and others) and arrived at the conclusion that there's no practical way to commit to real numbers once your animations pass a certain threshold of complexity. For example, there's probably no way to make something like a modern realtime 3d game where all your object positions are stored as arbitrary-precision real numbers AND you have complex collisions, since your number representations will likely explode in size as they accrete terms from all their interactions. So instead, in my system, I'm actually using only integers, since that puts me in control over when and how to throw away precision. /shrug/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "776b6808-8384-4bf5-8f11-cc7e2f1680b9",
        "type": "message",
        "text": "Any advice on how to come up with a good name for a project? I\u2019ve found that artists are much better than engineers at this, but I don\u2019t know many artists.",
        "user": "ULM3U6275",
        "ts": "1578328340.438400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rre",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Any advice on how to come up with a good name for a project? I\u2019ve found that artists are much better than engineers at this, but I don\u2019t know many artists."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "reply_count": 21,
        "reply_users_count": 7,
        "latest_reply": "1579319656.042100",
        "reply_users": [
            "UC2A2ARPT",
            "UBN9AFS0N",
            "UBM0S2AN4",
            "URDJXHSSE",
            "UMWF81HTP",
            "UHWC9PXBL",
            "ULM3U6275"
        ],
        "subscribed": true,
        "last_read": "1579319656.042100"
    },
    {
        "client_msg_id": "118ce0b9-9072-4c53-a14e-6004324cf235",
        "type": "message",
        "text": "I'm more of an artist than an engineer, but I suck at naming.\n\nI usually just play around in a dictionary and thesaurus looking for words that seem appropriate, short, and are not already taken.",
        "user": "UC2A2ARPT",
        "ts": "1578328671.438500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1578328813.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n6L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm more of an artist than an engineer, but I suck at naming.\n\nI usually just play around in a dictionary and thesaurus looking for words that seem appropriate, short, and are not already taken."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e0ef80f2-badf-4847-8c0c-bab509f8aa96",
        "type": "message",
        "text": "you can start there and then play with a domain search engine to see what's available and introduce changes in the name until you find something :stuck_out_tongue:",
        "user": "UBN9AFS0N",
        "ts": "1578329230.439100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/2CsV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you can start there and then play with a domain search engine to see what's available and introduce changes in the name until you find something "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "e26ea29c-b617-4ac9-83e6-47bc8f7872d9",
        "type": "message",
        "text": "gnandoo (company name) is a mix of italian and english spelling of a south american animal called \u00d1and\u00fa",
        "user": "UBN9AFS0N",
        "ts": "1578329290.439300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K4ub",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "gnandoo (company name) is a mix of italian and english spelling of a south american animal called \u00d1and\u00fa"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "3149541d-4198-46e2-876a-a3135adaec6f",
        "type": "message",
        "text": "instadeq is instadeck spelled in a way that would give me a domain name :smile:",
        "user": "UBN9AFS0N",
        "ts": "1578329311.439500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eAy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "instadeq is instadeck spelled in a way that would give me a domain name "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "8465f740-07d3-46ab-b455-9c6dc5f45de4",
        "type": "message",
        "text": "another thing I've tried but never used is to search for a word you like but in a language that's not used a lot, I usually check euskera (<https://en.wikipedia.org/wiki/Basque_language>) since part of my family comes from there",
        "user": "UBN9AFS0N",
        "ts": "1578329371.439700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1578329410.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ym/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "another thing I've tried but never used is to search for a word you like but in a language that's not used a lot, I usually check euskera ("
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Basque_language"
                            },
                            {
                                "type": "text",
                                "text": ") since part of my family comes from there"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "ULM3U6275",
                    "UJ6LDMMN0"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "7ba71960-c9af-4d4d-a236-8597f36d7419",
        "type": "message",
        "text": "Wiktionary is good for that, I've found.",
        "user": "UC2A2ARPT",
        "ts": "1578329879.440200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zeFu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wiktionary is good for that, I've found."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "CE980B8E-BDAE-4768-B580-29E128BAE5F1",
        "type": "message",
        "text": "This article is pretty good <https://blog.pieratt.com/post/77293289254/a-3-step-process-for-naming-a-projectproduct>",
        "user": "UBM0S2AN4",
        "ts": "1578331933.440700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Ben Pieratt, Blog - A 3-step process for naming a project/product....",
                "title_link": "https://blog.pieratt.com/post/77293289254/a-3-step-process-for-naming-a-projectproduct",
                "text": "A 3-step process for naming a project/product. (And some resources) Naming a project is always an awful experience. An earworm that won\u2019t stop tapping your skull from the inside. A tenacious pop...",
                "fallback": "Ben Pieratt, Blog - A 3-step process for naming a project/product....",
                "from_url": "https://blog.pieratt.com/post/77293289254/a-3-step-process-for-naming-a-projectproduct",
                "service_icon": "https://66.media.tumblr.com/avatar_ee331815dcbb_128.pnj",
                "service_name": "blog.pieratt.com",
                "id": 1,
                "original_url": "https://blog.pieratt.com/post/77293289254/a-3-step-process-for-naming-a-projectproduct"
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U6KQ2S410",
                    "ULM3U6275",
                    "UJ6LDMMN0"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "5d0d1a6e-bd0b-4742-95df-00edece8b7dc",
        "type": "message",
        "text": "All I care about is a simple workflow that lets me catch up on everything I\u2019ve missed, but also easily skip over the uninteresting threads. As far as I can tell, this problem was solved decades ago with forums, and I don\u2019t see anything but negatives from the newer chat-based systems. So yeah, phpBB would be ideal for me.",
        "user": "U6KQ2S410",
        "ts": "1578335232.441300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "blzlQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All I care about is a simple workflow that lets me catch up on everything I\u2019ve missed, but also easily skip over the uninteresting threads. As far as I can tell, this problem was solved decades ago with forums, and I don\u2019t see anything but negatives from the newer chat-based systems. So yeah, phpBB would be ideal for me."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576787069.006700",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UERRYNVMM"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3215c742-5fa5-4092-a56c-eb34e6795cf7",
        "type": "message",
        "text": "I tend to pick a random object that's entered into or been noticed in my life recently (this morning: `quill`). has no meaning. then I pick a better name once the project has picked up some identity of its own",
        "user": "URDJXHSSE",
        "ts": "1578336194.441600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s0gI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I tend to pick a random object that's entered into or been noticed in my life recently (this morning: "
                            },
                            {
                                "type": "text",
                                "text": "quill",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "). has no meaning. then I pick a better name once the project has picked up some identity of its own"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "47f263ce-cfff-4bb8-9c49-c0c59c4535e9",
        "type": "message",
        "text": "also gives me time to organically think of the \"right\" name. inevitably, if you choose a \"permanent\" name early on, you'll have a better idea soon after committing",
        "user": "URDJXHSSE",
        "ts": "1578336255.441800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Roc4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also gives me time to organically think of the \"right\" name. inevitably, if you choose a \"permanent\" name early on, you'll have a better idea soon after committing"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "b1b4d9d2-f63f-47c0-94d6-1169cb4fc99d",
        "type": "message",
        "text": "&gt; <@UQ3QA3ZAR> Did you run into any major roadblocks implementing this?\nLots of things.\n\u2022 GPU programming is terrible.\n\u2022 I wrote a multi-stage compiler that performs partial evaluation and optimization. It is difficult to write, and I'm still working on it.\n\u2022 I use reference counting to manage memory. I don't know any online resources that explain how to create recursive function closures without cycles, but I figured it out.\n\u2022 I use signed distance fields and implicit functions to represent geometric shapes. That's a niche technology, and I'm doing original research and inventing new techniques to overcome some of the limitations I have run into.\n\u2022 Conal's design for the Reactive part of FRP is looks complicated to implement. I'm not working on that bit right now, but I expect to encounter some challenges when I do.\n&gt; Conditional looping typically isn\u2019t available in shaders for example\nMy oldest test machine has a 2010 Nvidia GPU: the GPU driver will accept `for` loops with a compile time bound on the number of iterations, but it will not accept `while` loops, so a subset of the Curv language doesn't work on that machine. Modern GPUs have no problem with looping, and loops are required for general 3D fractals and noise based procedural modelling. My eventual plan is to drop support for GPU hardware that predates 2012, and migrate to a modern, cross-platform GPU API (probably WebGPU).",
        "user": "UJN1TAYEQ",
        "ts": "1578341620.443000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Cd",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UQ3QA3ZAR"
                            },
                            {
                                "type": "text",
                                "text": " Did you run into any major roadblocks implementing this?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lots of things.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "GPU programming is terrible."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I wrote a multi-stage compiler that performs partial evaluation and optimization. It is difficult to write, and I'm still working on it."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I use reference counting to manage memory. I don't know any online resources that explain how to create recursive function closures without cycles, but I figured it out."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I use signed distance fields and implicit functions to represent geometric shapes. That's a niche technology, and I'm doing original research and inventing new techniques to overcome some of the limitations I have run into."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Conal's design for the Reactive part of FRP is looks complicated to implement. I'm not working on that bit right now, but I expect to encounter some challenges when I do."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Conditional looping typically isn\u2019t available in shaders for example"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My oldest test machine has a 2010 Nvidia GPU: the GPU driver will accept "
                            },
                            {
                                "type": "text",
                                "text": "for",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " loops with a compile time bound on the number of iterations, but it will not accept "
                            },
                            {
                                "type": "text",
                                "text": "while",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " loops, so a subset of the Curv language doesn't work on that machine. Modern GPUs have no problem with looping, and loops are required for general 3D fractals and noise based procedural modelling. My eventual plan is to drop support for GPU hardware that predates 2012, and migrate to a modern, cross-platform GPU API (probably WebGPU)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "41997f6f-28a0-4ce0-81f3-3745c1554ebd",
        "type": "message",
        "text": "<@UJN1TAYEQ>\n&gt; I use signed distance fields and implicit functions to represent geometric shapes. That's a niche technology [...]\nIs it niche? I'm pretty sure both implicits and SDF are pretty common in games. If I recall correctly, it's common to use implicit surfaces for physics and SDF for some lighting effects, for instance. Am I missing something?",
        "user": "UC2A2ARPT",
        "ts": "1578342194.443200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DORJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I use signed distance fields and implicit functions to represent geometric shapes. That's a niche technology [...]"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIs it niche? I'm pretty sure both implicits and SDF are pretty common in games. If I recall correctly, it's common to use implicit surfaces for physics and SDF for some lighting effects, for instance. Am I missing something?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "21dd0ad7-7363-4f37-b721-0f3f09545b9b",
        "type": "message",
        "text": "I'm also really eager for WebGPU to be finalized. Fingers crossed.",
        "user": "UC2A2ARPT",
        "ts": "1578342293.443400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6mPin",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm also really eager for WebGPU to be finalized. Fingers crossed."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UQ3QA3ZAR"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c650fdbd-c779-4396-934b-970139ba699d",
        "type": "message",
        "text": "&gt; <@UC2A2ARPT> Conal wants everything to be exactly precise real numbers, rather than approximations using rational numbers.\nI could do cool things with that technology if it was practical, but obviously it isn't. Besides being too slow to actually use, you also can't compare exact real numbers (computational reals) for equality--that's the same as solving the halting problem.\n\nOn a GPU, 32 bit floating point arithmetic is never slower than 32 bit int arithmetic, and is typically faster. So on the GPU, I just use 32 bit floats for everything, unless I actually *need* an int. I honestly didn't put a lot of thought into that, it just seemed like the only good choice. Sounds like you are doing something more clever than that.",
        "user": "UJN1TAYEQ",
        "ts": "1578342602.443600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M//T",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " Conal wants everything to be exactly precise real numbers, rather than approximations using rational numbers."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I could do cool things with that technology if it was practical, but obviously it isn't. Besides being too slow to actually use, you also can't compare exact real numbers (computational reals) for equality--that's the same as solving the halting problem.\n\nOn a GPU, 32 bit floating point arithmetic is never slower than 32 bit int arithmetic, and is typically faster. So on the GPU, I just use 32 bit floats for everything, unless I actually "
                            },
                            {
                                "type": "text",
                                "text": "need",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " an int. I honestly didn't put a lot of thought into that, it just seemed like the only good choice. Sounds like you are doing something more clever than that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "19035163-7fdc-4b91-8a2d-cf502d9e411c",
        "type": "message",
        "text": "I'm not doing any logic on the GPU, just rendering, so representations there don't matter as much. The logic is all done in JS, so I'm forced to use floats, but I stick to whole numbers (what I would call \"shitty ints\"). I choose the granularity of time/space representation to be fine enough that, in practice, you don't care. I don't care about average case perf (JS, what can you do) so much as I care about perf cliffs (which arbitrary precision representations seem to dance along the edge of)",
        "user": "UC2A2ARPT",
        "ts": "1578342829.443800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1578342861.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YQ6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not doing any logic on the GPU, just rendering, so representations there don't matter as much. The logic is all done in JS, so I'm forced to use floats, but I stick to whole numbers (what I would call \"shitty ints\"). I choose the granularity of time/space representation to be fine enough that, in practice, you don't care. I don't care about average case perf (JS, what can you do) so much as I care about perf cliffs (which arbitrary precision representations seem to dance along the edge of)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "b8f2b4ea-59c8-4097-af1a-9fd610fb1449",
        "type": "message",
        "text": "<@UC2A2ARPT> I'm not a game programmer, so I may be missing something. I know the SDF technique is used for some particular techniques in games, but I've only heard of a few games that use SDFs to model all of their geometry. I am also not aware of any professional 3D modelling tools that output SDFs. Maya, Z-Brush, etc, all output triangle meshes, as far as I am aware.",
        "user": "UJN1TAYEQ",
        "ts": "1578342863.444100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uBV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I'm not a game programmer, so I may be missing something. I know the SDF technique is used for some particular techniques in games, but I've only heard of a few games that use SDFs to model all of their geometry. I am also not aware of any professional 3D modelling tools that output SDFs. Maya, Z-Brush, etc, all output triangle meshes, as far as I am aware."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "971c14fb-9523-43c2-b1f2-f5e4a420dfff",
        "type": "message",
        "text": "Yeah, that's also my understanding. Games that do SDF will generate the SDF representation from the triangle meshes. They then use the SDF representation for things like cone tracing, to do raytrace-esq reflections. I've also seen some games do the poly mesh -&gt; SDF conversion so that they can do more interesting deformations of the geometry as part of gameplay.",
        "user": "UC2A2ARPT",
        "ts": "1578342991.444600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LKS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, that's also my understanding. Games that do SDF will generate the SDF representation from the triangle meshes. They then use the SDF representation for things like cone tracing, to do raytrace-esq reflections. I've also seen some games do the poly mesh -> SDF conversion so that they can do more interesting deformations of the geometry as part of gameplay."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "d756f2d7-5c21-46af-9146-c2bcd8139d4d",
        "type": "message",
        "text": "I am in the market for a good open source library for triangle mesh -&gt; SDF conversion. Any recommendations?",
        "user": "UJN1TAYEQ",
        "ts": "1578343178.449000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kaqe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am in the market for a good open source library for triangle mesh -> SDF conversion. Any recommendations?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "9235b69f-3df9-4963-950f-f6600637868a",
        "type": "message",
        "text": "I have a new project idea: cluster self-hosted solutions listed in say <https://github.com/awesome-selfhosted/awesome-selfhosted|https://github.com/awesome-selfhosted/awesome-selfhosted> by the dependencies they need.\n\nBasically, I want to be able to answer questions like, \"I'm currently running X. What solution should I choose for y that minimizes my operational burden?\"\n\nThis seems obviously useful. But it's going to require a lot of tedious work to enumerate dependencies. Not just immediate ones but also transitive ones. There's lots of room for multiple people to work in parallel and at their own pace. Anybody else interested in joining in?",
        "user": "UCUSW7WVD",
        "ts": "1578343275.450400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y3xG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a new project idea: cluster self-hosted solutions listed in say "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/awesome-selfhosted/awesome-selfhosted",
                                "text": "https://github.com/awesome-selfhosted/awesome-selfhosted"
                            },
                            {
                                "type": "text",
                                "text": " by the dependencies they need.\n\nBasically, I want to be able to answer questions like, \"I'm currently running X. What solution should I choose for y that minimizes my operational burden?\"\n\nThis seems obviously useful. But it's going to require a lot of tedious work to enumerate dependencies. Not just immediate ones but also transitive ones. There's lots of room for multiple people to work in parallel and at their own pace. Anybody else interested in joining in?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578343275.450400",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1578345436.453200",
        "reply_users": [
            "UC2A2ARPT",
            "UCUSW7WVD"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "3b9249fd-6d0f-4b1c-96e7-42fb09146714",
        "type": "message",
        "text": "No clue, sorry. I know from watching their twitch stream that the indie dev XRA does this in their game (<http://www.brokendimension.com>), but I believe they wrote their own code to do it.",
        "user": "UC2A2ARPT",
        "ts": "1578343408.450500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1578343413.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gwY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No clue, sorry. I know from watching their twitch stream that the indie dev XRA does this in their game ("
                            },
                            {
                                "type": "link",
                                "url": "http://www.brokendimension.com"
                            },
                            {
                                "type": "text",
                                "text": "), but I believe they wrote their own code to do it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "373dcb56-be0f-4218-9287-04afd895112b",
        "type": "message",
        "text": "I'll try to remember to ask them about it the next time they stream.",
        "user": "UC2A2ARPT",
        "ts": "1578343469.450900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A8rze",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll try to remember to ask them about it the next time they stream."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "72885027-bf41-45ce-b211-9f6dffd980b1",
        "type": "message",
        "text": "What counts as a dependency? Eg: Isn't the premise of Docker (etc) that you just need to be able to run Docker containers, and that's it. Or do you also consider the dev dependencies, like which language and libraries a project is built with? How about versioning \u2014\u00a0would you want to track at enough granularity to distinguish Perl 5 and 6, or Python 2 and 3? Where's the line?",
        "user": "UC2A2ARPT",
        "ts": "1578344291.451400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wgl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What counts as a dependency? Eg: Isn't the premise of Docker (etc) that you just need to be able to run Docker containers, and that's it. Or do you also consider the dev dependencies, like which language and libraries a project is built with? How about versioning \u2014\u00a0would you want to track at enough granularity to distinguish Perl 5 and 6, or Python 2 and 3? Where's the line?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578343275.450400",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "4b5cdc73-287a-4a6f-8120-66643b3a55ef",
        "type": "message",
        "text": "A lot of demoscene stuff is all SDFs right? I\u2019m not sure whether that counts as niche or not but I know there\u2019s a lot of crossover into the games industry. I\u2019ve only seen them used for volumetric effects like clouds in games but I\u2019m not an expert here",
        "user": "UQ3QA3ZAR",
        "ts": "1578344315.451600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6He",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A lot of demoscene stuff is all SDFs right? I\u2019m not sure whether that counts as niche or not but I know there\u2019s a lot of crossover into the games industry. I\u2019ve only seen them used for volumetric effects like clouds in games but I\u2019m not an expert here"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c67c15dc-3f6f-4429-941b-dbc4a7af9c1e",
        "type": "message",
        "text": "If you only care about deployment deps, and if something isn't in Docker, wouldn't the answer just be \"Put it in a container first\"?",
        "user": "UC2A2ARPT",
        "ts": "1578344399.451800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qVpo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you only care about deployment deps, and if something isn't in Docker, wouldn't the answer just be \"Put it in a container first\"?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578343275.450400",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c80164b1-5a91-4bc1-9eca-24b9191922a0",
        "type": "message",
        "text": "<@UJN1TAYEQ> Yeah the state of GPU programming is pretty bleak. I\u2019m impressed by how much you seem to have been able to do with shaders only. I\u2019m excited to try it out when I get a chance",
        "user": "UQ3QA3ZAR",
        "ts": "1578344477.452300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g6y3e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Yeah the state of GPU programming is pretty bleak. I\u2019m impressed by how much you seem to have been able to do with shaders only. I\u2019m excited to try it out when I get a chance"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "a6da98be-2f88-4873-b867-83a6ad02a574",
        "type": "message",
        "text": "I was aware you could use bounded `for` loops but I didn\u2019t know `while` is available on some machines",
        "user": "UQ3QA3ZAR",
        "ts": "1578344562.452500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/tc4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was aware you could use bounded "
                            },
                            {
                                "type": "text",
                                "text": "for",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " loops but I didn\u2019t know "
                            },
                            {
                                "type": "text",
                                "text": "while",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is available on some machines"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "a464732a-8ae4-4a24-8b22-5c150217f508",
        "type": "message",
        "text": "<@UQ3QA3ZAR> John Hart made the important breakthrough in the late 1990's when he invented Sphere Tracing. The demoscene did a lot of the important subsequent research on SDF technology. Almost everything on <http://shadertoy.com|shadertoy.com> uses SDFs. The other important community is Fractal Forums (general 3D fractals like the Mandelbulb).",
        "user": "UJN1TAYEQ",
        "ts": "1578345315.452700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lQt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UQ3QA3ZAR"
                            },
                            {
                                "type": "text",
                                "text": " John Hart made the important breakthrough in the late 1990's when he invented Sphere Tracing. The demoscene did a lot of the important subsequent research on SDF technology. Almost everything on "
                            },
                            {
                                "type": "link",
                                "url": "http://shadertoy.com",
                                "text": "shadertoy.com"
                            },
                            {
                                "type": "text",
                                "text": " uses SDFs. The other important community is Fractal Forums (general 3D fractals like the Mandelbulb)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR"
    },
    {
        "client_msg_id": "4797e65e-6b03-4771-a380-65984f451e05",
        "type": "message",
        "text": "Easy test: if there's a CVE in project foo, do I need to change anything in my computer? If so, foo is a dependency. Containers and whatnot are details. Some projects may not provide containers and yet be quite parsimonious and worth using. (Like Mu :angel:)\n\nGood question about build-time dependencies. I obsess over those in Mu, but in this project I surprisingly don't immediately care about them. Assume projects distribute some post-source form (even if it includes source, like a gem or npm package)\n\nVersions are absolutely crucial. The fact that two projects both use Node or Python doesn't actually mean much in my experience. There may be wide divergence in their dependencies and therefore total cost of ownership. But maybe we can start small. For starters, cluster Python vs Node, etc. Then Python 2 vs Python 3. Then major versions of libraries on Python. Then minor versions. Then patch versions (because they're often abused).",
        "user": "UCUSW7WVD",
        "ts": "1578345334.452900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cm4I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Easy test: if there's a CVE in project foo, do I need to change anything in my computer? If so, foo is a dependency. Containers and whatnot are details. Some projects may not provide containers and yet be quite parsimonious and worth using. (Like Mu "
                            },
                            {
                                "type": "emoji",
                                "name": "angel"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nGood question about build-time dependencies. I obsess over those in Mu, but in this project I surprisingly don't immediately care about them. Assume projects distribute some post-source form (even if it includes source, like a gem or npm package)\n\nVersions are absolutely crucial. The fact that two projects both use Node or Python doesn't actually mean much in my experience. There may be wide divergence in their dependencies and therefore total cost of ownership. But maybe we can start small. For starters, cluster Python vs Node, etc. Then Python 2 vs Python 3. Then major versions of libraries on Python. Then minor versions. Then patch versions (because they're often abused)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578343275.450400",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "d4b1852f-21a3-4520-b5f4-55b13d0cd36a",
        "type": "message",
        "text": "&gt; If you only care about deployment deps, and if something isn't in Docker, wouldn't the answer just be \"Put it in a container first\"?\nAs the project author or user? Maybe I don't know enough about containers, but I refuse to be arsed for things I just use. Seems to just add more steps, steps that can break at the whim of my upstreams. Containers seem like a packaging detail, and it's up to projects to provide them.",
        "user": "UCUSW7WVD",
        "ts": "1578345436.453200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1578345487.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0LKCB",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you only care about deployment deps, and if something isn't in Docker, wouldn't the answer just be \"Put it in a container first\"?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As the project author or user? Maybe I don't know enough about containers, but I refuse to be arsed for things I just use. Seems to just add more steps, steps that can break at the whim of my upstreams. Containers seem like a packaging detail, and it's up to projects to provide them."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578343275.450400",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "76a9f82e-c1db-448c-a1c9-02f605019afd",
        "type": "message",
        "text": "<@UQ3QA3ZAR> You can't use while loops in WebGL 1 shaders on Chrome AFAIK. WebGL 1 is stone age technology, and WebGL 2 is maybe bronze age. WebGPU will leap ahead and give us a modern industrial age GPU API, although still not as up to date as what game programmers writing native code have access to. There are no restrictions on while loops in WebGPU, but it doesn't support really old GPUs.",
        "user": "UJN1TAYEQ",
        "ts": "1578345999.453500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NVRe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UQ3QA3ZAR"
                            },
                            {
                                "type": "text",
                                "text": " You can't use while loops in WebGL 1 shaders on Chrome AFAIK. WebGL 1 is stone age technology, and WebGL 2 is maybe bronze age. WebGPU will leap ahead and give us a modern industrial age GPU API, although still not as up to date as what game programmers writing native code have access to. There are no restrictions on while loops in WebGPU, but it doesn't support really old GPUs."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1578272464.418200",
        "parent_user_id": "UQ3QA3ZAR",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    }
]