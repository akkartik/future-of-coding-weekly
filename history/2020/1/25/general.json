[
    {
        "client_msg_id": "C705EE68-9443-42CC-A41F-E069D13038B4",
        "type": "message",
        "text": "<@UD3AK9JRF> Graphical notations form a language, and the programming environment I\u2019m aiming for is not based on text files, so such notations can definitely be a language feature.\n\nThe use case is tracing data dependencies across Prolog-like rules.",
        "user": "UCGAK10LS",
        "ts": "1579910584.099000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DO8=b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD3AK9JRF"
                            },
                            {
                                "type": "text",
                                "text": " Graphical notations form a language, and the programming environment I\u2019m aiming for is not based on text files, so such notations can definitely be a language feature.\n\nThe use case is tracing data dependencies across Prolog-like rules."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "54b7a601-dfa1-4009-b457-65c04761e692",
        "type": "message",
        "text": "&gt; <@UEQ6M68H0> \"Javascript is way more directly related to Actionscript 2 and its predecessors than Self.\"\nThe timing is wrong for this. Javascript was released in 1995. Actionscript 1.0 was released in 2000, the first version to support OOP, and it copied its object model (prototype based inheritance) from Javascript. Actionscript 2.0 was released 2003 and introduced class-based inheritance.\n\nJavascript was designed by Brendan Eich. The language was originally codenamed Mocha, later LiveScript, and the initial idea was \"Scheme for the browser\". However, Netscape had entered a partnership with Sun to include Java in the browser, and this led to a new requirement from management that LiveScript should be a companion to Java.  So it was renamed Javascript and given a C-like syntax.\n\nBrendan Eich himself describes Javascript as \"a quickie love-child of C and\u00a0Self\" (from his blog: <https://brendaneich.com/2008/04/popularity/>). Why was Javascript derived from Self? The designers of Self were now working for Sun, and the Sun/Netscape partnership may explain how Self became the direct ancestor of Javascript (I'm speculating on this point). Javascript could not use Self syntax, of course, due to the management requirement for a C-like syntax, hence the need to innovate and create a hybrid language.",
        "user": "UJN1TAYEQ",
        "ts": "1579910940.100400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1579911179.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TlN",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " \"Javascript is way more directly related to Actionscript 2 and its predecessors than Self.\""
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The timing is wrong for this. Javascript was released in 1995. Actionscript 1.0 was released in 2000, the first version to support OOP, and it copied its object model (prototype based inheritance) from Javascript. Actionscript 2.0 was released 2003 and introduced class-based inheritance.\n\nJavascript was designed by Brendan Eich. The language was originally codenamed Mocha, later LiveScript, and the initial idea was \"Scheme for the browser\". However, Netscape had entered a partnership with Sun to include Java in the browser, and this led to a new requirement from management that LiveScript should be a companion to Java.  So it was renamed Javascript and given a C-like syntax.\n\nBrendan Eich himself describes Javascript as \"a quickie love-child of C and\u00a0Self\" (from his blog: "
                            },
                            {
                                "type": "link",
                                "url": "https://brendaneich.com/2008/04/popularity/"
                            },
                            {
                                "type": "text",
                                "text": "). Why was Javascript derived from Self? The designers of Self were now working for Sun, and the Sun/Netscape partnership may explain how Self became the direct ancestor of Javascript (I'm speculating on this point). Javascript could not use Self syntax, of course, due to the management requirement for a C-like syntax, hence the need to innovate and create a hybrid language."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579910940.100400",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1580264485.240500",
        "reply_users": [
            "UCGAK10LS",
            "UH7GU4TAM",
            "UC2A2ARPT",
            "UBKNXPBAB"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "6617A78A-B308-4AD1-8CB0-6C7F51CDD621",
        "type": "message",
        "text": "Would it be possible to thread that conversation so that it doesn\u2019t wash out #general :sweat_smile:",
        "user": "UCGAK10LS",
        "ts": "1579911121.101500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nAY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would it be possible to thread that conversation so that it doesn\u2019t wash out #general "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579910940.100400",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "419cacd4-8fdc-4d38-8fa7-ec7ccd3607e9",
        "type": "message",
        "text": "I maintained an open source Flash SWF reader/writer at the time and saw the transition from Flash 4 to 5 at the lowest level.  Remember thinking that Macromedia had just copied the JS scoping/prototype model directly.",
        "user": "UH7GU4TAM",
        "ts": "1579911288.101800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7=N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I maintained an open source Flash SWF reader/writer at the time and saw the transition from Flash 4 to 5 at the lowest level.  Remember thinking that Macromedia had just copied the JS scoping/prototype model directly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579910940.100400",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "999B5C0C-D0FB-4A78-948C-476EB1C3A94C",
        "type": "message",
        "text": "<@UCGAK10LS> looks like there are sone useful results for \u201cprovenance graph\u201d. There might at lest be useful considerations for information design in the literature. But you\u2019ve described a domain, not tasks or activities that might be aided by a notation. I don\u2019t know what form your non-textual language takes, so I don\u2019t know what might be relevant. ",
        "user": "UD3AK9JRF",
        "ts": "1579911956.107000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jT0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " looks like there are sone useful results for \u201cprovenance graph\u201d. There might at lest be useful considerations for information design in the literature. But you\u2019ve described a domain, not tasks or activities that might be aided by a notation. I don\u2019t know what form your non-textual language takes, so I don\u2019t know what might be relevant. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "ACA43E04-EDE8-41AB-B00F-5A67FDB661ED",
        "type": "message",
        "text": "The primary task to be assisted is broad code comprehension - can I understand what the program is doing? How all the pieces fit together? All other tasks are subservient to that. I\u2019m not targeting any further niche at the moment \u2014 I\u2019m trying to put together a core syntax.\n\nThe language is not non-textual, it has plenty of text. It\u2019s just not limited to a file-sized Unicode text string. Most of the visual design is still on paper so I don\u2019t have screenshots yet.\n\nI\u2019m looking for inspiring examples of dependency represesentation, on the chance that there\u2019s some existing work out there. So it doesn\u2019t need to be based on any particular syntax I have planned out. Searching for \u201cprovenance graphs\u201d pulls up cliche boxes-and-arrows which doesn\u2019t really yield any insight.",
        "user": "UCGAK10LS",
        "ts": "1579913681.114700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "et=RU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The primary task to be assisted is broad code comprehension - can I understand what the program is doing? How all the pieces fit together? All other tasks are subservient to that. I\u2019m not targeting any further niche at the moment \u2014 I\u2019m trying to put together a core syntax.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nThe language is not non-textual, it has plenty of text. It\u2019s just not limited to a file-sized Unicode text string. Most of the visual design is still on paper so I don\u2019t have screenshots yet.\n\nI\u2019m looking for inspiring examples of dependency represesentation, on the chance that there\u2019s some existing work out there. So it doesn\u2019t need to be based on any particular syntax I have planned out. Searching for \u201cprovenance graphs\u201d pulls up cliche boxes-and-arrows which doesn\u2019t really yield any insight."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPU0YJ1CM"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "05D2937B-1598-4D5A-A541-0A39E6160805",
        "type": "message",
        "text": "I have this nagging feeling I\u2019m just going to have to play this by ear and invent something unique.",
        "user": "UCGAK10LS",
        "ts": "1579913914.115700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RU+gI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have this nagging feeling I\u2019m just going to have to play this by ear and invent something unique."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "994893E4-4422-4201-B699-F978619B72C6",
        "type": "message",
        "text": "Thank you! I\u2019ll have a read.",
        "user": "UCGAK10LS",
        "ts": "1579914049.116200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qfu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you! I\u2019ll have a read."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579861062.074600",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "69166fdc-146c-4da9-97c8-adb099615eb5",
        "type": "message",
        "text": "Ted Nelson has many insightful talks about how the internet went down the wrong path. He focuses on the way hyperlinks were made to be unidirectional which doomed the web to its current very sub-optimal state.",
        "user": "UEQ6M68H0",
        "ts": "1579922394.116400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MLcf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ted Nelson has many insightful talks about how the internet went down the wrong path. He focuses on the way hyperlinks were made to be unidirectional which doomed the web to its current very sub-optimal state."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579770732.001000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "b8dc00ef-31c3-4e38-a4dc-91f4a632798f",
        "type": "message",
        "text": "VideoWorks's (1985) sequel, Macromedia director 3 (1993), must have been known to Brendan; they were very popular products., and I believe the FutureSplash animator had a language too. If someone bothered to track down these old products and study them, i am sure you would find elements there. The fantasy that Brendan created a new language from scratch in two weeks is myth. Programming languages exist in an evolution of concepts that inevitably go back to foundational designs, with relatively small amounts added each time. It is extremely rare to see a wholly new language like FORTH was.",
        "user": "UEQ6M68H0",
        "ts": "1579922744.120300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R=8K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "VideoWorks's (1985) sequel, Macromedia director 3 (1993), must have been known to Brendan; they were very popular products., and I believe the FutureSplash animator had a language too. If someone bothered to track down these old products and study them, i am sure you would find elements there. The fantasy that Brendan created a new language from scratch in two weeks is myth. Programming languages exist in an evolution of concepts that inevitably go back to foundational designs, with relatively small amounts added each time. It is extremely rare to see a wholly new language like FORTH was."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579922744.120300",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1580111009.201100",
        "reply_users": [
            "UEQ7QL15F"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a636b007-09b0-407c-a021-29e958c73b2e",
        "type": "message",
        "text": "I've read the first couple of pages and the first thing I'm noticing is that the author is taking categorisations and boundaries *that humans have defined* (e.g. \"families\" and \"solar systems\") as evidence that hierarchy exists in nature. I find this to be really unconvincing. All it shows is that we're evolutionarily designed to cluster \"similar\" (spatio-temporally co-located or semantically similar) entities and give them names. That much I agree with. But that's not an argument for organising systems into strict hierarchies! It suggests we should group entities together (conceptualise them) whenever there are intuitive ways to do so.",
        "user": "UCGAK10LS",
        "ts": "1579922816.120400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1579923631.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6GmTm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've read the first couple of pages and the first thing I'm noticing is that the author is taking categorisations and boundaries "
                            },
                            {
                                "type": "text",
                                "text": "that humans have defined ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "(e.g. \"families\" and \"solar systems\") as evidence that hierarchy exists in nature. I find this to be really unconvincing. All it shows is that we're evolutionarily designed to cluster \"similar\" (spatio-temporally co-located or semantically similar) entities and give them names. That much I agree with. But that's not an argument for organising systems into strict hierarchies! It suggests we should group entities together (conceptualise them) whenever there are intuitive ways to do so."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579861062.074600",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "653d4ad3-34cb-4491-bf37-8c6b64e5d3ea",
        "type": "message",
        "text": "I'd say the only true thing about natural organisation is that it operates by *proximity*, and we humans take that proximity and stratify it.",
        "user": "UCGAK10LS",
        "ts": "1579922872.120600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z4H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd say the only true thing about natural organisation is that it operates by "
                            },
                            {
                                "type": "text",
                                "text": "proximity",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and we humans take that proximity and stratify it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579861062.074600",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "9f2d3d8d-a38c-4714-b260-42e9222ad550",
        "type": "message",
        "text": "<@UJN1TAYEQ> <@UEQ6M68H0> <@UMU2RLPR8> \u2014\u00a0Like Nick said, let's move the conversation about AS2 and JS into this thread, so that it doesn't create excessive scrollback in <#C5T9GPWFL|general>.",
        "user": "UC2A2ARPT",
        "ts": "1579924899.122000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fTY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UMU2RLPR8"
                            },
                            {
                                "type": "text",
                                "text": " \u2014\u00a0Like Nick said, let's move the conversation about AS2 and JS into this thread, so that it doesn't create excessive scrollback in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579910940.100400",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "800817cf-f524-46b7-9947-94a8d2e7b659",
        "type": "message",
        "text": "<@UR482RFPY>\n&gt; I'm curious if anyone has seen something like this where the syntax structure remains the same, but keywords are translated to different natural languages.\nALGOL 68 does exactly this\u2014it was even standardized in multiple languages. Hard to believe it was conceived when it was.",
        "user": "UT60XSVCN",
        "ts": "1579939117.123300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "abc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UR482RFPY"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm curious if anyone has seen something like this where the syntax structure remains the same, but keywords are translated to different natural languages."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ALGOL 68 does exactly this\u2014it was even standardized in multiple languages. Hard to believe it was conceived when it was."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1577461270.131100",
        "parent_user_id": "UR482RFPY",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UR482RFPY"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "651b78a2-d9a4-46b0-8aad-166c1799c5d5",
        "type": "message",
        "text": "Not sure if this has been shared here before, but found this interesting resource - GUI gallery guidebook.\n<https://guidebookgallery.org/>\nCurated bunch of videos, books, GUIs, articles, etc. that explore the history and evolution of various kinds of user interfaces!",
        "user": "UF1ATC4RF",
        "ts": "1579973428.125300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "GUIdebook: Graphical User Interface gallery",
                "title_link": "https://guidebookgallery.org/",
                "text": "GUIdebook: Graphical User Interface gallery",
                "fallback": "GUIdebook: Graphical User Interface gallery",
                "from_url": "https://guidebookgallery.org/",
                "service_name": "guidebookgallery.org",
                "id": 1,
                "original_url": "https://guidebookgallery.org/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RJJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure if this has been shared here before, but found this interesting resource - GUI gallery guidebook.\n"
                            },
                            {
                                "type": "link",
                                "url": "https://guidebookgallery.org/"
                            },
                            {
                                "type": "text",
                                "text": "\nCurated bunch of videos, books, GUIs, articles, etc. that explore the history and evolution of various kinds of user interfaces!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579973428.125300",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1579977951.126900",
        "reply_users": [
            "UC2A2ARPT"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "US370TRJA",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "type": "message",
        "text": "<@UCGAK10LS> two approaches I've been exploring in my tree languages. 1) Cubes. This one is inspired from mahjong. In Tree Notation, a program is isomorphic to a spreadsheet. A newline separates a row; a space separates a column. Everything is typed and types can inherit from other types. So I have methods where you can visualize a \"TypeCube\" of every program. So you can see the type dependencies of each word.",
        "files": [
            {
                "id": "FT69Z45AS",
                "created": 1579977204,
                "timestamp": 1579977204,
                "name": "Screen Shot 2020-01-25 at 8.27.27 AM.png",
                "title": "Screen Shot 2020-01-25 at 8.27.27 AM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UMVFWPZ36",
                "editable": false,
                "size": 69243,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-FT69Z45AS/screen_shot_2020-01-25_at_8.27.27_am.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-FT69Z45AS/download/screen_shot_2020-01-25_at_8.27.27_am.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-FT69Z45AS-33bc543dcf/screen_shot_2020-01-25_at_8.27.27_am_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-FT69Z45AS-33bc543dcf/screen_shot_2020-01-25_at_8.27.27_am_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-FT69Z45AS-33bc543dcf/screen_shot_2020-01-25_at_8.27.27_am_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 288,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-FT69Z45AS-33bc543dcf/screen_shot_2020-01-25_at_8.27.27_am_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 384,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-FT69Z45AS-33bc543dcf/screen_shot_2020-01-25_at_8.27.27_am_160.png",
                "image_exif_rotation": 1,
                "original_w": 712,
                "original_h": 569,
                "thumb_tiny": "AwAmADC+y7sc0gBU7V5PXmn00qS33iOO1AAd47LR8/otBXj7zGndMDrQA35/RaPn9Fp3el/GgBKTrS0g+974oAXoOaKD0oOM0AHOegpO/QU6m457UALR0opD0NACkjAoxSH7op3egBMfyo20valoA//Z",
                "permalink": "https://futureofcoding.slack.com/files/UMVFWPZ36/FT69Z45AS/screen_shot_2020-01-25_at_8.27.27_am.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-FT69Z45AS-ea6585dc8a",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1bfV=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " two approaches I've been exploring in my tree languages. 1) Cubes. This one is inspired from mahjong. In Tree Notation, a program is isomorphic to a spreadsheet. A newline separates a row; a space separates a column. Everything is typed and types can inherit from other types. So I have methods where you can visualize a \"TypeCube\" of every program. So you can see the type dependencies of each word."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UMVFWPZ36",
        "display_as_bot": false,
        "ts": "1579977208.125500",
        "client_msg_id": "3348881b-d5ae-4944-a834-4b4b47f84e25",
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "8ff71a4c-4b9c-46f0-9b6a-2d6f2b32cf20",
        "type": "message",
        "text": "It's still a bit rough but I think it may turn out to be useful. My thinking is the taller a tower, the more a word is connected to other types, aka the more information is contained in each word.",
        "user": "UMVFWPZ36",
        "ts": "1579977315.125900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fcc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's still a bit rough but I think it may turn out to be useful. My thinking is the taller a tower, the more a word is connected to other types, aka the more information is contained in each word."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "e0cbc1b9-fb0d-4058-80f2-5fe02a46aae8",
        "type": "message",
        "text": "2) Tooltip snippets. This one is pretty simple, where you simply Find all references, grab the lines, and show the joined lines on hover",
        "user": "UMVFWPZ36",
        "ts": "1579977433.126100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fNbHM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "2) Tooltip snippets. This one is pretty simple, where you simply Find all references, grab the lines, and show the joined lines on hover"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579859955.070800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "C0FFBE17-35E2-4F75-B0CE-B9E54DA624D4",
        "type": "message",
        "text": "First I've seen it. Looks like a wonderful historical resource.",
        "user": "UC2A2ARPT",
        "ts": "1579977951.126900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jbU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First I've seen it. Looks like a wonderful historical resource."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579973428.125300",
        "parent_user_id": "UF1ATC4RF"
    },
    {
        "client_msg_id": "021c9fd3-cb16-48c8-b079-9a179f1533a2",
        "type": "message",
        "text": "I was wondering if a formal definition of what a program should do would be enough for a computer to generate the program for us. Not unlike an ML but have the generator be able to express how much latitude it has. To help programmer decide if that is okay.",
        "user": "UQ706GB9U",
        "ts": "1579978989.127100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UQ706GB9U",
            "ts": "1579979078.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ztft",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was wondering if a formal definition of what a program should do would be enough for a computer to generate the program for us. Not unlike an ML but have the generator be able to express how much latitude it has. To help programmer decide if that is okay."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579640836.237100",
        "parent_user_id": "UQ706GB9U"
    },
    {
        "client_msg_id": "a1d79752-e8ae-43c0-9d7e-01730cdb4d86",
        "type": "message",
        "text": "it would be more like a conversation.\nprogrammer: I want a program that can do X.\ngenerator: I can do that by A, B, or kill all humans.\nprogrammer: please don\u2019t kill all humans\nprogram: ok I\u2019ll use A.",
        "user": "UQ706GB9U",
        "ts": "1579979212.127400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QME9A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it would be more like a conversation.\nprogrammer: I want a program that can do X.\ngenerator: I can do that by A, B, or kill all humans.\nprogrammer: please don\u2019t kill all humans\nprogram: ok I\u2019ll use A."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579640836.237100",
        "parent_user_id": "UQ706GB9U"
    },
    {
        "client_msg_id": "8f96b3cf-90e6-4442-a241-a0ed6e6c4368",
        "type": "message",
        "text": "There's a only a bit on programming here, but I think the appeal of this essay will still be broad with this group. What are some of the most promising directions right now for \"transformative tools for thought\"? Along the lines of these examples the authors gave: \"Illustrator, Google Search, Twitter, Slack, Google Docs, programmer tools\" <https://numinous.productions/ttft/>",
        "user": "UE0ETTCG7",
        "ts": "1579982474.127800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "How can we develop transformative tools for thought?",
                "title_link": "https://numinous.productions/ttft/",
                "text": ":hammer_and_wrench::brain::lower_left_paintbrush::boom::earth_americas::sparkles::soon:",
                "fallback": "How can we develop transformative tools for thought?",
                "image_url": "https://numinous.productions/ttft/assets/social.png",
                "image_width": 500,
                "image_height": 250,
                "from_url": "https://numinous.productions/ttft/",
                "image_bytes": 171568,
                "service_name": "numinous.productions",
                "id": 1,
                "original_url": "https://numinous.productions/ttft/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TdXGX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a only a bit on programming here, but I think the appeal of this essay will still be broad with this group. What are some of the most promising directions right now for \"transformative tools for thought\"? Along the lines of these examples the authors gave: \"Illustrator, Google Search, Twitter, Slack, Google Docs, programmer tools\" "
                            },
                            {
                                "type": "link",
                                "url": "https://numinous.productions/ttft/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579982474.127800",
        "reply_count": 17,
        "reply_users_count": 5,
        "latest_reply": "1580150836.218300",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "UE0ETTCG7",
            "UKASUGYL8",
            "UQPHR6Y3S"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "rocket",
                "users": [
                    "UQPHR6Y3S",
                    "US370TRJA"
                ],
                "count": 2
            }
        ]
    }
]