[
    {
        "client_msg_id": "db48f676-9e08-4534-944a-a73878faf8b3",
        "type": "message",
        "text": "Science doesn't have to be quantitative. When a domain has few variables and concrete metrics, science is quantitative. When it has lots of variables and metrics are unclear, you can still follow the spirit of Science. The key is to ask yourself: how would I know this is a bad idea? What does it take to _falsify_ it to my own satisfaction, so that I can switch gears and go work on something else with a clear conscience?",
        "user": "UCUSW7WVD",
        "ts": "1579661154.021300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4ga",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Science doesn't have to be quantitative. When a domain has few variables and concrete metrics, science is quantitative. When it has lots of variables and metrics are unclear, you can still follow the spirit of Science. The key is to ask yourself: how would I know this is a bad idea? What does it take to "
                            },
                            {
                                "type": "text",
                                "text": "falsify",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it to my own satisfaction, so that I can switch gears and go work on something else with a clear conscience?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579618522.012000",
        "parent_user_id": "UCKRZS3DZ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "UCKRZS3DZ",
                    "USL4R0T61"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "0ace1332-68fe-4da6-b8ef-73eb491853c7",
        "type": "message",
        "text": "Any of these could be good ideas, but I think it's tough to say much without knowing what problems they are solving and for whom(and why a solution would make them really excited!).",
        "user": "UMWF81HTP",
        "ts": "1579661488.021500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9a=g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Any of these could be good ideas, but I think it's tough to say much without knowing what problems they are solving and for whom(and why a solution would make them really excited!)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579639255.018600",
        "parent_user_id": "UMVFWPZ36",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f1729b46-3c13-4d37-a3a3-a2af0dca39b5",
        "type": "message",
        "text": "In my experience, binding trees model most programming languages well.  That is keep track of tree structure and how lexical variables are bound so that if you move a block of code out of its scope, you see what parameters need to be passed in.",
        "user": "UA14TGLTC",
        "ts": "1579677602.022000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vet",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my experience, binding trees model most programming languages well.  That is keep track of tree structure and how lexical variables are bound so that if you move a block of code out of its scope, you see what parameters need to be passed in."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579618716.012400",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "f2c6a82e-8ce2-4304-b7c3-c2b7ec6ef98a",
        "type": "message",
        "text": "<@ULM3U6275>&gt; Is there a video demo?\n\nIt is not very usable for actual editing yet, not very convenient. I will publish a demo when I reach more or less usable state.",
        "user": "UCKRZS3DZ",
        "ts": "1579678778.022200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N5o9m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": "> Is there a video demo?\n\nIt is not very usable for actual editing yet, not very convenient. I will publish a demo when I reach more or less usable state."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579618716.012400",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "005cab75-6c0b-4c33-b0bc-7d861cfcf3c3",
        "type": "message",
        "text": "<@UMVFWPZ36> Thank you! I like good visual design and try to make things pleasant for eyes.\n\nI've seen your Tree Notation. I find the idea beautiful, although it is not directly connected to what I work on.\n\n&gt;  Anyway, if you ever wanted to discuss trees and new editor approaches feel free to ping me\nSure! Right now I am a bit busy, but would love to have a one-on-one talk with you a week later or so.",
        "user": "UCKRZS3DZ",
        "ts": "1579679617.022400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4y4yA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMVFWPZ36"
                            },
                            {
                                "type": "text",
                                "text": " Thank you! I like good visual design and try to make things pleasant for eyes.\n\nI've seen your Tree Notation. I find the idea beautiful, although it is not directly connected to what I work on.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Anyway, if you ever wanted to discuss trees and new editor approaches feel free to ping me"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure! Right now I am a bit busy, but would love to have a one-on-one talk with you a week later or so."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579618716.012400",
        "parent_user_id": "UCKRZS3DZ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ff18cc11-580a-4221-9414-b1fe0b16c72a",
        "type": "message",
        "text": "Nice presentation!\nThe point closes to my own interests is working on the edge between order and chaos. In computational science, that's my daily work, and it's a real problem that programming environments force me into one or the other. I have often said that Python's success in scientific computing is to its straightforward interfacing with C, which makes it a kind of bridge between the two worlds, though imperfectly.\n\nI wonder where you would place some more recent arrivals on this scale. Clojure, for example, is a Lisp but with a strong accent on immutability. Unison seems fully on the \"order\" side in terms of your criteria, but feels much closer to a live programming environment.\n\nGiven that you want to concentrate on the \"environment\" aspect, did you consider working with the Unison team? They are concentrating on the \"language\" part and their language should be a nice fit for your environment ideas.",
        "user": "UJBAJNFLK",
        "ts": "1579683020.022900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XxI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice presentation!\nThe point closes to my own interests is working on the edge between order and chaos. In computational science, that's my daily work, and it's a real problem that programming environments force me into one or the other. I have often said that Python's success in scientific computing is to its straightforward interfacing with C, which makes it a kind of bridge between the two worlds, though imperfectly.\n\nI wonder where you would place some more recent arrivals on this scale. Clojure, for example, is a Lisp but with a strong accent on immutability. Unison seems fully on the \"order\" side in terms of your criteria, but feels much closer to a live programming environment.\n\nGiven that you want to concentrate on the \"environment\" aspect, did you consider working with the Unison team? They are concentrating on the \"language\" part and their language should be a nice fit for your environment ideas."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579618716.012400",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "2251df1b-2247-4eaf-ad62-242beb2e6db7",
        "type": "message",
        "text": "<@UJBAJNFLK> Thanks! I am glad that someone sees this Order-Chaos balance thing too.\n&gt; Clojure, for example, is a Lisp but with a strong accent on immutability.\nTo me Clojure is more balanced than say Common Lisp, but still quite shifted towards Chaos because of the macros. Sometimes very hard to understand what is going on. I've thought about ways to make meta-programming possible, yet not putting reader into hell. It seems like it requires to make generated code as easy to view as original. That is easier to do in environment where code is stored in database, not in files.\n\n&gt; Given that you want to concentrate on the \"environment\" aspect, did you consider working with the Unison team? They are concentrating on the \"language\" part and their language should be a nice fit for your environment ideas.\nI know that I should take closer look at Unison, l am sure that I will learn a lot from it.\nI just postponing this work, since it doesn't perfectly fit into my vision.\nBut I know that it is necessary.\n\nI also have an idea of actor-based programming language that I would like to develop using this generic tree editor. I don't talk about it much yet, since I haven't resolved some major issues in its design.",
        "user": "UCKRZS3DZ",
        "ts": "1579689725.023100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCKRZS3DZ",
            "ts": "1579689816.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KVd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Thanks! I am glad that someone sees this Order-Chaos balance thing too.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Clojure, for example, is a Lisp but with a strong accent on immutability."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To me Clojure is more balanced than say Common Lisp, but still quite shifted towards Chaos because of the macros. Sometimes very hard to understand what is going on. I've thought about ways to make meta-programming possible, yet not putting reader into hell. It seems like it requires to make generated code as easy to view as original. That is easier to do in environment where code is stored in database, not in files.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Given that you want to concentrate on the \"environment\" aspect, did you consider working with the Unison team? They are concentrating on the \"language\" part and their language should be a nice fit for your environment ideas."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I know that I should take closer look at Unison, l am sure that I will learn a lot from it.\nI just postponing this work, since it doesn't perfectly fit into my vision.\nBut I know that it is necessary.\n\nI also have an idea of actor-based programming language that I would like to develop using this generic tree editor. I don't talk about it much yet, since I haven't resolved some major issues in its design."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579618716.012400",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "a14d1117-67c3-4d8c-8660-23611ddb79da",
        "type": "message",
        "text": "Thanks <@UMWF81HTP>! I agree this form was very light on details. I might do a v2 survey where I fill out the details a bit more.",
        "user": "UMVFWPZ36",
        "ts": "1579729063.024000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u1qkh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": "! I agree this form was very light on details. I might do a v2 survey where I fill out the details a bit more."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1579639255.018600",
        "parent_user_id": "UMVFWPZ36"
    }
]