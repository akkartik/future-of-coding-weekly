[
    {
        "client_msg_id": "f462923b-d1c6-48ab-a607-408e587b830f",
        "type": "message",
        "text": "I've had long term reservations about natural language sounding code. The interactive disambiguation addresses about half my skepticism. I think the other half has to do with knowing or discovering the vocabulary. With the traditional programming language (or even a drag and drop visual language), its obvious that we have extremely limited vocabulary: keywords, standard library, user defined functions, toolbox icons, etc. How do I discover that here? E.g can I write \"make a todo app\"? How about \"draw a semi-circle\". Would be nice if this came with a context dictionary which shows what words I can use and what they mean.",
        "user": "U8A5MS6R1",
        "ts": "1606950700.346300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/R8M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've had long term reservations about natural language sounding code. The interactive disambiguation addresses about half my skepticism. I think the other half has to do with knowing or discovering the vocabulary. With the traditional programming language (or even a drag and drop visual language), its obvious that we have extremely limited vocabulary: keywords, standard library, user defined functions, toolbox icons, etc. How do I discover that here? E.g can I write \"make a todo app\"? How about \"draw a semi-circle\". Would be nice if this came with a context dictionary which shows what words I can use and what they mean."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK"
    },
    {
        "client_msg_id": "c1c98787-6a06-4381-8ff9-e79088846efe",
        "type": "message",
        "text": "That\u2019s the plan! :smile: There\u2019s also another part of the system that won\u2019t show up for another couple of teasers that helps significantly address that: the data sheet. It\u2019s basically a wiki-page for anything in the system. Most of the time you won\u2019t actually be typing random statements in the input you see there, but instead reacting directly to things on the screen, which will summon the data sheet for it",
        "user": "UEBG0NPDK",
        "ts": "1606950833.346500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1606950848.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8LGRB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That\u2019s the plan! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": " There\u2019s also another part of the system that won\u2019t show up for another couple of teasers that helps significantly address that: the data sheet. It\u2019s basically a wiki-page for anything in the system. Most of the time you won\u2019t actually be typing random statements in the input you see there, but instead reacting directly to things on the screen, which will summon the data sheet for it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U8A5MS6R1",
                    "U016VUZGUUQ",
                    "UHWC9PXBL"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 3
            },
            {
                "name": "bulb",
                "users": [
                    "UDQBTJ211",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "ea469921-d2cf-477d-bf13-b646168a99ea",
        "type": "message",
        "text": "It gives you a complete picture of every action that thing can take, as well as what it\u2019s related to, what parts it\u2019s made of etc.",
        "user": "UEBG0NPDK",
        "ts": "1606950878.346800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1606950930.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fElT5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It gives you a complete picture of every action that thing can take, as well as what it\u2019s related to, what parts it\u2019s made of etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK"
    },
    {
        "client_msg_id": "7cf7bd19-2ba5-4266-aef5-f15ce9128cd0",
        "type": "message",
        "text": "Sounds great. Specially the wiki page aspect. Somewhat tangential but I've always wanted a _hypermedia store_ for code/models. E.g. even in traditional programming, instead of thinking of a function definition as an disjoint blob of text that happens to include the name of a type or of another function, consider a \"function page\" is linked to a \"type page\" and to other function pages via hyperlinks. These are resolved at edit time and stored as links. Can be extended to any kind of code objects and even mix in comment pages.",
        "user": "U8A5MS6R1",
        "ts": "1606954855.347200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U4K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds great. Specially the wiki page aspect. Somewhat tangential but I've always wanted a "
                            },
                            {
                                "type": "text",
                                "text": "hypermedia store",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for code/models. E.g. even in traditional programming, instead of thinking of a function definition as an disjoint blob of text that happens to include the name of a type or of another function, consider a \"function page\" is linked to a \"type page\" and to other function pages via hyperlinks. These are resolved at edit time and stored as links. Can be extended to any kind of code objects and even mix in comment pages."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UEBG0NPDK",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "9b28328e-9e33-4e88-b28f-8bab3ac10172",
        "type": "message",
        "text": "Day 2:\n\n<http://akkartik.github.io/mu/html/apps/advent2020/2a.mu.html>\n<http://akkartik.github.io/mu/html/apps/advent2020/2b.mu.html>\n\n40 minutes. No new Mu bugs found.",
        "user": "UCUSW7WVD",
        "ts": "1606966813.347700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "beHE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Day 2:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.github.io/mu/html/apps/advent2020/2a.mu.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.github.io/mu/html/apps/advent2020/2b.mu.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\n40 minutes. No new Mu bugs found."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U015902ESJC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e088f96f-8342-4531-b9ce-93e6b0870795",
        "type": "message",
        "text": "uCISC for day 2: <https://github.com/grokthis/ucisc/blob/master/examples/aoc/2020/day_2a.ucisc>\n<https://github.com/grokthis/ucisc/blob/master/examples/aoc/2020/day_2b.ucisc>\n\nHours of work troubleshooting I/O buffer issues, UART timing, etc. mostly unrelated to the actual algorithm.",
        "user": "U015902ESJC",
        "ts": "1606969307.348100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U015902ESJC",
            "ts": "1606969326.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ck7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "uCISC for day 2: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/grokthis/ucisc/blob/master/examples/aoc/2020/day_2a.ucisc"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/grokthis/ucisc/blob/master/examples/aoc/2020/day_2b.ucisc"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHours of work troubleshooting I/O buffer issues, UART timing, etc. mostly unrelated to the actual algorithm."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ffde9089-5669-490d-b66a-fcc628071983",
        "type": "message",
        "text": "uCISC for day 3: <https://github.com/grokthis/ucisc/blob/master/examples/aoc/2020/day_3.ucisc>\n\nOnly took 25 minutes for part 1 and 5 minutes for part 2. Had all the supporting libraries I needed ready to go this time.",
        "user": "U015902ESJC",
        "ts": "1606973743.348600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U015902ESJC",
            "ts": "1606973750.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NL1d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "uCISC for day 3: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/grokthis/ucisc/blob/master/examples/aoc/2020/day_3.ucisc"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOnly took 25 minutes for part 1 and 5 minutes for part 2. Had all the supporting libraries I needed ready to go this time."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "6b5aeb25-9745-487e-bd72-87865b8cfe83",
        "type": "message",
        "text": "I took longer on day 3: <http://akkartik.github.io/mu/html/apps/advent2020/3b.mu.html>\n\n60 minutes including 11 \"debugging\" that I'd missed one of the sub-problems entirely.",
        "user": "UCUSW7WVD",
        "ts": "1606978850.349100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n=sF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I took longer on day 3: "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.github.io/mu/html/apps/advent2020/3b.mu.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\n60 minutes including 11 \"debugging\" that I'd missed one of the sub-problems entirely."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U015902ESJC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e1064482-274d-40e7-baad-b12e536617d2",
        "type": "message",
        "text": "<@U8A5MS6R1> Mathematica these days is a good example of a system that is trying to bridge Code/natural language (via) Wolfram Alpha.  It is both neat and problematic.",
        "user": "UA14TGLTC",
        "ts": "1606981511.349700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0FAx4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " Mathematica these days is a good example of a system that is trying to bridge Code/natural language (via) Wolfram Alpha.  It is both neat and problematic."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK"
    },
    {
        "client_msg_id": "ee4fb9c1-5d2e-45f2-a701-80406f9c2c92",
        "type": "message",
        "text": "The variables are just stored in an array",
        "user": "U017GNJM021",
        "ts": "1606996871.350200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/x8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The variables are just stored in an array"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606677847.281500",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "73ed7c17-2db1-445b-935c-7bb42a0e1b22",
        "type": "message",
        "text": "Thank you <@U017GNJM021> and <@UEBG0NPDK> for the comments :slightly_smiling_face:",
        "user": "U0139HUPMQ9",
        "ts": "1607001269.350400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QrZ=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you "
                            },
                            {
                                "type": "user",
                                "user_id": "U017GNJM021"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " for the comments "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606827121.315700",
        "parent_user_id": "U0139HUPMQ9"
    },
    {
        "type": "message",
        "text": "I see. Have never used Mathematica, but I remember some discussion about natural language input a while ago. Here's a screenshot - looks like they parse and show an interpretation as well:",
        "files": [
            {
                "id": "F01G9NH67UL",
                "created": 1607014383,
                "timestamp": 1607014383,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U8A5MS6R1",
                "editable": false,
                "size": 84697,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01G9NH67UL/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01G9NH67UL/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01G9NH67UL-b505471a2f/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01G9NH67UL-b505471a2f/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01G9NH67UL-b505471a2f/image_360.png",
                "thumb_360_w": 319,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01G9NH67UL-b505471a2f/image_480.png",
                "thumb_480_w": 425,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01G9NH67UL-b505471a2f/image_160.png",
                "original_w": 544,
                "original_h": 614,
                "thumb_tiny": "AwAwACrSOfX9KTn1/SnGkx7mgA59f0pc0g4FLmgAooooAKYxYHgZFPooAjBwfvZqSoxGAcinj3pK/UbFooopiEb7ppAV9qcelN2r6CgBcjGeKaHUgHjmlwPQUbR/dFAxw6CigUUCP//Z",
                "permalink": "https://futureofcoding.slack.com/files/U8A5MS6R1/F01G9NH67UL/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01G9NH67UL-ffc0b2cc1e",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TeHW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see. Have never used Mathematica, but I remember some discussion about natural language input a while ago. Here's a screenshot - looks like they parse and show an interpretation as well:"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U8A5MS6R1",
        "display_as_bot": false,
        "ts": "1607014389.350600",
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK"
    },
    {
        "client_msg_id": "6b0297c3-a910-41da-834b-779e80822d51",
        "type": "message",
        "text": "I'm really enjoying reading the Mu code you write for this.",
        "user": "U015902ESJC",
        "ts": "1607014959.351100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CdgA0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm really enjoying reading the Mu code you write for this."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "105d0abf-6b36-41f7-8e58-626c75f352df",
        "type": "message",
        "text": "Here\u2019s an experiment with structured editing I\u2019ve been working on. I\u2019m skeptically curious about structured editing (text is nice..) so I chose a language with a very simple grammar (CSS).\n\nMy current thesis is that any mainstream code editor needs access to text editing (copy-paste, etc). And if both modes are available, would people ever spend time in structural mode?\n\n<https://css-structure.netlify.app/>",
        "user": "U019PRL1BNU",
        "ts": "1607018744.354500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "CSS Structured Editor",
                "title_link": "https://css-structure.netlify.app/",
                "text": "An experiment exploring structural editing for CSS",
                "fallback": "CSS Structured Editor",
                "image_url": "https://css-structure.netlify.app/meta.png",
                "from_url": "https://css-structure.netlify.app/",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 111987,
                "service_icon": "https://css-structure.netlify.app/logo192.png",
                "service_name": "css-structure.netlify.app",
                "id": 1,
                "original_url": "https://css-structure.netlify.app/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zMbkE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here\u2019s an experiment with structured editing I\u2019ve been working on. I\u2019m skeptically curious about structured editing (text is nice..) so I chose a language with a very simple grammar (CSS).\n\nMy current thesis is that any mainstream code editor needs access to text editing (copy-paste, etc). And if both modes are available, would people ever spend time in structural mode?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://css-structure.netlify.app/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607018744.354500",
        "reply_count": 11,
        "reply_users_count": 6,
        "latest_reply": "1607144597.370900",
        "reply_users": [
            "UDQBTJ211",
            "U019PRL1BNU",
            "UN9SCH5RD",
            "UPX3PH28N",
            "UA14TGLTC",
            "U01DUNFS2N4"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01554W5BS5",
                    "UPX3PH28N",
                    "UHWC9PXBL"
                ],
                "count": 3
            },
            {
                "name": "thinking_face",
                "users": [
                    "U015902ESJC"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UQZ0SRA7N"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "ff86d9b1-0de9-4d07-bbb6-a22f36f5ef87",
        "type": "message",
        "text": "Me too! :slightly_smiling_face:",
        "user": "UUQ2EQW21",
        "ts": "1607019078.354700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1mx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Me too! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b5a66671-0cf4-4bed-963b-956f7be697af",
        "type": "message",
        "text": "It's beautifully made.\n\nI think I agree that I prefer text mode. It's a little bit frustrating not having completely free control of the cursor.\n\nIt might be possible to bring the best of both worlds together by moving all of the structural features into a type of autocomplete. You could hold a modifier (e.g. ctrl) which would then indicate the action that return, delete, arrows etc now have.\n\nSo if the cursor is after the @ of an @ rule, then backspace would just delete the @ character as normal, whereas holding ctrl would highlight the whole outer rule in red, maybe say \"unwrap\", then pressing ctrl+backspace would be the equivalent of \"unwrap at rule\".\n\nSimilarly, return would always just insert a new line (including splitting a word if you are inside one), but holding ctrl would preview a new declaration, and ctrl+return would be the same as Insert Declaration.",
        "user": "UDQBTJ211",
        "ts": "1607023493.354900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mYY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's beautifully made.\n\nI think I agree that I prefer text mode. It's a little bit frustrating not having completely free control of the cursor.\n\nIt might be possible to bring the best of both worlds together by moving all of the structural features into a type of autocomplete. You could hold a modifier (e.g. ctrl) which would then indicate the action that return, delete, arrows etc now have.\n\nSo if the cursor is after the @ of an @ rule, then backspace would just delete the @ character as normal, whereas holding ctrl would highlight the whole outer rule in red, maybe say \"unwrap\", then pressing ctrl+backspace would be the equivalent of \"unwrap at rule\".\n\nSimilarly, return would always just insert a new line (including splitting a word if you are inside one), but holding ctrl would preview a new declaration, and ctrl+return would be the same as Insert Declaration."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607018744.354500",
        "parent_user_id": "U019PRL1BNU",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "U016VUZGUUQ",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "e17c9e5e-082a-477a-b724-3fb797a699b7",
        "type": "message",
        "text": "<@UDQBTJ211> thanks! I like the idea of normal text editing but using keyboard modifiers to trigger \u201csmart\u201d navigation/edits.\n\nI\u2019m also thinking about a contextual panel that updates as you move your cursor, similar to the demo but keeping text as the main UI.",
        "user": "U019PRL1BNU",
        "ts": "1607029780.355400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W9R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " thanks! I like the idea of normal text editing but using keyboard modifiers to trigger \u201csmart\u201d navigation/edits.\n\nI\u2019m also thinking about a contextual panel that updates as you move your cursor, similar to the demo but keeping text as the main UI."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607018744.354500",
        "parent_user_id": "U019PRL1BNU"
    }
]