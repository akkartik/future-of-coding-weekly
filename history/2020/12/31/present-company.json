[
    {
        "client_msg_id": "3cf1c830-1054-4288-a885-dc2238b61c89",
        "type": "message",
        "text": "Anyone seen a data access system similar to GraphQL where implementors are able to power different parts of the surface with different bits, but more powerful in that queries could ask for aggregations and arbitrary scalar expressions? and implementors can wire that up to whatever they can to power them? SQL, but where implementors can provide relations / operators backed by whatever?",
        "user": "U016LEA3J1H",
        "ts": "1609388409.177700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RM1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone seen a data access system similar to GraphQL where implementors are able to power different parts of the surface with different bits, but more powerful in that queries could ask for aggregations and arbitrary scalar expressions? and implementors can wire that up to whatever they can to power them? SQL, but where implementors can provide relations / operators backed by whatever?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "reply_count": 10,
        "reply_users_count": 4,
        "latest_reply": "1609445881.180300",
        "reply_users": [
            "U016LEA3J1H",
            "U8A5MS6R1",
            "UH7GU4TAM",
            "U013ZLJARC7"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "5fe2208d-0036-4d41-8122-6d323f25e31f",
        "type": "message",
        "text": "bonus points for enough facilities to layer in caching and profiling and query depth analysis and all the other bits that something like GraphQL allows for",
        "user": "U016LEA3J1H",
        "ts": "1609388455.177900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5HXni",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "bonus points for enough facilities to layer in caching and profiling and query depth analysis and all the other bits that something like GraphQL allows for"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "c8bec153-4753-4577-99a3-0229b532314a",
        "type": "message",
        "text": "Many databases provide support for plugging in external data if you map it to the db model. Eg. <https://www.postgresql.org/docs/9.3/ddl-foreign-data.html>",
        "user": "U8A5MS6R1",
        "ts": "1609388545.178100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "PostgreSQL Documentation",
                "title": "Foreign Data",
                "title_link": "https://www.postgresql.org/docs/9.3/ddl-foreign-data.html",
                "fallback": "PostgreSQL Documentation: Foreign Data",
                "image_url": "https://www.postgresql.org/media/img/about/press/elephant.png",
                "ts": 1541711198,
                "from_url": "https://www.postgresql.org/docs/9.3/ddl-foreign-data.html",
                "image_width": 242,
                "image_height": 250,
                "image_bytes": 50279,
                "service_icon": "https://www.postgresql.org/favicon.ico",
                "id": 1,
                "original_url": "https://www.postgresql.org/docs/9.3/ddl-foreign-data.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XzHgH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Many databases provide support for plugging in external data if you map it to the db model. Eg. "
                            },
                            {
                                "type": "link",
                                "url": "https://www.postgresql.org/docs/9.3/ddl-foreign-data.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "d03b62ae-2ee7-49b5-8fc6-f1e31c7ba7d2",
        "type": "message",
        "text": "indeed, looking for something a bit less black boxy, closer to Calcite but ... graph-ier?",
        "user": "U016LEA3J1H",
        "ts": "1609388598.178400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JwQ7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "indeed, looking for something a bit less black boxy, closer to Calcite but ... graph-ier?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "3892430b-400f-4c82-885b-83d1a5d118b4",
        "type": "message",
        "text": "Have you looked at SPARQL federated queries ? Apache Jena supports them but I only have hello-world experience.",
        "user": "UH7GU4TAM",
        "ts": "1609392005.178600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SGN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you looked at SPARQL federated queries ? Apache Jena supports them but I only have hello-world experience."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01AD80KMLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "85d81034-c9ba-4b14-91a4-cdefc21add9b",
        "type": "message",
        "text": "Do you need materialized views that automatically send updates?",
        "user": "U013ZLJARC7",
        "ts": "1609431648.179100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1609431662.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Snt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you need materialized views that automatically send updates?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "3db8186d-2e01-4a1f-8c80-ad6003bcde2e",
        "type": "message",
        "text": "thanks for the link Nick! and for computations across the datasources where i know what i want ahead of time i was planning to use Materialize for that, but i think knowing all of the dataflows ahead of time isn't always gonna be possible, so being able to answer a novel query would be nice",
        "user": "U016LEA3J1H",
        "ts": "1609445692.179400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ET8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks for the link Nick! and for computations across the datasources where i know what i want ahead of time i was planning to use Materialize for that, but i think knowing all of the dataflows ahead of time isn't always gonna be possible, so being able to answer a novel query would be nice"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "834121dc-a719-4642-9429-c2275b64832a",
        "type": "message",
        "text": "and for added fun, i'm trying to do OLTP more than OLAP, tho its a spectrum if you ask me",
        "user": "U016LEA3J1H",
        "ts": "1609445717.179600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H8ItK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and for added fun, i'm trying to do OLTP more than OLAP, tho its a spectrum if you ask me"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "324beebd-d794-42f8-a5c1-418c83124a7b",
        "type": "message",
        "text": "(what i'm actually trying to do is plan out something like Firebase or BigTable, but where you can marry it to your data sources as well, wherever they already are. some smart query engine will reach into it's fast thing and your whatever thing and join if need be to get you the result)",
        "user": "U016LEA3J1H",
        "ts": "1609445767.179800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U016LEA3J1H",
            "ts": "1609445791.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sl/T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(what i'm actually trying to do is plan out something like Firebase or BigTable, but where you can marry it to your data sources as well, wherever they already are. some smart query engine will reach into it's fast thing and your whatever thing and join if need be to get you the result)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "1227798c-cb54-475d-bb8e-ed4955cf8f1c",
        "type": "message",
        "text": "i think most of the folks that have implemented solutions in this area have been doing it for OLAP (like Presto or Spark SQL or the numerous apache projects using Calcite), and i havent benchmarked much but I am guessing they've made lots of decisions to spend more time up front planning and have a higher lower-bound query execution time",
        "user": "U016LEA3J1H",
        "ts": "1609445871.180100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rD7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think most of the folks that have implemented solutions in this area have been doing it for OLAP (like Presto or Spark SQL or the numerous apache projects using Calcite), and i havent benchmarked much but I am guessing they've made lots of decisions to spend more time up front planning and have a higher lower-bound query execution time"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "daa7ce25-0df7-41bc-825a-3d1215f8bb2d",
        "type": "message",
        "text": "which for firebase-y stuff is less than ideal",
        "user": "U016LEA3J1H",
        "ts": "1609445881.180300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hpDId",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "which for firebase-y stuff is less than ideal"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609388409.177700",
        "parent_user_id": "U016LEA3J1H"
    }
]