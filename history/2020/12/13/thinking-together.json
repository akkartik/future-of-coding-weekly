[
    {
        "client_msg_id": "5568a7b5-2b17-43fc-9b24-fc630e69aebd",
        "type": "message",
        "text": "there is a pretty sweet video about leap / cat on YT, if anyone is in quasi-modeless mood: <https://www.youtube.com/watch?v=o_TlE_U_X3c>",
        "user": "UQ2P2BYJU",
        "ts": "1607869969.281200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Leap Technology",
                "title_link": "https://www.youtube.com/watch?v=o_TlE_U_X3c",
                "author_name": "aamoviebb",
                "author_link": "https://www.youtube.com/user/aamoviebb",
                "thumb_url": "https://i.ytimg.com/vi/o_TlE_U_X3c/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Leap Technology",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/o_TlE_U_X3c?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://www.youtube.com/watch?v=o_TlE_U_X3c",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=o_TlE_U_X3c"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vNZLM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there is a pretty sweet video about leap / cat on YT, if anyone is in quasi-modeless mood: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=o_TlE_U_X3c"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607611433.250200",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "a4a108ec-b0eb-4310-a106-867ff682861f",
        "type": "message",
        "text": "<@UCUSW7WVD> The Humane Interface book is available at <http://archive.org|archive.org>.\nI just read recently about the history of the autocomplete feature in the iPhone in <http://creativeselection.io|Creative Selection>. Turns out that autocorrect helps with a hardware constraint: keys in the original iPhone touch keyboard were too small for typing without making errors.",
        "user": "U85HCL7JP",
        "ts": "1607874564.281700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U85HCL7JP",
            "ts": "1607874613.000000"
        },
        "attachments": [
            {
                "title": "Creative Selection",
                "title_link": "http://creativeselection.io/",
                "text": "Creative Selection: Inside Apple's Design Process During the Golden Age of Steve Jobs",
                "fallback": "Creative Selection",
                "from_url": "http://creativeselection.io/",
                "service_icon": "http://creativeselection.io/apple-icon-57x57.png",
                "service_name": "creativeselection.io",
                "id": 1,
                "original_url": "http://creativeselection.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WPlx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " The Humane Interface book is available at "
                            },
                            {
                                "type": "link",
                                "url": "http://archive.org",
                                "text": "archive.org"
                            },
                            {
                                "type": "text",
                                "text": ".\nI just read recently about the history of the autocomplete feature in the iPhone in "
                            },
                            {
                                "type": "link",
                                "url": "http://creativeselection.io",
                                "text": "Creative Selection"
                            },
                            {
                                "type": "text",
                                "text": ". Turns out that autocorrect helps with a hardware constraint: keys in the original iPhone touch keyboard were too small for typing without making errors."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607611433.250200",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "7205ccf3-69bd-40a0-966d-66eba8af5ac1",
        "type": "message",
        "text": "Are there any non-techies here? I need to talk to you! :smile:",
        "user": "UE6EFEPTQ",
        "ts": "1607884598.282600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W9f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there any non-techies here? I need to talk to you! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607884598.282600",
        "reply_count": 13,
        "reply_users_count": 4,
        "latest_reply": "1607931419.303300",
        "reply_users": [
            "USL4R0T61",
            "UE6EFEPTQ",
            "UJBAJNFLK",
            "UGLSY9X3J"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "d5d76c00-1143-453c-9514-b347e109c077",
        "type": "message",
        "text": "I'm at an impasse with my project of a live-updating postfix programming environment (<https://futureofcoding.slack.com/archives/C0120A3L30R/p1607329853147000>) and would appreciate some UX ideas/feedback:\n\n* It's not clear how to scale this UI along several dimensions. What should happen when a line gets too long for the screen? What should happen as values on the stack get wide? Or deep? My screen objects (<https://futureofcoding.slack.com/archives/C0120A3L30R/p1605244930088000>) explored multi-line values on the stack, but it feels wasteful to repeatedly show screens, especially as the screen sizes grow larger and more realistic/useful.\n\n* Many attempts to add capabilities hit the scaling limits even faster. If I try to reimplement shell utilities like `grep` I need to support files with at least 50-character lines. Requesting URLs on the internet also requires showing long URL strings on the stack.\n\n* One thing I keep rubbing up against is the distinction between editing a program and browsing its state. Bret Victor's demos like <https://vimeo.com/36579366> consistently gloss over this. Yes, it's nice to be able to play what-if experiments with your program, but you quickly realize you need to unwind one experiment to try out another. Either you need smart undo, with the ability to somehow drop milestones into the timeline after the fact. Or you need to somehow separate browsing operations from manipulations of the program itself. It feels more feasible to show many copies of a screen object if most of them stay collapsed. Or to truncate URLs if they can be expanded on demand.\n\nI do have one more idea for an interesting demo: supporting APL-like array operations. But I'm not sure if I should go down that road if there are potentially fatal problems with this whole approach.\n\nA Mu-specific constraint here is the lack of a mouse. My UI has a single point on the screen where I can manipulate things. There's no mouse, because mouse support in text-mode terminals is non-standard and requires understanding differences between terminals. Which requires dependencies beyond a Linux kernel. That's something I've managed to sidestep so far by staying extremely lowest-common-denominator in terminal capabilities.\n\nPerhaps I'll switch gears and focus on getting off the Linux kernel. Then I won't need to worry about terminal compatibilities. But then people would be required to use Qemu to play with Mu. Which sucks :confused: Perhaps that's the fundamental psychological block here: I want to keep Mu easy to try out, but beyond a point I can't undo bad historical decisions without adding some friction to checking it out. Then again, it's not like many people try it out anyway, and requiring Linux is just as much friction for someone on a Mac. Yeah, perhaps there's more OS hacking in my future. Thoughts/suggestions appreciated on this angle as well.",
        "user": "UCUSW7WVD",
        "ts": "1607887127.284300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1607887149.000000"
        },
        "attachments": [
            {
                "service_name": "Vimeo",
                "service_url": "https://vimeo.com/",
                "title": "Bret Victor - Inventing on Principle",
                "title_link": "https://vimeo.com/36579366",
                "author_name": "CUSEC",
                "author_link": "https://vimeo.com/cusec",
                "thumb_url": "https://i.vimeocdn.com/video/251172173_295x166.jpg",
                "thumb_width": 295,
                "thumb_height": 166,
                "text": "Bio: Bret Victor invents tools that enable people to understand and create. He has designed experimental UI concepts at Apple, interactive data graphics for Al Gore, and musical instruments at Alesis.\n\nFor more on Bret, see .\n\nThis talk was given at CUSEC 2012 ().",
                "fallback": "Vimeo Video: Bret Victor - Inventing on Principle",
                "video_html": "<iframe src=\"https://player.vimeo.com/video/36579366?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"225\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen title=\"Bret Victor - Inventing on Principle\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://vimeo.com/36579366",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/vimeo.png",
                "id": 3,
                "original_url": "https://vimeo.com/36579366"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bqq7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm at an impasse with my project of a live-updating postfix programming environment ("
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C0120A3L30R/p1607329853147000"
                            },
                            {
                                "type": "text",
                                "text": ") and would appreciate some UX ideas/feedback:\n\n* It's not clear how to scale this UI along several dimensions. What should happen when a line gets too long for the screen? What should happen as values on the stack get wide? Or deep? My screen objects ("
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C0120A3L30R/p1605244930088000"
                            },
                            {
                                "type": "text",
                                "text": ") explored multi-line values on the stack, but it feels wasteful to repeatedly show screens, especially as the screen sizes grow larger and more realistic/useful.\n\n* Many attempts to add capabilities hit the scaling limits even faster. If I try to reimplement shell utilities like "
                            },
                            {
                                "type": "text",
                                "text": "grep",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I need to support files with at least 50-character lines. Requesting URLs on the internet also requires showing long URL strings on the stack.\n\n* One thing I keep rubbing up against is the distinction between editing a program and browsing its state. Bret Victor's demos like "
                            },
                            {
                                "type": "link",
                                "url": "https://vimeo.com/36579366"
                            },
                            {
                                "type": "text",
                                "text": " consistently gloss over this. Yes, it's nice to be able to play what-if experiments with your program, but you quickly realize you need to unwind one experiment to try out another. Either you need smart undo, with the ability to somehow drop milestones into the timeline after the fact. Or you need to somehow separate browsing operations from manipulations of the program itself. It feels more feasible to show many copies of a screen object if most of them stay collapsed. Or to truncate URLs if they can be expanded on demand.\n\nI do have one more idea for an interesting demo: supporting APL-like array operations. But I'm not sure if I should go down that road if there are potentially fatal problems with this whole approach.\n\nA Mu-specific constraint here is the lack of a mouse. My UI has a single point on the screen where I can manipulate things. There's no mouse, because mouse support in text-mode terminals is non-standard and requires understanding differences between terminals. Which requires dependencies beyond a Linux kernel. That's something I've managed to sidestep so far by staying extremely lowest-common-denominator in terminal capabilities.\n\nPerhaps I'll switch gears and focus on getting off the Linux kernel. Then I won't need to worry about terminal compatibilities. But then people would be required to use Qemu to play with Mu. Which sucks "
                            },
                            {
                                "type": "emoji",
                                "name": "confused"
                            },
                            {
                                "type": "text",
                                "text": " Perhaps that's the fundamental psychological block here: I want to keep Mu easy to try out, but beyond a point I can't undo bad historical decisions without adding some friction to checking it out. Then again, it's not like many people try it out anyway, and requiring Linux is just as much friction for someone on a Mac. Yeah, perhaps there's more OS hacking in my future. Thoughts/suggestions appreciated on this angle as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607887127.284300",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1607926103.303000",
        "reply_users": [
            "U85HCL7JP",
            "UDQBTJ211",
            "UHWC9PXBL",
            "UCUSW7WVD"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "f05d897a-72a6-4693-8396-b120559215db",
        "type": "message",
        "text": "Oi! Kartik, you've scrolled me right above the fold! :smile:\n&gt; Are there any non-techies here? I need to talk to you!\u00a0:smile:",
        "user": "UE6EFEPTQ",
        "ts": "1607888104.285500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5/Bwl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oi! Kartik, you've scrolled me right above the fold! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there any non-techies here? I need to talk to you!\u00a0"
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607888104.285500",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1607889865.286600",
        "reply_users": [
            "UCUSW7WVD",
            "UE6EFEPTQ"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "fd90d0f6-ddbc-461a-928e-9d7f48a02ade",
        "type": "message",
        "text": "I would love to help sketching some designs. Where I normally start is having examples for longer/more complex functions and from there sketch different UX design options",
        "user": "U85HCL7JP",
        "ts": "1607888355.285600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Er",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would love to help sketching some designs. Where I normally start is having examples for longer/more complex functions and from there sketch different UX design options"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607887127.284300",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "d2594a63-47be-4223-aae6-101f5810d926",
        "type": "message",
        "text": "I feel like saying I am a non-techie in this space is like admitting to be a sheep in a den full of lions.  Knowing that the lions here are pretty nice, I will bare my neck and admit I'm still very early in my tech-evolution. I'm more of a product manager than a coder. \n\nWhat's up?",
        "user": "USL4R0T61",
        "ts": "1607888481.285800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kPu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like saying I am a non-techie in this space is like admitting to be a sheep in a den full of lions.  Knowing that the lions here are pretty nice, I will bare my neck and admit I'm still very early in my tech-evolution. I'm more of a product manager than a coder. \n\nWhat's up?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607884598.282600",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "lion_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "04c4b8a1-97c8-4a0d-8c59-3639606faea0",
        "type": "message",
        "text": "Oh sorry!",
        "user": "UCUSW7WVD",
        "ts": "1607889066.286300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HVp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh sorry!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607888104.285500",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "7e78c769-6806-475e-8447-de75b5bbd11b",
        "type": "message",
        "text": ":smile:",
        "user": "UE6EFEPTQ",
        "ts": "1607889865.286600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ovap",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607888104.285500",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "284a446f-736d-43f6-a470-fa3c5061c060",
        "type": "message",
        "text": "Hi Tim, no lions here! We're all nice now - especially since the Great Purge of Dissidents and Grumpies!\n\nI was hoping to find some FoC-aware non techies to run my ideas past. You probably guessed it was more about you potentially helping me than the other way around! But on the plus side, you may like the ideas and it may change your life forever...",
        "user": "UE6EFEPTQ",
        "ts": "1607890105.286900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Onmzr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Tim, no lions here! We're all nice now - especially since the Great Purge of Dissidents and Grumpies!\n\nI was hoping to find some FoC-aware non techies to run my ideas past. You probably guessed it was more about you potentially helping me than the other way around! But on the plus side, you may like the ideas and it may change your life forever..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607884598.282600",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "32BFF00F-0BD6-498B-BDB1-A9123890FD72",
        "type": "message",
        "text": "Computational scientist here. Not sure if that makes me a techie. I see myself as a power user rather than as a developer.",
        "user": "UJBAJNFLK",
        "ts": "1607890382.288400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N9Q0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Computational scientist here. Not sure if that makes me a techie. I see myself as a power user rather than as a developer."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607884598.282600",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "01f9dfd3-2d72-4d2f-975c-6767fc0131d4",
        "type": "message",
        "text": "Yes please! I love being a thought guinea pig! I'm so relieved to hear about the great purge.",
        "user": "USL4R0T61",
        "ts": "1607890745.288600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vkh3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes please! I love being a thought guinea pig! I'm so relieved to hear about the great purge."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607884598.282600",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "1bab5bee-82cc-42e8-8b58-64f6f98367a3",
        "type": "message",
        "text": "Konrad: hmmm.. you sound slightly techie! :smile:\n\nTim: yeah, it was bloody, but the right thing to do!",
        "user": "UE6EFEPTQ",
        "ts": "1607891149.288800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "46hUd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Konrad: hmmm.. you sound slightly techie! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTim: yeah, it was bloody, but the right thing to do!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607884598.282600",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "93e6f6d8-6170-4f71-a797-c0dcbc9a1bfc",
        "type": "message",
        "text": "&gt; What to do about line getting too long?\nJust infiniscroll to the right within in a window/frame (perhaps I'm misunderstanding the issue, this seems completely analogous to new lines in a source file).\n\n&gt; What about awkward values on the stack\nI think you'll have to just put a marker on the timeline stacks (like [$1]), then on the left of the screen show [$1][\"<http://example.com/blah/122512>\"] with the same colouring. The values are const (IIUC), so you can show a single list of values across all stacks in the timeline view",
        "user": "UDQBTJ211",
        "ts": "1607891714.289000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LBU",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What to do about line getting too long?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just infiniscroll to the right within in a window/frame (perhaps I'm misunderstanding the issue, this seems completely analogous to new lines in a source file).\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What about awkward values on the stack"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you'll have to just put a marker on the timeline stacks (like [$1]), then on the left of the screen show [$1][\""
                            },
                            {
                                "type": "link",
                                "url": "http://example.com/blah/122512"
                            },
                            {
                                "type": "text",
                                "text": "\"] with the same colouring. The values are const (IIUC), so you can show a single list of values across all stacks in the timeline view"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607887127.284300",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "314e1d54-70ed-4d0b-923d-ac47a2baf119",
        "type": "message",
        "text": "Your point about BV skimming over the crux of live editing is a whole other thing...",
        "user": "UDQBTJ211",
        "ts": "1607891941.289900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3icR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your point about BV skimming over the crux of live editing is a whole other thing..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607887127.284300",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "5F11FC0E-4468-40FD-BE66-3E7C6FEAE3EE",
        "type": "message",
        "text": "i\u2019m also free to sketch whenever! my initial suspicion on the stack depth stuff is that the stack shouldn\u2019t ever really get too deep\u2014some examples would help here. i tend to err on the side of \u201cworry about it when it\u2019s a problem because then you\u2019ll have enough information to make the tradeoff\u201d\n\ntruncation is tricky and my temptation would be to truncate with a reasonable default but make the default accessible. visual stuff like this also benefits from examples. if i were to put my rebol hat on my suspicion would be that long data is often secretly structured in one of two ways: you\u2019re using data to represent a lot of small differences, like with hash ids, and all you need is displaying something like a scannable difference, or it\u2019s deeply structured and made linearized (like urls) and you actually want a struct and to display relevant differences based on some context (in a web app you might care if something belongs to a person or a team, or you might just be interested in document ids)\n\nif you\u2019re just worried about unix compatibility, it might be helpful to investigate the goals: do you want to keep the ui the same? or do you want to have code for unix work on your platform? or do you just want equivalent functionality?",
        "user": "UHWC9PXBL",
        "ts": "1607892362.298600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "me8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i\u2019m also free to sketch whenever! my initial suspicion on the stack depth stuff is that the stack shouldn\u2019t ever really get too deep\u2014some examples would help here. i tend to err on the side of \u201cworry about it when it\u2019s a problem because then you\u2019ll have enough information to make the tradeoff\u201d\n\n"
                            },
                            {
                                "type": "text",
                                "text": "truncation is tricky and my temptation would be to truncate with a reasonable default but make the default accessible. visual stuff like this also benefits from examples. if i were to put my rebol hat on my suspicion would be that long data is often secretly structured in one of two ways: you\u2019re using data to represent a lot of small differences, like with hash ids, and all you need is displaying something like a scannable difference, or it\u2019s deeply structured and made linearized (like urls) and you actually want a struct and to display relevant differences based on some context (in a web app you might care if something belongs to a person or a team, or you might just be interested in document ids)\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "if you\u2019re just worried about unix compatibility, it might be helpful to investigate the goals: do you want to keep the ui the same? or do you want to have code for unix work on your platform? or do you just want equivalent functionality?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607887127.284300",
        "parent_user_id": "UCUSW7WVD"
    }
]