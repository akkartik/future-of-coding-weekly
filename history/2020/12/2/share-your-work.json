[
    {
        "client_msg_id": "cde8ac96-99d3-485c-b452-0fd0db69f136",
        "type": "message",
        "text": "<@U016VUZGUUQ> Yeah, we\u2019re being very deliberate to make sure you don\u2019t guess at what the system understood. That box under the input shows our interpretation, which is completely without ambiguity. You can actually pop each of those steps open and see their implementations too if you\u2019re unsure what those do.",
        "user": "UEBG0NPDK",
        "ts": "1606871584.337400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BOt8o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " Yeah, we\u2019re being very deliberate to make sure you don\u2019t guess at what the system understood. That box under the input shows our interpretation, which is completely without ambiguity. You can actually pop each of those steps open and see their implementations too if you\u2019re unsure what those do."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U016VUZGUUQ",
                    "U8A5MS6R1",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "b23c23f2-9a4b-4c08-9619-18abb20d085c",
        "type": "message",
        "text": "<@UDQBTJ211> Yeah, it is kind of interesting that while we understand the notion of recursive definition in tons of domains - including everyday programming - people seem to forget it here. :slightly_smiling_face: We haven\u2019t explicitly spoken to a lot of non-coders since our original intent has been to build a system for more technical folks this time around. That being said, the response from both camps has been shockingly accepting. We\u2019ve only had a few people be staunchly opposed. A lot of cautious skepticism, but I actually think that\u2019s the right reaction to have. Traditionally systems like this have had a lot of really awful caveats and it\u2019s up to us to show that\u2019s not true this go around.",
        "user": "UEBG0NPDK",
        "ts": "1606871803.337600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e1x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " Yeah, it is kind of interesting that while we understand the notion of recursive definition in tons of domains - including everyday programming - people seem to forget it here. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " We haven\u2019t explicitly spoken to a lot of non-coders since our original intent has been to build a system for more technical folks this time around. That being said, the response from both camps has been shockingly accepting. We\u2019ve only had a few people be staunchly opposed. A lot of cautious skepticism, but I actually think that\u2019s the right reaction to have. Traditionally systems like this have had a lot of really awful caveats and it\u2019s up to us to show that\u2019s not true this go around."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "f06c0146-40ce-489f-9188-9dabb97eea3f",
        "type": "message",
        "text": "An interesting question to ask here from the coder/non-coder perspective: is this code?",
        "user": "UEBG0NPDK",
        "ts": "1606871846.337800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fxnh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An interesting question to ask here from the coder/non-coder perspective: is this code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK"
    },
    {
        "client_msg_id": "1e487d56-fa3e-4f08-af12-c5cfa859d317",
        "type": "message",
        "text": "I would argue it unequivocally is, you can very nearly do a direct translation from our processes to an imperative language that has async/await and some sort of reactive library, but a lot of folks seem to interpret this as \u201cno code\u201d",
        "user": "UEBG0NPDK",
        "ts": "1606871912.338000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/TeS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would argue it unequivocally is, you can very nearly do a direct translation from our processes to an imperative language that has async/await and some sort of reactive library, but a lot of folks seem to interpret this as \u201cno code\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK"
    },
    {
        "client_msg_id": "44959e8e-3d74-43dc-a6ec-22dc843956af",
        "type": "message",
        "text": "It\u2019ll be interesting to see how that plays out as we go further.",
        "user": "UEBG0NPDK",
        "ts": "1606871927.338200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jlnwQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019ll be interesting to see how that plays out as we go further."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK"
    },
    {
        "client_msg_id": "16901b27-c2ca-44cf-9421-7c8e794275fe",
        "type": "message",
        "text": "Reminds me a bit of human resource machine: <https://tomorrowcorporation.com/humanresourcemachine>",
        "user": "UEBG0NPDK",
        "ts": "1606873703.338600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Tomorrow Corporation  :  Human Resource Machine",
                "title_link": "https://tomorrowcorporation.com/humanresourcemachine",
                "text": "Tomorrow Corporation is an independent game developer behind indie games Little Inferno and Human Resource Machine",
                "fallback": "Tomorrow Corporation  :  Human Resource Machine",
                "from_url": "https://tomorrowcorporation.com/humanresourcemachine",
                "service_icon": "https://tomorrowcorporation.com/blog/wp-content/themes/tcTheme2/images/favicon.ico",
                "service_name": "tomorrowcorporation.com",
                "id": 1,
                "original_url": "https://tomorrowcorporation.com/humanresourcemachine"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j1yI4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me a bit of human resource machine: "
                            },
                            {
                                "type": "link",
                                "url": "https://tomorrowcorporation.com/humanresourcemachine"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606827121.315700",
        "parent_user_id": "U0139HUPMQ9"
    },
    {
        "client_msg_id": "69cd13d9-ec12-4519-8f28-cf4524075437",
        "type": "message",
        "text": "Question: What do you use to get nicely formatted HTML and links between methods for mu code?",
        "user": "U015902ESJC",
        "ts": "1606874117.338900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g0E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Question: What do you use to get nicely formatted HTML and links between methods for mu code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "3ed33c40-b1f8-468d-ad82-566d130f0e76",
        "type": "message",
        "text": "<@U01BSAKUDJQ> those are all great ideas! One weakness in the benchmark is that I don\u2019t have many tasks that really stress the expressiveness of turing-incomplete langs like SQL/datalog. I like \u201ctransform all columns with _date in the name\u201d because there\u2019s a level of reflection required that I think SQL/datalog don\u2019t have.",
        "user": "UFB8STN7K",
        "ts": "1606874121.339100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vUiT9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01BSAKUDJQ"
                            },
                            {
                                "type": "text",
                                "text": " those are all great ideas! One weakness in the benchmark is that I don\u2019t have many tasks that really stress the expressiveness of turing-incomplete langs like SQL/datalog. I like \u201ctransform all columns with _date in the name\u201d because there\u2019s a level of reflection required that I think SQL/datalog don\u2019t have."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604366257.141100",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "d7c1757a-7695-4ec8-a93d-c874b6426827",
        "type": "message",
        "text": "I feel so Informed.  :joy:\n\nThough you haven't shown this yet, the main code-ish quality that I hope for in UIs like this is being able to get a sense of everything that has been said.  What is actually in this document?  With a lot of tools, inspector sniffing is the only way to find out and even then you don't know if a value is default, computed, or explicit.  Code, of course, answers the explicit part, but often thorough API knowledge is required to know even the most basic consequences.",
        "user": "UA14TGLTC",
        "ts": "1606874190.339300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nKRP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel so Informed.  "
                            },
                            {
                                "type": "emoji",
                                "name": "joy"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThough you haven't shown this yet, the main code-ish quality that I hope for in UIs like this is being able to get a sense of everything that has been said.  What is actually in this document?  With a lot of tools, inspector sniffing is the only way to find out and even then you don't know if a value is default, computed, or explicit.  Code, of course, answers the explicit part, but often thorough API knowledge is required to know even the most basic consequences."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK"
    },
    {
        "client_msg_id": "b6085760-e5ea-4caa-84c3-be428d6b5e5f",
        "type": "message",
        "text": "<https://github.com/akkartik/mu/blob/main/tools/update_html|https://github.com/akkartik/mu/blob/main/tools/update_html>\n\n<https://github.com/akkartik/mu/blob/main/tools/linkify.cc|https://github.com/akkartik/mu/blob/main/tools/linkify.cc>",
        "user": "UCUSW7WVD",
        "ts": "1606874467.339500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1606876654.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ypQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/mu/blob/main/tools/update_html",
                                "text": "https://github.com/akkartik/mu/blob/main/tools/update_html"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/mu/blob/main/tools/linkify.cc",
                                "text": "https://github.com/akkartik/mu/blob/main/tools/linkify.cc"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "7ac906de-02fb-4789-8ea2-95b1fd44e697",
        "type": "message",
        "text": "Dope. I love it. I've been thinking for a while that I should write an extension to  my repl capturing the previous statement and adding it + the result as an assert to my test suite. This is slightly different, but similar idea.",
        "user": "U01DUNFS2N4",
        "ts": "1606877423.340000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01DUNFS2N4",
            "ts": "1606877448.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zHCP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dope. I love it. I've been thinking for a while that I should write an extension to  my repl capturing the previous statement and adding it + the result as an assert to my test suite. This is slightly different, but similar idea."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606863294.337100",
        "parent_user_id": "UL5AX4G2H",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UL5AX4G2H"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1de17f2f-fd90-4b6d-8ae0-b43d4d015517",
        "type": "message",
        "text": "It's absolutely, objectively code, in the same sense that a well-specified state machine diagram is code. But the common definition of \"code\" is specifically funny-looking text, so good luck getting non-CS people to grok our idea of what is and isn't code. I don't know how you deal with that from a marketing perspective.",
        "user": "U016VUZGUUQ",
        "ts": "1606877591.340300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lYJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's absolutely, objectively code, in the same sense that a well-specified state machine diagram is code. But the common definition of \"code\" is specifically funny-looking text, so good luck getting non-CS people to grok our idea of what is and isn't code. I don't know how you deal with that from a marketing perspective."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606840431.317400",
        "parent_user_id": "UEBG0NPDK",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "81d1e730-ad31-4cb1-bf52-849df0ee76e4",
        "type": "message",
        "text": "Rather than do a new post, I thought I'd just pile on this one. AOC day 1 in uCISC: <https://github.com/grokthis/ucisc/blob/master/examples/aoc/2020/day_1.ucisc> (also needs the string and number libs in <https://github.com/grokthis/ucisc/tree/master/app/lib>). 133 instructions total after being compiled. We will see how far I can take this on my barely bootstrapped 16-bit processor :joy:",
        "user": "U015902ESJC",
        "ts": "1606889171.340600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U015902ESJC",
            "ts": "1606930466.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gic",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Rather than do a new post, I thought I'd just pile on this one. AOC day 1 in uCISC: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/grokthis/ucisc/blob/master/examples/aoc/2020/day_1.ucisc"
                            },
                            {
                                "type": "text",
                                "text": " (also needs the string and number libs in "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/grokthis/ucisc/tree/master/app/lib"
                            },
                            {
                                "type": "text",
                                "text": "). 133 instructions total after being compiled. We will see how far I can take this on my barely bootstrapped 16-bit processor "
                            },
                            {
                                "type": "emoji",
                                "name": "joy"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606811712.306500",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "92f143f9-f4ce-4593-9353-0ffc55d444e0",
        "type": "message",
        "text": "This seems to be the same thing as Snapshots in Jest (<https://jestjs.io/docs/en/snapshot-testing>)? They are mostly described in the context of testing UI in their docs, but they can easily be used for snapshoting anything that is serializable.\nFrom what I learned so far, they are good for a situation where you want to ensure that a specific part of the system does not change its outputs, but you don't want to describe those outputs manually, usually because they are too complex for that. It is not there to replace the classical TDD, but to complement it for these specific situations.",
        "user": "UUB7RA7PF",
        "ts": "1606898639.341000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Snapshot Testing \u00b7 Jest",
                "title_link": "https://jestjs.io/docs/en/snapshot-testing",
                "text": "Snapshot tests are a very useful tool whenever you want to make sure your UI does not change unexpectedly.",
                "fallback": "Snapshot Testing \u00b7 Jest",
                "thumb_url": "https://jestjs.io/img/opengraph.png",
                "from_url": "https://jestjs.io/docs/en/snapshot-testing",
                "thumb_width": 796,
                "thumb_height": 416,
                "service_icon": "https://jestjs.io/img/favicon/favicon.ico",
                "service_name": "jestjs.io",
                "id": 1,
                "original_url": "https://jestjs.io/docs/en/snapshot-testing"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=+Qwp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This seems to be the same thing as Snapshots in Jest ("
                            },
                            {
                                "type": "link",
                                "url": "https://jestjs.io/docs/en/snapshot-testing"
                            },
                            {
                                "type": "text",
                                "text": ")? They are mostly described in the context of testing UI in their docs, but they can easily be used for snapshoting anything that is serializable.\nFrom what I learned so far, they are good for a situation where you want to ensure that a specific part of the system does not change its outputs, but you don't want to describe those outputs manually, usually because they are too complex for that. It is not there to replace the classical TDD, but to complement it for these specific situations."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606863294.337100",
        "parent_user_id": "UL5AX4G2H",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e1d0366d-ee60-4cd5-bc95-45837088a07a",
        "type": "message",
        "text": "Very cool project, and it seems very polished!\nI am working on a project that is sharing the same vision (low code for developers, remove the boilerplate and accidental complexity) so I really like the general idea and direction -&gt; we are approaching it the other way though, but I think a lot of ideology is similar.\nI like the UI :smile:, it looks polished and smooth.\nWhat is the stage of the project, what are you focusing on -&gt; getting it to be stable, adding more features? What are some of the main challenges you encountered, both in designing such system and in implementing it? I am guessing there is a plan to monetize hosting of these apps on your cloud, which makes sense. What if multiple developers want to work together, I guess that is coming in the future? Tests?\n\nSorry for a lot of questions, and again, I really like the idea but even more how polished even the alpha seems!",
        "user": "UUB7RA7PF",
        "ts": "1606899997.341500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UUB7RA7PF",
            "ts": "1606900020.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LJJK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very cool project, and it seems very polished!\nI am working on a project that is sharing the same vision (low code for developers, remove the boilerplate and accidental complexity) so I really like the general idea and direction -> we are approaching it the other way though, but I think a lot of ideology is similar.\nI like the UI "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": ", it looks polished and smooth.\nWhat is the stage of the project, what are you focusing on -> getting it to be stable, adding more features? What are some of the main challenges you encountered, both in designing such system and in implementing it? I am guessing there is a plan to monetize hosting of these apps on your cloud, which makes sense. What if multiple developers want to work together, I guess that is coming in the future? Tests?\n\nSorry for a lot of questions, and again, I really like the idea but even more how polished even the alpha seems!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33"
    },
    {
        "type": "message",
        "text": "Yeah, it's very similar to jest snapshots, especially the extremely valuable --updateSnapshot feature. In practice, Wicked Fast Testing has a slight edge because the tests are json rather than js code. You can use a program like jq to skip arbitrary tests and generate test data directly.",
        "user": "UL5AX4G2H",
        "ts": "1606904389.342200",
        "team": "T5TCAFTA9",
        "thread_ts": "1606863294.337100",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "0041cd04-6217-4d3d-be06-ecf61a663d0f",
        "type": "message",
        "text": "Nice work! We have very similar ideas about Actions in <http://Fibery.io|Fibery.io> (did not implement it yet). Connecting external tools and wiring them together in a single workflow might be very powerful.",
        "user": "UMYKGHYBA",
        "ts": "1606904984.342400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ac2C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice work! We have very similar ideas about Actions in "
                            },
                            {
                                "type": "link",
                                "url": "http://Fibery.io",
                                "text": "Fibery.io"
                            },
                            {
                                "type": "text",
                                "text": " (did not implement it yet). Connecting external tools and wiring them together in a single workflow might be very powerful."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33"
    },
    {
        "client_msg_id": "e25e9b1c-992b-42ae-98b9-1c1c8fb3814f",
        "type": "message",
        "text": "Btw how does it compare to <https://parseplatform.org/> ?",
        "user": "UUB7RA7PF",
        "ts": "1606905543.342800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Parse Community",
                "title": "Parse + Open Source = :heart:",
                "title_link": "https://parseplatform.org/",
                "text": "The open source GitHub page for the Parse platform.",
                "fallback": "Parse Community: Parse + Open Source = \u2764\ufe0f",
                "image_url": "http://parseplatform.github.io/img/preview.png",
                "from_url": "https://parseplatform.org/",
                "image_width": 438,
                "image_height": 250,
                "image_bytes": 80691,
                "service_icon": "https://parseplatform.org/img/favicon/favicon-32x32.png",
                "id": 1,
                "original_url": "https://parseplatform.org/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XAdb=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Btw how does it compare to "
                            },
                            {
                                "type": "link",
                                "url": "https://parseplatform.org/"
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33"
    },
    {
        "type": "message",
        "text": "Also, super importantly, since the test data is JSON, Wicked Fast Testing can be implemented in any language in ~20 lines, unlike jest which is JS only",
        "user": "UL5AX4G2H",
        "ts": "1606918446.343300",
        "team": "T5TCAFTA9",
        "thread_ts": "1606863294.337100",
        "parent_user_id": "UL5AX4G2H",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUB7RA7PF",
                    "UCUSW7WVD"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b6f0697a-1c3a-4da9-8479-9431e56baf30",
        "type": "message",
        "text": "<@UFB8STN7K> this is definitely something I can help with, I do data transformation erryday",
        "user": "UAJKEBGP8",
        "ts": "1606919232.343600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a7V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " this is definitely something I can help with, I do data transformation erryday"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604366257.141100",
        "parent_user_id": "UFB8STN7K",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFB8STN7K"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6d926e4b-b2ab-4952-bd4b-05a487d7c5f4",
        "type": "message",
        "text": "<@UUB7RA7PF>\n1- We're launching little alphas as we go, so currently in alpha for the \"hosted db/CRUD and custom API builder\". Just friends and acquaintances who want to try it out and give us feedback or have very simple app ideas (light CMS, side project)\n2- We spent the last few weeks cleaning up the bugs from our first alpha so we're now lookign to add a few features\n3- We've been giving a lot of thought to the abstraction and the interplay between our code and how it interfaces with your code in a way that still allows us to manage scaling long term. Keeping Javascript in neat little boxes where it's safe to run 3p JS, thinking about building a simple expression language for added performance on things like conditions and validations... My business partner <@U016LEA3J1H> can probably list more\n3- Ya, too early to tell but prolly something like Heroku. Generous free tier to get people to try it. Charge for hosting and/or charge a monthly fee for more advanced features (collaboration, environments, or anything that makes it clear Gadget has become your \"IDE\")\nTons to build so our focus is on light backend use cases as we build features and move upwards.\n4- This is similar to Parse Cloud. (which FB killed years ago) A lot of the value of the abstraction comes because it's a bundled, cloud product. We actually know the Parse CEO and he's given us some tips and tricks on  how to take this to market.",
        "user": "U01DX39SB33",
        "ts": "1606922747.343900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mVSL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUB7RA7PF"
                            },
                            {
                                "type": "text",
                                "text": "\n1- We're launching little alphas as we go, so currently in alpha for the \"hosted db/CRUD and custom API builder\". Just friends and acquaintances who want to try it out and give us feedback or have very simple app ideas (light CMS, side project)\n2- We spent the last few weeks cleaning up the bugs from our first alpha so we're now lookign to add a few features\n3- We've been giving a lot of thought to the abstraction and the interplay between our code and how it interfaces with your code in a way that still allows us to manage scaling long term. Keeping Javascript in neat little boxes where it's safe to run 3p JS, thinking about building a simple expression language for added performance on things like conditions and validations... My business partner "
                            },
                            {
                                "type": "user",
                                "user_id": "U016LEA3J1H"
                            },
                            {
                                "type": "text",
                                "text": " can probably list more\n3- Ya, too early to tell but prolly something like Heroku. Generous free tier to get people to try it. Charge for hosting and/or charge a monthly fee for more advanced features (collaboration, environments, or anything that makes it clear Gadget has become your \"IDE\")\nTons to build so our focus is on light backend use cases as we build features and move upwards.\n4- This is similar to Parse Cloud. (which FB killed years ago) A lot of the value of the abstraction comes because it's a bundled, cloud product. We actually know the Parse CEO and he's given us some tips and tricks on  how to take this to market."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUB7RA7PF"
                ],
                "count": 1
            },
            {
                "name": "cool",
                "users": [
                    "UUB7RA7PF"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e28085dc-b7a2-495f-a88e-acde036f3bb6",
        "type": "message",
        "text": "<@UMYKGHYBA> thanks for the kind words, lemme know if you want to play with the alpha and I can set you up",
        "user": "U01DX39SB33",
        "ts": "1606922770.344100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jW9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMYKGHYBA"
                            },
                            {
                                "type": "text",
                                "text": " thanks for the kind words, lemme know if you want to play with the alpha and I can set you up"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33"
    },
    {
        "type": "message",
        "text": "<@UAJKEBGP8> more broadly, I\u2019m searching for a taxonomy of tabular analytics tasks. I didn\u2019t have a particular method for selecting tasks. I just picked what seemed common to my personal experience. But I\u2019d like a more systematic way of picking tasks that cover the space.\n\nFor example, this paper is a good start: <https://ieeexplore.ieee.org/document/1532136>",
        "files": [
            {
                "id": "F01FTBUQBHC",
                "created": 1606926777,
                "timestamp": 1606926777,
                "name": "Screen Shot 2020-12-02 at 9.31.40 AM.png",
                "title": "Screen Shot 2020-12-02 at 9.31.40 AM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UFB8STN7K",
                "editable": false,
                "size": 93449,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01FTBUQBHC/screen_shot_2020-12-02_at_9.31.40_am.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01FTBUQBHC/download/screen_shot_2020-12-02_at_9.31.40_am.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 235,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 314,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 470,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 523,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 627,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F01FTBUQBHC-b11b4b193a/screen_shot_2020-12-02_at_9.31.40_am_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 669,
                "original_w": 1044,
                "original_h": 682,
                "thumb_tiny": "AwAfADDRbPQZPuMUnzf7f6UrfxfSmKeudx/GgBfm/wBv9KPm/wBv9KVWwOAxp4ORnGPrQA3cf7jfpQGP9006igBrfxfSoweMbQfwP+FSkZz7imKnPKgj8KABWxwVx9AaeDkUBQvQYpaACiiigD//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UFB8STN7K/F01FTBUQBHC/screen_shot_2020-12-02_at_9.31.40_am.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01FTBUQBHC-f25710d352",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hCDDX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAJKEBGP8"
                            },
                            {
                                "type": "text",
                                "text": " more broadly, I\u2019m searching for a taxonomy of tabular analytics tasks. I didn\u2019t have a particular method for selecting tasks. I just picked what seemed common to my personal experience. But I\u2019d like a more systematic way of picking tasks that cover the space.\n\nFor example, this paper is a good start: "
                            },
                            {
                                "type": "link",
                                "url": "https://ieeexplore.ieee.org/document/1532136"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UFB8STN7K",
        "display_as_bot": false,
        "ts": "1606926781.344400",
        "thread_ts": "1604366257.141100",
        "parent_user_id": "UFB8STN7K",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UAJKEBGP8"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c02b5e58-9428-438e-849c-b1716249f4bc",
        "type": "message",
        "text": "<@U01DX39SB33> I\u2019d like to play with it, but I will not become a customer. But I may give you some feedback :slightly_smiling_face: So if you want to spend time on me, I\u2019d be glad to have an access",
        "user": "UMYKGHYBA",
        "ts": "1606934188.345400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4P2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01DX39SB33"
                            },
                            {
                                "type": "text",
                                "text": " I\u2019d like to play with it, but I will not become a customer. But I may give you some feedback "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " So if you want to spend time on me, I\u2019d be glad to have an access"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33"
    },
    {
        "client_msg_id": "af7540e6-fda0-465e-a5f0-fe068b1e43a5",
        "type": "message",
        "text": "ya absolutely, we don't expect any customers for at least another 3-4 months",
        "user": "U01DX39SB33",
        "ts": "1606935703.345600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jOv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ya absolutely, we don't expect any customers for at least another 3-4 months"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33"
    },
    {
        "client_msg_id": "55e455bb-b9c0-4a50-a67f-7730ff0e8e60",
        "type": "message",
        "text": "lots to build",
        "user": "U01DX39SB33",
        "ts": "1606935704.345800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pf=eZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "lots to build"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33"
    },
    {
        "client_msg_id": "7c2755e3-fd62-444f-8b72-a071fa10e991",
        "type": "message",
        "text": "just need feedback",
        "user": "U01DX39SB33",
        "ts": "1606935708.346000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SOhv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "just need feedback"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606844487.327800",
        "parent_user_id": "U01DX39SB33"
    }
]