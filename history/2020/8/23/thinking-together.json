[
    {
        "type": "message",
        "text": "FWIW, I watched this coding adventure yesterday; I'm a big fan of his and always wonder how he puts together such great videos - he seems to bend Unity to his will for the teaching parts as well as the rendering parts.  I have coincidentally implemented the same approach in the paper he used, as part of a game prototype I was playing with (some eye candy enclosed - must revisit this project at some point!)\nMy approach is probably slightly different though.  I'm  more of an 'implementer' than a scientist/academic, and I often struggle with hard math.  My approach is typically to iterate towards a goal in very small steps without getting bogged down in the detail; and it can take several days to get through the technical challenge.  I'm in awe of anyone who can read a paper full of Integrals and translate it to code.  That would be highly efficient!  I rely on following my nose and looking at sample code far more than the math.\nPart of the reason I'm always messing with visualization tools and visual programming is that they are the only chance I have to understand.\n\"The way I truly understood integrals and summations was through implementing them as for loops.\" This + 1000, basically :wink:\nAnd Monads.... I've read a few articles, but until I actually get to use one in a program I won't understand them.\nPerhaps Sebastien is just really smart (I'm sure he is), but what intrigues me is, has he got to that place by building a set of tools and technologies around himself, such that he can break any problem up into pieces he understands?  i.e. The fact that he can plot and interact with graphs while building his code gives him a deeper/quicker understanding of each step?  Just more validation of Bret Victor's approach, I guess....",
        "files": [
            {
                "id": "F019BHQ8CMR",
                "created": 1598167708,
                "timestamp": 1598167708,
                "name": "MApp 2016-10-20 17-59-31-55.bmp",
                "title": "MApp 2016-10-20 17-59-31-55.bmp",
                "mimetype": "image/bmp",
                "filetype": "bmp",
                "pretty_type": "Bitmap",
                "user": "UUQ2EQW21",
                "editable": false,
                "size": 2359362,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F019BHQ8CMR/mapp_2016-10-20_17-59-31-55.bmp",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F019BHQ8CMR/download/mapp_2016-10-20_17-59-31-55.bmp",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F019BHQ8CMR-ff412b34a9/mapp_2016-10-20_17-59-31-55_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F019BHQ8CMR-ff412b34a9/mapp_2016-10-20_17-59-31-55_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F019BHQ8CMR-ff412b34a9/mapp_2016-10-20_17-59-31-55_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 270,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F019BHQ8CMR-ff412b34a9/mapp_2016-10-20_17-59-31-55_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 360,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F019BHQ8CMR-ff412b34a9/mapp_2016-10-20_17-59-31-55_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F019BHQ8CMR-ff412b34a9/mapp_2016-10-20_17-59-31-55_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 540,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F019BHQ8CMR-ff412b34a9/mapp_2016-10-20_17-59-31-55_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 600,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F019BHQ8CMR-ff412b34a9/mapp_2016-10-20_17-59-31-55_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 720,
                "image_exif_rotation": 1,
                "original_w": 1024,
                "original_h": 768,
                "permalink": "https://futureofcoding.slack.com/files/UUQ2EQW21/F019BHQ8CMR/mapp_2016-10-20_17-59-31-55.bmp",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F019BHQ8CMR-9841240192",
                "is_starred": false,
                "has_rich_preview": false
            },
            {
                "id": "F01A16YHR6U",
                "created": 1598167771,
                "timestamp": 1598167771,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UUQ2EQW21",
                "editable": false,
                "size": 1740810,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01A16YHR6U/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01A16YHR6U/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A16YHR6U-3681421456/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A16YHR6U-3681421456/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A16YHR6U-3681421456/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 274,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A16YHR6U-3681421456/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 365,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A16YHR6U-3681421456/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A16YHR6U-3681421456/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 547,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A16YHR6U-3681421456/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 608,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F01A16YHR6U-3681421456/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 729,
                "original_w": 987,
                "original_h": 750,
                "thumb_tiny": "AwAkADCsqkjGKcICaurCq0GRU4xV8yJKn2Y0htyO1WTcDcAOlOMqgGlzAUTCR2phUitIBXUHHWo3gB6U7pj1Q+WULxmoPMBPzCombNNzVcqI3JGAznB2nsKPMz1JB7ZFN3kdKA5FRysdydHKt1yOwqdHDDiqIY1KkhUhs80+UFJojKjmmGpT0NRVYBSryaPShetJiHZxnFAoPU0gpoR//9k=",
                "permalink": "https://futureofcoding.slack.com/files/UUQ2EQW21/F01A16YHR6U/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01A16YHR6U-802ac5fcfc",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1yg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW, I watched this coding adventure yesterday; I'm a big fan of his and always wonder how he puts together such great videos - he seems to bend Unity to his will for the teaching parts as well as the rendering parts.  I have coincidentally implemented the same approach in the paper he used, as part of a game prototype I was playing with (some eye candy enclosed - must revisit this project at some point!)\nMy approach is probably slightly different though.  I'm  more of an 'implementer' than a scientist/academic, and I often struggle with hard math.  My approach is typically to iterate towards a goal in very small steps without getting bogged down in the detail; and it can take several days to get through the technical challenge.  I'm in awe of anyone who can read a paper full of Integrals and translate it to code.  That would be highly efficient!  I rely on following my nose and looking at sample code far more than the math.\nPart of the reason I'm always messing with visualization tools and visual programming is that they are the only chance I have to understand.\n\"The way I truly understood integrals and summations was through implementing them as for loops.\" This + 1000, basically "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            },
                            {
                                "type": "text",
                                "text": "\nAnd Monads.... I've read a few articles, but until I actually get to use one in a program I won't understand them.\nPerhaps Sebastien is just really smart (I'm sure he is), but what intrigues me is, has he got to that place by building a set of tools and technologies around himself, such that he can break any problem up into pieces he understands?  i.e. The fact that he can plot and interact with graphs while building his code gives him a deeper/quicker understanding of each step?  Just more validation of Bret Victor's approach, I guess...."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UUQ2EQW21",
        "ts": "1598168499.063100",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1598168594.000000"
        },
        "thread_ts": "1598125322.060600",
        "parent_user_id": "U01661S9F34",
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b8df5a53-61ad-449c-b8fa-7553a2a58c5e",
        "type": "message",
        "text": "Quoting Donald Knuth (source: <http://www.jstor.org/stable/2318994>): \"It has often been said that a person does not really understand something until he teaches it to someone else. Actually a person does not really understand something until he can teach it to a computer, i.e. express it as an algorithm. The attempt to formalize things as algorithms leads to a much deeper understanding than if we simply try to comprehend things in the traditional way.\"",
        "user": "UJBAJNFLK",
        "ts": "1598170104.064000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1598170144.000000"
        },
        "attachments": [
            {
                "title": "     Computer Science and Its Relation to Mathematics on JSTOR ",
                "title_link": "http://www.jstor.org/stable/2318994",
                "text": "Donald E. Knuth, Computer Science and Its Relation to Mathematics, The American Mathematical Monthly, Vol. 81, No. 4 (Apr., 1974), pp. 323-343",
                "fallback": "     Computer Science and Its Relation to Mathematics on JSTOR ",
                "from_url": "http://www.jstor.org/stable/2318994",
                "service_icon": "http://www.jstor.org/assets/global_20200804T2113/build/images/favicons/apple-touch-icon.png",
                "service_name": "jstor.org",
                "id": 1,
                "original_url": "http://www.jstor.org/stable/2318994"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TWI8n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Quoting Donald Knuth (source: "
                            },
                            {
                                "type": "link",
                                "url": "http://www.jstor.org/stable/2318994"
                            },
                            {
                                "type": "text",
                                "text": "): \"It has often been said that a person does not really understand something until he teaches it to someone else. Actually a person does not really understand something until he can teach it to a computer, i.e. express it as an algorithm. The attempt to formalize things as algorithms leads to a much deeper understanding than if we simply try to comprehend things in the traditional way.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598125322.060600",
        "parent_user_id": "U01661S9F34",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U015V233CFL",
                    "U01661S9F34"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "ee472377-e73b-4fe0-ae92-ace216b93994",
        "type": "message",
        "text": "Re: personal style, I find mathematical concepts to be much more naturally expressed using functional programming rather than imperative, but no matter one's preferred style it seems clear to me that programming is <https://www.bootstrapworld.org|a better vehicle for teaching mathematics> than the standard mathematical pedagogy. Likewise, I'm in strong agreement with Sussman that traditional mathematical notation is strictly inferior to writing everything down in an <https://en.wikipedia.org/wiki/Structure_and_Interpretation_of_Classical_Mechanics|unambiguous machine executable notation>.",
        "user": "U013ZLJARC7",
        "ts": "1598182224.064600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Bootstrap",
                "title_link": "https://www.bootstrapworld.org/",
                "text": "Teaching Algebra through Computer Science",
                "fallback": "Bootstrap",
                "image_url": "http://www.bootstrapworld.org/images/engineer.jpg",
                "image_width": 332,
                "image_height": 250,
                "from_url": "https://www.bootstrapworld.org/",
                "image_bytes": 52533,
                "service_icon": "https://www.bootstrapworld.org/favicon.ico",
                "service_name": "bootstrapworld.org",
                "id": 1,
                "original_url": "https://www.bootstrapworld.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ed3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Re: personal style, I find mathematical concepts to be much more naturally expressed using functional programming rather than imperative, but no matter one's preferred style it seems clear to me that programming is "
                            },
                            {
                                "type": "link",
                                "url": "https://www.bootstrapworld.org",
                                "text": "a better vehicle for teaching mathematics"
                            },
                            {
                                "type": "text",
                                "text": " than the standard mathematical pedagogy. Likewise, I'm in strong agreement with Sussman that traditional mathematical notation is strictly inferior to writing everything down in an "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Structure_and_Interpretation_of_Classical_Mechanics",
                                "text": "unambiguous machine executable notation"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598125322.060600",
        "parent_user_id": "U01661S9F34",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UUQ2EQW21"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "13cef80b-fb94-4d34-a74e-9081f2222347",
        "type": "message",
        "text": "I used to agree with Sussman, but I have changed my mind a bit: unambiguous, yes, but not necessarily executable. Much of what you write down in mathematics and mathematically formulated science is specifications. For example differential equations such as Newton's. You really want to be able to write such specifications without necessarily doing something specific with them.",
        "user": "UJBAJNFLK",
        "ts": "1598209565.065600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hsa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I used to agree with Sussman, but I have changed my mind a bit: unambiguous, yes, but not necessarily executable. Much of what you write down in mathematics and mathematically formulated science is specifications. For example differential equations such as Newton's. You really want to be able to write such specifications without necessarily doing something specific with them."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598125322.060600",
        "parent_user_id": "U01661S9F34"
    }
]