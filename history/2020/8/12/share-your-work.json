[
    {
        "client_msg_id": "FECB0956-14A8-4BB2-8CD7-03A24E55A791",
        "type": "message",
        "text": "not sure if intentional but I get an auth error with the OP YouTube link - was the video taken down?",
        "user": "US370TRJA",
        "ts": "1597214131.476500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S6R99",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "not sure if intentional but I get an auth error with the OP YouTube link - was the video taken down?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596545313.448700",
        "parent_user_id": "U017GNJM021",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U014WA16VNJ",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "85b2eeca-a961-4277-ae92-22de4a28a071",
        "type": "message",
        "text": "Well, I mean, I used the hot reload feature only in the browser. I.e. the client side part of it. When user makes a modification in an editor hosted in the browser, it fires recompilation/rerender if the Vue template is modified without touching the data, and reload the full component if data is modified. Here is my very light proof of concept: <https://stackblitz.com/edit/vue-hot-reload-test-2>",
        "user": "UJ6LDMMN0",
        "ts": "1597214568.476700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "vue-hot-reload-test-2 - StackBlitz",
                "title_link": "https://stackblitz.com/edit/vue-hot-reload-test-2",
                "text": "Test hot reload of Vue js components. Episode 2.",
                "fallback": "vue-hot-reload-test-2 - StackBlitz",
                "image_url": "https://c.staticblitz.com/assets/icon-03bbb9acbba813917725387f46e5df03a95d232be240e910ce5f946a973b3f86.png",
                "from_url": "https://stackblitz.com/edit/vue-hot-reload-test-2",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 5725,
                "service_icon": "https://c.staticblitz.com/assets/icon-03bbb9acbba813917725387f46e5df03a95d232be240e910ce5f946a973b3f86.png",
                "service_name": "stackblitz.com",
                "id": 1,
                "original_url": "https://stackblitz.com/edit/vue-hot-reload-test-2"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "anY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, I mean, I used the hot reload feature only in the browser. I.e. the client side part of it. When user makes a modification in an editor hosted in the browser, it fires recompilation/rerender if the Vue template is modified without touching the data, and reload the full component if data is modified. Here is my very light proof of concept: "
                            },
                            {
                                "type": "link",
                                "url": "https://stackblitz.com/edit/vue-hot-reload-test-2"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597159796.470500",
        "parent_user_id": "U018LAH5QCT"
    },
    {
        "client_msg_id": "0b39f1bc-9298-419f-89cc-87c6adeb8b8c",
        "type": "message",
        "text": "Oh wow! I never found that package. I might need to dig into the internals. My Svelte implementation is naive and throws out the whole component every time. Although, I was refactoring the Svelte browser devtools into components that run inside the browser yesterday and discovered that there's a low-level API with $capture_state() and $inject_state() methods, which if they do what they say on the box, should solve the problem neatly.",
        "user": "U018LAH5QCT",
        "ts": "1597237306.477300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "18Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh wow! I never found that package. I might need to dig into the internals. My Svelte implementation is naive and throws out the whole component every time. Although, I was refactoring the Svelte browser devtools into components that run inside the browser yesterday and discovered that there's a low-level API with $capture_state() and $inject_state() methods, which if they do what they say on the box, should solve the problem neatly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597159796.470500",
        "parent_user_id": "U018LAH5QCT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "C2B751C3-CF56-47B9-8B82-3DF6874FBE2B",
        "type": "message",
        "text": "<@U017GNJM021> any idea about ^",
        "user": "UHWC9PXBL",
        "ts": "1597243301.477900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W1a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U017GNJM021"
                            },
                            {
                                "type": "text",
                                "text": " any idea about ^"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596545313.448700",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "8e0b00e8-8440-430a-ba00-eabbc7384279",
        "type": "message",
        "text": "Apologies folks, fixed now",
        "user": "U017GNJM021",
        "ts": "1597244341.478100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vy5b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Apologies folks, fixed now"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596545313.448700",
        "parent_user_id": "U017GNJM021",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL",
                    "US370TRJA"
                ],
                "count": 2
            }
        ]
    }
]