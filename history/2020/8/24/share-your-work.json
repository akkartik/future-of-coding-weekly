[
    {
        "client_msg_id": "93d181db-24c0-492b-9708-7cc71c12c2bc",
        "type": "message",
        "text": "I also heard usually all the jetbrains IDEs also have a very good search built-in. VSCode also got a separate symbol search but the effectiveness depends on the language server powering it based on the language you use.",
        "user": "US6TKS2HW",
        "ts": "1598224232.068600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iYmoa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also heard usually all the jetbrains IDEs also have a very good search built-in. VSCode also got a separate symbol search but the effectiveness depends on the language server powering it based on the language you use."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597961778.007500",
        "parent_user_id": "US6TKS2HW"
    },
    {
        "client_msg_id": "ac25e249-2b40-4a88-a555-5c2439e51e86",
        "type": "message",
        "text": "The key word is 'separate'.  Apart from potential performance considerations, I don't know why you would implement file and symbol search in different places, with different keystrokes.  I know what I need to find; just give me a list of all the things......",
        "user": "UUQ2EQW21",
        "ts": "1598252643.069500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3FaL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The key word is 'separate'.  Apart from potential performance considerations, I don't know why you would implement file and symbol search in different places, with different keystrokes.  I know what I need to find; just give me a list of all the things......"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597961778.007500",
        "parent_user_id": "US6TKS2HW"
    },
    {
        "client_msg_id": "42f4a457-16b0-4d33-bd6c-823845c4c049",
        "type": "message",
        "text": "To be fair, I haven't tried JetBrains, though I intend to start using CLion on Mac to see how that goes....",
        "user": "UUQ2EQW21",
        "ts": "1598252694.069700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GhQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To be fair, I haven't tried JetBrains, though I intend to start using CLion on Mac to see how that goes...."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597961778.007500",
        "parent_user_id": "US6TKS2HW"
    },
    {
        "client_msg_id": "5dab3095-4d5c-4c06-985a-acdd585635b5",
        "type": "message",
        "text": "Very interesting! :slightly_smiling_face: Can't wait to see what you will build.\n\nDo you have started some implementation? What do/will you use? HTML/JavaScript? Other?\n\nWhat do you think of \"reactive\" framework, like Vue.js? Reading your intro, it makes me think this this kind of framework can be a good fit to implement tools with bindings between several representations (the spatial canvas, the sheet, others...).",
        "user": "UJ6LDMMN0",
        "ts": "1598257319.070400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/e5nN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " Can't wait to see what you will build.\n\nDo you have started some implementation? What do/will you use? HTML/JavaScript? Other?\n\nWhat do you think of \"reactive\" framework, like Vue.js? Reading your intro, it makes me think this this kind of framework can be a good fit to implement tools with bindings between several representations (the spatial canvas, the sheet, others...)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598126579.060300",
        "parent_user_id": "UBKNXPBAB"
    },
    {
        "client_msg_id": "a01c6339-205d-4210-bc83-e3e3d75efb8c",
        "type": "message",
        "text": "Also, I am just starting digging in generative art (in fact, I am a completely new to it), but my feeling is that your way to express constraints can be very interesting for it. And I was just wondering how randomness can fit in your system. I.e. like a spread with random intervals between magnets or with some magnets that deleted, etc.",
        "user": "UJ6LDMMN0",
        "ts": "1598257560.070700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CwQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, I am just starting digging in generative art (in fact, I am a completely new to it), but my feeling is that your way to express constraints can be very interesting for it. And I was just wondering how randomness can fit in your system. I.e. like a spread with random intervals between magnets or with some magnets that deleted, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598126579.060300",
        "parent_user_id": "UBKNXPBAB"
    },
    {
        "client_msg_id": "b3a8a195-c457-41b0-8ae2-85eaec33474c",
        "type": "message",
        "text": "<@US370TRJA> that polyhedra viewer is so neat.  Instead of clicking on operations, want to see the space of them expanded out in VR.",
        "user": "UA14TGLTC",
        "ts": "1598260779.071600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lHuO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "US370TRJA"
                            },
                            {
                                "type": "text",
                                "text": " that polyhedra viewer is so neat.  Instead of clicking on operations, want to see the space of them expanded out in VR."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596545313.448700",
        "parent_user_id": "U017GNJM021",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "US370TRJA"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6711924d-1145-4351-b6b7-5567331d42e6",
        "type": "message",
        "text": "Very excited to see where this goes!\nThe snapping being an extension to/equivalent to dragging seems promising from a UX perspective, particularly if it can be made clear after the fact what 'type' of drag created it.\n-&gt; is there an exhaustive list of the type of snaps? e.g translate, scale, rotate... if it's a small list then there maybe some scope for replacing the circular nodes with appropriate icons (or adding icons somewhere...)\n\nspreads seems like an intuitive approach to one of the CS fundamentals - repetition\nconditionals seem more abstract, and I'm not sure to what extent you can represent them, particularly if the other visual variables (colour, opacity, texture, position...) are all reserved for the user... I imagine they'd probably need a separate view, either for abstract conditionals in general or looking at a particular group (however that's defined), and showing all the potential _alternatives_",
        "user": "UEDDR6L5Q",
        "ts": "1598269331.071800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3tY93",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very excited to see where this goes!\nThe snapping being an extension to/equivalent to dragging seems promising from a UX perspective, particularly if it can be made clear after the fact what 'type' of drag created it.\n-> is there an exhaustive list of the type of snaps? e.g translate, scale, rotate... if it's a small list then there maybe some scope for replacing the circular nodes with appropriate icons (or adding icons somewhere...)\n\nspreads seems like an intuitive approach to one of the CS fundamentals - repetition\nconditionals seem more abstract, and I'm not sure to what extent you can represent them, particularly if the other visual variables (colour, opacity, texture, position...) are all reserved for the user... I imagine they'd probably need a separate view, either for abstract conditionals in general or looking at a particular group (however that's defined), and showing all the potential "
                            },
                            {
                                "type": "text",
                                "text": "alternatives",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598126579.060300",
        "parent_user_id": "UBKNXPBAB"
    },
    {
        "client_msg_id": "1130c3c4-3384-42db-bf43-cc8009a29f2a",
        "type": "message",
        "text": "<@UJBAJNFLK> is that you? <https://www.nature.com/articles/d41586-020-02462-7> More like Past of Coding than Future of Coding. Or retrofuturistic? forepass\u00e9istic?",
        "user": "U018DRGAC5S",
        "ts": "1598284884.072600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Challenge to scientists: does your ten-year-old code still run?",
                "title_link": "https://www.nature.com/articles/d41586-020-02462-7",
                "text": "Missing documentation and obsolete environments force participants in the Ten Years Reproducibility Challenge to get creative.",
                "fallback": "Challenge to scientists: does your ten-year-old code still run?",
                "image_url": "https://media.nature.com/lw1024/magazine-assets/d41586-020-02462-7/d41586-020-02462-7_18291678.jpg",
                "from_url": "https://www.nature.com/articles/d41586-020-02462-7",
                "image_width": 444,
                "image_height": 250,
                "image_bytes": 174869,
                "service_name": "Nature",
                "id": 1,
                "original_url": "https://www.nature.com/articles/d41586-020-02462-7"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=9O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " is that you? "
                            },
                            {
                                "type": "link",
                                "url": "https://www.nature.com/articles/d41586-020-02462-7"
                            },
                            {
                                "type": "text",
                                "text": " More like Past of Coding than Future of Coding. Or retrofuturistic? forepass\u00e9istic?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598284884.072600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1598293806.072900",
        "reply_users": [
            "UJBAJNFLK"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b3bb86cf-a3c8-4354-9169-3062eb4488ed",
        "type": "message",
        "text": "That's me indeed! It's about the past, but with the goal of learning for the future. Let's say the future of the past :grinning:",
        "user": "UJBAJNFLK",
        "ts": "1598293806.072900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1598293842.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bvS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's me indeed! It's about the past, but with the goal of learning for the future. Let's say the future of the past "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598284884.072600",
        "parent_user_id": "U018DRGAC5S",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UE1JQM9HQ",
                    "U013ZLJARC7",
                    "U018DRGAC5S"
                ],
                "count": 3
            }
        ]
    }
]