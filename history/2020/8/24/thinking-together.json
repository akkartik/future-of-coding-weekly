[
    {
        "client_msg_id": "c4e9d8a9-eb26-471a-b558-dcd90071bd78",
        "type": "message",
        "text": "In the 1950's, Kenneth Iverson was a math professor at Harvard. He designed APL as an unambigous, expressive mathematical notation, for teaching math to undergrads, and for his personal use solving research problems and writing books and research papers. Iverson joined IBM as a mathematician, where he used his notation to formalize and specify the instruction sets of the 7090 and 360 computers. Only after that, the project at IBM to implement APL as a programming language.\n\nAPL doesn't usually get much credit for its influence on modern programming systems (although Mathematica, NumPy and TensorFlow are APL dialects), and it isn't usually credited as an early functional language, even though it was the first such language (to my knowledge) to have map/reduce primitives (although under different names). APL now seems to be remembered for its syntax.\n\nFinally, my point. Re: Sussman, APL is a much better mathematical notation than Scheme.",
        "user": "UJN1TAYEQ",
        "ts": "1598221174.065800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eec6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the 1950's, Kenneth Iverson was a math professor at Harvard. He designed APL as an unambigous, expressive mathematical notation, for teaching math to undergrads, and for his personal use solving research problems and writing books and research papers. Iverson joined IBM as a mathematician, where he used his notation to formalize and specify the instruction sets of the 7090 and 360 computers. Only after that, the project at IBM to implement APL as a programming language.\n\nAPL doesn't usually get much credit for its influence on modern programming systems (although Mathematica, NumPy and TensorFlow are APL dialects), and it isn't usually credited as an early functional language, even though it was the first such language (to my knowledge) to have map/reduce primitives (although under different names). APL now seems to be remembered for its syntax.\n\nFinally, my point. Re: Sussman, APL is a much better mathematical notation than Scheme."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598125322.060600",
        "parent_user_id": "U01661S9F34"
    },
    {
        "client_msg_id": "97b79a07-22e2-45ff-b162-8289e1749493",
        "type": "message",
        "text": "<@U0123H7JRDM> I implemented an endless slider to my Curv project, but I'm not in love with the UI. I'd appreciate some more specific references to good UIs for this, so that I can see what a better UI might look like.",
        "user": "UJN1TAYEQ",
        "ts": "1598221862.066000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t4YR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0123H7JRDM"
                            },
                            {
                                "type": "text",
                                "text": " I implemented an endless slider to my Curv project, but I'm not in love with the UI. I'd appreciate some more specific references to good UIs for this, so that I can see what a better UI might look like."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6258505F-DF1B-46FE-A154-5A23A8B26619",
        "type": "message",
        "text": "<@U85HCL7JP> curious what you mean by solving the problem of magic numbers. For physics params in games at least, to me everything is arbitrary and relative to other values, so I\u2019m not sure what the problem to be solved is.(Maybe \u201cmagic numbers\u201d isn\u2019t the right word? Sorry if that was confusing)",
        "user": "UMWF81HTP",
        "ts": "1598239464.069200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XSRn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U85HCL7JP"
                            },
                            {
                                "type": "text",
                                "text": " curious what you mean by solving the problem of magic numbers. For physics params in games at least, to me everything is arbitrary and relative to other values, so I\u2019m not sure what the problem to be solved is.(Maybe \u201cmagic numbers\u201d isn\u2019t the right word? Sorry if that was confusing)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "95ac4872-7c13-49c3-9e5f-ef3221247ece",
        "type": "message",
        "text": "Historical note: NumPy started out with a focus on implementing much of APL as a Python library. The function names in Numerical Python (as NumPy was originally called) are the names of APL operators. Later on, there was a movement to make NumPy more Matlab-like to win over Matlab users, so the APL heritage is no longer as clear as it used to be.\n\nAs for APL vs. Scheme: that really depends on what aspect of mathematical notation you focus. Sussman comes from a symbolic computation background, with an application focus on calculus (check his \"Structure and Interpretation of Classical Mechanics\" as the prime example). APL has a focus on numerics and algebra. The only decent attempt I know to unify both perspectives is Mathematica.",
        "user": "UJBAJNFLK",
        "ts": "1598245635.072100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k9qy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Historical note: NumPy started out with a focus on implementing much of APL as a Python library. The function names in Numerical Python (as NumPy was originally called) are the names of APL operators. Later on, there was a movement to make NumPy more Matlab-like to win over Matlab users, so the APL heritage is no longer as clear as it used to be.\n\nAs for APL vs. Scheme: that really depends on what aspect of mathematical notation you focus. Sussman comes from a symbolic computation background, with an application focus on calculus (check his \"Structure and Interpretation of Classical Mechanics\" as the prime example). APL has a focus on numerics and algebra. The only decent attempt I know to unify both perspectives is Mathematica."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598125322.060600",
        "parent_user_id": "U01661S9F34"
    },
    {
        "client_msg_id": "eabaa6e5-b629-499f-ad10-c5379d0f898c",
        "type": "message",
        "text": "Why isn't any kind of *logic programming* considered a <https://en.wikipedia.org/wiki/Model_of_computation|model of computation>? Why do we talk about Turing Machines and recursive functions as fundamental, but not *inference*? I can't find any resources discussing this disparity. It's like there are two classes of academics that don't talk to each other. Am I missing something?",
        "user": "UCGAK10LS",
        "ts": "1598245856.072500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6/W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why isn't any kind of "
                            },
                            {
                                "type": "text",
                                "text": "logic programming",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " considered a "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Model_of_computation",
                                "text": "model of computation"
                            },
                            {
                                "type": "text",
                                "text": "? Why do we talk about Turing Machines and recursive functions as fundamental, but not "
                            },
                            {
                                "type": "text",
                                "text": "inference",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? I can't find any resources discussing this disparity. It's like there are two classes of academics that don't talk to each other. Am I missing something?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "reply_count": 11,
        "reply_users_count": 4,
        "latest_reply": "1598270768.105700",
        "reply_users": [
            "UT60XSVCN",
            "UCGAK10LS",
            "U016VUZGUUQ",
            "UE6EFEPTQ"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "4a0745b0-6d7a-48d9-a7ce-6e6dd0bee36f",
        "type": "message",
        "text": "I'm not an expert, but logic programming a la prolog etc is usually based fundamentally on term rewriting, which is essentially what the untyped lambda calculus is. (Please correct me if I'm wrong, this is something I've been studying recently but I'm still quite new to the field)",
        "user": "UT60XSVCN",
        "ts": "1598247221.072600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cho7I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not an expert, but logic programming a la prolog etc is usually based fundamentally on term rewriting, which is essentially what the untyped lambda calculus is. (Please correct me if I'm wrong, this is something I've been studying recently but I'm still quite new to the field)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "9cda2433-864c-432c-8c5c-53fec3132df2",
        "type": "message",
        "text": "Isn't term rewriting destructive, i.e. it consumes an input to produce an output?",
        "user": "UCGAK10LS",
        "ts": "1598247641.072800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sfusz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Isn't term rewriting destructive, i.e. it consumes an input to produce an output?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "ffa68ce7-b7ec-4563-9a61-469524243c88",
        "type": "message",
        "text": "I suppose? i am afraid I am not sure what the relation is and what you are getting at here.\nWould you consider beta-reduction \"destructive\"?",
        "user": "UT60XSVCN",
        "ts": "1598248238.080300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Gs/Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose? i am afraid I am not sure what the relation is and what you are getting at here.\nWould you consider beta-reduction \"destructive\"?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "1AF2F9C6-D256-40CE-8A62-1C81E5F9505A",
        "type": "message",
        "text": "<@UJN1TAYEQ> The knobs on the nord lead <https://www.wikiwand.com/en/Nord_Lead|https://www.wikiwand.com/en/Nord_Lead> line of hardware synths have endless knobs with a ring of leds to indicate the value. I'll look for other examples in software and will post them here",
        "user": "U0123H7JRDM",
        "ts": "1598248276.080500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Wikiwand",
                "title": "Nord Lead | Wikiwand",
                "title_link": "https://www.wikiwand.com/en/Nord_Lead",
                "text": "The Nord Lead is a series of virtual analog subtractive synthesizers, manufactured by Clavia.",
                "fallback": "Wikiwand: Nord Lead | Wikiwand",
                "image_url": "https://upload.wikimedia.org/wikipedia/commons/9/9b/Clavia_Nord_Rack.jpg",
                "from_url": "https://www.wikiwand.com/en/Nord_Lead",
                "image_width": 606,
                "image_height": 250,
                "image_bytes": 916884,
                "service_icon": "http://assets.wikiwand.com/img/wikiwand_icon_apple.png",
                "id": 1,
                "original_url": "https://www.wikiwand.com/en/Nord_Lead"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zzCwI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " The knobs on the nord lead "
                            },
                            {
                                "type": "link",
                                "url": "https://www.wikiwand.com/en/Nord_Lead",
                                "text": "https://www.wikiwand.com/en/Nord_Lead"
                            },
                            {
                                "type": "text",
                                "text": " line of hardware synths have endless knobs with a ring of leds to indicate the value. I'll look for other examples in software and will post them here"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "3f1929ac-328e-4465-9db6-a263447c5641",
        "type": "message",
        "text": "I guess a better question is: what is the \"term\" that is getting re-written in evaluating a logic program? Is it the entire program? As a conjunction of clauses? I guess the destructivity doesn't manifest in such a case because you're producing a \"new program\" (term) which you guarantee is going to be strictly larger than the last one (adding new deductions). That suggests term rewriting might be \"too powerful\" for logic programming though, because it can also model the deletion of facts (unless you want that capability, for some reason).\n\nBut yeah, I'm now seeing how you could map inference to term rewriting!",
        "user": "UCGAK10LS",
        "ts": "1598248717.080900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1598249178.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g2qG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess a better question is: what is the \"term\" that is getting re-written in evaluating a logic program? Is it the entire program? As a conjunction of clauses? I guess the destructivity doesn't manifest in such a case because you're producing a \"new program\" (term) which you guarantee is going to be strictly larger than the last one (adding new deductions). That suggests term rewriting might be \"too powerful\" for logic programming though, because it can also model the deletion of facts (unless you want that capability, for some reason).\n\nBut yeah, I'm now seeing how you could map inference to term rewriting!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "b36f7871-51db-4b0b-8d5b-c5509a389c45",
        "type": "message",
        "text": "I have fond feelings for APL. It was the language in which I was taught a range of numerical methods by one of my favorite professors (here's his <http://archive.vector.org.uk/art10007880|one-line APL solution> to the N-Queens problem), and I agree completely that it is under-appreciated for its place in CS history. However, I find the syntax leaves a good deal to be desired for work outside of its original niche, whereas the vector nature it embodies can quite naturally be expressed in any other functional programming language. It is for this reason that I prefer \"APL-as-library\", \"PROLOG-as-library\", &amp;c.\n\nRegarding the history of Mathematica, it was inspired almost entirely by Wolfram's extensive use of <https://en.wikipedia.org/wiki/Macsyma|Macsyma> and written in C rather than Lisp only because <https://writings.stephenwolfram.com/2013/06/there-was-a-time-before-mathematica/|Rob Pike convinced Wolfram> that C was \"the language of the future\" while they were both at Caltech. Wolfram was aware of APL, but to call Mathematica an APL dialect is in no sense correct.\n\nRe: APL v Scheme as notation, I will say first that we disagree and second that even though we've only (virtually) known each other for a few weeks, your habit of expressing your subjective aesthetic opinions about Lisp family languages as if they were objective truths is _already_ quite tiresome.",
        "user": "U013ZLJARC7",
        "ts": "1598252784.081300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "text": "The Journal of the British APL Association. The BAA promotes the APLs, terse programming languages derived from Iverson\u2019s mathematical notation.",
                "fallback": "The Journal of the British APL Association. The BAA promotes the APLs, terse programming languages derived from Iverson\u2019s mathematical notation.",
                "from_url": "http://archive.vector.org.uk/art10007880",
                "service_icon": "http://archive.vector.org.uk/favicon.ico",
                "service_name": "archive.vector.org.uk",
                "id": 1,
                "original_url": "http://archive.vector.org.uk/art10007880"
            },
            {
                "title": "There Was a Time before Mathematica\u2026\u2014Stephen Wolfram Writings",
                "title_link": "https://writings.stephenwolfram.com/2013/06/there-was-a-time-before-mathematica/",
                "text": "Articles by Stephen Wolfram covering artificial intelligence, computational science and computational thinking, data science, education, future and historical perspectives, sciences, software design, technology, Wolfram products, more.",
                "fallback": "There Was a Time before Mathematica\u2026\u2014Stephen Wolfram Writings",
                "from_url": "https://writings.stephenwolfram.com/2013/06/there-was-a-time-before-mathematica/",
                "service_icon": "https://writings.stephenwolfram.com/favicon.ico",
                "service_name": "writings.stephenwolfram.com",
                "id": 2,
                "original_url": "https://writings.stephenwolfram.com/2013/06/there-was-a-time-before-mathematica/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0xXs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have fond feelings for APL. It was the language in which I was taught a range of numerical methods by one of my favorite professors (here's his "
                            },
                            {
                                "type": "link",
                                "url": "http://archive.vector.org.uk/art10007880",
                                "text": "one-line APL solution"
                            },
                            {
                                "type": "text",
                                "text": " to the N-Queens problem), and I agree completely that it is under-appreciated for its place in CS history. However, I find the syntax leaves a good deal to be desired for work outside of its original niche, whereas the vector nature it embodies can quite naturally be expressed in any other functional programming language. It is for this reason that I prefer \"APL-as-library\", \"PROLOG-as-library\", &c.\n\nRegarding the history of Mathematica, it was inspired almost entirely by Wolfram's extensive use of "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Macsyma",
                                "text": "Macsyma"
                            },
                            {
                                "type": "text",
                                "text": " and written in C rather than Lisp only because "
                            },
                            {
                                "type": "link",
                                "url": "https://writings.stephenwolfram.com/2013/06/there-was-a-time-before-mathematica/",
                                "text": "Rob Pike convinced Wolfram"
                            },
                            {
                                "type": "text",
                                "text": " that C was \"the language of the future\" while they were both at Caltech. Wolfram was aware of APL, but to call Mathematica an APL dialect is in no sense correct.\n\nRe: APL v Scheme as notation, I will say first that we disagree and second that even though we've only (virtually) known each other for a few weeks, your habit of expressing your subjective aesthetic opinions about Lisp family languages as if they were objective truths is "
                            },
                            {
                                "type": "text",
                                "text": "already",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " quite tiresome."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598125322.060600",
        "parent_user_id": "U01661S9F34",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "<@UJN1TAYEQ> Ableton Live does the following: when changing a knob , the mouse pointer disappears and you control the knob directly. After you let go, the mouse pointer reappears at the position where you started controlling the knob. I am using ableton on a mac using the touchpad. ",
        "files": [
            {
                "id": "F019QSQU7S5",
                "created": 1598253849,
                "timestamp": 1598253849,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "U0123H7JRDM",
                "editable": false,
                "size": 14161,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F019QSQU7S5/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F019QSQU7S5/download/image_from_ios.jpg",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QSQU7S5-ee25895aef/image_from_ios_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QSQU7S5-ee25895aef/image_from_ios_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QSQU7S5-ee25895aef/image_from_ios_360.jpg",
                "thumb_360_w": 170,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QSQU7S5-ee25895aef/image_from_ios_480.jpg",
                "thumb_480_w": 226,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QSQU7S5-ee25895aef/image_from_ios_160.jpg",
                "original_w": 244,
                "original_h": 518,
                "thumb_tiny": "AwAwABYxk9T+FOAUD7zflTD0pDn/ACKAHHqcE0Y/2jRgZowKAFA68gU1j8wXrmlwW4FMbIlTPoaAHil/EUgpaAAHGSKY5/fKfrS4b1pNpJznmgBy9KWm7W9aMN/eoA//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/U0123H7JRDM/F019QSQU7S5/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F019QSQU7S5-57c3293ec7",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BaP/c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Ableton Live does the following: when changing a knob , the mouse pointer disappears and you control the knob directly. After you let go, the mouse pointer reappears at the position where you started controlling the knob. I am using ableton on a mac using the touchpad. "
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U0123H7JRDM",
        "display_as_bot": false,
        "ts": "1598253856.086000",
        "client_msg_id": "C0031EF2-2C9D-47A0-B77E-2AF5520408F9",
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "type": "message",
        "text": "I do the same thing with control knobs, along with a tooltip that appears to show you the units and current value.  The orange arc gives you a sense of where you are around the knob, but the knob may scale exponentially depending on what it is for; and there is no indication for that, other than 'playing' with it.  I don't think that's a big deal, but I guess it isn't discoverable.",
        "files": [
            {
                "id": "F019QTECGSV",
                "created": 1598254679,
                "timestamp": 1598254679,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UUQ2EQW21",
                "editable": false,
                "size": 10206,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F019QTECGSV/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F019QTECGSV/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QTECGSV-6445fe238b/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QTECGSV-6445fe238b/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QTECGSV-6445fe238b/image_360.png",
                "thumb_360_w": 203,
                "thumb_360_h": 271,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F019QTECGSV-6445fe238b/image_160.png",
                "original_w": 203,
                "original_h": 271,
                "thumb_tiny": "AwAwACOpuf0FJvb0FS4ynHXNKWYj7q/nQBDvb0FLvc9hUu5v7q/nSr98FlGMdqAId0n92jdJ/dq2GiA+5ml3w/3P1oArCnJGzngU0dqtwjEQoAgaFlGeCPao6v1SkADkDpmgBtFFFAAOelSxzFMgjIqNTt5FPEpHUCgCRrgY+UHPqar1J5px90U1n3DGKAG0UUUAf//Z",
                "permalink": "https://futureofcoding.slack.com/files/UUQ2EQW21/F019QTECGSV/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F019QTECGSV-98714c8f3e",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e2+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do the same thing with control knobs, along with a tooltip that appears to show you the units and current value.  The orange arc gives you a sense of where you are around the knob, but the knob may scale exponentially depending on what it is for; and there is no indication for that, other than 'playing' with it.  I don't think that's a big deal, but I guess it isn't discoverable."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UUQ2EQW21",
        "display_as_bot": false,
        "ts": "1598254760.086400",
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "type": "message",
        "text": "<@UUQ2EQW21> in ableton you can still type in the value when needed, is this also possible in your solution? ",
        "files": [
            {
                "id": "F019CJ9H7NX",
                "created": 1598258216,
                "timestamp": 1598258216,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "U0123H7JRDM",
                "editable": false,
                "size": 10116,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F019CJ9H7NX/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F019CJ9H7NX/download/image_from_ios.jpg",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F019CJ9H7NX-557db58c3f/image_from_ios_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F019CJ9H7NX-557db58c3f/image_from_ios_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F019CJ9H7NX-557db58c3f/image_from_ios_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 175,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F019CJ9H7NX-557db58c3f/image_from_ios_160.jpg",
                "original_w": 400,
                "original_h": 194,
                "thumb_tiny": "AwAXADADwscAAn6UuYgcECqsP+uFWDnJwelADz5Y6qPypMxegpMZ6Gk74zn8KAF2g4xjGfTtTIwCvI70/awH3v0psX3fxoAgh/1wqcnnaW6+1QQ/60VM/wDrRQBICBy3OBQGVug5xSN0P0pkXU/SgCSmQ/c/Gn1HD9z8TQB//9k=",
                "permalink": "https://futureofcoding.slack.com/files/U0123H7JRDM/F019CJ9H7NX/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F019CJ9H7NX-62a0f8111f",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hnj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " in ableton you can still type in the value when needed, is this also possible in your solution? "
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U0123H7JRDM",
        "display_as_bot": false,
        "ts": "1598258231.088500",
        "client_msg_id": "E8C5B8A7-1A14-4F69-B325-AA4CA08888C9",
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "7a4dcb62-664e-44f2-a1ba-a770aa1578e5",
        "type": "message",
        "text": "No, but it probably should be :wink:",
        "user": "UUQ2EQW21",
        "ts": "1598258285.089000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gvs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, but it probably should be "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "428082bb-3199-41de-b73b-535126f1da5b",
        "type": "message",
        "text": "Interesting. When logic shows up in the foundations of computing, it's usually in the context of the Curry-Howard isomorphism. From that perspective, logical inference is sort of... program synthesis, I think? More broadly, finding elements that occupy a type that represents a proposition.\n\nIt could be that logical inference is (IIUC) inherently search-oriented, so people who make \"models of computation\" don't see it as a good primitive operation: too many steps and decisions behind the scenes. If that's the case, I think there's still some good mileage to be had from making a model where logical inference is stupid easy to write and tractable for an optimizer as well. (Uncoincidentally, this is an approach I'd like to do, but I don't know enough yet)",
        "user": "U016VUZGUUQ",
        "ts": "1598258729.089200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N5QH8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. When logic shows up in the foundations of computing, it's usually in the context of the Curry-Howard isomorphism. From that perspective, logical inference is sort of... program synthesis, I think? More broadly, finding elements that occupy a type that represents a proposition.\n\nIt could be that logical inference is (IIUC) inherently search-oriented, so people who make \"models of computation\" don't see it as a good primitive operation: too many steps and decisions behind the scenes. If that's the case, I think there's still some good mileage to be had from making a model where logical inference is stupid easy to write and tractable for an optimizer as well. (Uncoincidentally, this is an approach I'd like to do, but I don't know enough yet)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "826F55C0-CC53-4FE1-B27D-82E353185759",
        "type": "message",
        "text": "I want these kind of controls in the browser as well, and they exist offcourse but I think the biggest problem in getting the native feel is that you cannot hide/show/control the mouse pointer and position like you can do in a desktop application. On a mobile touch device this might be less of a problem ",
        "user": "U0123H7JRDM",
        "ts": "1598261196.092500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "orz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want these kind of controls in the browser as well, and they exist offcourse but I think the biggest problem in getting the native feel is that you cannot hide/show/control the mouse pointer and position like you can do in a desktop application. On a mobile touch device this might be less of a problem "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "eab1f4e7-2dd7-45f8-bff6-6ca77be4f858",
        "type": "message",
        "text": "There probably are two classes of academics not talking, yes, and the logic folk seem to have lost the popularity race to the functional folk.\n\nYou can implement functional programming with term rewriting or reduction and similarly you can use rewriting or reduction in proof systems. My memory of all this has faded since my university days mind you.",
        "user": "UE6EFEPTQ",
        "ts": "1598262498.093100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PpqQh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There probably are two classes of academics not talking, yes, and the logic folk seem to have lost the popularity race to the functional folk.\n\nYou can implement functional programming with term rewriting or reduction and similarly you can use rewriting or reduction in proof systems. My memory of all this has faded since my university days mind you."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d9b62d3f-4432-4be2-9437-c8d322ae7a08",
        "type": "message",
        "text": "Horn clauses are Turing Complete with tail recursion IIRC",
        "user": "UE6EFEPTQ",
        "ts": "1598263455.093300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "up7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Horn clauses are Turing Complete with tail recursion IIRC"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "46b5e604-bd75-4aae-80b3-5dd321b1b7d6",
        "type": "message",
        "text": "<http://maude.cs.illinois.edu/w/images/0/0d/Maude-book.pdf|http://maude.cs.illinois.edu/w/images/0/0d/Maude-book.pdf>\nThis may be of interest. I was pointed to it recently, and have been meaning to read it (though I haven't yet). As I understand it, it's a platform along the lines of Racket, except based on term rewriting rather than syntactic macros.",
        "user": "UT60XSVCN",
        "ts": "1598265721.093800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mTw95",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http://maude.cs.illinois.edu/w/images/0/0d/Maude-book.pdf",
                                "text": "http://maude.cs.illinois.edu/w/images/0/0d/Maude-book.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\nThis may be of interest. I was pointed to it recently, and have been meaning to read it (though I haven't yet). As I understand it, it's a platform along the lines of Racket, except based on term rewriting rather than syntactic macros."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "0de9aeab-244b-4f0b-bd50-7364a6ff1728",
        "type": "message",
        "text": "Hi <#C5T9GPWFL|thinking-together> ! Could someone explain or give links to resources that compare MVVM and the react Approach? How do they compare and relate?",
        "user": "UJFN50C00",
        "ts": "1598267528.095100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "woqfa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " ! Could someone explain or give links to resources that compare MVVM and the react Approach? How do they compare and relate?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598267528.095100",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1598278694.108800",
        "reply_users": [
            "UE6EFEPTQ",
            "UC2A2ARPT"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "0369F7CE-D1A2-4A36-83BC-5391FE202286",
        "type": "message",
        "text": "<@UT60XSVCN> I read some pages from that book just now, and the whole system looks overly complicated. Meanwhile the authors are using the words \u201csimple\u201d, \u201ceasy\u201d, and \u201cnatural\u201d everywhere, but I can\u2019t find any good justification for why I should keep reading. The Wikipedia article is the same. It\u2019s raising a lot of red flags.",
        "user": "UCGAK10LS",
        "ts": "1598268550.098900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZNDo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UT60XSVCN"
                            },
                            {
                                "type": "text",
                                "text": " I read some pages from that book just now, and the whole system looks overly complicated. Meanwhile the authors are using the words \u201csimple\u201d, \u201ceasy\u201d, and \u201cnatural\u201d everywhere, but I can\u2019t find any good justification for why I should keep reading. The Wikipedia article is the same. It\u2019s raising a lot of red flags."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "dc41f0c7-ca57-461f-9710-d071371b94bc",
        "type": "message",
        "text": "React is quite thin and one-way, so not really comparable! It's a View of a (View?)Model in some ways.",
        "user": "UE6EFEPTQ",
        "ts": "1598269467.099700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1598269581.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lnnj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "React is quite thin and one-way, so not really comparable! It's a View of a (View?)Model in some ways."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598267528.095100",
        "parent_user_id": "UJFN50C00"
    },
    {
        "client_msg_id": "a5b3bc25-69da-4c40-92a2-b539678966f0",
        "type": "message",
        "text": "This could be a <#C01932BJGE8|present-company> question?",
        "user": "UE6EFEPTQ",
        "ts": "1598269787.100000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TL8e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This could be a "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C01932BJGE8"
                            },
                            {
                                "type": "text",
                                "text": " question?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598267528.095100",
        "parent_user_id": "UJFN50C00",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UJFN50C00"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "1714a4c2-c451-4d95-a225-70f8fbd4a4d2",
        "type": "message",
        "text": "I suggest The Humane Interface: New Directions for Designing Interactive Systems. I don't agree with everything, but it has interesting concepts.",
        "user": "UCSNED355",
        "ts": "1598270198.100700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8rZUJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suggest The Humane Interface: New Directions for Designing Interactive Systems. I don't agree with everything, but it has interesting concepts."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "7AD79B45-DCF8-47E0-BA1F-0243905C9A7D",
        "type": "message",
        "text": "<@U016VUZGUUQ> Not all logic programming involves search. Each logic language comes with its own \u201cstandard\u201d evaluation strategies, and by my understanding, each strategy effectively yields a different model of computation (including different time and space complexities).",
        "user": "UCGAK10LS",
        "ts": "1598270638.105500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1598271118.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gXjKe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " Not all logic programming involves search. Each logic language comes with its own \u201cstandard\u201d evaluation strategies, and by my understanding, each strategy effectively yields a different model of computation (including different time and space complexities)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8d1695b8-28f7-43a5-b15e-362529708c55",
        "type": "message",
        "text": "Well, it _is_ an academic reference work. While unfortunate, I think that's pretty normal. I posted it because it is one of the few \"production\" systems based on term rewriting that I am aware of.",
        "user": "UT60XSVCN",
        "ts": "1598270768.105700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UZu7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, it "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " an academic reference work. While unfortunate, I think that's pretty normal. I posted it because it is one of the few \"production\" systems based on term rewriting that I am aware of."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598245856.072500",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d7f39267-ca44-4fe7-af0a-946a0d9a53e3",
        "type": "message",
        "text": "This isn't a critique, just a stray thought about visual representation:\nThe transition from rhetorical algebra (verbal descriptions of relationships) to symbolic language is commonly lauded as a large improvement in the UI for maths.\n\nDo you disagree with this in general/think it only applies to \"low-level\" concerns/think it only applies to symbolically-inclined individuals?\n\nThe inverse approach might be to try to extend mathematical notation to better represent the \"high-level\" concepts end-users want to manipulate. Can this be done without being immediately off-putting to people who aren't big fans of maths? (i.e. normal people!) :smile:",
        "user": "UEDDR6L5Q",
        "ts": "1598275010.106500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/xpa1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This isn't a critique, just a stray thought about visual representation:\nThe transition from rhetorical algebra (verbal descriptions of relationships) to symbolic language is commonly lauded as a large improvement in the UI for maths.\n\nDo you disagree with this in general/think it only applies to \"low-level\" concerns/think it only applies to symbolically-inclined individuals?\n\nThe inverse approach might be to try to extend mathematical notation to better represent the \"high-level\" concepts end-users want to manipulate. Can this be done without being immediately off-putting to people who aren't big fans of maths? (i.e. normal people!) "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597811295.101400",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "A27F070A-804E-4A2D-82F1-0FF9671669D1",
        "type": "message",
        "text": "Yeah, this is a <#C01932BJGE8|present-company> question. <@UJFN50C00>, kindly repost it there.\n\nI'm going to leave this thread here so that other folks can calibrate their sense of what should go where.\n\nNo more comments on this thread, thanks!",
        "user": "UC2A2ARPT",
        "ts": "1598278694.108800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XXt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, this is a "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C01932BJGE8"
                            },
                            {
                                "type": "text",
                                "text": " question. "
                            },
                            {
                                "type": "user",
                                "user_id": "UJFN50C00"
                            },
                            {
                                "type": "text",
                                "text": ", kindly repost it there.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I'm going to leave this thread here so that other folks can calibrate their sense of what should go where.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "No more comments on this thread, thanks!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598267528.095100",
        "parent_user_id": "UJFN50C00"
    },
    {
        "client_msg_id": "5C0590C4-4A00-4B51-B8FC-7793119C3F1C",
        "type": "message",
        "text": "<@UCSNED355> it\u2019s already on its way!",
        "user": "U014WA16VNJ",
        "ts": "1598286387.109700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2pG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCSNED355"
                            },
                            {
                                "type": "text",
                                "text": " it\u2019s already on its way!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UCSNED355"
                ],
                "count": 1
            }
        ]
    }
]