[
    {
        "client_msg_id": "062c729e-3a27-4ec3-b594-b0070649ad3c",
        "type": "message",
        "text": "I don't follow your comment or what you're disagreeing with, and that makes me wonder if I understand the tweet. But IMO:\n\n* SaaS just going by the term doesn't have to encompass the entire world, and yet the examples of it we see around us are all trying to do that. Perhaps the problem is more the culture we're surrounded by, to maximize adoption and profit.\n* Selling native apps for single users can also fall into the same trap, but they don't have to. The scaling here isn't in the runtime behavior but the deployment and life-cycle management.\n* Open source also falls into this trap, with everyone trying to gain market-share by accreting features, shipping binaries, discouraging others from forking, etc.\n\nNot sure if this clarifies or muddies things further..",
        "user": "UCUSW7WVD",
        "ts": "1598831470.014700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iDb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't follow your comment or what you're disagreeing with, and that makes me wonder if I understand the tweet. But IMO:\n\n* SaaS just going by the term doesn't have to encompass the entire world, and yet the examples of it we see around us are all trying to do that. Perhaps the problem is more the culture we're surrounded by, to maximize adoption and profit.\n* Selling native apps for single users can also fall into the same trap, but they don't have to. The scaling here isn't in the runtime behavior but the deployment and life-cycle management.\n* Open source also falls into this trap, with everyone trying to gain market-share by accreting features, shipping binaries, discouraging others from forking, etc.\n\nNot sure if this clarifies or muddies things further.."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598820967.005000",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "6E01A9EF-BDA8-4F25-88F5-439F032E1BB2",
        "type": "message",
        "text": "I was just trying to grasp at the tweet\u2019s meaning, and was taking a guess. I still don\u2019t know. Apps are thinking too big?\n\nYou seem to get the author\u2019s meaning of \u201cencompass the world\u201d - so I\u2019ll just stand aside for others\u2019 conversation.",
        "user": "USH01JEDQ",
        "ts": "1598836262.017200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9zjy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was just trying to grasp at the tweet\u2019s meaning, and was taking a guess. I still don\u2019t know. Apps are thinking too big?\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "You seem to get the author\u2019s meaning of \u201cencompass the world\u201d - so I\u2019ll just stand aside for others\u2019 conversation."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598820967.005000",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "5317dbef-c5d4-4ff5-b253-8b0de04812c0",
        "type": "message",
        "text": "The pain of culture clash: not speaking remotely similar languages.",
        "user": "UA14TGLTC",
        "ts": "1598850690.018100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MiWw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The pain of culture clash: not speaking remotely similar languages."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598713285.112800",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "3d215024-2d2d-4598-befd-a43c81b1fabf",
        "type": "message",
        "text": "<@UCUSW7WVD> What you are describing sounds more like a problem of today's attention economy than of scaling in the technical sense that I attribute to this term in computing. In a global attention economy, there is space only for a few well-known players in anything, be it tech, art, or whatever else.",
        "user": "UJBAJNFLK",
        "ts": "1598858733.018400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T2wl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " What you are describing sounds more like a problem of today's attention economy than of scaling in the technical sense that I attribute to this term in computing. In a global attention economy, there is space only for a few well-known players in anything, be it tech, art, or whatever else."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598820967.005000",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "eace93e9-4359-4181-91a2-2331df40e527",
        "type": "message",
        "text": "Nitpicking: the criticism of fractals is a bit superficial. People working with fractals in science are well aware that a fractal is a mathematical idealization just like the infinitely small point of geometry. They do discuss the upper and lower limits of scaling behavior. Fractals remain a useful concept in spite of their limits. For examples, see Geoffrey West's book \"Scale\".",
        "user": "UJBAJNFLK",
        "ts": "1598862437.018800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fc8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nitpicking: the criticism of fractals is a bit superficial. People working with fractals in science are well aware that a fractal is a mathematical idealization just like the infinitely small point of geometry. They do discuss the upper and lower limits of scaling behavior. Fractals remain a useful concept in spite of their limits. For examples, see Geoffrey West's book \"Scale\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598713285.112800",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UCUSW7WVD"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b66d8940-8734-4406-8834-ae42c40edd8b",
        "type": "message",
        "text": "I also like it a lot! And I would like to play with this... Does anyone know if there are some RealitySketch software/code somewhere?",
        "user": "UJ6LDMMN0",
        "ts": "1598865155.020600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M7IaA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also like it a lot! And I would like to play with this... Does anyone know if there are some RealitySketch software/code somewhere?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598811075.004200",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "be32e2a8-4ac4-459f-abe4-4c2d65535de5",
        "type": "message",
        "text": "I would love to have this kind of interaction in a programming environment. I guess I will try to add it at some point in my future work.",
        "user": "UJ6LDMMN0",
        "ts": "1598865311.020800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f=1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would love to have this kind of interaction in a programming environment. I guess I will try to add it at some point in my future work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598811075.004200",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "8277DDE5-51B2-4D8F-848F-463B42DA8DE8",
        "type": "message",
        "text": "<@UJBAJNFLK> Sounds like you didn\u2019t come across the next paragraph in the article then. :-)",
        "user": "U5STGTB3J",
        "ts": "1598866197.021600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QZWki",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Sounds like you didn\u2019t come across the next paragraph in the article then. :-)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598713285.112800",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "05c10f88-d906-44f7-b319-e062b9edaa67",
        "type": "message",
        "text": "I'm also in the \"not sure what the original tweet means\" situation, but if I take it to be \"having one giant Facebook for the whole world is maybe bad\", then :100:. But is that a \"computing\" problem or more of a human nature/network effect problem?",
        "user": "U013ZLJARC7",
        "ts": "1598876051.021900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jFkhc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm also in the \"not sure what the original tweet means\" situation, but if I take it to be \"having one giant Facebook for the whole world is maybe bad\", then "
                            },
                            {
                                "type": "emoji",
                                "name": "100"
                            },
                            {
                                "type": "text",
                                "text": ". But is that a \"computing\" problem or more of a human nature/network effect problem?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598820967.005000",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "2ed4adff-836f-4537-8c68-63f206e89849",
        "type": "message",
        "text": "Oleg dreams himself to something like Plan9:\n&gt; This paper is an attempt to imagine what an OS would look like and how it would work if looking for a word 'foo' in\u00a0_something_\u00a0and deleting/closing/stopping this something, -- be it a paragraph of text, a network connection, a subscribed newsgroup, a process -- would all require roughly the same sequence of mouse clicks or keystrokes, and would be understood and interpreted in the same spirit by the operating system.\n<http://okmij.org/ftp/papers/DreamOSPaper.html>",
        "user": "U013ZLJARC7",
        "ts": "1598876731.022700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "A dream of an ultimate OS",
                "title_link": "http://okmij.org/ftp/papers/DreamOSPaper.html",
                "text": "A vision of an OS that recognizes that any user activity and most of the system activities are nothing but queries, which ought to be treated uniformly and implemented efficiently once and for all; database as a file system; A paper submitted to MacHack'95",
                "fallback": "A dream of an ultimate OS",
                "from_url": "http://okmij.org/ftp/papers/DreamOSPaper.html",
                "service_name": "okmij.org",
                "id": 1,
                "original_url": "http://okmij.org/ftp/papers/DreamOSPaper.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1gOU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oleg dreams himself to something like Plan9:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This paper is an attempt to imagine what an OS would look like and how it would work if looking for a word 'foo' in\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "something",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0and deleting/closing/stopping this something, -- be it a paragraph of text, a network connection, a subscribed newsgroup, a process -- would all require roughly the same sequence of mouse clicks or keystrokes, and would be understood and interpreted in the same spirit by the operating system."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http://okmij.org/ftp/papers/DreamOSPaper.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598876731.022700",
        "reply_count": 9,
        "reply_users_count": 4,
        "latest_reply": "1598953791.040100",
        "reply_users": [
            "UDQBTJ211",
            "U5STGTB3J",
            "U016VUZGUUQ",
            "U013ZLJARC7"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "658b34a6-ab52-4efa-abc4-b03af8844301",
        "type": "message",
        "text": "This reminds me of Joel Spolsky's blog Don't Let Architecture Astronauts Scare You.\n\nThe fact that there are three distinct English words \"deleting/closing/stopping\" suggests to me that users will have no trouble remembering and repeating these different actions.\n\nAn abstraction is useful when we want to operate at the level of the abstraction, across different implementations. How often are users going to want to delete a line of text at the same time as close a network connection or stop a process? Very, very rarely imo.\n\n--------\n\n<https://www.joelonsoftware.com/2001/04/21/dont-let-architecture-astronauts-scare-you/>\n\n&gt; When great thinkers think about problems, they start to see patterns. They look at the problem of people sending each other word-processor files, and then they look at the problem of people sending each other spreadsheets, and they realize that there\u2019s a general pattern: sending files. That\u2019s one level of abstraction already. Then they go up one more level: people\u00a0_send_\u00a0files, but web browsers also \u201c_send_\u201d requests for web pages. And when you think about it, calling a method on an object is like sending a message to an object! It\u2019s the same thing again! Those are all\u00a0_sending_\u00a0operations, so our clever thinker invents a new, higher, broader abstraction called\u00a0_messaging_, but now it\u2019s getting\u00a0_really_\u00a0vague and nobody really knows what they\u2019re talking about any more. Blah.\n&gt; \n&gt; When you go too far up, abstraction-wise, you run out of oxygen. Sometimes smart thinkers just don\u2019t know when to stop, and they create these absurd, all-encompassing, high-level pictures of the universe that are all good and fine, but don\u2019t actually mean anything at all.",
        "user": "UDQBTJ211",
        "ts": "1598882500.022900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1598890185.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l0YSO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This reminds me of Joel Spolsky's blog Don't Let Architecture Astronauts Scare You.\n\nThe fact that there are three distinct English words \"deleting/closing/stopping\" suggests to me that users will have no trouble remembering and repeating these different actions.\n\nAn abstraction is useful when we want to operate at the level of the abstraction, across different implementations. How often are users going to want to delete a line of text at the same time as close a network connection or stop a process? Very, very rarely imo.\n\n--------\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.joelonsoftware.com/2001/04/21/dont-let-architecture-astronauts-scare-you/"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When great thinkers think about problems, they start to see patterns. They look at the problem of people sending each other word-processor files, and then they look at the problem of people sending each other spreadsheets, and they realize that there\u2019s a general pattern: sending files. That\u2019s one level of abstraction already. Then they go up one more level: people\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "send",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0files, but web browsers also \u201c"
                            },
                            {
                                "type": "text",
                                "text": "send",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u201d requests for web pages. And when you think about it, calling a method on an object is like sending a message to an object! It\u2019s the same thing again! Those are all\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "sending",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0operations, so our clever thinker invents a new, higher, broader abstraction called\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "messaging",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but now it\u2019s getting\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "really\u00a0",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "vague and nobody really knows what they\u2019re talking about any more. Blah.\n\nWhen you go too far up, abstraction-wise, you run out of oxygen. Sometimes smart thinkers just don\u2019t know when to stop, and they create these absurd, all-encompassing, high-level pictures of the universe that are all good and fine, but don\u2019t actually mean anything at all."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598876731.022700",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "4b9d1ba4-1c74-4576-afd3-2efd61eb3357",
        "type": "message",
        "text": "Yeah, we can probably improve on calling it 'scalability'. I see it as an aesthetics problem, and the urge for one single service provider feels like it stems from the same source as wanting to optimize the big-O and so on.",
        "user": "UCUSW7WVD",
        "ts": "1598885099.023100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IisML",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, we can probably improve on calling it 'scalability'. I see it as an aesthetics problem, and the urge for one single service provider feels like it stems from the same source as wanting to optimize the big-O and so on."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598820967.005000",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "AE9CE276-5005-4AED-8A32-0AD413896D40",
        "type": "message",
        "text": "this is the most exciting thing i\u2019ve seen in AR",
        "user": "UHWC9PXBL",
        "ts": "1598885459.023900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Knw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this is the most exciting thing i\u2019ve seen in AR"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598811075.004200",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2DDD6AEA-660B-4A2D-82D6-71E08DCDA449",
        "type": "message",
        "text": "Worse, I commented your excerpt before reading the whole article...",
        "user": "UJBAJNFLK",
        "ts": "1598899385.025400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2VANL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Worse, I commented your excerpt before reading the whole article..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598713285.112800",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "63C138FE-D0B6-4636-B416-EC77FEA5CF5E",
        "type": "message",
        "text": "That excerpt should end with, \u201cand then they have truly become mathematicians.\u201d",
        "user": "U5STGTB3J",
        "ts": "1598900954.026400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=hb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That excerpt should end with, \u201cand then they have truly become mathematicians.\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598876731.022700",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "d9a9ec06-bcff-439a-8a22-41ee551b92d0",
        "type": "message",
        "text": "Yeah, but our job as programming tool developers is precisely to climb that mountain and stop in the right place. That's how all our programming abstractions got started, starting with lambda. And while programming tool design is very similar to math on one side, it's very similar to OS design on the other, with both focusing on possible actions a user can take, specified in digital form, to accomplish a goal, plus all the overlap in runtime design.",
        "user": "U016VUZGUUQ",
        "ts": "1598905189.026600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6g1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, but our job as programming tool developers is precisely to climb that mountain and stop in the right place. That's how all our programming abstractions got started, starting with lambda. And while programming tool design is very similar to math on one side, it's very similar to OS design on the other, with both focusing on possible actions a user can take, specified in digital form, to accomplish a goal, plus all the overlap in runtime design."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598876731.022700",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "type": "message",
        "text": "Really cool video <@U8A5MS6R1>, thanks for sharing!\nI really like this slide :point_down::skin-tone-3:",
        "files": [
            {
                "id": "F019DG6G423",
                "created": 1598905741,
                "timestamp": 1598905741,
                "name": "Screen Shot 2020-08-31 at 3.01.52 PM.png",
                "title": "Screen Shot 2020-08-31 at 3.01.52 PM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U85HCL7JP",
                "editable": false,
                "size": 2785314,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F019DG6G423/screen_shot_2020-08-31_at_3.01.52_pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F019DG6G423/download/screen_shot_2020-08-31_at_3.01.52_pm.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 269,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 358,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 537,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 597,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 716,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F019DG6G423-270d503018/screen_shot_2020-08-31_at_3.01.52_pm_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 764,
                "original_w": 2560,
                "original_h": 1910,
                "thumb_tiny": "AwAjADDRQDYvHamPuUjBJz6LmpE+4v0FMuSRA5BxQA3Lf7X/AHxQS2ep/BKpB3PRyfxNPUSt90se1TzF8hcUFj1Ix6rinMBsPHamWp3Qgk55PNSP9w/SqIYJ9xfoKiu/+PWTHpUqfcX6Co7kZt2HrgfrQBnwT+UrlQm7jj1pyzy/OVIB3ZIxkU/7ESpXf1OcheaYY0s5B5uZAw9OlIC5Zf8AHsv1P86mf7h+lR2zK8W5RhSTgVI/3D9KYMiR22Lz2oY7lIbkU1PuD6UtAB+J/OmtCkhBddxHTJp1KKABAI12oMKO1DO2089qD1prfdP0oA//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/U85HCL7JP/F019DG6G423/screen_shot_2020-08-31_at_3.01.52_pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F019DG6G423-c47a21182d",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qXIGU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really cool video "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": ", thanks for sharing!\nI really like this slide "
                            },
                            {
                                "type": "emoji",
                                "name": "point_down",
                                "skin_tone": 3
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U85HCL7JP",
        "display_as_bot": false,
        "ts": "1598905824.026900",
        "thread_ts": "1598389212.095300",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b81517e8-6ea5-43b4-9d53-a717d08eda3b",
        "type": "message",
        "text": "There is a thread on HN: \"<https://news.ycombinator.com/item?id=24332418|How should we build the APIs of tomorrow?\">\n\nI left a <https://news.ycombinator.com/item?id=24334069|comment> with a few ideas:\n\n1. Emphasize synchronization over imperative API calls. _Imperative APIs encourage data silos._ They are the underlying technical part of the problem that Zapier and ITTT try to solve. See [0] and [1] for some ideas.\n2. Allow users to submit \"agents\" rather than \"requests.\" An agent is a small program given extremely limited resources (limited process/memory/runtime budget) that you can safely run on your server. It is a possible answer to many of the standards/protocols that wouldn't exist if frontends were running on the same machines as backends. [2]\n3. Emphasize composition over integration. Functions compose (nest, recurse). Event emitters don't. As long as APIs are built to be integrated rather than composed, making them work together is a full-time or full-company job (eg. Zapier).\n4. Make things immutable. Immutability allows APIs to \"play\" with one another without fear of setting off the nukes (ie. side effects). It's possible that this approach would make it so that integrating two APIs becomes a job for ML/AI rather than humans.\nThis is from my limited understanding of some of the ideas in FOC. What did I miss/misinterpret?\n\n[0] <https://github.com/braid-work/braid-spec>\n[1] <https://writings.quilt.org/2014/05/12/distributed-systems-an><https://writings.quilt.org/2014/05/12/distributed-systems-and-the-end-of-the-api/|...>\n[2] <https://news.ycombinator.com/item?id=23900749>",
        "user": "UAHHWT22U",
        "ts": "1598907048.031900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ID",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is a thread on HN: \""
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=24332418",
                                "text": "How should we build the APIs of tomorrow?\""
                            },
                            {
                                "type": "text",
                                "text": "\n\nI left a "
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=24334069",
                                "text": "comment"
                            },
                            {
                                "type": "text",
                                "text": " with a few ideas:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Emphasize synchronization over imperative API calls. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Imperative APIs encourage data silos.",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " They are the underlying technical part of the problem that Zapier and ITTT try to solve. See [0] and [1] for some ideas."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Allow users to submit \"agents\" rather than \"requests.\" An agent is a small program given extremely limited resources (limited process/memory/runtime budget) that you can safely run on your server. It is a possible answer to many of the standards/protocols that wouldn't exist if frontends were running on the same machines as backends. [2]"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Emphasize composition over integration. Functions compose (nest, recurse). Event emitters don't. As long as APIs are built to be integrated rather than composed, making them work together is a full-time or full-company job (eg. Zapier)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Make things immutable. Immutability allows APIs to \"play\" with one another without fear of setting off the nukes (ie. side effects). It's possible that this approach would make it so that integrating two APIs becomes a job for ML/AI rather than humans."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is from my limited understanding of some of the ideas in FOC. What did I miss/misinterpret?\n\n[0] "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/braid-work/braid-spec"
                            },
                            {
                                "type": "text",
                                "text": "\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https://writings.quilt.org/2014/05/12/distributed-systems-an"
                            },
                            {
                                "type": "link",
                                "url": "https://writings.quilt.org/2014/05/12/distributed-systems-and-the-end-of-the-api/",
                                "text": "..."
                            },
                            {
                                "type": "text",
                                "text": "\n[2] "
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=23900749"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598907048.031900",
        "reply_count": 17,
        "reply_users_count": 3,
        "latest_reply": "1598913016.038200",
        "reply_users": [
            "UFPPABQ7P",
            "UHWC9PXBL",
            "UAHHWT22U"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "1A201CA7-C385-4AAB-9BD4-5313198C31FD",
        "type": "message",
        "text": "There\u2019s time for engineering and there\u2019s time for science. The key is to know when to use which.",
        "user": "U5STGTB3J",
        "ts": "1598907283.032800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ELEA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There\u2019s time for engineering and there\u2019s time for science. The key is to know when to use which."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598876731.022700",
        "parent_user_id": "U013ZLJARC7"
    },
    {
        "client_msg_id": "257d41d4-4ff4-4b1b-bcc2-0471a2177143",
        "type": "message",
        "text": "The most used languages don't support the real world, and especially not \"functional\" languages (without a lot of piping).\n\nI believe that event emitters can potentially be composable, it just depends how you set them up. There are a lot of ideas in the data-oriented paradigm (often used in game dev) which have been by far the most composable approach to integrations, I've ever experienced.",
        "user": "UFPPABQ7P",
        "ts": "1598907296.033000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wsL3o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The most used languages don't support the real world, and especially not \"functional\" languages (without a lot of piping).\n\nI believe that event emitters can potentially be composable, it just depends how you set them up. There are a lot of ideas in the data-oriented paradigm (often used in game dev) which have been by far the most composable approach to integrations, I've ever experienced."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598907048.031900",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "83854d84-c7f2-4ee0-a005-e01a6cb98da5",
        "type": "message",
        "text": "I'm glossing over some assumptions being made about what an \"event emitter\" is, exactly, but in our case it's essentially something modifies a row in a shared DB, and something else was directly listening to that row to change. For example \"when my postmates order arrives\"",
        "user": "UFPPABQ7P",
        "ts": "1598907384.033200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VMY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm glossing over some assumptions being made about what an \"event emitter\" is, exactly, but in our case it's essentially something modifies a row in a shared DB, and something else was directly listening to that row to change. For example \"when my postmates order arrives\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598907048.031900",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "bd62c4d6-1b9c-4e78-b010-52078091cd35",
        "type": "message",
        "text": "The key to this approach is that everything is talking together in the same \"DB\", and we're enforcing visibility. There was an interesting programming language just announced that goes in this direction: <https://www.reddit.com/r/ProgrammingLanguages/comments/ik0w0q/tablam_a_experimental_relational_language/>",
        "user": "UFPPABQ7P",
        "ts": "1598907537.033400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1598907543.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ERI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The key to this approach is that everything is talking together in the same \"DB\", and we're enforcing visibility. There was an interesting programming language just announced that goes in this direction: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.reddit.com/r/ProgrammingLanguages/comments/ik0w0q/tablam_a_experimental_relational_language/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598907048.031900",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "51752942-7e4b-4c22-a929-f6a27004a3c8",
        "type": "message",
        "text": "I think *at least* one version of Eve also had a similar story going on",
        "user": "UHWC9PXBL",
        "ts": "1598909435.034000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IVJ+D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think "
                            },
                            {
                                "type": "text",
                                "text": "at least",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " one version of Eve also had a similar story going on"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598907048.031900",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "99f0c8dc-30b4-440c-b1ac-bbb14643f5f7",
        "type": "message",
        "text": "also\u2014can\u2019t you model event emitters with observers? which can be modeled with functional reactive programming? which can be implemented with pure functions? so you can compose in the same way?",
        "user": "UHWC9PXBL",
        "ts": "1598909477.034200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7H2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also\u2014can\u2019t you model event emitters with observers? which can be modeled with functional reactive programming? which can be implemented with pure functions? so you can compose in the same way?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598907048.031900",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "2a95f74e-2fc5-4b64-95cb-6d7d9a378350",
        "type": "message",
        "text": "I guess I\u2019m a bit fuzzy on the details of what separates/defines \u201cintegration\u201d vs \u201ccomposition\u201d",
        "user": "UHWC9PXBL",
        "ts": "1598909518.034500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0sRi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess I\u2019m a bit fuzzy on the details of what separates/defines \u201cintegration\u201d vs \u201ccomposition\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598907048.031900",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "268fed39-0426-468c-ac76-248230bc10d0",
        "type": "message",
        "text": "<@UHWC9PXBL>, yeah. Good point. I wonder if <@UAHHWT22U> meant something more specific.\n\nintegration vs composition: I'm not entirely sure. It makes me feel like composition is like swallowing the other service like a library, while integrations are the icons on your landing page.",
        "user": "UFPPABQ7P",
        "ts": "1598909648.034700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1598909688.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uu0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": ", yeah. Good point. I wonder if "
                            },
                            {
                                "type": "user",
                                "user_id": "UAHHWT22U"
                            },
                            {
                                "type": "text",
                                "text": " meant something more specific.\n\nintegration vs composition: I'm not entirely sure. It makes me feel like composition is like swallowing the other service like a library, while integrations are the icons on your landing page."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598907048.031900",
        "parent_user_id": "UAHHWT22U"
    }
]