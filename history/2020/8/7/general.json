[
    {
        "client_msg_id": "dde3ba5a-77e4-4541-b95d-779822a66fb4",
        "type": "message",
        "text": "&gt; Shipping a rendering engine with an HTML file would be a technical nightmare\nIt's called \"an app\", in a large number of cases. And yes, technically a bodge.",
        "user": "UE6EFEPTQ",
        "ts": "1596754344.227200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P3F",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Shipping a rendering engine with an HTML file would be a technical nightmare"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's called \"an app\", in a large number of cases. And yes, technically a bodge."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "48359cab-21da-4aa0-85ad-0279229bcbf4",
        "type": "message",
        "text": "(just recovering from the neuronal warp that question induced)",
        "user": "UE6EFEPTQ",
        "ts": "1596754734.227400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1jSq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(just recovering from the neuronal warp that question induced)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "c0dcb26c-4b85-4dad-9a38-a5875f8785fe",
        "type": "message",
        "text": "maybe \"not known yet\" can also encompass \"not known, and who knows why or when\"",
        "user": "UE6EFEPTQ",
        "ts": "1596754770.227600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QJI7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "maybe \"not known yet\" can also encompass \"not known, and who knows why or when\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "fe5ad254-39dc-453e-ad01-0d467eaee1a2",
        "type": "message",
        "text": "got any examples?",
        "user": "UE6EFEPTQ",
        "ts": "1596754802.227800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Gn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "got any examples?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "A36B4A49-874B-411B-99F2-325AA4801603",
        "type": "message",
        "text": "i\u2019m dealing with that trying to do something somewhere between (un)typed holes and a structural editor\u2014if a user has a key but its property isn\u2019t defined yet, and then they skip ahead to elsewhere in the syntax tree, i\u2019d say that i know they want a value for the property later but it\u2019s not strictly defined yet",
        "user": "UHWC9PXBL",
        "ts": "1596759247.230700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GKpE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i\u2019m dealing with that trying to do something somewhere between (un)typed holes and a structural editor\u2014if a user has a key but its property isn\u2019t defined yet, and then they skip ahead to elsewhere in the syntax tree, i\u2019d say that i know they want a value for the property later but it\u2019s not strictly defined yet"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70",
                    "U014WA16VNJ"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "633C6C58-1894-4100-8CE6-2B2869AA406E",
        "type": "message",
        "text": "pretty sure i can just like... ignore that situation though lol",
        "user": "UHWC9PXBL",
        "ts": "1596759267.231500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+vUd7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "pretty sure i can just like... ignore that situation though lol"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "67BE1D31-40F2-48D7-993E-EFCFABC042A6",
        "type": "message",
        "text": "i haven\u2019t stopped thinking about your no lists/everything is a list model <@UE6EFEPTQ>... i think you might be spiritually correct, not making afforsances for user convenience",
        "user": "UHWC9PXBL",
        "ts": "1596759372.233200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hiVyp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i haven\u2019t stopped thinking about your no lists/everything is a list model "
                            },
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "... i think you might be spiritually correct, not making afforsances for user convenience"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "71C0BB05-0BD0-4FE4-99DE-0630F9DACFCC",
        "type": "message",
        "text": "reminds me of how a lot of stuff \u201cjust works\u201d in APL as a result of rank polymorphism, but also seems a bit further than that",
        "user": "UHWC9PXBL",
        "ts": "1596759424.234400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hM5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "reminds me of how a lot of stuff \u201cjust works\u201d in APL as a result of rank polymorphism, but also seems a bit further than that"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "d488d6d2-ee80-4f03-870b-002aed51a6fd",
        "type": "message",
        "text": "In Python, there is no char type. They are just strings of length 1. So `a[0] == a` is true for strings of length 1. You can also loop over them `for char in a` will work for zero, one or longer length strings. Things don't come crashing down.",
        "user": "U8A5MS6R1",
        "ts": "1596761250.234600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jc42s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Python, there is no char type. They are just strings of length 1. So "
                            },
                            {
                                "type": "text",
                                "text": "a[0] == a",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is true for strings of length 1. You can also loop over them "
                            },
                            {
                                "type": "text",
                                "text": "for char in a",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " will work for zero, one or longer length strings. Things don't come crashing down."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "e602bdf9-31c7-4592-9b37-ebbcbf4037c7",
        "type": "message",
        "text": "BTW, one angle to think about this is that 'nothing' is a property of the field itself (e.g. fields are boxes, and one box is empty). While 'unknown' is a special kind of object that I can put in a box. Interesting.. can I put two unknowns in a box? Or an `unknown` and an `apple`?",
        "user": "U8A5MS6R1",
        "ts": "1596761444.234800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Iq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "BTW, one angle to think about this is that 'nothing' is a property of the field itself (e.g. fields are boxes, and one box is empty). While 'unknown' is a special kind of object that I can put in a box. Interesting.. can I put two unknowns in a box? Or an "
                            },
                            {
                                "type": "text",
                                "text": "unknown",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and an "
                            },
                            {
                                "type": "text",
                                "text": "apple",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "5655e910-3a5d-43a9-b9c6-82aa3c075eca",
        "type": "message",
        "text": "<@UH85W1ML1> Thank you. I didn't know that before. I'll make the hash follow the spec then :pray:",
        "user": "UMPQ9A65N",
        "ts": "1596766550.235200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QJ=FI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UH85W1ML1"
                            },
                            {
                                "type": "text",
                                "text": " Thank you. I didn't know that before. I'll make the hash follow the spec then "
                            },
                            {
                                "type": "emoji",
                                "name": "pray"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596614507.159400",
        "parent_user_id": "UMPQ9A65N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UH85W1ML1",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "03b124be-f7c3-4329-a835-9cbc4bf3a784",
        "type": "message",
        "text": "I think that falls apart if you can get back 'nothing' as a value. But if you can't, then what happens when you try to get it? The only other options I know are throwing an error, or some kind of Haskell-like \"Maybe\" construct",
        "user": "UAVCC2X70",
        "ts": "1596769650.235800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1596812202.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NAc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that falls apart if you can get back 'nothing' as a value. But if you can't, then what happens when you try to get it? The only other options I know are throwing an error, or some kind of Haskell-like \"Maybe\" construct"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "ee30143a-bf03-48f0-bae9-fa9caaa45fb8",
        "type": "message",
        "text": "<@UFB8STN7K>: Yeah. To the extent that the future of software is inseparable from the future of critical thinking, these statements feel counter-productive. Even if they lead to good ends (which is questionable), means matter in the long term. Our canon feels impoverished for being phrased in terms of stone tablets from on high. Too much emphasis on aesthetics (\"how _cool_ is a retrohistorical talk?!\") Here, I'm going to spin up a new thread..",
        "user": "UCUSW7WVD",
        "ts": "1596777384.236100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "apTL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": ": Yeah. To the extent that the future of software is inseparable from the future of critical thinking, these statements feel counter-productive. Even if they lead to good ends (which is questionable), means matter in the long term. Our canon feels impoverished for being phrased in terms of stone tablets from on high. Too much emphasis on aesthetics (\"how "
                            },
                            {
                                "type": "text",
                                "text": "cool",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a retrohistorical talk?!\") Here, I'm going to spin up a new thread.."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596672397.209600",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "f7db4a32-1118-4458-8420-5614aedb1dac",
        "type": "message",
        "text": "My personal discipline is to always phrase imperatives as trade-offs:\n* You should be tithing some of your time to understanding your computer. It's not enough to ask why others have not made it easier for you to understand your computer.\n* You should be willing to put up with klunkier interfaces in exchange for nicer implementation properties. (Eat your vegetables.) Sticking with text mode is an extreme form of this, hopefully I can break out of that in time.\n* You should be willing to take on some complexity in selecting forks of software to depend on, in exchange for a simpler computing stack once you've added them.\n* You should be willing to give up efficiency for safety. Memory leaks are ok if they avoid memory corruption.\n\nI think speaking in trade-offs is a major level-up in discourse over \"why don't we have this yet?\" Relevant is the Thiel question: \"What important truth do very few people agree with you on?\" Most answers turn out to be not very iconoclastic at all, because they aren't phrased as trade-offs. It's great that you want world peace. What do you think is worth _giving up_ for it?\n\nSo, what important but iconoclastic trade-off do _you_ believe in? :slightly_smiling_face:",
        "user": "UCUSW7WVD",
        "ts": "1596777634.240000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "irqK0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My personal discipline is to always phrase imperatives as trade-offs:\n* You should be tithing some of your time to understanding your computer. It's not enough to ask why others have not made it easier for you to understand your computer.\n* You should be willing to put up with klunkier interfaces in exchange for nicer implementation properties. (Eat your vegetables.) Sticking with text mode is an extreme form of this, hopefully I can break out of that in time.\n* You should be willing to take on some complexity in selecting forks of software to depend on, in exchange for a simpler computing stack once you've added them.\n* You should be willing to give up efficiency for safety. Memory leaks are ok if they avoid memory corruption.\n\nI think speaking in trade-offs is a major level-up in discourse over \"why don't we have this yet?\" Relevant is the Thiel question: \"What important truth do very few people agree with you on?\" Most answers turn out to be not very iconoclastic at all, because they aren't phrased as trade-offs. It's great that you want world peace. What do you think is worth "
                            },
                            {
                                "type": "text",
                                "text": "giving up",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for it?\n\nSo, what important but iconoclastic trade-off do "
                            },
                            {
                                "type": "text",
                                "text": "you",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " believe in? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "reply_count": 12,
        "reply_users_count": 7,
        "latest_reply": "1596897809.300800",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "UJ6LDMMN0",
            "U5STGTB3J",
            "UHWC9PXBL",
            "UE0ETTCG7",
            "UDQBTJ211"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U018DRGAC5S",
                    "U013KEPEJ2H",
                    "UC2A2ARPT",
                    "UDQKHNP51",
                    "UJBAJNFLK",
                    "UMWF81HTP",
                    "UHWC9PXBL",
                    "UFB8STN7K"
                ],
                "count": 8
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D",
                    "UBSMEUXAA"
                ],
                "count": 2
            },
            {
                "name": "ok_hand",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b3f885dc-d596-4d6f-8aa7-da51f7dbebaf",
        "type": "message",
        "text": "Thinking in trade-offs feels like a synthesis of <@UFB8STN7K>'s and <@U5STGTB3J>'s positions. Yes, you have to acknowledge context. And yes, sometimes the context is a dead end to be ignored/transcended.",
        "user": "UCUSW7WVD",
        "ts": "1596778426.240800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Upr=T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thinking in trade-offs feels like a synthesis of "
                            },
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": "'s and "
                            },
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": "'s positions. Yes, you have to acknowledge context. And yes, sometimes the context is a dead end to be ignored/transcended."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "407E3056-886A-4209-B5A2-E8011C4AC467",
        "type": "message",
        "text": "This prompt also feels like a gentler version of the [<https://futureofcoding.slack.com/archives/C5T9GPWFL/p1580718026447200|your name] paradox> thread from... the before times.\n\nIn that my iconoclastic trade off is (of course) something like: you should accept that not all incidental complexity is avoidable, but what incidental complexity you have should be <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1580751504462400|your choice>.\n\n(Also \u2014 <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1580762349483300|Interfaces vs Implementations>, for anyone who missed it the first time around)",
        "user": "UC2A2ARPT",
        "ts": "1596778532.242000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1596808813.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JF+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This prompt also feels like a gentler version of the ["
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1580718026447200",
                                "text": "your name] paradox"
                            },
                            {
                                "type": "text",
                                "text": " thread from... the before times.\n\nIn that my iconoclastic trade off is (of course) something like: you should accept that not all incidental complexity is avoidable, but what incidental complexity you have should be "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1580751504462400",
                                "text": "your choice"
                            },
                            {
                                "type": "text",
                                "text": ".\n\n(Also \u2014 "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1580762349483300",
                                "text": "Interfaces vs Implementations"
                            },
                            {
                                "type": "text",
                                "text": ", for anyone who missed it the first time around)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UKP3B2J5D",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "f0f8b29c-1718-4ff6-8041-08b0536a5b2b",
        "type": "message",
        "text": "A story currently much debated in biology: <https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates|Scientists rename human genes to stop Microsoft Excel from misreading them as dates>\n\nThe problem of Excel converting some gene names to dates (example: MARCH1) has been discussed for a while already. Biologists had adopted Excel believing it to be a general-purpose computational tool, but then discovered that Microsoft intended it to be a domain-specific tool for business data, without insisting much on that detail in their communication with the public. Several published genome studies already contained mistakes. So... what to do? The feature cannot be turned off, Microsoft didn't really care because biologists are not their main customer base, and re-training biologists around the world to use another tool wasn't doable. So they decided to change the names of the genes! This isn't an easy decision, and it will be costly as well, adding complexity to future bioinformatics software and confusion among biologists.",
        "user": "UJBAJNFLK",
        "ts": "1596782620.248700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1596782792.000000"
        },
        "attachments": [
            {
                "service_name": "The Verge",
                "title": "Scientists rename human genes to stop Microsoft Excel from misreading them as dates",
                "title_link": "https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates",
                "text": "Microsoft Excel: 1 \u2014 Human Genetics: 0.",
                "fallback": "The Verge: Scientists rename human genes to stop Microsoft Excel from misreading them as dates",
                "image_url": "https://cdn.vox-cdn.com/thumbor/6Kkv8b1P0DgN4R3mx4WQ2ek0RpY=/0x215:3000x1786/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/8986109/acastro_170726_1777_0013.jpg",
                "image_width": 478,
                "image_height": 250,
                "ts": 1596717842,
                "from_url": "https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates",
                "image_bytes": 217038,
                "service_icon": "https://cdn.vox-cdn.com/uploads/chorus_asset/file/7395359/ios-icon.0.png",
                "id": 1,
                "original_url": "https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gJ+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A story currently much debated in biology: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates",
                                "text": "Scientists rename human genes to stop Microsoft Excel from misreading them as dates"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe problem of Excel converting some gene names to dates (example: MARCH1) has been discussed for a while already. Biologists had adopted Excel believing it to be a general-purpose computational tool, but then discovered that Microsoft intended it to be a domain-specific tool for business data, without insisting much on that detail in their communication with the public. Several published genome studies already contained mistakes. So... what to do? The feature cannot be turned off, Microsoft didn't really care because biologists are not their main customer base, and re-training biologists around the world to use another tool wasn't doable. So they decided to change the names of the genes! This isn't an easy decision, and it will be costly as well, adding complexity to future bioinformatics software and confusion among biologists."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "reply_count": 14,
        "reply_users_count": 8,
        "latest_reply": "1596907467.307900",
        "reply_users": [
            "U8A5MS6R1",
            "UJBAJNFLK",
            "U018DRGAC5S",
            "UE1JQM9HQ",
            "U013866H7LY",
            "UDQBTJ211",
            "UFXFB1RK8",
            "UNBPP291C"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDQBTJ211",
                    "U018DRGAC5S",
                    "UPVBV34EL"
                ],
                "count": 3
            },
            {
                "name": "face_palm::skin-tone-2",
                "users": [
                    "UP28ETUSE",
                    "UUQ2EQW21",
                    "UJ6LDMMN0",
                    "U01554W5BS5",
                    "U014WA16VNJ"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "7aa70a51-e5c5-4c18-924a-5b97f714e449",
        "type": "message",
        "text": "Are we firmly in the \"then the tools shape us\" phase of computing then?\n\nI saw this story and am.. amazed. Not necessarily saddened, but.. just very fascinated.\n\nIt reminded me of the the cuneiform scripts - which look that way (wedge shaped straight lines) because that is how you could write on clay tablets with a stylus. Also many South Indian scripts which look that way (very curvy) because they were written on dried leaves and straight lines would easily produce tears.",
        "user": "U8A5MS6R1",
        "ts": "1596788765.249900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1596788912.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y+SVB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are we firmly in the \"then the tools shape us\" phase of computing then?\n\nI saw this story and am.. amazed. Not necessarily saddened, but.. just very fascinated.\n\nIt reminded me of the the cuneiform scripts - which look that way (wedge shaped straight lines) because that is how you could write on clay tablets with a stylus. Also many South Indian scripts which look that way (very curvy) because they were written on dried leaves and straight lines would easily produce tears."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "UDQKHNP51",
                    "U013ZLJARC7"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "a9dd712c-d7d0-45a6-8ca4-b2c58bb46c37",
        "type": "message",
        "text": "In fact, trade-off is also at the very core of the programming activity. It is good to know that as Future of Coding designer. You design tools with which people make trade-off all the time.\n\nMaking and managing trade-off in programming is hard and intimidating. How the current state of programming actually helps programmers in that task? How to do it better?",
        "user": "UJ6LDMMN0",
        "ts": "1596793646.250500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0AN3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In fact, trade-off is also at the very core of the programming activity. It is good to know that as Future of Coding designer. You design tools with which people make trade-off all the time.\n\nMaking and managing trade-off in programming is hard and intimidating. How the current state of programming actually helps programmers in that task? How to do it better?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "EBE05323-BB59-476E-98F5-F2E12D044571",
        "type": "message",
        "text": "That\u2019s what I don\u2019t understand: as programmers we make trade-offs all the time and we deeply understand the complexities involved in these trade-offs. \nBut then when you listen to programmer conversations a lot of them are about how \u201cit\u2019s clearly better to do it a certain way\u201d, as if that\u2019s so easy to determine without having (and often not even attempting to learn about) any of the context.",
        "user": "U5STGTB3J",
        "ts": "1596795801.256600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CCA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That\u2019s what I don\u2019t understand: as programmers we make trade-offs all the time and we deeply understand the complexities involved in these trade-offs. \nBut then when you listen to programmer conversations a lot of them are about how \u201cit\u2019s clearly better to do it a certain way\u201d, as if that\u2019s so easy to determine without having (and often not even attempting to learn about) any of the context."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "U85HCL7JP"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "7E84958D-F606-45AD-8694-AEE2290F5E0E",
        "type": "message",
        "text": "my tradeoff is interactivity over abstraction. games are more fun (and faster) when you move your own avatar, not when you write a bot ",
        "user": "UHWC9PXBL",
        "ts": "1596796834.258800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p+QA3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my tradeoff is interactivity over abstraction. games are more fun (and faster) when you move your own avatar, not when you write a bot "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3287d75d-45f2-46a2-9892-dca5a93b1c1b",
        "type": "message",
        "text": "<@U8A5MS6R1> to avoid that problematic subtlety, I don't have empty boxes, if you empty it, it disappears! (i.e. the object property is deleted) If you try to get it, you get *nothing* back.",
        "user": "UE6EFEPTQ",
        "ts": "1596805262.259700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mSf=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " to avoid that problematic subtlety, I don't have empty boxes, if you empty it, it disappears! (i.e. the object property is deleted) If you try to get it, you get "
                            },
                            {
                                "type": "text",
                                "text": "nothing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " back."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "856e40f0-22ac-4872-92ae-861b92e764c8",
        "type": "message",
        "text": "You can put `fruit: *unknown* apple *unknown* banana`, yes",
        "user": "UE6EFEPTQ",
        "ts": "1596805293.259900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1596805317.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LOs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can put "
                            },
                            {
                                "type": "text",
                                "text": "fruit: ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "unknown",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " apple ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "unknown",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " banana",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", yes"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "bb376e11-a130-42d7-a83c-31e510b071e9",
        "type": "message",
        "text": "But `fruit: *nothing* apple *nothing* mango` collapses to just `fruit: apple mango`",
        "user": "UE6EFEPTQ",
        "ts": "1596805365.260300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jks",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But "
                            },
                            {
                                "type": "text",
                                "text": "fruit: ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "nothing",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " apple ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "nothing",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mango",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " collapses to just "
                            },
                            {
                                "type": "text",
                                "text": "fruit: apple mango",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0ec82784-d5ba-48aa-a976-03820b98d507",
        "type": "message",
        "text": "and of course `fruit: *nothing* banana` is just `fruit: banana`  (no list any more)",
        "user": "UE6EFEPTQ",
        "ts": "1596805411.260500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1596805425.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "opCx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and of course "
                            },
                            {
                                "type": "text",
                                "text": "fruit: ",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "nothing",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " banana",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is just "
                            },
                            {
                                "type": "text",
                                "text": "fruit: banana",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  (no list any more)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "18c4a3ab-9c4e-4b85-af47-6e8e7ebc897f",
        "type": "message",
        "text": "<@UAVCC2X70> what falls apart if you can get back *nothing* ?",
        "user": "UE6EFEPTQ",
        "ts": "1596805512.260800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z/P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " what falls apart if you can get back "
                            },
                            {
                                "type": "text",
                                "text": "nothing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "1fdcd168-581e-4010-b48a-6767d7ec580a",
        "type": "message",
        "text": "Staying with McLuhan: If Excel is the medium, what is then the message?",
        "user": "UJBAJNFLK",
        "ts": "1596806645.261000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/MFG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Staying with McLuhan: If Excel is the medium, what is then the message?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U018DRGAC5S"
                ],
                "count": 1
            },
            {
                "name": "joy",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "38c671a1-a812-4f1c-b463-cee4e52aa523",
        "type": "message",
        "text": "\"Yes a large of non-programmer end-users CAN in fact write simple (or sometimes hopelessly complex) programs. But be careful what you wish for.\"",
        "user": "U018DRGAC5S",
        "ts": "1596807185.261500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Ugc3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Yes a large of non-programmer end-users CAN in fact write simple (or sometimes hopelessly complex) programs. But be careful what you wish for.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "332fb85c-3a7a-46ec-af46-c44930f18997",
        "type": "message",
        "text": "If nothing is not a value and just a property or state, then what is the result of getting nothing? If you can get back nothing, then nothing has to be a value.\n\n... But the solution you just described (i.e. nothing just disappears from containers) is interesting! So nothing is somewhat like a value, but it's a disappearing value.",
        "user": "UAVCC2X70",
        "ts": "1596812479.262500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9qA9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If nothing is not a value and just a property or state, then what is the result of getting nothing? If you can get back nothing, then nothing has to be a value.\n\n... But the solution you just described (i.e. nothing just disappears from containers) is interesting! So nothing is somewhat like a value, but it's a disappearing value."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "215ba696-5123-4924-9b8c-39793711f4e8",
        "type": "message",
        "text": "I suppose it depends if you're on the \"left hand side\" (matching) or \"right hand side\" (setting) of a rewrite rule.  If you're matching, you have to be able to match with a symbol, so can use *nothing* to say you really want that to be absent. If you're setting, and use *nothing*, that's when the disappearing trick happens.",
        "user": "UE6EFEPTQ",
        "ts": "1596813765.262700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QXwJg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose it depends if you're on the \"left hand side\" (matching) or \"right hand side\" (setting) of a rewrite rule.  If you're matching, you have to be able to match with a symbol, so can use "
                            },
                            {
                                "type": "text",
                                "text": "nothing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to say you really want that to be absent. If you're setting, and use "
                            },
                            {
                                "type": "text",
                                "text": "nothing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", that's when the disappearing trick happens."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "88743c1d-d780-4000-a7b7-333112344f76",
        "type": "message",
        "text": "Obviously, with homoiconicity (ooo), you can't let the rewrite rule itself reduce because the matching side will disappear!",
        "user": "UE6EFEPTQ",
        "ts": "1596813845.262900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2jh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Obviously, with homoiconicity (ooo), you can't let the rewrite rule itself reduce because the matching side will disappear!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596539310.135400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "f66efab6-0562-4b53-8031-0957a5dafc4a",
        "type": "message",
        "text": "From my point of view as a computational scientist (though not in genomics, and not using Excel), I'd go for another message: don't use software for research if it's authors don't explicitly support research and in particular your research domain (unless of course you are competent enough to judge the suitability of some software yourself).",
        "user": "UJBAJNFLK",
        "ts": "1596815673.263100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1596815848.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nLSR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From my point of view as a computational scientist (though not in genomics, and not using Excel), I'd go for another message: don't use software for research if it's authors don't explicitly support research and in particular your research domain (unless of course you are competent enough to judge the suitability of some software yourself)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "59c63fed-ea29-4809-b55d-aab6792c2209",
        "type": "message",
        "text": "<@UCUSW7WVD> Erlang models that original async message passing pretty much to the original definition if you're curious about the original idea of OOP.",
        "user": "UFPPABQ7P",
        "ts": "1596817412.263400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ED7/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Erlang models that original async message passing pretty much to the original definition if you're curious about the original idea of OOP."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596270826.013700",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "eb670f8d-025c-46fd-a27f-7fd8614d4072",
        "type": "message",
        "text": "<@UCUSW7WVD>, Joe Armstrong (co-designer of Erlang) talked briefly about this in an old email list <http://erlang.org/pipermail/erlang-questions/2009-November/047748.html>",
        "user": "UFPPABQ7P",
        "ts": "1596817501.263700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ZX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": ", Joe Armstrong (co-designer of Erlang) talked briefly about this in an old email list "
                            },
                            {
                                "type": "link",
                                "url": "http://erlang.org/pipermail/erlang-questions/2009-November/047748.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596270826.013700",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "a2dbe8ec-6277-45f1-80ad-f4d4b20d24a0",
        "type": "message",
        "text": "This is a fascinating story. It goes to show how in a world of software there is no such thing as a non-technical person. There is only people that understand that world and can navigate it, and those that cannot. It follows that it is imperative to make the world navigate-able by many more people.",
        "user": "UE1JQM9HQ",
        "ts": "1596818103.264200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9tz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a fascinating story. It goes to show how in a world of software there is no such thing as a non-technical person. There is only people that understand that world and can navigate it, and those that cannot. It follows that it is imperative to make the world navigate-able by many more people."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "350EBEC7-539D-4D10-AAF8-05E17FD74A47",
        "type": "message",
        "text": "<https://twitter.com/mariosangiorgio/status/1290576316677455873|https://twitter.com/mariosangiorgio/status/1290576316677455873>",
        "user": "UKP3B2J5D",
        "ts": "1596818161.264500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/mariosangiorgio|@mariosangiorgio>: Lately I\u2019ve seen a lot of excitement in GPT-3 based programming tools. They\u2019re cool demos but I\u2019m skeptic.\n\n<https://twitter.com/HilaCodes|@HilaCodes> has a great intro to program synthesis <https://youtu.be/-EFTnauDZmY> and explains it is hard because it has to:\n- generalise partial intent\n- solve the halting problem",
                "ts": 1596532346,
                "author_name": "Mario Sangiorgio",
                "author_link": "https://twitter.com/mariosangiorgio/status/1290576316677455873",
                "author_icon": "https://pbs.twimg.com/profile_images/1211265857176907776/U1VP_aEa_normal.jpg",
                "author_subname": "@mariosangiorgio",
                "text": "Lately I\u2019ve seen a lot of excitement in GPT-3 based programming tools. They\u2019re cool demos but I\u2019m skeptic.\n\n<https://twitter.com/HilaCodes|@HilaCodes> has a great intro to program synthesis <https://youtu.be/-EFTnauDZmY> and explains it is hard because it has to:\n- generalise partial intent\n- solve the halting problem",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/mariosangiorgio/status/1290576316677455873",
                "id": 1,
                "original_url": "https://twitter.com/mariosangiorgio/status/1290576316677455873",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mmv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/mariosangiorgio/status/1290576316677455873",
                                "text": "https://twitter.com/mariosangiorgio/status/1290576316677455873"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG"
    },
    {
        "client_msg_id": "d3780373-018a-41c4-8a11-9599cf3e4f86",
        "type": "message",
        "text": "I have the same interpretation as you, <@UKP3B2J5D>. The example of a painter painting or someone driving a car resonates. Many times when that painter or driver is going through the motions or \"in flow\", they aren't mentally \"available\" to stop and describe what and why they are mixing colors in a specific way, or way they changed lanes to make room between cars.",
        "user": "UFPPABQ7P",
        "ts": "1596818286.264800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1596818352.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Ji=N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have the same interpretation as you, "
                            },
                            {
                                "type": "user",
                                "user_id": "UKP3B2J5D"
                            },
                            {
                                "type": "text",
                                "text": ". The example of a painter painting or someone driving a car resonates. Many times when that painter or driver is going through the motions or \"in flow\", they aren't mentally \"available\" to stop and describe what and why they are mixing colors in a specific way, or way they changed lanes to make room between cars."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596559806.145700",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b4029453-3d47-458e-a6e2-d0ef3a7a79ef",
        "type": "message",
        "text": "I don't feel like I think in \"text\" when I program. I feel like I'm thinking in usages and domain models.",
        "user": "UFPPABQ7P",
        "ts": "1596818322.265200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BwL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't feel like I think in \"text\" when I program. I feel like I'm thinking in usages and domain models."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596559806.145700",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "B4983B1C-F317-44FC-A805-CBD81B24F130",
        "type": "message",
        "text": "It\u2019s also a fluency thing.. like this <https://twitter.com/opeispo/status/1291079668817428480?s=20|https://twitter.com/opeispo/status/1291079668817428480?s=20>",
        "user": "UKP3B2J5D",
        "ts": "1596818372.266000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/opeispo|@opeispo>: <https://twitter.com/ChidiWilliams__|@ChidiWilliams__> I think what happens with typing is that we also learn how to type whole words not single characters. So it is a chunk. Recently did a typing course and it was clearly harder to write characters that didn't form words because there was no muscle memory for them",
                "ts": 1596652354,
                "author_name": "Opemipo @ #PlHciSwimmer School",
                "author_link": "https://twitter.com/opeispo/status/1291079668817428480",
                "author_icon": "https://pbs.twimg.com/profile_images/1204147790127009793/0gf1P5Jj_normal.jpg",
                "author_subname": "@opeispo",
                "text": "<https://twitter.com/ChidiWilliams__|@ChidiWilliams__> I think what happens with typing is that we also learn how to type whole words not single characters. So it is a chunk. Recently did a typing course and it was clearly harder to write characters that didn't form words because there was no muscle memory for them",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/opeispo/status/1291079668817428480?s=20",
                "id": 1,
                "original_url": "https://twitter.com/opeispo/status/1291079668817428480?s=20",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+a9f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s also a fluency thing.. like this "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/opeispo/status/1291079668817428480?s=20",
                                "text": "https://twitter.com/opeispo/status/1291079668817428480?s=20"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596559806.145700",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6c9130d8-6ce7-4ccc-ba64-bc6c627c481b",
        "type": "message",
        "text": "That's an awesome analogy, too!",
        "user": "UFPPABQ7P",
        "ts": "1596818408.266400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "we0lm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's an awesome analogy, too!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596559806.145700",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "2fcc8589-5cad-4e4c-be9d-7d34baf05ad4",
        "type": "message",
        "text": "Excel is established enough that they can afford to ignore a huge base of users like this. I'm sure their product team is a lil embarrassed right now though. But in an alternate universe where Excel was designed as a technical tool for technical users (think of it as an IDE), this wouldn't have happened.",
        "user": "U013866H7LY",
        "ts": "1596822564.267100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8mKFI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excel is established enough that they can afford to ignore a huge base of users like this. I'm sure their product team is a lil embarrassed right now though. But in an alternate universe where Excel was designed as a technical tool for technical users (think of it as an IDE), this wouldn't have happened."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "ad02c88b-777b-4a5f-8af3-7c61ab34764f",
        "type": "message",
        "text": "<@UE1JQM9HQ> agreed, all users are technical to some extent. I think for Excel and many FoC tools, a big challenge is designing so all types of user can get just as technical as they need to in order to solve the problem at hand. But to keep the next depth of technicality/complexity just around the corner so casual folks aren't overwhelmed.",
        "user": "U013866H7LY",
        "ts": "1596823272.267400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LDED",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " agreed, all users are technical to some extent. I think for Excel and many FoC tools, a big challenge is designing so all types of user can get just as technical as they need to in order to solve the problem at hand. But to keep the next depth of technicality/complexity just around the corner so casual folks aren't overwhelmed."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "5350be3c-8026-4a93-ac8f-ae9f98b01bb9",
        "type": "message",
        "text": "<@UJBAJNFLK> In this case if there is no product that explicitly supports research, and also has the desired features of Excel , what would scientists do?",
        "user": "U8A5MS6R1",
        "ts": "1596823630.267600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=YZUu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " In this case if there is no product that explicitly supports research, and also has the desired features of Excel , what would scientists do?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "a64437fb-b97f-4e6b-b5f8-93eb56983518",
        "type": "message",
        "text": "Have a suitable tool designed and implemented for them by specialists. Using more generic bricks (GUI etc.), why not. The main point is that the core functionality, i.e. what happens to the data, is agreed on between developers and users and written down in some form of contract.\nCost is really not an issue here. Genomics requires a lot of resources for data acquisition (mainly sequencing), so it's worth spending a fraction of that money to ensure that the data is exploited to its potential.",
        "user": "UJBAJNFLK",
        "ts": "1596827026.268100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1596827086.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bUsD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have a suitable tool designed and implemented for them by specialists. Using more generic bricks (GUI etc.), why not. The main point is that the core functionality, i.e. what happens to the data, is agreed on between developers and users and written down in some form of contract.\nCost is really not an issue here. Genomics requires a lot of resources for data acquisition (mainly sequencing), so it's worth spending a fraction of that money to ensure that the data is exploited to its potential."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8fb58db9-82cc-40d6-8652-4eeeab7da245",
        "type": "message",
        "text": "Yes!",
        "user": "UE1JQM9HQ",
        "ts": "1596827400.268500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F6oWP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "aa2a2d32-2c32-4fa2-a60d-24b569f4ce2d",
        "type": "message",
        "text": "Great answer, though I'm hopelessly addicted to bot-writing games: <https://github.com/akkartik/brooks-ruby-warrior>; <https://2016.halite.io/user.html?userID=2460>",
        "user": "UCUSW7WVD",
        "ts": "1596827641.268700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1596827650.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HEk4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great answer, though I'm hopelessly addicted to bot-writing games: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/brooks-ruby-warrior"
                            },
                            {
                                "type": "text",
                                "text": "; "
                            },
                            {
                                "type": "link",
                                "url": "https://2016.halite.io/user.html?userID=2460"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "ddb826e6-ddfd-41c6-940d-53e34734b3bd",
        "type": "message",
        "text": "<@U5STGTB3J> while we're _forced_ to make trade-offs, I think human nature is strongly geared to dislike ambiguity. Good things are good, bad things are bad, stuff like that. So when we look to the future we may want (sub-consciously?) to eliminate trade-offs as well. And paradoxically, the more idealistic someone is, the more likely they may be to fall for this fallacy.\n\nI'm curious to hear if anyone disagrees that we'll always have trade-offs, there's no getting away from them.",
        "user": "UCUSW7WVD",
        "ts": "1596828066.269200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l1cwG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " while we're "
                            },
                            {
                                "type": "text",
                                "text": "forced",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to make trade-offs, I think human nature is strongly geared to dislike ambiguity. Good things are good, bad things are bad, stuff like that. So when we look to the future we may want (sub-consciously?) to eliminate trade-offs as well. And paradoxically, the more idealistic someone is, the more likely they may be to fall for this fallacy.\n\nI'm curious to hear if anyone disagrees that we'll always have trade-offs, there's no getting away from them."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d13ae67c-47b6-4308-b106-93ee0abd79ea",
        "type": "message",
        "text": "<https://www.cs.virginia.edu/~robins/YouAndYourResearch.html> mentions tolerance of ambiguity as a marker for success; that's evidence that it's not universal.",
        "user": "UCUSW7WVD",
        "ts": "1596828175.269400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gdx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.cs.virginia.edu/~robins/YouAndYourResearch.html"
                            },
                            {
                                "type": "text",
                                "text": " mentions tolerance of ambiguity as a marker for success; that's evidence that it's not universal."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "e8cca172-beb7-485d-9930-9b84d8b5885b",
        "type": "message",
        "text": "We've been in the \"tools shape us\" stage for a while. For example, the band Chvrches spells it like that so that it is googleable. It's the same phenomenon as \"AAA Plumbing Ltd\" in Yellow Pages.\n\nI don't think the issue with the gene is as ridiculous as it first seems. If you are going to do this kind of helpful guessing you will sometimes get it wrong. I work with a lot of Excel files of phone numbers which are always interpreted as integers rather than text and converted to scientific notation (e.g. 447123000111 gets turned into 4.47123E+12). Drives me nuts, but from MS's point of view this is definitely the correct way to guess.",
        "user": "UDQBTJ211",
        "ts": "1596828922.271600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jOd6B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We've been in the \"tools shape us\" stage for a while. For example, the band Chvrches spells it like that so that it is googleable. It's the same phenomenon as \"AAA Plumbing Ltd\" in Yellow Pages.\n\nI don't think the issue with the gene is as ridiculous as it first seems. If you are going to do this kind of helpful guessing you will sometimes get it wrong. I work with a lot of Excel files of phone numbers which are always interpreted as integers rather than text and converted to scientific notation (e.g. 447123000111 gets turned into 4.47123E+12). Drives me nuts, but from MS's point of view this is definitely the correct way to guess."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596782620.248700",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "275e0e8c-7b9b-4666-99d8-3792a5a0485d",
        "type": "message",
        "text": "Regarding \"You should be willing to put up with klunkier interfaces in exchange for nicer implementation properties. (Eat your vegetables.) Sticking with text mode is an extreme form of this, hopefully I can break out of that in time.\"\n\nI once wondered why text editors weren't better designed, given that they're the software that programmers make for themselves. But the more I've studied other software packages, the more I've come to believe that text editors actually are the best software that's ever been made. To make this argument, I'd put software like Emacs, Vim, BBEdit, TextMate, VS Code up against things like Photoshop, Excel, After Effects, Ableton Live. In my book, the text editors always come out ahead. They're more flexible, they're faster, they're more powerful, in that features can be combined in freeform ways more gracefully. The basic building blocks of selecting and operating on data works more fluently than in any other software I've encountered. Most of them can also be extended in powerful ways.\n\nWhat do other people think? What software is better than text editors? (That's of comparable usefulness, I tend to want to narrow it to software that you actually make something with, e.g., because some utilities are so focused they practically vanish. But I'd still be curious what answers people have.)",
        "user": "UE0ETTCG7",
        "ts": "1596828963.271800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2BGM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding \"You should be willing to put up with klunkier interfaces in exchange for nicer implementation properties. (Eat your vegetables.) Sticking with text mode is an extreme form of this, hopefully I can break out of that in time.\"\n\nI once wondered why text editors weren't better designed, given that they're the software that programmers make for themselves. But the more I've studied other software packages, the more I've come to believe that text editors actually are the best software that's ever been made. To make this argument, I'd put software like Emacs, Vim, BBEdit, TextMate, VS Code up against things like Photoshop, Excel, After Effects, Ableton Live. In my book, the text editors always come out ahead. They're more flexible, they're faster, they're more powerful, in that features can be combined in freeform ways more gracefully. The basic building blocks of selecting and operating on data works more fluently than in any other software I've encountered. Most of them can also be extended in powerful ways.\n\nWhat do other people think? What software is better than text editors? (That's of comparable usefulness, I tend to want to narrow it to software that you actually make something with, e.g., because some utilities are so focused they practically vanish. But I'd still be curious what answers people have.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3c540fc5-9c6e-412f-ae1c-345dfa98e691",
        "type": "message",
        "text": "Interesting. Just to clarify, though, I was alluding here to not using a graphics mode of the display.",
        "user": "UCUSW7WVD",
        "ts": "1596830974.272400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mV3Yx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. Just to clarify, though, I was alluding here to not using a graphics mode of the display."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596777634.240000",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    }
]