[
    {
        "client_msg_id": "C769F7D6-EB7B-458B-B587-E146E2CEB6F8",
        "type": "message",
        "text": "Anyone have any thoughts on this piece about how the web is overshadowing native apps on the desktop? (This is from Brent Simmons, the developer of NetNewsWire, one of the most popular native Mac apps ever.) I\u2019m particularly fascinated that the web has been so successful on the desktop (although really only in the last five years ago for use cases I personally care about, like creative apps) \u2014 but on mobile native apps are far more popular than the web. Both of these things are strange to me: That native is so much more popular than the web on mobile, and that it took so long for the web to make inroads for so many important uses cases on desktop. <https://inessential.com/2020/08/15/desktop_means_web|https://inessential.com/2020/08/15/desktop_means_web>",
        "user": "UE0ETTCG7",
        "ts": "1597530032.058500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/oe/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone have any thoughts on this piece about how the web is overshadowing native apps on the desktop? (This is from Brent Simmons, the developer of NetNewsWire, one of the most popular native Mac apps ever.) I\u2019m particularly fascinated that the web has been so successful on the desktop (although really only in the last five years ago for use cases I personally care about, like creative apps) \u2014 but on mobile native apps are far more popular than the web. Both of these things are strange to me: That native is so much more popular than the web on mobile, and that it took so long for the web to make inroads for so many important uses cases on desktop. "
                            },
                            {
                                "type": "link",
                                "url": "https://inessential.com/2020/08/15/desktop_means_web",
                                "text": "https://inessential.com/2020/08/15/desktop_means_web"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597530032.058500",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1597561781.080600",
        "reply_users": [
            "UJN1TAYEQ",
            "U013ZLJARC7"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "996d9dc0-633b-47a6-bfc7-9d6e94bab93d",
        "type": "message",
        "text": "Try using reddit, or slack, on mobile web. You are constantly badgered to install the app. Which makes sense for surveilance capitalism, because mobile apps can spy on you far more effectively than web pages can. App installation is generally easier and lower friction on mobile as well.",
        "user": "UJN1TAYEQ",
        "ts": "1597530977.058600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ee2r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Try using reddit, or slack, on mobile web. You are constantly badgered to install the app. Which makes sense for surveilance capitalism, because mobile apps can spy on you far more effectively than web pages can. App installation is generally easier and lower friction on mobile as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597530032.058500",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ",
                    "UAL7940NM",
                    "U013ZLJARC7",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "f4bb1c68-ce45-4df8-b3ee-6d10e35a8f90",
        "type": "message",
        "text": "Would folks fancy a Q&amp;A with Alan? Like me he lives in London, I could maybe set up a livestream. Warning: takes him a minimum 25 minutes to answer a single question.",
        "user": "U017GNJM021",
        "ts": "1597534584.059000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LQ2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would folks fancy a Q&A with Alan? Like me he lives in London, I could maybe set up a livestream. Warning: takes him a minimum 25 minutes to answer a single question."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596660965.463600",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "USH01JEDQ",
                    "UMWF81HTP",
                    "UJBAJNFLK"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "219765A6-EE29-448D-9321-EBACA9A1C64D",
        "type": "message",
        "text": "<https://twitter.com/2600/status/1294752467410771968?s=21|https://twitter.com/2600/status/1294752467410771968?s=21> amazon is clearly doing some type coercion on magazine names\u20142600 magazine is being sent to people with wildly different numbers as the title",
        "user": "UHWC9PXBL",
        "ts": "1597536516.060500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1597549466.000000"
        },
        "attachments": [
            {
                "fallback": "<https://twitter.com/2600|@2600>: OK, this has gotten officially crazy. We now have FOUR magazine titles at <https://twitter.com/Kindle|@Kindle>. How does our name consistently cause such mayhem? <https://twitter.com/desmo_/status/1294673973603696640>",
                "ts": 1597528018,
                "author_name": "2600 Magazine",
                "author_link": "https://twitter.com/2600/status/1294752467410771968",
                "author_icon": "https://pbs.twimg.com/profile_images/213376813/masthead_normal.gif",
                "author_subname": "@2600",
                "text": "OK, this has gotten officially crazy. We now have FOUR magazine titles at <https://twitter.com/Kindle|@Kindle>. How does our name consistently cause such mayhem? <https://twitter.com/desmo_/status/1294673973603696640>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/2600/status/1294752467410771968?s=21",
                "id": 1,
                "original_url": "https://twitter.com/2600/status/1294752467410771968?s=21",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https://twitter.com/desmo_|@desmo_>: <https://twitter.com/2600|@2600> \n\nWTF ? 6472 magazine. Funny stuff. <https://pbs.twimg.com/media/EfebHUsWsAAnvmB.png>",
                "ts": 1597509303,
                "author_name": "Thriving\ud83c\udd7e\ufe0fn\u262a\ufe0fh\ud83c\udd70\ufe0f\ud83c\udd7e\ufe0fs",
                "author_link": "https://twitter.com/desmo_/status/1294673973603696640",
                "author_icon": "https://pbs.twimg.com/profile_images/1257473137211514883/4rELMBES_normal.jpg",
                "author_subname": "@desmo_",
                "text": "<https://twitter.com/2600|@2600> \n\nWTF ? 6472 magazine. Funny stuff. <https://pbs.twimg.com/media/EfebHUsWsAAnvmB.png>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/desmo_/status/1294673973603696640",
                "image_url": "https://pbs.twimg.com/media/EfebHUsWsAAnvmB.png",
                "image_width": 873,
                "image_height": 140,
                "image_bytes": 17270,
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7uzMp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/2600/status/1294752467410771968?s=21",
                                "text": "https://twitter.com/2600/status/1294752467410771968?s=21"
                            },
                            {
                                "type": "text",
                                "text": " amazon is clearly doing some type coercion on magazine names\u20142600 magazine is being sent to people with wildly different numbers as the title"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "be2ec9ff-f4e2-4fbd-902d-b60d87038023",
        "type": "message",
        "text": "Ah, I see. Another parsing error of mine. The extra comma helps.",
        "user": "UCGAK10LS",
        "ts": "1597546706.060900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1597546734.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7vPeD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, I see. Another parsing error of mine. The extra comma helps."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597473951.047000",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "subtype": "channel_topic",
        "ts": "1597548464.061200",
        "user": "UCGAK10LS",
        "text": "<@UCGAK10LS> set the channel topic: For sharing and discussing external media (articles, podcasts, tweets, etc.)",
        "topic": "For sharing and discussing external media (articles, podcasts, tweets, etc.)"
    },
    {
        "client_msg_id": "4f61ee57-bd4b-42f9-8a84-886c0a5b2842",
        "type": "message",
        "text": "You can do whatever you want of course. As for me though, why I don't monkey patch\n\n1. don't find out later a function was added with the same name and now in order to use it I have to refactor all my code\n2. don't want to mis-lead others into thinking this is a standard function. This comes up a lot since I write tutorials and in particular one of the first/original tutorials on one of the topics I write about monkey patched things in and confused learners for many years. For at least 8 years people would ask on S.O. why their code wasn't working only to have to be told what they thought was part of the official API was monkey patched by their tutorial. Fortunately those tutorials are no longer online but the legacy lingers since the examples have been copied forever\n3. because while I might not care about other people's code or never worry my code might become a library I'll get use to this pattern and then find it frustrating when there's a case I can't use it. Prefer just not to go down this path in the fist place.\n4. and finally, because I don't get the benefit at all. Why is `someArray.render(msg)` better than `renderArray(someArray, msg)` so zero pluses (for me), multiple negatives = I choose not to do it.",
        "user": "UC6997THT",
        "ts": "1597551559.068900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4s=EQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can do whatever you want of course. As for me though, why I don't monkey patch\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "don't find out later a function was added with the same name and now in order to use it I have to refactor all my code"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "don't want to mis-lead others into thinking this is a standard function. This comes up a lot since I write tutorials and in particular one of the first/original tutorials on one of the topics I write about monkey patched things in and confused learners for many years. For at least 8 years people would ask on S.O. why their code wasn't working only to have to be told what they thought was part of the official API was monkey patched by their tutorial. Fortunately those tutorials are no longer online but the legacy lingers since the examples have been copied forever"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "because while I might not care about other people's code or never worry my code might become a library I'll get use to this pattern and then find it frustrating when there's a case I can't use it. Prefer just not to go down this path in the fist place."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "and finally, because I don't get the benefit at all. Why is "
                                    },
                                    {
                                        "type": "text",
                                        "text": "someArray.render(msg)",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " better than "
                                    },
                                    {
                                        "type": "text",
                                        "text": "renderArray(someArray, msg)",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " so zero pluses (for me), multiple negatives = I choose not to do it."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1597174636.494300",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "7821e285-73bd-4428-a8cd-f3cbe5bcc35a",
        "type": "message",
        "text": "In the last month I've been re-watching some of Rich Hickey's talks on the \"right way\" (my words) to design programming systems. I've seen many of them before, but I now have a personal knowledge base that is big enough for the insights of his talks to really *hit me*. I'm impressed with Rich's level of insight (even though it may be scoped to Clojure at times), and so I'd strongly recommend people to check out his most popular talks. There's an exhaustive list <https://github.com/tallesl/Rich-Hickey-fanclub|here>. Some of my favourites:\n\n\u2022 Simple Made Easy (for learning how to evaluate whether your language constructs are well-designed)\n\u2022 The Value of Values (building upon Simple Made Easy, it asks us to reconsider the information models we define for our programming systems)\n\u2022 Are We There Yet (building upon The Value of Values, it suggests how we could model *time* and *change* in a value-centric programming system)\n\u2022 Spec-ulation (asks us to reconsider semantic versioning and APIs)\n\u2022 Effective Programs \u2013 10 Years of Clojure (a big-picture talk that revises all of the prior talks, and makes some additional points)\nFor the record, *I've never used Clojure*. So don't be fooled into thinking that his talks are only relevant to people who are interested in Clojure.",
        "user": "UCGAK10LS",
        "ts": "1597552018.071600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1597584105.000000"
        },
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "tallesl/Rich-Hickey-fanclub",
                "title_link": "https://github.com/tallesl/Rich-Hickey-fanclub",
                "text": "\"every time I watch one of his talks I feel like someone has gone in and organized my brain\" - tallesl/Rich-Hickey-fanclub",
                "fallback": "GitHub: tallesl/Rich-Hickey-fanclub",
                "thumb_url": "https://avatars3.githubusercontent.com/u/3655047?s=400&v=4",
                "from_url": "https://github.com/tallesl/Rich-Hickey-fanclub",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/tallesl/Rich-Hickey-fanclub"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JD3N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the last month I've been re-watching some of Rich Hickey's talks on the \"right way\" (my words) to design programming systems. I've seen many of them before, but I now have a personal knowledge base that is big enough for the insights of his talks to really "
                            },
                            {
                                "type": "text",
                                "text": "hit me",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I'm impressed with Rich's level of insight (even though it may be scoped to Clojure at times), and so I'd strongly recommend people to check out his most popular talks. There's an exhaustive list "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/tallesl/Rich-Hickey-fanclub",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": ". Some of my favourites:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Simple Made Easy (for learning how to evaluate whether your language constructs are well-designed)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The Value of Values (building upon Simple Made Easy, it asks us to reconsider the information models we define for our programming systems)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Are We There Yet (building upon The Value of Values, it suggests how we could model "
                                    },
                                    {
                                        "type": "text",
                                        "text": "time",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and "
                                    },
                                    {
                                        "type": "text",
                                        "text": "change",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " in a value-centric programming system)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Spec-ulation (asks us to reconsider semantic versioning and APIs)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Effective Programs \u2013 10 Years of Clojure (a big-picture talk that revises all of the prior talks, and makes some additional points)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nFor the record, "
                            },
                            {
                                "type": "text",
                                "text": "I've never used Clojure",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". So don't be fooled into thinking that his talks are only relevant to people who are interested in Clojure."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597552018.071600",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1597576547.087200",
        "reply_users": [
            "U014WA16VNJ",
            "UCGAK10LS"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "star",
                "users": [
                    "USH01JEDQ",
                    "UHWC9PXBL",
                    "UJN1TAYEQ",
                    "UMWF81HTP"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UMWF81HTP"
                ],
                "count": 3
            },
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ",
                    "UMWF81HTP"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "bc24a2f9-e305-48d1-9ba7-70e8f0f1a70f",
        "type": "message",
        "text": "Actually, this was brought up before but there is a strong argument that education does not have to be fun.\n\n<https://www.youtube.com/watch?v=g1ib43q3uXQ#46m17s>",
        "user": "UC6997THT",
        "ts": "1597552498.071900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "\"How to teach programming (and other things)?\" by Felienne Hermans",
                "title_link": "https://www.youtube.com/watch?v=g1ib43q3uXQ#46m17s",
                "author_name": "Strange Loop",
                "author_link": "https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https://i.ytimg.com/vi/g1ib43q3uXQ/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"How to teach programming (and other things)?\" by Felienne Hermans",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/g1ib43q3uXQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=g1ib43q3uXQ#46m17s",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=g1ib43q3uXQ#46m17s"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ILrlf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Actually, this was brought up before but there is a strong argument that education does not have to be fun.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=g1ib43q3uXQ#46m17s"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597436373.033600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "type": "message",
        "text": "Stuff goes way back. Here's effectively a cell phone from 1931",
        "files": [
            {
                "id": "F018XESSY02",
                "created": 1597552690,
                "timestamp": 1597552690,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UC6997THT",
                "editable": false,
                "size": 122590,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F018XESSY02/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F018XESSY02/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F018XESSY02-8b3a57f25f/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F018XESSY02-8b3a57f25f/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F018XESSY02-8b3a57f25f/image_360.png",
                "thumb_360_w": 250,
                "thumb_360_h": 315,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F018XESSY02-8b3a57f25f/image_160.png",
                "original_w": 250,
                "original_h": 315,
                "thumb_tiny": "AwAwACa3naQAcCjJ3AEkd+lIriVAxO3pkYpxCoC0hGDzknFACbjz1BHY0gYnof8AP5UkckbOdo6d8EVLtUDqMUAIgV8hvm9iKf5Uf9xfypI9pGFzgU/HufzoArT/AC27MTk/1qGMPJFGZXwCcLxVrYrKBIBg/wAPaorpT9kJzwCCMUASBVXbgAEU1WD8jkHjnNR27mZDuJ684/KrXlgABeAD0oAcFCjAFLRRQBFtPy8nnHeo7j/j1lX0qbjaMHr1NQXXEDkY5XGKAIbHPz49RVvEv0/Gq+n4CsT61cyPUUARES9v1NJ++9B/31UxI9RSZHqKAP/Z",
                "permalink": "https://futureofcoding.slack.com/files/UC6997THT/F018XESSY02/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F018XESSY02-38771dcf9c",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4QhS5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Stuff goes way back. Here's effectively a cell phone from 1931"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UC6997THT",
        "display_as_bot": false,
        "ts": "1597552758.072200",
        "thread_ts": "1597469395.037100",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "3d1b1124-7160-439e-a613-3a24af35c0ea",
        "type": "message",
        "text": "And the smartphone from 1874\n\n<https://entertainment.theonion.com/long-lost-jules-verne-short-story-the-camera-phone-foun-1819567554>",
        "user": "UC6997THT",
        "ts": "1597552776.072600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Entertainment",
                "title": "Long-Lost Jules Verne Short Story 'The Camera-Phone' Found",
                "title_link": "https://entertainment.theonion.com/long-lost-jules-verne-short-story-the-camera-phone-foun-1819567554",
                "text": "AMIENS, FRANCE\u2014Literary scholars announced Monday that they have unearthed a 33-page handwritten manuscript of &amp;quot;The Camera-Phone,&amp;quot; a short story believed to have been written in 1874 by French novelist Jules Verne, the man often considered to be the originator of modern science fiction.",
                "fallback": "Entertainment: Long-Lost Jules Verne Short Story 'The Camera-Phone' Found",
                "image_url": "https://i.kinja-img.com/gawker-media/image/upload/c_fill,f_auto,fl_progressive,g_center,h_675,pg_1,q_80,w_1200/f764u476fehuq2eeiggu.jpg",
                "from_url": "https://entertainment.theonion.com/long-lost-jules-verne-short-story-the-camera-phone-foun-1819567554",
                "image_width": 444,
                "image_height": 250,
                "image_bytes": 69885,
                "service_icon": "https://i.kinja-img.com/gawker-media/image/upload/c_fill,f_auto,fl_progressive,g_center,h_200,q_80,w_200/hq7i5rzg5pgrdok8epz2.png",
                "id": 1,
                "original_url": "https://entertainment.theonion.com/long-lost-jules-verne-short-story-the-camera-phone-foun-1819567554"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Peq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And the smartphone from 1874\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://entertainment.theonion.com/long-lost-jules-verne-short-story-the-camera-phone-foun-1819567554"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597469395.037100",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4e498152-cd30-402e-8e77-4d0ba1e82a7b",
        "type": "message",
        "text": "There's also the first fax machine from 1843. I forgot what documentary I saw where they actually showed one working.\n\n<https://www.thoughtco.com/history-of-the-fax-machine-1991379>",
        "user": "UC6997THT",
        "ts": "1597552921.072900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "ThoughtCo",
                "title": "The Fax Machine is Much Older Than You Think",
                "title_link": "https://www.thoughtco.com/history-of-the-fax-machine-1991379",
                "text": "The development of the fax machine was made possible by Alexander Bain, who was granted a patent for his creation back in 1843.",
                "fallback": "ThoughtCo: The Fax Machine is Much Older Than You Think",
                "image_url": "https://www.thoughtco.com/thmb/dDkCPtPdB7wipBd8b7mNNY0X4_0=/2600x1975/filters:fill(auto,1)/GettyImages-182507244-5c92f83d46e0fb0001ac1360.jpg",
                "from_url": "https://www.thoughtco.com/history-of-the-fax-machine-1991379",
                "image_width": 329,
                "image_height": 250,
                "image_bytes": 206659,
                "service_icon": "https://www.thoughtco.com/static/3.34.0/icons/favicons/apple-touch-icon-57x57.png",
                "id": 1,
                "original_url": "https://www.thoughtco.com/history-of-the-fax-machine-1991379"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mzcK9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's also the first fax machine from 1843. I forgot what documentary I saw where they actually showed one working.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.thoughtco.com/history-of-the-fax-machine-1991379"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597469395.037100",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "e958dfb9-922e-4114-9ad6-968563c7a993",
        "type": "message",
        "text": "<@U017GNJM021> A Q&amp;A would be awesome!",
        "user": "UMWF81HTP",
        "ts": "1597556298.073600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "60FJi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U017GNJM021"
                            },
                            {
                                "type": "text",
                                "text": " A Q&A would be awesome!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596660965.463600",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "4E7874ED-4A38-461D-9569-67A531B7DF1B",
        "type": "message",
        "text": "(I think this warrants a separate thread \u2014 it's no longer about the twitter account in question)",
        "user": "UC2A2ARPT",
        "ts": "1597558082.075100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zv8p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I think this warrants a separate thread \u2014 it's no longer about the twitter account in question)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596660965.463600",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "3BBD5AC8-6845-4C3B-8F68-A20A4E906CA4",
        "type": "message",
        "text": "For point 4, you then need a way to get renderArray into every scope where you want to use it. If you're trying to minimize namespace pollution, that's extra friction \u2014 and it's arguable the friction, as minor as it is, is worse than the downsides of patching. (Not even touching the OO vs FP -ness of this suggestion, haha)",
        "user": "UC2A2ARPT",
        "ts": "1597559341.080200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fFT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For point 4, you then need a way to get renderArray into every scope where you want to use it. If you're trying to minimize namespace pollution, that's extra friction \u2014 and it's arguable the friction, as minor as it is, is worse than the downsides of patching. (Not even touching the OO vs FP -ness of this suggestion, haha)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597174636.494300",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "d7110d7f-0c07-4b42-87c2-9bbc66efec05",
        "type": "message",
        "text": "Reddit's web interface on mobile is so bad after the last redesign that I've started to think they're intentionally ruining it to get people to install the app. :confused:",
        "user": "U013ZLJARC7",
        "ts": "1597561781.080600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KQ6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reddit's web interface on mobile is so bad after the last redesign that I've started to think they're intentionally ruining it to get people to install the app. "
                            },
                            {
                                "type": "emoji",
                                "name": "confused"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597530032.058500",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "crying_cat_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "F6683AC2-4D76-475A-B03C-7546B51F5BAC",
        "type": "message",
        "text": "As someone who\u2019s watched 3/5 of the talks you mentioned, I really appreciate how you\u2019ve ordered them and tied them together.",
        "user": "U014WA16VNJ",
        "ts": "1597576340.085800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hro",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As someone who\u2019s watched 3/5 of the talks you mentioned, I really appreciate how you\u2019ve ordered them and tied them together."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597552018.071600",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "B43527B3-244A-46EE-9A09-D3F9E1EE1E82",
        "type": "message",
        "text": "Haha it\u2019s a rough ordering. It\u2019s not even chronological but I think it\u2019s a good order for watching :slightly_smiling_face:",
        "user": "UCGAK10LS",
        "ts": "1597576547.087200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s6T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haha it\u2019s a rough ordering. It\u2019s not even chronological but I think it\u2019s a good order for watching "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597552018.071600",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "D6C6A3E9-48B2-4F01-9457-ABBB59114734",
        "type": "message",
        "text": "i\u2019m looking at this as me being spoiled more than me being sensible\u2014i could reframe the original question as, \u201cif i design this system to work exclusively with my aesthetic sensibilities of what i\u2019d like js/html/css to work like, how expensive will it get and what currencies will i be paying with\u201d.\n\ni\u2019m not like super concerned with questions about relative merit\u2014for the renderArray example, i\u2019d like to not have to repeat type information, and ivan\u2019s point about namespaces also lines up with my preferences\u2014i don\u2019t want the cognitive load of remembering what i\u2019ve imported where (similarly, i don\u2019t want the cognitive load of remembering to assign new identifiers by calling a function and passing an array in every time i want to do something with it). i don\u2019t think i\u2019d recommend other people do this. \n\nit\u2019s more of an \u201ci\u2019m thinking about making my own bottle rockets in my backyard, launching them at my face, and using a trash can lid to block them like i\u2019m a dungeons and dragons character. what should i be worried about in terms of, eg, eye protection\u201d",
        "user": "UHWC9PXBL",
        "ts": "1597590604.096700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e9d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i\u2019m looking at this as me being spoiled more than me being sensible\u2014i could reframe the original question as, \u201cif i design this system to work exclusively with my aesthetic sensibilities of what i\u2019d like js/html/css to work like, how expensive will it get and what currencies will i be paying with\u201d.\n\ni\u2019m not like super concerned with questions about relative merit\u2014for the renderArray example, i\u2019d like to not have to repeat type information, and ivan\u2019s point about namespaces also lines up with my preferences\u2014i don\u2019t want the cognitive load of remembering what i\u2019ve imported where (similarly, i don\u2019t want the cognitive load of remembering to assign new identifiers by calling a function and passing an array in every time i want to do something with it). i don\u2019t think i\u2019d recommend other people do this. \n\nit\u2019s more of an \u201ci\u2019m thinking about making my own bottle rockets in my backyard, launching them at my face, and using a trash can lid to block them like i\u2019m a dungeons and dragons character. what should i be worried about in terms of, eg, eye protection\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597174636.494300",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "f8b4ff00-8bbf-4c30-9bd3-d5e5b6cb9c7a",
        "type": "message",
        "text": "Gregg's personal reason #3 carries a lot of resonance with me. I have that thought too.\n\nBut I inevitably end up standing on the other side of that line in the sand. I'm almost always in the \"designing languages / frameworks\" mentality, and I like to play with different kinds of syntax or call signatures or conventions just to learn more about the pain and pleasure of any given variation from the norm. It's nice to be able to do that a little bit while still benefitting from all the infrastructure of JS and in the context of an actual product/serious project, rather than (say) having to write my own language and then figure out how to have an ecosystem around it and then find some sort of toy example project to build in it.\n\nThis is the sort of \"play\" I was <https://futureofcoding.slack.com/archives/C5U3SEW6A/p1597465108036100?thread_ts=1597436373.033600&amp;cid=C5U3SEW6A|referring to> in that other thread.",
        "user": "UC2A2ARPT",
        "ts": "1597591659.097000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1597604041.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mm8C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Gregg's personal reason #3 carries a lot of resonance with me. I have that thought too.\n\nBut I inevitably end up standing on the other side of that line in the sand. I'm almost always in the \"designing languages / frameworks\" mentality, and I like to play with different kinds of syntax or call signatures or conventions just to learn more about the pain and pleasure of any given variation from the norm. It's nice to be able to do that a little bit while still benefitting from all the infrastructure of JS and in the context of an actual product/serious project, rather than (say) having to write my own language and then figure out how to have an ecosystem around it and then find some sort of toy example project to build in it.\n\nThis is the sort of \"play\" I was "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1597465108036100?thread_ts=1597436373.033600&cid=C5U3SEW6A",
                                "text": "referring to"
                            },
                            {
                                "type": "text",
                                "text": " in that other thread."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597174636.494300",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    }
]