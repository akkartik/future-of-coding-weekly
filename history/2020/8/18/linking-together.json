[
    {
        "client_msg_id": "1b0a2e56-0f6a-46a0-8158-572ea3243eb5",
        "type": "message",
        "text": "<https://twitter.com/rsnous/status/1295668623277604864>",
        "user": "UDQBTJ211",
        "ts": "1597749710.106000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/rsnous|@rsnous>: this is actually true though <https://twitter.com/aeliasen/status/1295269560292192266>",
                "ts": 1597746446,
                "author_name": "Omar Rizwan",
                "author_link": "https://twitter.com/rsnous/status/1295668623277604864",
                "author_icon": "https://pbs.twimg.com/profile_images/646523069343793152/qXmq04Eq_normal.png",
                "author_subname": "@rsnous",
                "text": "this is actually true though <https://twitter.com/aeliasen/status/1295269560292192266>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/rsnous/status/1295668623277604864",
                "id": 1,
                "original_url": "https://twitter.com/rsnous/status/1295668623277604864",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https://twitter.com/aeliasen|@aeliasen>: Me: (spends 30 minutes trying to design 3-D printer models in CAD programs)  This is too hard.\n\nMe: (reads many academic papers and file formats, spends 2 weeks implementing 3-D libraries in a programming language I wrote myself)  Dude, that was so much easier.",
                "ts": 1597651302,
                "author_name": "\u2200lan \u2203liasen",
                "author_link": "https://twitter.com/aeliasen/status/1295269560292192266",
                "author_icon": "https://pbs.twimg.com/profile_images/2826479052/acf5822dffef95686c41622ffd44ab2a_normal.png",
                "author_subname": "@aeliasen",
                "text": "Me: (spends 30 minutes trying to design 3-D printer models in CAD programs)  This is too hard.\n\nMe: (reads many academic papers and file formats, spends 2 weeks implementing 3-D libraries in a programming language I wrote myself)  Dude, that was so much easier.",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/aeliasen/status/1295269560292192266",
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yN6w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/rsnous/status/1295668623277604864"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597749710.106000",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1597863720.119100",
        "reply_users": [
            "UDQBTJ211",
            "UP28ETUSE",
            "U016VUZGUUQ",
            "UC6997THT"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7",
                    "UGYGY18UX",
                    "UU1DTLRGB"
                ],
                "count": 3
            },
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "U01661S9F34",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "1d132e88-271f-45f4-9f5c-7e633959fc25",
        "type": "message",
        "text": "I think I agree with this, personally. I am much happier working forwards from something I completely understand, than trying to make sense of something that already exists.\n\nThis is the same motivation that leads people to use Excel for everything, often from scratch every time.",
        "user": "UDQBTJ211",
        "ts": "1597749968.106200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aH3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think I agree with this, personally. I am much happier working forwards from something I completely understand, than trying to make sense of something that already exists.\n\nThis is the same motivation that leads people to use Excel for everything, often from scratch every time."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597749710.106000",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGYGY18UX",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "807a23cc-ecc4-461d-8b78-1b901bfb9229",
        "type": "message",
        "text": "Sometimes I think that this is the primary reason why software reuse hasn't succeeded as much as some people would have wanted to. Not because OOP is flawed or whatever, but because people... just wanna have fun :stuck_out_tongue:",
        "user": "UP28ETUSE",
        "ts": "1597759813.106500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9hf/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sometimes I think that this is the primary reason why software reuse hasn't succeeded as much as some people would have wanted to. Not because OOP is flawed or whatever, but because people... just wanna have fun "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597749710.106000",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f8e05eca-a10f-4987-9ecd-ebde757bcd73",
        "type": "message",
        "text": "The following talk was mentioned on twitter and I really liked it. \"Beautiful code: typography and visual programming\" first talks about how code is still presented like it's the 70s and then goes more into visual programming and what the future of coding might look like.\n<https://hilton.org.uk/presentations/beautiful-code>",
        "user": "UAL7940NM",
        "ts": "1597766532.108700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAL7940NM",
            "ts": "1597766656.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7dAK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The following talk was mentioned on twitter and I really liked it. \"Beautiful code: typography and visual programming\" first talks about how code is still presented like it's the 70s and then goes more into visual programming and what the future of coding might look like.\n"
                            },
                            {
                                "type": "link",
                                "url": "https://hilton.org.uk/presentations/beautiful-code"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597766532.108700",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1597827504.115300",
        "reply_users": [
            "UAL7940NM",
            "U0123H7JRDM"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UC2A2ARPT",
                    "U014WA16VNJ",
                    "ULK0Z4MPV"
                ],
                "count": 3
            },
            {
                "name": "sunglasses",
                "users": [
                    "U0123H7JRDM"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "384b23db-3448-498c-a556-e39953902731",
        "type": "message",
        "text": ":heavy_plus_sign: the talk references Bret Victor's \"Future of Programming\" :wink:",
        "user": "UAL7940NM",
        "ts": "1597766617.109100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CJt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "heavy_plus_sign"
                            },
                            {
                                "type": "text",
                                "text": " the talk references Bret Victor's \"Future of Programming\" "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597766532.108700",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "44fb078d-ee77-4ca1-8dfb-484c562af1a6",
        "type": "message",
        "text": "This exchange between Kara Swisher and Scott Galloway caught my attention as a good summary of something I've mulling over as well: That innovation in software is declining at a rate that frankly I find alarming. Here's Galloway's summary (<https://twitter.com/PivotSchooled/status/1293664207783759874>):\n\n&gt; Unfortunately innovation has become more about your access to capital such that you can go buy the future versus the grit and creativity of bootstrapping something really exceptional.\nTo support this statement from my own observations, I recently wrote about how OS X was an incredible hotbed of innovation in the early 2000s (<https://blog.robenkleene.com/2020/06/26/remembering-the-oreilly-mac-os-x-innovators-contest/>). There are a few examples there, another one that I didn't highlight but should have is VoodooPad (<https://www.voodoopad.com/>) which was the first implementation (that I'm aware of) of using a wiki for personal information management. A concept that is finally seemingly reaching a wider audience these days with Roam Research. Contrast these products, which introduced innovative concepts, and were (as far as I know) entirely bootstrapped, and generally were released, and became profitable after 1-2 years of development. Versus what I would consider an innovative product today: Something like Figma and Notion, which were founded in 2012 and 2013 respectively, each spent ~5 years before really having their breakout moments, and have raised over $200m combined.\n\nSo is innovation primarily being primarily driven by access to capital today? If so, what's changed since the 2000s? And if not, what are some examples of success stories today where smaller, bootstrapped companies are releasing innovative products?",
        "user": "UE0ETTCG7",
        "ts": "1597767731.111000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1597768759.000000"
        },
        "attachments": [
            {
                "fallback": "<https://twitter.com/PivotSchooled|@PivotSchooled>: Is American innovation dead? <https://twitter.com/karaswisher|@karaswisher>\u00a0and <https://twitter.com/profgalloway|@profgalloway> discuss\u00a0the future of the tech industry at #PivotSchooled. <http://voxmediaevents.com/schooled/pivotsocial> <https://pbs.twimg.com/ext_tw_video_thumb/1293663991819046913/pu/img/XEtjdBxB7dgyDAzj.jpg>",
                "ts": 1597268556,
                "author_name": "Pivot Podcast",
                "author_link": "https://twitter.com/PivotSchooled/status/1293664207783759874",
                "author_icon": "https://pbs.twimg.com/profile_images/1260199599861567489/s07R97dQ_normal.jpg",
                "author_subname": "@PivotSchooled",
                "text": "Is American innovation dead? <https://twitter.com/karaswisher|@karaswisher>\u00a0and <https://twitter.com/profgalloway|@profgalloway> discuss\u00a0the future of the tech industry at #PivotSchooled. <http://voxmediaevents.com/schooled/pivotsocial>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/PivotSchooled/status/1293664207783759874",
                "thumb_url": "https://pbs.twimg.com/ext_tw_video_thumb/1293663991819046913/pu/img/XEtjdBxB7dgyDAzj.jpg",
                "thumb_width": 1200,
                "thumb_height": 675,
                "video_html_width": 1200,
                "video_html_height": 675,
                "video_html": "<video controls poster=\"https://pbs.twimg.com/ext_tw_video_thumb/1293663991819046913/pu/img/XEtjdBxB7dgyDAzj.jpg\" width=\"1200\" height=\"675\"><source type=\"video/mp4\" src=\"https://video.twimg.com/ext_tw_video/1293663991819046913/pu/vid/1280x720/I66AzbyKYg6KtUiZ.mp4?tag=10\"></video>",
                "id": 1,
                "original_url": "https://twitter.com/PivotSchooled/status/1293664207783759874",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "service_name": "Roben Kleene",
                "title": "Remembering the O\u2019Reilly Mac OS X Innovators Contest",
                "title_link": "https://blog.robenkleene.com/2020/06/26/remembering-the-oreilly-mac-os-x-innovators-contest/",
                "text": "From 2003 to 2004, O\u2019Reilly Media ran the O\u2019Reilly Mac OS X Innovators Contest, sponsored by Apple via the Apple Developer Connection (now just Apple Developer). I still think of these winners as some of the high watermarks of app innovation. Many concepts we take for granted today were either introduced, or popularized, by apps on this list. Here are a few of my favorite examples:",
                "fallback": "Roben Kleene: Remembering the O\u2019Reilly Mac OS X Innovators Contest",
                "ts": 1593129600,
                "from_url": "https://blog.robenkleene.com/2020/06/26/remembering-the-oreilly-mac-os-x-innovators-contest/",
                "service_icon": "https://blog.robenkleene.com/assets/favicon/57x57.png",
                "id": 2,
                "original_url": "https://blog.robenkleene.com/2020/06/26/remembering-the-oreilly-mac-os-x-innovators-contest/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F1O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This exchange between Kara Swisher and Scott Galloway caught my attention as a good summary of something I've mulling over as well: That innovation in software is declining at a rate that frankly I find alarming. Here's Galloway's summary ("
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/PivotSchooled/status/1293664207783759874"
                            },
                            {
                                "type": "text",
                                "text": "):\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unfortunately innovation has become more about your access to capital such that you can go buy the future versus the grit and creativity of bootstrapping something really exceptional."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To support this statement from my own observations, I recently wrote about how OS X was an incredible hotbed of innovation in the early 2000s ("
                            },
                            {
                                "type": "link",
                                "url": "https://blog.robenkleene.com/2020/06/26/remembering-the-oreilly-mac-os-x-innovators-contest/"
                            },
                            {
                                "type": "text",
                                "text": "). There are a few examples there, another one that I didn't highlight but should have is VoodooPad ("
                            },
                            {
                                "type": "link",
                                "url": "https://www.voodoopad.com/"
                            },
                            {
                                "type": "text",
                                "text": ") which was the first implementation (that I'm aware of) of using a wiki for personal information management. A concept that is finally seemingly reaching a wider audience these days with Roam Research. Contrast these products, which introduced innovative concepts, and were (as far as I know) entirely bootstrapped, and generally were released, and became profitable after 1-2 years of development. Versus what I would consider an innovative product today: Something like Figma and Notion, which were founded in 2012 and 2013 respectively, each spent ~5 years before really having their breakout moments, and have raised over $200m combined.\n\nSo is innovation primarily being primarily driven by access to capital today? If so, what's changed since the 2000s? And if not, what are some examples of success stories today where smaller, bootstrapped companies are releasing innovative products?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597767731.111000",
        "reply_count": 9,
        "reply_users_count": 4,
        "latest_reply": "1597999804.014700",
        "reply_users": [
            "U013ZLJARC7",
            "UE0ETTCG7",
            "UMWF81HTP",
            "UJBAJNFLK"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "67fb6116-624e-4395-9827-cafa7db9df94",
        "type": "message",
        "text": "Regarding pre-VoodooPad personal Wikis, a quick nod toward 2002's Tinderbox: <https://en.wikipedia.org/wiki/Tinderbox_(application_software)>\n... which was part of a wave of notetaking apps and personal knowledge bases in the early 00s. Those interested in this sort of thing should take note of the graph view, the bidirectional links, the expandability, and so on, as covered here:\n<http://www.atpm.com/10.10/atpo.shtml>",
        "user": "U013ZLJARC7",
        "ts": "1597780860.111700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EYHB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding pre-VoodooPad personal Wikis, a quick nod toward 2002's Tinderbox: "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Tinderbox_(application_software)"
                            },
                            {
                                "type": "text",
                                "text": "\n... which was part of a wave of notetaking apps and personal knowledge bases in the early 00s. Those interested in this sort of thing should take note of the graph view, the bidirectional links, the expandability, and so on, as covered here:\n"
                            },
                            {
                                "type": "link",
                                "url": "http://www.atpm.com/10.10/atpo.shtml"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597767731.111000",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "39f39c36-6c82-48d4-8f2d-6aa42811e722",
        "type": "message",
        "text": "holy crap! thats amazing",
        "user": "UAJKEBGP8",
        "ts": "1597781203.111900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kTWi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "holy crap! thats amazing"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597508872.054500",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "50eb09a6-2811-435a-9815-69206e5a40cf",
        "type": "message",
        "text": "apparently Playmaker was also used as part of makinng INSIDE",
        "user": "UAJKEBGP8",
        "ts": "1597781214.112100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jy4T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "apparently Playmaker was also used as part of makinng INSIDE"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597508872.054500",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "778bb363-9355-40f1-911c-30aa23962ea7",
        "type": "message",
        "text": "which is one of my fav games",
        "user": "UAJKEBGP8",
        "ts": "1597781217.112300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qFH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "which is one of my fav games"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597508872.054500",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7d0a9cd8-1e3e-47f8-94b8-75f428e64ae3",
        "type": "message",
        "text": "Easier, but not necessarily optimal. The distinction seems related to the one between ease and simplicity. There's a sense in which learning a CAD program is simpler than building one yourself, but whether it's easier depends on your starting point. Path dependence just ruins everything. :D",
        "user": "U016VUZGUUQ",
        "ts": "1597782532.112500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=HCE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Easier, but not necessarily optimal. The distinction seems related to the one between ease and simplicity. There's a sense in which learning a CAD program is simpler than building one yourself, but whether it's easier depends on your starting point. Path dependence just ruins everything. :D"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597749710.106000",
        "parent_user_id": "UDQBTJ211"
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "Ooh, check out <https://comby.dev/docs/overview>",
        "user": "UCUSW7WVD",
        "ts": "1597783509.112700",
        "thread_ts": "1595604347.298300",
        "root": {
            "client_msg_id": "e99420ba-11bd-426c-a190-a94d6c99d0ab",
            "type": "message",
            "text": "Is there a parsing technique where you either make explicit which parts of the input are ignored and what the escape patterns are? Or parsing techniques where you selectively pick only parts of the input to begin with? (I realize that sounds like regular expressions as parsers, which I know is usually not a good idea \u2014 any other techniques beyond regex?)\n\nExample: many programming languages skip comments in the lexer. Or think of string literals, where it pretty much doesn't matter what's inside the string, as long as you play by the escaping rules. If you take the strings example further, these strings often get parsed by a different parser at a different time, for instance when the string is a number or a date, or perhaps a regex.\n\nIs there anything that makes these different \"stages\" of parsing explicit? (I'm obviously looking for a concept I don't know a name for\u2026)",
            "user": "U5STGTB3J",
            "ts": "1595604347.298300",
            "team": "T5TCAFTA9",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "dOvU",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Is there a parsing technique where you either make explicit which parts of the input are ignored and what the escape patterns are? Or parsing techniques where you selectively pick only parts of the input to begin with? (I realize that sounds like regular expressions as parsers, which I know is usually not a good idea \u2014 any other techniques beyond regex?)\n\nExample: many programming languages skip comments in the lexer. Or think of string literals, where it pretty much doesn't matter what's inside the string, as long as you play by the escaping rules. If you take the strings example further, these strings often get parsed by a different parser at a different time, for instance when the string is a number or a date, or perhaps a regex.\n\nIs there anything that makes these different \"stages\" of parsing explicit? (I'm obviously looking for a concept I don't know a name for\u2026)"
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1595604347.298300",
            "reply_count": 36,
            "reply_users_count": 8,
            "latest_reply": "1597783509.112700",
            "reply_users": [
                "U5STGTB3J",
                "UT60XSVCN",
                "UCUSW7WVD",
                "UUB7RA7PF",
                "UP28ETUSE",
                "UK3LH8CF5",
                "U01661S9F34",
                "UA14TGLTC"
            ],
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t4k+8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ooh, check out "
                            },
                            {
                                "type": "link",
                                "url": "https://comby.dev/docs/overview"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "5637f362-a37f-4f1e-84d1-deb16b179047",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1597784007.000000"
        }
    }
]