[
    {
        "client_msg_id": "3bad5ede-e78b-45f5-870c-a32ba3ef66be",
        "type": "message",
        "text": "<@U018LAH5QCT> The thing you're feeling here is why I've been using emacs for 35 years. While it's easy for me to imagine a new (especially more graphically capable) environment built around some language I like more than elisp, such a thing would absolutely need to be \"emacsy\" in this sense.",
        "user": "U013ZLJARC7",
        "ts": "1598780069.000300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P6As",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U018LAH5QCT"
                            },
                            {
                                "type": "text",
                                "text": " The thing you're feeling here is why I've been using emacs for 35 years. While it's easy for me to imagine a new (especially more graphically capable) environment built around some language I like more than elisp, such a thing would absolutely need to be \"emacsy\" in this sense."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598649949.189300",
        "parent_user_id": "US370TRJA"
    },
    {
        "type": "message",
        "text": "<@UMWF81HTP> By \"magic numbers\" I mean this critic by Bret Victor. But I like more just being explicit in the language/API and have labels on arguments, like: `ellipse(xPosition: 161, yPosition: 219, width: 114)`",
        "files": [
            {
                "id": "F01AFRJ6XLG",
                "created": 1598807822,
                "timestamp": 1598807822,
                "name": "Screen Shot 2020-08-30 at 12.16.07 PM.png",
                "title": "Screen Shot 2020-08-30 at 12.16.07 PM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U85HCL7JP",
                "editable": false,
                "size": 166378,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01AFRJ6XLG/screen_shot_2020-08-30_at_12.16.07_pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01AFRJ6XLG/download/screen_shot_2020-08-30_at_12.16.07_pm.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 72,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 96,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 145,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 161,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 193,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F01AFRJ6XLG-ae8540b141/screen_shot_2020-08-30_at_12.16.07_pm_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 206,
                "original_w": 1314,
                "original_h": 264,
                "thumb_tiny": "AwAJADCwXbceT19aA7dyfzqU9TRQBHvP94/nRvP94/nUlFAERd8jB4+tIrvu5JxU1A60Af/Z",
                "permalink": "https://futureofcoding.slack.com/files/U85HCL7JP/F01AFRJ6XLG/screen_shot_2020-08-30_at_12.16.07_pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01AFRJ6XLG-c56856b05d",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ph=3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": " By \"magic numbers\" I mean this critic by Bret Victor. But I like more just being explicit in the language/API and have labels on arguments, like: "
                            },
                            {
                                "type": "text",
                                "text": "ellipse(xPosition: 161, yPosition: 219, width: 114)",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U85HCL7JP",
        "display_as_bot": false,
        "ts": "1598807950.001100",
        "thread_ts": "1598051713.009800",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "513070B4-4067-49F2-932E-B171DCEB05DC",
        "type": "message",
        "text": "I think <@U013ZLJARC7> you hinted at the problem that it\u2019s difficult to talk about the problem. I would agree in general with this but of course I\u2019m still thinking about ways how to change the status quo. This documentary is a possibility in education about how the current system works. One of the more promising actual practices that I have found goes by the name of P2P learning. Has anyone heard of that or is interested in it?",
        "user": "UJFN50C00",
        "ts": "1598809047.006100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c+VNk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " you hinted at the problem that it\u2019s difficult to talk about the problem. I would agree in general with this but of course I\u2019m still thinking about ways how to change the status quo. This documentary is a possibility in education about how the current system works. One of the more promising actual practices that I have found goes by the name of P2P learning. Has anyone heard of that or is interested in it?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595686084.036400",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "f84bff47-bb2c-4f01-9ea9-9f9ce185be4e",
        "type": "message",
        "text": "<@U016LEA3J1H> I agree. State is essential to many problems, and the central concern of many users, yet is the source of much difficulty in programming. So we have tried valiantly to make it go away, or make it someone else's problem (the database). Some people peddle cures for state like snake oil, so don't believe everything you hear. State is still an unsolved problem.",
        "user": "U6KQ2S410",
        "ts": "1598809537.006700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2uVQI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016LEA3J1H"
                            },
                            {
                                "type": "text",
                                "text": " I agree. State is essential to many problems, and the central concern of many users, yet is the source of much difficulty in programming. So we have tried valiantly to make it go away, or make it someone else's problem (the database). Some people peddle cures for state like snake oil, so don't believe everything you hear. State is still an unsolved problem."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598534303.161500",
        "parent_user_id": "U016LEA3J1H",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "cb5777da-5d84-452f-a012-325cf91fee96",
        "type": "message",
        "text": "In the thing I am making, you can't have a variable without choosing a specific example value for that variable. This is surely something that's been discussed here before since Bret does it in Inventing On Principle. What do folks think of it?",
        "user": "U017GNJM021",
        "ts": "1598810841.008500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F85",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the thing I am making, you can't have a variable without choosing a specific example value for that variable. This is surely something that's been discussed here before since Bret does it in Inventing On Principle. What do folks think of it?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598810841.008500",
        "reply_count": 7,
        "reply_users_count": 5,
        "latest_reply": "1598857632.029800",
        "reply_users": [
            "U017GNJM021",
            "UBN9AFS0N",
            "UFPRPSA4S",
            "UA14TGLTC",
            "UE1JQM9HQ"
        ],
        "subscribed": true,
        "last_read": "1598857632.029800",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "add3f361-92c9-43af-94df-742b6cbd478c",
        "type": "message",
        "text": "With the way things are going I *could* embrace a more abstract way of doing things and be like \"yeah don't worry, you can program without example values\". I am pretty sure this is the right way to go though. My favourite mathematician/mathematics teacher, Tadashi Tokieda, says you should have lots and lots of examples",
        "user": "U017GNJM021",
        "ts": "1598810934.008600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gaf7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "With the way things are going I "
                            },
                            {
                                "type": "text",
                                "text": "could",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " embrace a more abstract way of doing things and be like \"yeah don't worry, you can program without example values\". I am pretty sure this is the right way to go though. My favourite mathematician/mathematics teacher, Tadashi Tokieda, says you should have lots and lots of examples"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598810841.008500",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "c447cd01-5c43-4e5c-8488-7c5c70306f09",
        "type": "message",
        "text": "It's not necessarily Bret-Victor-ian to have things be this way either, in theory every time you use a debugger you are \"programming by example\"",
        "user": "U017GNJM021",
        "ts": "1598810982.008800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mkv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's not necessarily Bret-Victor-ian to have things be this way either, in theory every time you use a debugger you are \"programming by example\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598810841.008500",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "4fe464e3-3b58-4239-8ba3-e2543868283e",
        "type": "message",
        "text": "But I can certainly conceive of an experienced programmer/mathematician saying \"no, the \"abstract view\"/\"general case\", wherein a variable can take on many values, is fundamental and should be tackled first because [something]",
        "user": "U017GNJM021",
        "ts": "1598811059.009100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qaEyC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But I can certainly conceive of an experienced programmer/mathematician saying \"no, the \"abstract view\"/\"general case\", wherein a variable can take on many values, is fundamental and should be tackled first because [something]"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598810841.008500",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "4e011859-db09-47ea-9d49-c0ecf2551d66",
        "type": "message",
        "text": "I'd say that anyone creating an end user system should start with state and build around it.",
        "user": "UE6EFEPTQ",
        "ts": "1598812365.009300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pzrSO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd say that anyone creating an end user system should start with state and build around it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598534303.161500",
        "parent_user_id": "U016LEA3J1H",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "c091592c-a347-429d-9eb3-860597218256",
        "type": "message",
        "text": "I came here to say programming by example, but I see you already mentioned it :slightly_smiling_face: as long as it works for your tool, I find it really nice, you can't build invalid things since you are always referencing a valid example",
        "user": "UBN9AFS0N",
        "ts": "1598813261.009500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1598813279.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aToZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I came here to say programming by example, but I see you already mentioned it "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " as long as it works for your tool, I find it really nice, you can't build invalid things since you are always referencing a valid example"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598810841.008500",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "be0a2012-349a-40a9-8b70-5170b2d7f0fc",
        "type": "message",
        "text": "I have been using use one of the Carpalx layouts for 10 years. <http://mkweb.bcgsc.ca/carpalx/|http://mkweb.bcgsc.ca/carpalx/>",
        "user": "UP3FH4CLU",
        "ts": "1598817530.010200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IBf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have been using use one of the Carpalx layouts for 10 years. "
                            },
                            {
                                "type": "link",
                                "url": "http://mkweb.bcgsc.ca/carpalx/",
                                "text": "http://mkweb.bcgsc.ca/carpalx/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598432237.114700",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "65a037cf-434f-4629-9466-80e97263df24",
        "type": "message",
        "text": "I'm skeptical that logic is needed to understand natural language. For example, I don't believe Transformer translation systems explicitly model logic <http://jalammar.github.io/illustrated-transformer/|http://jalammar.github.io/illustrated-transformer/>",
        "user": "UP3FH4CLU",
        "ts": "1598818029.010400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "The Illustrated Transformer",
                "title_link": "http://jalammar.github.io/illustrated-transformer/",
                "text": "Discussions: Hacker News (65 points, 4 comments), Reddit r/MachineLearning (29 points, 3 comments) Translations: Chinese (Simplified), Japanese, Korean, Russian Watch: MIT\u2019s Deep Learning State of the Art lecture referencing this post In the previous post, we looked at Attention \u2013 a ubiquitous method in modern deep learning models. Attention is a concept that helped improve the performance of neural machine translation applications. In this post, we will look at The Transformer \u2013 a model that uses attention to boost the speed with which these models can be trained. The Transformers outperforms the Google Neural Machine Translation model in specific tasks. The biggest benefit, however, comes from how The Transformer lends itself to parallelization. It is in fact Google Cloud\u2019s recommendation to use The Transformer as a reference model to use their Cloud TPU offering. So let\u2019s try to break the model apart and look at how it functions. The Transformer was proposed in the paper Attention is All You Need. A TensorFlow implementation of it is available as a part of the Tensor2Tensor package. Harvard\u2019s NLP group created a guide annotating the paper with PyTorch implementation. In this post, we will attempt to oversimplify things a bit and introduce the concepts one by one to hopefully make it easier to understand to people without in-depth knowledge of the subject matter. A High-Level Look Let\u2019s begin by looking at the model as a single black box. In a machine translation application, it would take a sentence in one language, and output its translation in another.",
                "fallback": "The Illustrated Transformer",
                "from_url": "http://jalammar.github.io/illustrated-transformer/",
                "service_name": "jalammar.github.io",
                "id": 1,
                "original_url": "http://jalammar.github.io/illustrated-transformer/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7bWo4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm skeptical that logic is needed to understand natural language. For example, I don't believe Transformer translation systems explicitly model logic "
                            },
                            {
                                "type": "link",
                                "url": "http://jalammar.github.io/illustrated-transformer/",
                                "text": "http://jalammar.github.io/illustrated-transformer/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1598499469.142200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "type": "message",
        "text": "Has it helped with RSI?",
        "user": "UL5AX4G2H",
        "ts": "1598819446.010700",
        "team": "T5TCAFTA9",
        "thread_ts": "1598432237.114700",
        "parent_user_id": "UL5AX4G2H"
    }
]