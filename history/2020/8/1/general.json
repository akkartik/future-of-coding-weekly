[
    {
        "client_msg_id": "780fdccd-f46d-44c5-9c6b-aa18a76890cb",
        "type": "message",
        "text": "Unrelated to FoC, but I was lucky to do this course while it was free and learned a lot: <https://learn.particular.net/courses/adsd-online>",
        "user": "U014FD1P1LZ",
        "ts": "1596248264.497900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014FD1P1LZ",
            "ts": "1596248355.000000"
        },
        "attachments": [
            {
                "service_name": "Online education by Particular Software",
                "title": "Advanced Distributed System Design (Online)",
                "title_link": "https://learn.particular.net/courses/adsd-online",
                "fallback": "Online education by Particular Software: Advanced Distributed System Design (Online)",
                "image_url": "https://s3.amazonaws.com/thinkific/courses/course_card_image_000/182/9591505722899.original.JPG?1505722899",
                "from_url": "https://learn.particular.net/courses/adsd-online",
                "image_width": 445,
                "image_height": 250,
                "image_bytes": 23847,
                "service_icon": "https://learn.particular.net/assets/tenant/defaults/apple-touch-icon.png",
                "id": 1,
                "original_url": "https://learn.particular.net/courses/adsd-online"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I6Gf+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unrelated to FoC, but I was lucky to do this course while it was free and learned a lot: "
                            },
                            {
                                "type": "link",
                                "url": "https://learn.particular.net/courses/adsd-online"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595931112.162500",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "808d3596-52aa-42f3-8ea2-0e7e4223d110",
        "type": "message",
        "text": "Also <@UC1TYP06P>'s online course. And Hillel Wayne's blog (both were on the podcast)",
        "user": "U014FD1P1LZ",
        "ts": "1596248701.498400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dpFx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also "
                            },
                            {
                                "type": "user",
                                "user_id": "UC1TYP06P"
                            },
                            {
                                "type": "text",
                                "text": "'s online course. And Hillel Wayne's blog (both were on the podcast)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595931112.162500",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7ee34d9a-4750-4a94-bd28-1eafc5d03c0d",
        "type": "message",
        "text": "<@UC2A2ARPT> Tools for thought is such a profound idea I just gotta give a shoutout to the term _mediums of/for thought._\n\nAlan Kay argued that \u201cthe term \u2018tool\u2019 implies a certain narrowness. A more powerful aim is to develop a new\u00a0_medium for thought_.\u201d and I believe Bret Victor seems to also use _medium_ as the more _denotational_ term. Another used by Alan, Bret, and others is _new representations._\n\nI feel like \u2018representations\u2019 are the concrete language of the medium, \u2018tools\u2019 are like _applied representations (i.e. Illustrator is kinda like an applied but restricted tool for bezier curves and vector geometry with extra bits)._ The idea of a medium being computational and dynamic seems to demand a higher bar when evaluating future projects.\nI think you can argue that Illustrator is a tool for thought more easily than a medium for thought, as the medium would map to the domain-space of vector geometry itself.\nNot suggesting a name change, just a thought worth mentioning.",
        "user": "U014WA16VNJ",
        "ts": "1596254330.498800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1596256166.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Lms",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " Tools for thought is such a profound idea I just gotta give a shoutout to the term "
                            },
                            {
                                "type": "text",
                                "text": "mediums of/for thought.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nAlan Kay argued that \u201cthe term \u2018tool\u2019 implies a certain narrowness. A more powerful aim is to develop a new\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "medium for thought",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\u201d and I believe Bret Victor seems to also use "
                            },
                            {
                                "type": "text",
                                "text": "medium",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as the more "
                            },
                            {
                                "type": "text",
                                "text": "denotational ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "term. Another used by Alan, Bret, and others is "
                            },
                            {
                                "type": "text",
                                "text": "new representations.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nI feel like \u2018representations\u2019 are the concrete language of the medium, \u2018tools\u2019 are like "
                            },
                            {
                                "type": "text",
                                "text": "applied representations (i.e. Illustrator is kinda like an applied but restricted tool for bezier curves and vector geometry with extra bits). ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "The idea of a medium being computational and dynamic seems to demand a higher bar when evaluating future projects.\nI think you can argue that Illustrator is a tool for thought more easily than a medium for thought, as the medium would map to the domain-space of vector geometry itself.\nNot suggesting a name change, just a thought worth mentioning."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596203878.473100",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "U013ZLJARC7",
                    "UKP3B2J5D",
                    "U5STGTB3J",
                    "UHWC9PXBL",
                    "UCUSW7WVD",
                    "UJBAJNFLK"
                ],
                "count": 7
            }
        ]
    },
    {
        "client_msg_id": "060c86bc-bcde-4f6d-a61f-57cbc3170527",
        "type": "message",
        "text": "<@U014WA16VNJ> That's a very enticing framing. I'll fold that in to my proposal.",
        "user": "UC2A2ARPT",
        "ts": "1596257585.499900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "45n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " That's a very enticing framing. I'll fold that in to my proposal."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596203878.473100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "ebd9c21a-77d1-4ff1-b66a-4d4d7ad5b6d0",
        "type": "message",
        "text": "It gave me stuff to think about at least!",
        "user": "UCGAK10LS",
        "ts": "1596261816.000300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vU9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It gave me stuff to think about at least!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "20a6f50e-2d3e-404c-9775-352e97ad33e3",
        "type": "message",
        "text": "<@U5STGTB3J> The \"essential\" definition of self-describing data is (to my understanding) the one I gave earlier in the thread. The data must (at the UI level, not the DRAM level) contain references to well-known attributes that have an agreed meaning within a certain community/context. I haven't been able to think of any alternative definition.",
        "user": "UCGAK10LS",
        "ts": "1596262643.000500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GAY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " The \"essential\" definition of self-describing data is (to my understanding) the one I gave earlier in the thread. The data must (at the UI level, not the DRAM level) contain references to well-known attributes that have an agreed meaning within a certain community/context. I haven't been able to think of any alternative definition."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "1d74c379-dec0-4fd0-8676-2d3764061b31",
        "type": "message",
        "text": "This requires that attributes have IDs (potentially UUIDs) that can be looked up in some kind of registry.",
        "user": "UCGAK10LS",
        "ts": "1596262692.000700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kq2kz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This requires that attributes have IDs (potentially UUIDs) that can be looked up in some kind of registry."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "85bf3b2d-728a-455f-ad79-131d5b0e1b3f",
        "type": "message",
        "text": "<@UJN1TAYEQ> I agree with the premise that a data set may be perceived differently at different places/times within an application/system. Though that doesn't obsolesce this discussion: we can refine it to be about self-describing *views* (derived/reactive data sets). Though such a perspective won't necessarily aid us here. The problem I'm trying to solve is: when you give a data set to someone (a human or a device), how are they supposed to figure out its meaning? Or rather, what is the best way to do so? Send them an email explaining the meaning? Or something more formal and machine-friendly.",
        "user": "UCGAK10LS",
        "ts": "1596263913.000900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YiOKg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " I agree with the premise that a data set may be perceived differently at different places/times within an application/system. Though that doesn't obsolesce this discussion: we can refine it to be about self-describing "
                            },
                            {
                                "type": "text",
                                "text": "views",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (derived/reactive data sets). Though such a perspective won't necessarily aid us here. The problem I'm trying to solve is: when you give a data set to someone (a human or a device), how are they supposed to figure out its meaning? Or rather, what is the best way to do so? Send them an email explaining the meaning? Or something more formal and machine-friendly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "3b4426e6-3964-44ec-8ab2-ffa56d3e911c",
        "type": "message",
        "text": "The moment a company releases a *wireless* AR/VR device that doesn't give you eyestrain when you're trying to look at small glyphs at close distances, I'll definitely be using it. We need *varifocal* devices with a pixel density equivalent to *at least* that of a 1080p monitor at typical viewing distances.\n\nBut my ideal device is a pair of AR glasses complemented by an input device that allows me to work from anywhere (standing, sitting, indoors, outdoors...). I'd love to not be desk-bound whilst I work.",
        "user": "UCGAK10LS",
        "ts": "1596264285.001200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HnU+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The moment a company releases a "
                            },
                            {
                                "type": "text",
                                "text": "wireless",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " AR/VR device that doesn't give you eyestrain when you're trying to look at small glyphs at close distances, I'll definitely be using it. We need "
                            },
                            {
                                "type": "text",
                                "text": "varifocal",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " devices with a pixel density equivalent to "
                            },
                            {
                                "type": "text",
                                "text": "at least",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that of a 1080p monitor at typical viewing distances.\n\nBut my ideal device is a pair of AR glasses complemented by an input device that allows me to work from anywhere (standing, sitting, indoors, outdoors...). I'd love to not be desk-bound whilst I work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596124901.389500",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "022fc55e-ba1e-4502-aa0c-9c9649ac67cb",
        "type": "message",
        "text": "Until then, I've stopped caring about the AR/VR space. The hardware just isn't good enough.",
        "user": "UCGAK10LS",
        "ts": "1596264327.001400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LTU9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Until then, I've stopped caring about the AR/VR space. The hardware just isn't good enough."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596124901.389500",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "c5095f37-27a2-41f2-97ec-61c8f9dab163",
        "type": "message",
        "text": "On a tangent to the previous thread, I'm concerned that there is a semantic change happening for the phrase \"tool for thought.\"\n\n\"Tool for thought\" and \"augmentation of human intelligence\" has a rather vase meaning, obviously. Programming environments <https://gtoolkit.com/|can> be tools for thought, so <https://en.wikipedia.org/wiki/Sketchpad|can> design tools, writing tools and more [0]. But I worry that most people who are starting to get introduced to the term, only see a narrow manifestation of it in the form of Personal Knowledge Management systems. This could _further obfuscate_ the wonderful but nebulous \"tool for thought\" idea, and make it even less accessible than it already is.\n\nThis feels similar to the semantic change of the term \"Object Oriented Programming\" that was initially about _<http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html|message passing>_, but since most people's introduction to it was through C++/Java, it lost its original meaning and became about objects, making the original idea behind OOP even more obscure.",
        "user": "UAHHWT22U",
        "ts": "1596270826.013700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAHHWT22U",
            "ts": "1596270838.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kBr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On a tangent to the previous thread, I'm concerned that there is a semantic change happening for the phrase \"tool for thought.\"\n\n\"Tool for thought\" and \"augmentation of human intelligence\" has a rather vase meaning, obviously. Programming environments "
                            },
                            {
                                "type": "link",
                                "url": "https://gtoolkit.com/",
                                "text": "can"
                            },
                            {
                                "type": "text",
                                "text": " be tools for thought, so "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Sketchpad",
                                "text": "can"
                            },
                            {
                                "type": "text",
                                "text": " design tools, writing tools and more [0]. But I worry that most people who are starting to get introduced to the term, only see a narrow manifestation of it in the form of Personal Knowledge Management systems. This could "
                            },
                            {
                                "type": "text",
                                "text": "further obfuscate",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the wonderful but nebulous \"tool for thought\" idea, and make it even less accessible than it already is.\n\nThis feels similar to the semantic change of the term \"Object Oriented Programming\" that was initially about "
                            },
                            {
                                "type": "link",
                                "url": "http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html",
                                "text": "message passing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but since most people's introduction to it was through C++/Java, it lost its original meaning and became about objects, making the original idea behind OOP even more obscure."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596270826.013700",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1596410264.082000",
        "reply_users": [
            "UCGAK10LS",
            "U014WA16VNJ",
            "UCUSW7WVD"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "U014WA16VNJ",
                    "UA14TGLTC"
                ],
                "count": 3
            },
            {
                "name": "amiga-tick",
                "users": [
                    "UC2A2ARPT",
                    "UAJ9DV971",
                    "USL4R0T61",
                    "UHWC9PXBL"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "182DAFB2-B5EE-41CE-9673-7446A902583A",
        "type": "message",
        "text": "&gt; references to well-known attributes that have an agreed meaning within a certain community/context.\n&gt; \n<@UCGAK10LS> Isn\u2019t that what a taxonomy is all about?\n\nWhen I think about self-describing data, I\u2019m most interested in _in-band_ vs. _out-of-band_ transmission. \n\nSome parts of a data format need to be agreed on _out-of-band_. That could be generic assumptions like endianess, that a string is encoded in UTF-8 or that a field in the UI only takes a valid email address. If that\u2019s just assumed, these assumptions need to be transmitted out-of-band, i.e. on a different channel which could be that email you mentioned or is just \u201cobvious\u201d within a community (side note: there\u2019s danger of exclusion here).\n\nSelf-describing data formats transmit more information _in-band_, as part of the data. So there is an explicit part of the data that says what follows is UTF-8 or there\u2019s a mime type that indicates here comes an image or JavaScript, or you go all the way and end up in semantic web land with those unique, agreed upon entities described in RDF and OWL.\n\nThe question to me is: how much of a data format can and should be described explicitly in-band? \nAnd the interesting challenges hiding under there are: encoding structure vs. content and what is data vs. what is metadata?",
        "user": "U5STGTB3J",
        "ts": "1596275827.031100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s8+RP",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "references to well-known attributes that have an agreed meaning within a certain community/context.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Isn\u2019t that what a taxonomy is all about?\n\nWhen I think about self-describing data, I\u2019m most interested in "
                            },
                            {
                                "type": "text",
                                "text": "in-band",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs. "
                            },
                            {
                                "type": "text",
                                "text": "out-of-band",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " transmission. \n\nSome parts of a data format need to be agreed on "
                            },
                            {
                                "type": "text",
                                "text": "out-of-band",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". That could be generic assumptions like endianess, that a string is encoded in UTF-8 or that a field in the UI only takes a valid email address. If that\u2019s just assumed, these assumptions need to be transmitted out-of-band, i.e. on a different channel which could be that email you mentioned or is just \u201cobvious\u201d within a community (side note: there\u2019s danger of exclusion here).\n\nSelf-describing data formats transmit more information "
                            },
                            {
                                "type": "text",
                                "text": "in-band",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", as part of the data. So there is an explicit part of the data that says what follows is UTF-8 or there\u2019s a mime type that indicates here comes an image or JavaScript, or you go all the way and end up in semantic web land with those unique, agreed upon entities described in RDF and OWL.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "The question to me is: how much of a data format can and should be described explicitly in-band? \n"
                            },
                            {
                                "type": "text",
                                "text": "And the interesting challenges hiding under there are: encoding structure vs. content and what is data vs. what is metadata?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9580602d-7266-4ff8-b57e-2b04b5e57735",
        "type": "message",
        "text": "I'm trying to avoid the baggage associated with the term \"taxonomy\", since the most common usage implies \"hierarchy\" and declarations from some authority (and I don't want the discussion to veer off in that direction). We can use the term <https://en.wikipedia.org/wiki/Folksonomy|folksonomy> if we want a specific term (thanks to Jack Rusher). What's important here is not the characteristics/structure of a classification scheme (which is what taxonomy/folksonomy is concerned with), but the mere existence of such a scheme.\n\n&gt; The question to me is: how much of a data format can and should be described explicitly in-band?\nSerialisation formats are not a _language_ or _environment_ concern, they're an _implementation_ concern, and I'm acting as a language/environment _designer_ rather than _implementer_ as of late, so I'm not focusing on that stuff. But I'm interested in how the semantics of a data object are presented *to the user*! Which is closely related. If you're on that bandwagon, then sure, that's the question :slightly_smiling_face:",
        "user": "UCGAK10LS",
        "ts": "1596276570.031400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1596276949.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bF+CJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm trying to avoid the baggage associated with the term \"taxonomy\", since the most common usage implies \"hierarchy\" and declarations from some authority (and I don't want the discussion to veer off in that direction). We can use the term "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Folksonomy",
                                "text": "folksonomy"
                            },
                            {
                                "type": "text",
                                "text": " if we want a specific term (thanks to Jack Rusher). What's important here is not the characteristics/structure of a classification scheme (which is what taxonomy/folksonomy is concerned with), but the mere existence of such a scheme.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The question to me is: how much of a data format can and should be described explicitly in-band?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Serialisation formats are not a "
                            },
                            {
                                "type": "text",
                                "text": "language",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "environment ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "concern, they're an "
                            },
                            {
                                "type": "text",
                                "text": "implementation",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " concern, and I'm acting as a language/environment "
                            },
                            {
                                "type": "text",
                                "text": "designer",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " rather than "
                            },
                            {
                                "type": "text",
                                "text": "implementer ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "as of late, so I'm not focusing on that stuff. But I'm interested in how the semantics of a data object are presented"
                            },
                            {
                                "type": "text",
                                "text": " to the user",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "! Which is closely related. If you're on that bandwagon, then sure, that's the question "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "2b52c20d-445d-4737-a4b6-08b7fe52fd17",
        "type": "message",
        "text": "(Btw, if one was to argue that data formats are part of the user interface, then my retort would be that your programming environment is too small in scope)",
        "user": "UCGAK10LS",
        "ts": "1596276825.031800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1596276854.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ee6D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Btw, if one was to argue that data formats are part of the user interface, then my retort would be that your programming environment is too small in scope)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "804972c0-87e1-474f-90cf-d7fdd9c18f6b",
        "type": "message",
        "text": "Although Alan Kay doesn't admit this, I think OOP stopped being about message-passing when they changed Smalltalk from asynchronous to synchronous. This happened between Smalltalk '74 and '76 I believe.",
        "user": "UCGAK10LS",
        "ts": "1596277276.032300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1596277283.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cEK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Although Alan Kay doesn't admit this, I think OOP stopped being about message-passing when they changed Smalltalk from asynchronous to synchronous. This happened between Smalltalk '74 and '76 I believe."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596270826.013700",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "54A349CD-DCC4-4C0D-B137-946B6E9F02E1",
        "type": "message",
        "text": "Was reading the summary of this book and it\u2019s really good - <https://commoncog.com/blog/teaching-tech-together/|https://commoncog.com/blog/teaching-tech-together/>",
        "user": "UKP3B2J5D",
        "ts": "1596278704.033600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Commonplace - The Commoncog Blog",
                "title": "Teaching Tech Together",
                "title_link": "https://commoncog.com/blog/teaching-tech-together/",
                "text": "Greg Wilson's Teaching Tech Together is ostensibly about teaching computer programming, but contains a wonderfully written section on how humans learn.",
                "fallback": "Commonplace - The Commoncog Blog: Teaching Tech Together",
                "image_url": "https://commoncog.com/blog/content/images/2018/11/40911204.jpg",
                "image_width": 167,
                "image_height": 250,
                "fields": [
                    {
                        "title": "Written by",
                        "value": "Cedric Chin",
                        "short": true
                    },
                    {
                        "title": "Filed under",
                        "value": "Books",
                        "short": true
                    }
                ],
                "ts": 1541495862,
                "from_url": "https://commoncog.com/blog/teaching-tech-together/",
                "image_bytes": 11429,
                "service_icon": "https://commoncog.com/blog/favicon.png",
                "id": 1,
                "original_url": "https://commoncog.com/blog/teaching-tech-together/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4KMf4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Was reading the summary of this book and it\u2019s really good - "
                            },
                            {
                                "type": "link",
                                "url": "https://commoncog.com/blog/teaching-tech-together/",
                                "text": "https://commoncog.com/blog/teaching-tech-together/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "A110526A-8DB1-4F96-A6F3-C9872FCDD259",
        "type": "message",
        "text": "And <@U01661S9F34> I think you were the first to intro me to the common place blog with the link you posted in the thread above. Really really good blog. Thanks!",
        "user": "UKP3B2J5D",
        "ts": "1596278758.034800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UKP3B2J5D",
            "ts": "1596278914.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c70m5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And "
                            },
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " I think you were the first to intro me to the common place blog with the link you posted in the thread above. Really really good blog. Thanks!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7CB708E7-16CB-40CD-898B-2A9D808A1BC2",
        "type": "message",
        "text": "<@U014WA16VNJ> is your Zettelkasten or parts of it public available? Here is an example from a friend from the sense making community- nick redmark, interestingly he uses his public twitter account as a data backend and then tries transclusion/aggregates like this later: <https://tweetliner.com/nickredmark/1275500762173341698|https://tweetliner.com/nickredmark/1275500762173341698>",
        "user": "UJFN50C00",
        "ts": "1596279611.038000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zgs=Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " is your Zettelkasten or parts of it public available? Here is an example from a friend from the sense making community- nick redmark, interestingly he uses his public twitter account as a data backend and then tries transclusion/aggregates like this later: "
                            },
                            {
                                "type": "link",
                                "url": "https://tweetliner.com/nickredmark/1275500762173341698",
                                "text": "https://tweetliner.com/nickredmark/1275500762173341698"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595686084.036400",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "4956D122-5384-4D84-82D7-B1087F1B59AA",
        "type": "message",
        "text": "I agree with you, I think the best way that _I_ avoided that narrowness was by seeing talks and reading about the bigger picture examples. Not current apps, but alphabets, algebra, calculus, geometry, etc.\n\nThere was a talk posted recently, _Legacy of Computing_ that compellingly covered some historical examples, and Bret Victor, Alan Kay and others have covered many examples too. I\u2019d love to put together a collection of these examples as a way to more properly introduce people to the idea.",
        "user": "U014WA16VNJ",
        "ts": "1596288659.044500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1596288696.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bPUK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with you, I think the best way that "
                            },
                            {
                                "type": "text",
                                "text": "I ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "avoided that narrowness was by seeing talks and reading about the bigger picture examples. Not current apps, but alphabets, algebra, calculus, geometry, etc.\n\nThere was a talk posted recently, "
                            },
                            {
                                "type": "text",
                                "text": "Legacy of Computing ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "that compellingly covered some historical examples, and Bret Victor, Alan Kay and others have covered many examples too. I\u2019d love to put together a collection of these examples as a way to more properly introduce people to the idea."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596270826.013700",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "AAE806A2-B08B-4BA4-874D-D5BA4E886534",
        "type": "message",
        "text": "Has anyone here read _<https://mitpress.mit.edu/books/stack|The Stack: On Software and Sovereignty>?_ It seems like a treasure trove of good stuff but it\u2019s also a chunky read so I haven\u2019t properly started it yet. It\u2019s interdisciplinary, and seems to be laying out foundations for the kind of work this community is interested in. (Some quotes in thread)",
        "user": "U014WA16VNJ",
        "ts": "1596292790.048700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "The MIT Press",
                "title": "The Stack",
                "title_link": "https://mitpress.mit.edu/books/stack",
                "text": "A comprehensive political and design theory of planetary-scale computation proposing that The Stack\u2014an accidental megastructure\u2014is both a technological apparatus and a model for a new geopolitical architecture. What has planetary-scale computation done to our geopolitical realities?\u00a0It takes different forms at different scales\u2014from energy and mineral sourcing and subterranean cloud infrastructure to urban software and massive universal addressing systems; from interfaces drawn by the augmentation of the hand and eye to users identified by self\u2014quantification and the arrival of legions of sensors, algorithms, and robots. Together, how do these distort and deform modern political geographies and produce new territories in their own image?In The Stack, Benjamin Bratton proposes that these different genres of computation\u2014smart grids, cloud platforms, mobile apps, smart cities, the Internet of Things, automation\u2014can be seen not as so many species evolving on their own, but as forming a coherent whole: an accidental megastructure called The Stack that is both a computational apparatus and a new governing architecture. We are inside The Stack and it is inside of us.\u00a0In an account that is both theoretical and technical, drawing on political philosophy, architectural theory, and software studies, Bratton explores six layers of The Stack: Earth, Cloud, City, Address, Interface, User. Each is mapped on its own terms and understood as a component within the larger whole built from hard and soft systems intermingling\u2014not only computational forms but also social, human, and physical forces. This model, informed by the logic of the multilayered structure of protocol \u201cstacks,\u201d in which network technologies operate within a modular and vertical order, offers a comprehensive image of our emerging infrastructure and a platform for its ongoing reinvention.\u00a0 The Stack is an interdisciplinary design brief for a new geopolitics that works with and for planetary-scale computation. Interweaving the continental, urban, and perceptual scales, it shows how we can better build, dwell within, communicate with, and govern our <http://worlds.thestack.org|worlds.thestack.org>",
                "fallback": "The MIT Press: The Stack",
                "image_url": "https://mitpress.mit.edu/sites/default/files/styles/large_book_cover/http/mitp-content-server.mit.edu%3A18180/books/covers/cover/%3Fcollid%3Dbooks_covers_0%26isbn%3D9780262029575%26type%3D.jpg?itok=pW5EqdFR",
                "from_url": "https://mitpress.mit.edu/books/stack",
                "image_width": 196,
                "image_height": 250,
                "image_bytes": 86907,
                "service_icon": "https://mitpress.mit.edu/themes/custom/mitpress_theme/favicon.ico",
                "id": 1,
                "original_url": "https://mitpress.mit.edu/books/stack"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rUN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone here read "
                            },
                            {
                                "type": "link",
                                "url": "https://mitpress.mit.edu/books/stack",
                                "text": "The Stack: On Software and Sovereignty",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "It seems like a treasure trove of good stuff but it\u2019s also a chunky read so I haven\u2019t properly started it yet. It\u2019s interdisciplinary, and seems to be laying out foundations for the kind of work this community is interested in. (Some quotes in thread)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596292790.048700",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1596313005.061800",
        "reply_users": [
            "U014WA16VNJ",
            "USL4R0T61",
            "UBSMEUXAA"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "88214546-100A-4B56-9A6F-9F39804B9A06",
        "type": "message",
        "text": "\u201cA comprehensive political and design theory of planetary-scale computation proposing that The Stack\u2014an accidental megastructure\u2014is both a technological apparatus and a model for a new geopolitical architecture.\u201d\n\nIt does get technical too (there are chapters on IpV6, addressing, architectures, etc)",
        "user": "U014WA16VNJ",
        "ts": "1596292853.049100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1596293132.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qpR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\u201cA comprehensive political and design theory of planetary-scale computation proposing that The Stack\u2014an accidental megastructure\u2014is both a technological apparatus and a model for a new geopolitical architecture.\u201d\n\n"
                            },
                            {
                                "type": "text",
                                "text": "It does get technical too (there are chapters on IpV6, addressing, architectures, etc)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596292790.048700",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "3a1269a5-6853-423e-96ea-7401edab9e88",
        "type": "message",
        "text": "<@UCGAK10LS> If you're interested which \"bandwagon I'm on\", the second half of this post explains it better: <https://stefan-lesser.com/2019/12/06/structure-and-behavior/>",
        "user": "U5STGTB3J",
        "ts": "1596292906.049800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gsy4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " If you're interested which \"bandwagon I'm on\", the second half of this post explains it better: "
                            },
                            {
                                "type": "link",
                                "url": "https://stefan-lesser.com/2019/12/06/structure-and-behavior/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "52740798-341B-4FD9-8B08-AD54C99A21D7",
        "type": "message",
        "text": "From the foreword, introducing the field of software studies:\n\n\u201cSoftware is deeply woven into contemporary life\u2014economically, culturally, creatively, politically\u2014in manners both obvious and nearly invisible. Yet while much is written about how software is used, and the activities that it supports and shapes, *thinking about software itself has remained largely technical for much of its history.* Increasingly, however, artists, scientists, engineers, hackers, designers, and scholars in the humanities and social sciences are finding that for the questions they face, and the things they need to build, an expanded understanding of software is necessary. For such understanding they can call upon a strand of texts in the history of computing and new media, they can take part in the rich implicit culture of software, and they also can take part in the development of an \u201cemerging, fundamentally transdisciplinary, computational literacy. These provide the foundation for software studies.\u201d",
        "user": "U014WA16VNJ",
        "ts": "1596292948.050400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1596292999.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HL/I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From the foreword, introducing the field of software studies:\n\n\u201cSoftware is deeply woven into contemporary life\u2014economically, culturally, creatively, politically\u2014in manners both obvious and nearly invisible. Yet while much is written about how software is used, and the activities that it supports and shapes, "
                            },
                            {
                                "type": "text",
                                "text": "thinking about software itself has remained largely technical for much of its history.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Increasingly, however, artists, scientists, engineers, hackers, designers, and scholars in the humanities and social sciences are finding that for the questions they face, and the things they need to build, an expanded understanding of software is necessary. For such understanding they can call upon a strand of texts in the history of computing and new media, they can take part in the rich implicit culture of software, and they also can take part in the development of an \u201cemerging, fundamentally transdisciplinary, computational literacy. These provide the foundation for software studies.\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596292790.048700",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "0ef9be36-9322-429a-ae07-ce7850a7b009",
        "type": "message",
        "text": "While I do see a distinction between data format and UI, I don't think that's just two different categories, but more like several layers, almost like a gradient. If a string is ASCII or UTF-8 is probably just an implementation detail (until we talk about import/export). Requiring an email in a form field, not so much. Although it's still just some bytes being parsed in a certain way.\n\nSo I wouldn't exactly claim that \"data formats are part of the user interface\", but I wouldn't claim that these things are completely separable either.",
        "user": "U5STGTB3J",
        "ts": "1596293555.050800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H/J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While I do see a distinction between data format and UI, I don't think that's just two different categories, but more like several layers, almost like a gradient. If a string is ASCII or UTF-8 is probably just an implementation detail (until we talk about import/export). Requiring an email in a form field, not so much. Although it's still just some bytes being parsed in a certain way.\n\nSo I wouldn't exactly claim that \"data formats are part of the user interface\", but I wouldn't claim that these things are completely separable either."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "880fb966-f652-4d56-a8ec-ba89eb9014ac",
        "type": "message",
        "text": "This looks fascinating, thank you for sharing!!!!",
        "user": "USL4R0T61",
        "ts": "1596300629.051300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X0s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks fascinating, thank you for sharing!!!!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596292790.048700",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "12fc4efe-6e9f-477f-87c5-4f5d1ca15fb2",
        "type": "message",
        "text": "Does it say anything about how category theory is relevant to real life / software engineering?",
        "user": "UD6EXQVM0",
        "ts": "1596303595.051800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QECge",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does it say anything about how category theory is relevant to real life / software engineering?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593420570.025500",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "client_msg_id": "24e7c293-967b-42fb-85ce-d1430c4fa1d0",
        "type": "message",
        "text": "\"how can we swing back to a more remix-friendly environment? What creates incentives for that?\"\nerrr... pay developers to use a remix-friendly style?\n\nOpen standards and open source are approaches that (at least to a greater extent than proprietary products) are remix-friendly. Beyond that, we need people to work on platforms designed from the ground up for 'remixing'. But rarely is any private company willing to pay for that sort of thing. The idea I've always had in mind is government funding for \"open engineering\", the same way science is funded, except that the work products would be FOSS instead of PDFs.\n\nTo make sure the work products are labors of love ... people working on them should be underpaid, but on the other hand the barrier to entry should be as low as the pay scale. I'd sign up immediately.",
        "user": "UD6EXQVM0",
        "ts": "1596304746.052200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7oXH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"how can we swing back to a more remix-friendly environment? What creates incentives for that?\"\nerrr... pay developers to use a remix-friendly style?\n\nOpen standards and open source are approaches that (at least to a greater extent than proprietary products) are remix-friendly. Beyond that, we need people to work on platforms designed from the ground up for 'remixing'. But rarely is any private company willing to pay for that sort of thing. The idea I've always had in mind is government funding for \"open engineering\", the same way science is funded, except that the work products would be FOSS instead of PDFs.\n\nTo make sure the work products are labors of love ... people working on them should be underpaid, but on the other hand the barrier to entry should be as low as the pay scale. I'd sign up immediately."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593659834.110700",
        "parent_user_id": "UMWF81HTP",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a81a641f-78c6-475f-b0e7-633d4a99e2b0",
        "type": "message",
        "text": "The main GPT-3 is said to have cost $5 million (in electricity?) to train, so don't expect you'd be able to do what OpenAI did with it, even if it were open-source.",
        "user": "UD6EXQVM0",
        "ts": "1596305277.052600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1596305368.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S2U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The main GPT-3 is said to have cost $5 million (in electricity?) to train, so don't expect you'd be able to do what OpenAI did with it, even if it were open-source."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG"
    },
    {
        "type": "message",
        "text": "This week on CodeFaster, I switched from jq tutorials, to sed tutorials. I was hoping my similar title \"mastering sed: part 1\" would get the same hacker news attention as \"mastering jq: part 1\", but alas, it didn't even get a single upvote (unlike mastering jq which got 205). It's probably that people are less interested in sed, an old cryptic unix text manipulator vs jq which is a new json, easy to use json manipulator, but I'm still surprised it got none, I expected maybe a few. In any case, I still think sed is important, so I want to keep writing about it. One other thing on my mind is the emotion in my writing. I like to write brief and to the point, no need to fluff up content with empassioned speach or frivilous information, and I appreciate brevity in other writing, but maybe that turns off my target audience? What do you guys think? (This week's post can be found at <https://codefaster.substack.com/p/mastering-sed-part-1>)",
        "user": "UL5AX4G2H",
        "ts": "1596306310.060200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Mastering sed: part 1",
                "title_link": "https://codefaster.substack.com/p/mastering-sed-part-1",
                "text": "In this tutorial, we will go over the basics of using sed, an ancient and powerful text manipulator. We will go over real sed examples that you can copy paste into your own terminal...",
                "fallback": "Mastering sed: part 1",
                "thumb_url": "https://cdn.substack.com/image/fetch/w_256,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fc21d3e2d-bc9d-401f-bbe8-225d0d0643d9_256x256.png",
                "from_url": "https://codefaster.substack.com/p/mastering-sed-part-1",
                "thumb_width": 256,
                "thumb_height": 256,
                "service_icon": "https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/d8afe861-b0e8-49ce-b80e-2d642b648703/apple-touch-icon-57x57.png",
                "service_name": "codefaster.substack.com",
                "id": 1,
                "original_url": "https://codefaster.substack.com/p/mastering-sed-part-1"
            }
        ],
        "thread_ts": "1596306310.060200",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1596396503.070600",
        "reply_users": [
            "UCUSW7WVD",
            "UL5AX4G2H",
            "UHWC9PXBL",
            "UE0H4170F"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "2d0ce4bc-81c2-44fb-b919-cbdb9cc3478d",
        "type": "message",
        "text": "I think you're too focused on metrics. Feedback channels in this universe work too imprecisely for this level of focus. For all our society's emphasis on being data-driven, there often isn't good enough data. In this case, HN behavior is often highly dependent on the first 2 or 3 votes a story gets. If they come quickly it has more time to rise. Selection bias on who happens to be browsing the new page at any time compounds the noisiness of this signal.\n\nYou should just write about what you think is important. You may be surprised by how this sed posting does when somebody submits it to HN in 6 months time.",
        "user": "UCUSW7WVD",
        "ts": "1596308807.060400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gN/4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you're too focused on metrics. Feedback channels in this universe work too imprecisely for this level of focus. For all our society's emphasis on being data-driven, there often isn't good enough data. In this case, HN behavior is often highly dependent on the first 2 or 3 votes a story gets. If they come quickly it has more time to rise. Selection bias on who happens to be browsing the new page at any time compounds the noisiness of this signal.\n\nYou should just write about what you think is important. You may be surprised by how this sed posting does when somebody submits it to HN in 6 months time."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596306310.060200",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "dfe5af8a-38ab-4fce-aef5-4ce26dbe3b9e",
        "type": "message",
        "text": "I like how your comment talks about government funding but emphasizes underpaying people. That connection needs to be drawn more often.",
        "user": "UCUSW7WVD",
        "ts": "1596309082.060600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "29=V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like how your comment talks about government funding but emphasizes underpaying people. That connection needs to be drawn more often."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593659834.110700",
        "parent_user_id": "UMWF81HTP"
    },
    {
        "client_msg_id": "314f71e9-22d3-4c75-b8f2-def9d561d75e",
        "type": "message",
        "text": "(<@UJFN50C00> \u2014\u00a0Please move this discussion about zettels to DMs, or to a new thread \u2014 this thread is about capitalism. Let me know when it's safe to delete your above message and this reply)",
        "user": "UC2A2ARPT",
        "ts": "1596309532.060800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1596309570.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cq+4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "("
                            },
                            {
                                "type": "user",
                                "user_id": "UJFN50C00"
                            },
                            {
                                "type": "text",
                                "text": " \u2014\u00a0Please move this discussion about zettels to DMs, or to a new thread \u2014 this thread is about capitalism. Let me know when it's safe to delete your above message and this reply)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595686084.036400",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "1805698d-d2d6-49da-9b86-003f2ae062d4",
        "type": "message",
        "text": "I dream of making a language in the last category, where\n1. The syntax is switchable (plug in a parser you want), syntax conversions are plausible, and multiple syntaxes can be used in a single proram\n2. The semantics are customizable (e.g. the concept of a \"function call\" is broken down into parts that can be customized) and multiple semantics can be combined in a single program...\n3. The language is designed to support and encourage \"parameterized\" libraries, whose exact behavior and interface can be customized by a user of the library (e.g. libraries that let you select between different kinds of floating-point math after-the-fact, instead of hard-coding `float` or `double`)\n4. The standard library is designed to evolve over time by supporting \"skinnable\" types. A simple example would be that in version 1.0 we have `Array.shift` and `Array.unshift` , but in a later version we decide those were terrible names and change them to `Array.popFirst` and `Array.pushFirst` - but old code can use the old names by continuing to import the older \"skin\" of the `Array` type.\n5. Advanced metaprogramming including compile-time code execution is supported\nI want a language that takes the best ideas around and combines them with my own ideas ... an ultimate language. The really key part, which is maybe the hardest thing to get right, is to set it up so that some of the best features of the language can be designed and built by _other people_, because the foundation is good enough to make this possible.",
        "user": "UD6EXQVM0",
        "ts": "1596309793.061300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1596309940.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N0SV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I dream of making a language in the last category, where\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The syntax is switchable (plug in a parser you want), syntax conversions are plausible, and multiple syntaxes can be used in a single proram"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The semantics are customizable (e.g. the concept of a \"function call\" is broken down into parts that can be customized) and multiple semantics can be combined in a single program..."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The language is designed to support and encourage \"parameterized\" libraries, whose exact behavior and interface can be customized by a user of the library (e.g. libraries that let you select between different kinds of floating-point math after-the-fact, instead of hard-coding "
                                    },
                                    {
                                        "type": "text",
                                        "text": "float",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " or "
                                    },
                                    {
                                        "type": "text",
                                        "text": "double",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The standard library is designed to evolve over time by supporting \"skinnable\" types. A simple example would be that in version 1.0 we have "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Array.shift",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Array.unshift",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " , but in a later version we decide those were terrible names and change them to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Array.popFirst",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Array.pushFirst",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " - but old code can use the old names by continuing to import the older \"skin\" of the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Array",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " type."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Advanced metaprogramming including compile-time code execution is supported"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI want a language that takes the best ideas around and combines them with my own ideas ... an ultimate language. The really key part, which is maybe the hardest thing to get right, is to set it up so that some of the best features of the language can be designed and built by "
                            },
                            {
                                "type": "text",
                                "text": "other people",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", because the foundation is good enough to make this possible."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594276999.116700",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "type": "message",
        "text": "Sounds like I need more data to have a meaningful conclusion, and in the absence of said data, I completely agree, what I think is important (and like) takes priority",
        "user": "UL5AX4G2H",
        "ts": "1596310889.061600",
        "team": "T5TCAFTA9",
        "thread_ts": "1596306310.060200",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "fc0592ee-60ac-4e56-b40f-8e8957d25c59",
        "type": "message",
        "text": "Yeah this looks crazy, definitely need to read it when I get a chance",
        "user": "UBSMEUXAA",
        "ts": "1596313005.061800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QZOVf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah this looks crazy, definitely need to read it when I get a chance"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596292790.048700",
        "parent_user_id": "U014WA16VNJ"
    }
]