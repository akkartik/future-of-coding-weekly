[
    {
        "client_msg_id": "E2E48F04-5A95-46E5-A65B-19DC50BCF3F0",
        "type": "message",
        "text": "Are there people here who have experience with crowdfunding a FoC project? When would that be a good fit?",
        "user": "U0123H7JRDM",
        "ts": "1597055806.351400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aZtlX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there people here who have experience with crowdfunding a FoC project? When would that be a good fit?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596907862.313700",
        "parent_user_id": "UNBPP291C"
    },
    {
        "client_msg_id": "1fecf4dd-4c58-4eb9-bba1-cd99069605cd",
        "type": "message",
        "text": "<https://www.kickstarter.com/projects/noflo/noflo-development-environment> and <https://www.indiegogo.com/projects/blockie-io-visual-flow-based-programming-for-back-end-development#/> are examples: the kickstarter campaign raised a lot of money. Both are visual programming environments",
        "user": "U0123H7JRDM",
        "ts": "1597056983.351600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Kickstarter",
                "title": "NoFlo Development Environment",
                "title_link": "https://www.kickstarter.com/projects/noflo/noflo-development-environment",
                "text": "Designing a new way to build software &amp; manage complexity - a visual development environment for all",
                "fallback": "Kickstarter: NoFlo Development Environment",
                "image_url": "https://ksr-ugc.imgix.net/assets/011/555/123/60e599a345e7225a6a7b6cee09f12e59_original.png?ixlib=rb-2.1.0&crop=faces&w=1552&h=873&fit=crop&v=1463684400&auto=format&frame=1&q=92&s=c5a88c52bc3ff47681828562aab76d50",
                "image_width": 444,
                "image_height": 250,
                "from_url": "https://www.kickstarter.com/projects/noflo/noflo-development-environment",
                "image_bytes": 1355764,
                "service_icon": "https://www.kickstarter.com/favicon.ico",
                "id": 1,
                "original_url": "https://www.kickstarter.com/projects/noflo/noflo-development-environment"
            },
            {
                "service_name": "Indiegogo",
                "title": "Blockie.io: Visual flow based programming for back-end development",
                "title_link": "https://www.indiegogo.com/projects/blockie-io-visual-flow-based-programming-for-back-end-development#/",
                "text": "For front-end developers to amazingly fast create back-ends for web applications using flow based programming, no coding required and it runs in the cloud. | Check out '<http://Blockie.io|Blockie.io>: Visual flow based programming for back-end development' on Indiegogo.",
                "fallback": "Indiegogo: Blockie.io: Visual flow based programming for back-end development",
                "from_url": "https://www.indiegogo.com/projects/blockie-io-visual-flow-based-programming-for-back-end-development#/",
                "thumb_url": "https://c1.iggcdn.com/indiegogo-media-prod-cld/image/upload/c_fill%2Cf_auto%2Ch_200%2Cw_200/v1403810865/utmqfvaavizazstxj4uk.jpg",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https://g1.iggcdn.com/assets/favicon/apple-touch-icon-180x180-precomposed-7e9ecfae6058f5d3e159760ab31d9bed65a6b6ff88ea8fbe322530d226f44cb8.png",
                "id": 2,
                "original_url": "https://www.indiegogo.com/projects/blockie-io-visual-flow-based-programming-for-back-end-development#/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Rom3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.kickstarter.com/projects/noflo/noflo-development-environment"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https://www.indiegogo.com/projects/blockie-io-visual-flow-based-programming-for-back-end-development#/"
                            },
                            {
                                "type": "text",
                                "text": " are examples: the kickstarter campaign raised a lot of money. Both are visual programming environments"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596907862.313700",
        "parent_user_id": "UNBPP291C"
    },
    {
        "type": "message",
        "text": "Hello all! Please consider submitting to *LIVE 2020*, the Workshop on Live Programming. Traditionally, most submissions to LIVE are demos of novel programming submissions. We hope LIVE can be an opportunity to polish up your work a little and present your progress to the world, by video or PDF or web essay\u2014just be sure to situate the work within the history of programming environments. The submission deadline is *Sept 18*, and the workshop itself will be online, tentatively Nov 17. The attached Call for Submissions has details, or visit the website: <https://liveprog.org/>",
        "files": [
            {
                "id": "F018CGBCYPQ",
                "created": 1597058956,
                "timestamp": 1597058956,
                "name": "live20-cfp_txt.txt",
                "title": "live20-cfp.txt",
                "mimetype": "text/plain",
                "filetype": "text",
                "pretty_type": "Plain Text",
                "user": "UC21F8Q48",
                "editable": true,
                "size": 3487,
                "mode": "snippet",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F018CGBCYPQ/live20-cfp_txt.txt",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F018CGBCYPQ/download/live20-cfp_txt.txt",
                "permalink": "https://futureofcoding.slack.com/files/UC21F8Q48/F018CGBCYPQ/live20-cfp_txt.txt",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F018CGBCYPQ-ca5b1c40c7",
                "edit_link": "https://futureofcoding.slack.com/files/UC21F8Q48/F018CGBCYPQ/live20-cfp_txt.txt/edit",
                "preview": "6th WORKSHOP ON LIVE PROGRAMMING (LIVE 2020)\n17 November, 2020\nCo-located in time with SPLASH 2020, Chicago, USA\nhttp://liveprog.org/\nhttps://2020.splashcon.org/home/live-2020",
                "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>6th WORKSHOP ON LIVE PROGRAMMING (LIVE 2020)</pre></div>\n<div><pre>17 November, 2020</pre></div>\n<div><pre>Co-located in time with SPLASH 2020, Chicago, USA</pre></div>\n<div><pre>http://liveprog.org/</pre></div>\n<div><pre>https://2020.splashcon.org/home/live-2020</pre></div>\n</div>\n</div>\n",
                "lines": 71,
                "lines_more": 66,
                "preview_is_truncated": true,
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KErQO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello all! Please consider submitting to "
                            },
                            {
                                "type": "text",
                                "text": "LIVE 2020",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", the Workshop on Live Programming. Traditionally, most submissions to LIVE are demos of novel programming submissions. We hope LIVE can be an opportunity to polish up your work a little and present your progress to the world, by video or PDF or web essay\u2014just be sure to situate the work within the history of programming environments. The submission deadline is "
                            },
                            {
                                "type": "text",
                                "text": "Sept 18",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and the workshop itself will be online, tentatively Nov 17. The attached Call for Submissions has details, or visit the website: "
                            },
                            {
                                "type": "link",
                                "url": "https://liveprog.org/"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UC21F8Q48",
        "display_as_bot": false,
        "ts": "1597059335.356000",
        "edited": {
            "user": "UC21F8Q48",
            "ts": "1597059356.000000"
        },
        "thread_ts": "1597059335.356000",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1597072478.368400",
        "reply_users": [
            "UJ6LDMMN0",
            "UC21F8Q48"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UC2A2ARPT",
                    "U013ZLJARC7",
                    "UHWC9PXBL",
                    "UFB8STN7K",
                    "UML4ZEKDK"
                ],
                "count": 6
            },
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "bed979f9-8be4-43a1-af83-0a9dd32196ce",
        "type": "message",
        "text": "Has anyone ever come across (or thought about) a tagging system for data where *nouns* and *adjectives* play different roles? For example, you might search for a \"user\", but then refine that search to a \"banned user\". Note that \"banned\" and \"user\" are not _necessarily_ independent tags. Just because someone is a \"banned user\" and a \"father\" doesn't mean they're a \"banned father\" as well. The adjective \"banned\" could specifically relate to the noun \"user\".\n\nOr a slightly clearer example: someone who is both a \"skilled baker\" and a \"writer\" is not necessarily a \"skilled writer\".\n\nI'm now wondering whether an understanding of (basic) linguistics is necessary to develop a good tagging system. After all, our mission is to adapt programming languages to the human mind :thinking_face:.\n\nThis is part of my search for \"an ideal model for information\" that readers might remember from a few weeks ago.",
        "user": "UCGAK10LS",
        "ts": "1597061810.364800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1597070379.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "14Xka",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone ever come across (or thought about) a tagging system for data where "
                            },
                            {
                                "type": "text",
                                "text": "nouns ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "and "
                            },
                            {
                                "type": "text",
                                "text": "adjectives",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " play different roles? For example, you might search for a \"user\", but then refine that search to a \"banned user\". Note that \"banned\" and \"user\" are not "
                            },
                            {
                                "type": "text",
                                "text": "necessarily",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " independent tags. Just because someone is a \"banned user\" and a \"father\" doesn't mean they're a \"banned father\" as well. The adjective \"banned\" could specifically relate to the noun \"user\".\n\nOr a slightly clearer example: someone who is both a \"skilled baker\" and a \"writer\" is not necessarily a \"skilled writer\".\n\nI'm now wondering whether an understanding of (basic) linguistics is necessary to develop a good tagging system. After all, our mission is to adapt programming languages to the human mind "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nThis is part of my search for \"an ideal model for information\" that readers might remember from a few weeks ago."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "reply_count": 47,
        "reply_users_count": 9,
        "latest_reply": "1597451734.482300",
        "reply_users": [
            "U01554W5BS5",
            "UDQBTJ211",
            "U013ZLJARC7",
            "UCGAK10LS",
            "UT60XSVCN",
            "U016VUZGUUQ",
            "U5STGTB3J",
            "U015902ESJC",
            "UA14TGLTC"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "U014WA16VNJ",
                    "UDQBTJ211",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "a94a0a9f-f70b-4b4a-86b0-749d3a60b035",
        "type": "message",
        "text": "Hi <@UC21F8Q48>. What kind  of work should be submitted? Mainly academia work? Other too? In particular, I am not sure I will be able to \"situate the work within the history of programming environments\" precisely. I have never conducted some real research about it, and the most I can do is noting some inspirations and counter examples for my vision, but not a real academic comparison.",
        "user": "UJ6LDMMN0",
        "ts": "1597061868.365000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Cq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UC21F8Q48"
                            },
                            {
                                "type": "text",
                                "text": ". What kind  of work should be submitted? Mainly academia work? Other too? In particular, I am not sure I will be able to \"situate the work within the history of programming environments\" precisely. I have never conducted some real research about it, and the most I can do is noting some inspirations and counter examples for my vision, but not a real academic comparison."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597059335.356000",
        "parent_user_id": "UC21F8Q48"
    },
    {
        "client_msg_id": "72231A46-591D-4737-B145-9A946F7575F7",
        "type": "message",
        "text": "That reminds me of <https://www.hempuli.com/baba/|https://www.hempuli.com/baba/>",
        "user": "U01554W5BS5",
        "ts": "1597064056.365700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W/JV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That reminds me of "
                            },
                            {
                                "type": "link",
                                "url": "https://www.hempuli.com/baba/",
                                "text": "https://www.hempuli.com/baba/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "c39943f9-fc98-46c6-a04d-5925730ea4f1",
        "type": "message",
        "text": "This is a very interesting point. Definitely one of those brilliant examples which makes you think you've got more thinking to do...\n\nMy first reaction is that every tag is a kind of adjective, i.e. they are descriptive, and it might be more that \"banned\" is a verb/gerundive that caused the distinction.\n\nI think implicitly the #banned tag applies only to the \"father tagged object\" and not directly to the underlying object.\n\nYou could represent this with a kind of nesting;\n\n```person #father#banned #blond\nperson #father #blond#banned\n(person #father #blond)#banned\n```\nThese could be used to represent, person banned for being a father, banned for being blond, and banned for being a blond father. The top one would match a query of `#banned`, `#father`, `#blond` and `#banned#father` but not `#banned#blond`\n\no you could remember what filter the object is being considered under at the time the tag is applied.",
        "user": "UDQBTJ211",
        "ts": "1597065225.366200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bkz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a very interesting point. Definitely one of those brilliant examples which makes you think you've got more thinking to do...\n\nMy first reaction is that every tag is a kind of adjective, i.e. they are descriptive, and it might be more that \"banned\" is a verb/gerundive that caused the distinction.\n\nI think implicitly the #banned tag applies only to the \"father tagged object\" and not directly to the underlying object.\n\nYou could represent this with a kind of nesting;\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "person #father#banned #blond\nperson #father #blond#banned\n(person #father #blond)#banned\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThese could be used to represent, person banned for being a father, banned for being blond, and banned for being a blond father. The top one would match a query of "
                            },
                            {
                                "type": "text",
                                "text": "#banned",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "#father",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "#blond",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "#banned#father",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but not "
                            },
                            {
                                "type": "text",
                                "text": "#banned#blond",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\no you could remember what filter the object is being considered under at the time the tag is applied."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "23fc0e7b-0390-4a4e-a835-b167c04b1c7d",
        "type": "message",
        "text": "It's not clear to me how you mean \"banned father\" that doesn't mean the intersection of \"banned\" and \"father\". Could you elaborate?",
        "user": "U013ZLJARC7",
        "ts": "1597069116.366700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p61rs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's not clear to me how you mean \"banned father\" that doesn't mean the intersection of \"banned\" and \"father\". Could you elaborate?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "7f30a7f2-4a7c-439e-8d53-00bf3c8f5815",
        "type": "message",
        "text": "The skilled baker/writer example is much clearer. One intersection is valid, one isn't",
        "user": "UDQBTJ211",
        "ts": "1597069489.367000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fHT5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The skilled baker/writer example is much clearer. One intersection is valid, one isn't"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "d0504c19-4e75-4294-8a00-fdab06b7f8d8",
        "type": "message",
        "text": "<@U013ZLJARC7>\nWhat I meant to convey is:\n\nIn natural language, adjectives are sometimes ascribed to specific nouns, i.e. they are not transferrable between the different nouns that an entity can be named by. I added a second example to my original post that hopefully clarifies: someone who is both a \"skilled baker\" and a \"writer\" is not necessarily a \"skilled writer\".\n\nI've not yet seen a tagging system that accounts for this linguistic phenomenon. That said, I'm still figuring out the extent to which supporting it could be useful.",
        "user": "UCGAK10LS",
        "ts": "1597069655.367200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1597069669.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d7x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "\nWhat I meant to convey is:\n\nIn natural language, adjectives are sometimes ascribed to specific nouns, i.e. they are not transferrable between the different nouns that an entity can be named by. I added a second example to my original post that hopefully clarifies: someone who is both a \"skilled baker\" and a \"writer\" is not necessarily a \"skilled writer\".\n\nI've not yet seen a tagging system that accounts for this linguistic phenomenon. That said, I'm still figuring out the extent to which supporting it could be useful."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "1d471299-e7a0-44be-990a-c81bbb6c0b46",
        "type": "message",
        "text": "<@UDQBTJ211> I started thinking about linguistics after realising that hierarchy may not be a sufficiently powerful basis for a tagging system. So I'm skeptical that nesting is the right way to encode a reason for banning. (Aside: I didn't intend the discussion to be about verbs/actions, but it's an interesting side question)",
        "user": "UCGAK10LS",
        "ts": "1597070254.367500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yQH0N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " I started thinking about linguistics after realising that hierarchy may not be a sufficiently powerful basis for a tagging system. So I'm skeptical that nesting is the right way to encode a reason for banning. (Aside: I didn't intend the discussion to be about verbs/actions, but it's an interesting side question)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "dfcaa00a-ae4f-4272-bb83-1106cd7a0cbb",
        "type": "message",
        "text": "Yeah it's not a strict nesting I think it's a semilattice or DAG",
        "user": "UDQBTJ211",
        "ts": "1597070491.367800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yxj3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah it's not a strict nesting I think it's a semilattice or DAG"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "d1727dbf-153c-47ab-865e-3c910ebb8f41",
        "type": "message",
        "text": "<@UDQBTJ211> I'm thinking it should be something more like:\n\nperson (#father) (#blonde) (#banned #user)\n\nThe tags here are grouped into unordered *sets*. The main purpose of the grouping is to handle the case where an adjective should be associated with a specific noun. Under a different interpretation of my initial prompt, you might get:\n\nperson (#father) (#blonde) (#user) (#banned)\n\nas an answer. This can be encoded in an unsophisticated tagging system. I think this was <@U013ZLJARC7>\u2019s interpretation.\n\nMy second (less ambiguous) example would look like:\n\nperson (#skilled #baker) (#writer)",
        "user": "UCGAK10LS",
        "ts": "1597071246.368000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1597071315.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T07Dg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " I'm thinking it should be something more like:\n\nperson (#father) (#blonde) (#banned #user)\n\nThe tags here are grouped into unordered "
                            },
                            {
                                "type": "text",
                                "text": "sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The main purpose of the grouping is to handle the case where an adjective should be associated with a specific noun. Under a different interpretation of my initial prompt, you might get:\n\nperson (#father) (#blonde) (#user) (#banned)\n\nas an answer. This can be encoded in an unsophisticated tagging system. I think this was "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "\u2019s interpretation.\n\nMy second (less ambiguous) example would look like:\n\nperson (#skilled #baker) (#writer)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "cce512ce-347e-4782-b9cd-42c12fe935c8",
        "type": "message",
        "text": "<@UJ6LDMMN0> Don\u2019t let that keep you from submitting! Part of LIVE\u2019s goal is to provide a place for work that doesn\u2019t quite fit the academic mold. Noting \u201cinspirations and counter examples\u201d is a good start for an \u201cacademic\u201d related work discussion\u2014particularly counter examples! Also because this is an eclectic workshop we\u2019re not expecting quite as much thoroughness, something like 5-10 references is probably reasonable if you\u2019re not coming from an academic background. If you ping me with your idea and those inspirations and counter examples I might be able to point you in a profitable direction so you can spend an afternoon following references and filling in some gaps. But, again, don\u2019t let that keep you from submitting!",
        "user": "UC21F8Q48",
        "ts": "1597072478.368400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vmI1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " Don\u2019t let that keep you from submitting! Part of LIVE\u2019s goal is to provide a place for work that doesn\u2019t quite fit the academic mold. Noting \u201cinspirations and counter examples\u201d is a good start for an \u201cacademic\u201d related work discussion\u2014particularly counter examples! Also because this is an eclectic workshop we\u2019re not expecting quite as much thoroughness, something like 5-10 references is probably reasonable if you\u2019re not coming from an academic background. If you ping me with your idea and those inspirations and counter examples I might be able to point you in a profitable direction so you can spend an afternoon following references and filling in some gaps. But, again, don\u2019t let that keep you from submitting!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597059335.356000",
        "parent_user_id": "UC21F8Q48",
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8ce13400-a6e1-4f5b-8968-afe0ba093f03",
        "type": "message",
        "text": "I think a cleaner way there is to make \"skilled\" a function of sorts that takes an argument to give you a concrete tag",
        "user": "UT60XSVCN",
        "ts": "1597073457.368600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AGdt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think a cleaner way there is to make \"skilled\" a function of sorts that takes an argument to give you a concrete tag"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "cf55bbf3-7ba0-489d-8fb8-329d35b1f65f",
        "type": "message",
        "text": "The new example makes what you mean much clearer. In the _banned_ + _user_\ncase, a _user_ is an entity and _banned_ is a property that an entity can\nhave. In the second example you have a _person_ (entity) who has the\nrole of _skilled baker_ and (perhaps) the role of _writer_. The usual\nways to encode this sort of thing in information retrieval include:\n\n* (folksonomy) `#baker` and `#skilled_baker` are different tags\n* (semantic) _person_ _hasRole_ _Baker_ with a property on this\n  instance of the _hasRole_ property  that indicates mastery\n* (statistical 1) mastery is inferred from another property (years\n  baking, number of awards won)\n* (statistical 2) mastery is inferred from the position of the entity\n  in some vector space (think Word2Vec and friends)",
        "user": "U013ZLJARC7",
        "ts": "1597075796.369300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T66j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The new example makes what you mean much clearer. In the _banned_ + _user_\ncase, a _user_ is an entity and _banned_ is a property that an entity can\nhave. In the second example you have a _person_ (entity) who has the\nrole of _skilled baker_ and (perhaps) the role of _writer_. The usual\nways to encode this sort of thing in information retrieval include:\n\n* (folksonomy) `#baker` and `#skilled_baker` are different tags\n* (semantic) _person_ _hasRole_ _Baker_ with a property on this\n  instance of the _hasRole_ property  that indicates mastery\n* (statistical 1) mastery is inferred from another property (years\n  baking, number of awards won)\n* (statistical 2) mastery is inferred from the position of the entity\n  in some vector space (think Word2Vec and friends)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "497ee0d7-1878-4922-9883-ebeb22f53a5f",
        "type": "message",
        "text": "After the first time that _enter_ auto-submitted this answer before I was done, I edited it in my editor of choice using markdown that Slack would have understood if I typed it inline, but which it has presented unmodified after copy-and-paste. :face_with_symbols_on_mouth:",
        "user": "U013ZLJARC7",
        "ts": "1597075891.369500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y52m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After the first time that "
                            },
                            {
                                "type": "text",
                                "text": "enter",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " auto-submitted this answer before I was done, I edited it in my editor of choice using markdown that Slack would have understood if I typed it inline, but which it has presented unmodified after copy-and-paste. "
                            },
                            {
                                "type": "emoji",
                                "name": "face_with_symbols_on_mouth"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "disappointed_relieved",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "60183828-3115-4f0a-9d6c-e45df680d1b8",
        "type": "message",
        "text": "Hierarchy alone might not be enough, but I don't think it can be avoided either. If you want a \"skilled writer\", that \"skilled\" is necessarily interpreted in the context of \"writer\".",
        "user": "U016VUZGUUQ",
        "ts": "1597079041.370000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lu2LH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hierarchy alone might not be enough, but I don't think it can be avoided either. If you want a \"skilled writer\", that \"skilled\" is necessarily interpreted in the context of \"writer\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "42EA39D1-9D57-41F1-9D7F-1ECBD9864238",
        "type": "message",
        "text": "<@UCGAK10LS> What are you hoping to find within linguistics that you think would be helpful here?",
        "user": "U5STGTB3J",
        "ts": "1597079237.371200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9+wLu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " What are you hoping to find within linguistics that you think would be helpful here?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "5f8d1a85-db5d-4c60-80e1-243f3f3401f9",
        "type": "message",
        "text": "I don't think linguistics is the right approach at all. The thing wanted is logic, and trying to import the semantics of messy evolved natural languages will only make the logic harder.\n\nIn general I don't entirely agree with the idea that \"our mission is to adapt programming languages to the human mind\". That might have been a good thought when Grace Hopper tried it, but we know better now. It just has to actually make sense, and people will come around.",
        "user": "U016VUZGUUQ",
        "ts": "1597079739.371500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=CT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think linguistics is the right approach at all. The thing wanted is logic, and trying to import the semantics of messy evolved natural languages will only make the logic harder.\n\nIn general I don't entirely agree with the idea that \"our mission is to adapt programming languages to the human mind\". That might have been a good thought when Grace Hopper tried it, but we know better now. It just has to actually make sense, and people will come around."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGYGY18UX"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a0758736-d4a4-4734-99de-95c888900dda",
        "type": "message",
        "text": "My idea for tagging the writer: `bob (#baker) (#writer (#skilled))`, where you can think of the nesting as expanding to `#writer #writer/skilled` for a hierarchy-oblivious system. From a logic perspective it might be more accurate to call it `#writer-&gt;skilled`, i.e. invoking implication, but I haven't quite figured out how that works, either...",
        "user": "U016VUZGUUQ",
        "ts": "1597080136.371700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zryQv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My idea for tagging the writer: "
                            },
                            {
                                "type": "text",
                                "text": "bob (#baker) (#writer (#skilled))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", where you can think of the nesting as expanding to "
                            },
                            {
                                "type": "text",
                                "text": "#writer #writer/skilled",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for a hierarchy-oblivious system. From a logic perspective it might be more accurate to call it "
                            },
                            {
                                "type": "text",
                                "text": "#writer->skilled",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", i.e. invoking implication, but I haven't quite figured out how that works, either..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "263602cb-19d4-44f4-afc0-ab6657f24d1d",
        "type": "message",
        "text": "Your question took my back to my RDF and OWL days where we were building ontologies to basically do this and reason about it. This has long been the promise of semantic web technologies. However, they never broke the usability barrier. Tags are amazing because of their simplicity. As soon as you have skilled writers you have increasingly complex relationships where the computer is trying to model what is in the user's head.\n\nIt's doable, but complex and you run into all sorts of strange cases. Can you be a \"skilled hobbyist\" or a \"skilled thinker\"? As soon as you start applying meaning to the adjectives, you lose the ability for the definitions to adapt well based on the community using tags. The more precision you want, the more work you have to do. The more work you have to do, the less users want to do to maintain the taxonomy. IMO, this is one reason machine learning has been so successful. It can basically infer the relationships between tags based on how they are used. But you need a lot of data and you are at a decided disadvantage if you are searching using overloaded terms (I used to use a software package called \"Chef\" that had \"cookbooks\" and \"recipes\" - nightmare to find good docs for answers to questions).",
        "user": "U015902ESJC",
        "ts": "1597088347.372500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JBp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your question took my back to my RDF and OWL days where we were building ontologies to basically do this and reason about it. This has long been the promise of semantic web technologies. However, they never broke the usability barrier. Tags are amazing because of their simplicity. As soon as you have skilled writers you have increasingly complex relationships where the computer is trying to model what is in the user's head.\n\nIt's doable, but complex and you run into all sorts of strange cases. Can you be a \"skilled hobbyist\" or a \"skilled thinker\"? As soon as you start applying meaning to the adjectives, you lose the ability for the definitions to adapt well based on the community using tags. The more precision you want, the more work you have to do. The more work you have to do, the less users want to do to maintain the taxonomy. IMO, this is one reason machine learning has been so successful. It can basically infer the relationships between tags based on how they are used. But you need a lot of data and you are at a decided disadvantage if you are searching using overloaded terms (I used to use a software package called \"Chef\" that had \"cookbooks\" and \"recipes\" - nightmare to find good docs for answers to questions)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597061810.364800",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "bd4f97ba-111a-4a05-9e41-87251493dd32",
        "type": "message",
        "text": "Interesting Twitter thread proposing game engines are becoming more popular for non-gaming use cases. These were the most interesting examples he gave to me:\n\n&gt; The Mandalorian and The Lion King were shot almost exclusively using these tools.\n&gt; Even Hong Kong International Airport uses a \"digital twin\" built on Unity to simulate changes in passenger volume\nHe doesn't share many references or links with more details. I'd love to hear from anyone if they have more examples of game engines being used for non-gaming use cases like these. Or any links or other information to share related to this topic. <https://twitter.com/aaronzlewis/status/1291889682788253696>",
        "user": "UE0ETTCG7",
        "ts": "1597094873.373200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/aaronzlewis|@aaronzlewis>: Until recently I had no idea that game engines are basically eating the world. Urban planning, architecture, automotive engineering firms, live music and events, filmmaking, etc. have all shifted a lot of their workflows/design processes to Unreal Engine and Unity",
                "ts": 1596845477,
                "author_name": "\ud83c\udd50\ud83c\udd69\ud83c\udd5b",
                "author_link": "https://twitter.com/aaronzlewis/status/1291889682788253696",
                "author_icon": "https://pbs.twimg.com/profile_images/1257026380954513409/PQ_gZatY_normal.jpg",
                "author_subname": "@aaronzlewis",
                "text": "Until recently I had no idea that game engines are basically eating the world. Urban planning, architecture, automotive engineering firms, live music and events, filmmaking, etc. have all shifted a lot of their workflows/design processes to Unreal Engine and Unity",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/aaronzlewis/status/1291889682788253696",
                "id": 1,
                "original_url": "https://twitter.com/aaronzlewis/status/1291889682788253696",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+cYd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting Twitter thread proposing game engines are becoming more popular for non-gaming use cases. These were the most interesting examples he gave to me:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Mandalorian and The Lion King were shot almost exclusively using these tools."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Even Hong Kong International Airport uses a \"digital twin\" built on Unity to simulate changes in passenger volume"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHe doesn't share many references or links with more details. I'd love to hear from anyone if they have more examples of game engines being used for non-gaming use cases like these. Or any links or other information to share related to this topic. "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/aaronzlewis/status/1291889682788253696"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597094873.373200",
        "reply_count": 17,
        "reply_users_count": 4,
        "latest_reply": "1597205349.430200",
        "reply_users": [
            "UC2A2ARPT",
            "U015902ESJC",
            "UA14TGLTC",
            "UBSMEUXAA"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "1195562e-5a8e-4264-9190-d9b2bdd1d27d",
        "type": "message",
        "text": "<@U6FKVSVCK> what do you think?",
        "user": "UT9TWSZB5",
        "ts": "1597095356.373400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UT9TWSZB5",
            "ts": "1597095364.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZtPVK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6FKVSVCK"
                            },
                            {
                                "type": "text",
                                "text": " what do you think?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596963256.327200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U6FKVSVCK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b0c0fd75-c375-4801-89bb-469eb2d6ea46",
        "type": "message",
        "text": "oo, very cool",
        "user": "U6FKVSVCK",
        "ts": "1597095760.373800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CK3x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oo, very cool"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596963256.327200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "9d162351-911b-4359-a6d5-d98bcdcdd68e",
        "type": "message",
        "text": "I think this is getting closer to the right idea. Their initial market seems to be for webdev (?), which I'd consider risky\u2014 devs are hard to win over for a whole host of reasons",
        "user": "U6FKVSVCK",
        "ts": "1597096041.374000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U6FKVSVCK",
            "ts": "1597096045.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yZyIq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this is getting closer to the right idea. Their initial market seems to be for webdev (?), which I'd consider risky\u2014 devs are hard to win over for a whole host of reasons"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596963256.327200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6117cd4a-c0f2-4585-bc43-8324daf78d0e",
        "type": "message",
        "text": "Here's a good article (I think this is the one I read) discussing the techniques used in The Mandalorian.\n\n<https://www.fxguide.com/fxfeatured/art-of-led-wall-virtual-production-part-one-lessons-from-the-mandalorian/>",
        "user": "UC2A2ARPT",
        "ts": "1597096062.374300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1597096807.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sxjkO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a good article (I think this is the one I read) discussing the techniques used in The Mandalorian.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.fxguide.com/fxfeatured/art-of-led-wall-virtual-production-part-one-lessons-from-the-mandalorian/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597094873.373200",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UE0ETTCG7",
                    "UA14TGLTC",
                    "UBSMEUXAA"
                ],
                "count": 3
            },
            {
                "name": "cake",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "bc794f73-0007-49d6-aecf-f7c5e6c2fad9",
        "type": "message",
        "text": "I found this particular bit really interesting:\n\n&gt; Latency and Lag\n&gt; From the time Profile\u2019s system received camera-position information to Unreal\u2019s rendering of the new position on the LED wall, there was about an 8 frame delay. This delay could be slightly longer if the signal had to also then be fed back to say a Steadicam operator. To allow for this when the team was rendering high resolution, camera-specific patches behind the actor (showing the correct parallax from the camera\u2019s point of view) the team would actually render a 40% larger oversized patch. This additional error margin gave a camera operator room to pan or tilt and not see the edge of the patch before the system could catch up with the correct field of view.",
        "user": "UC2A2ARPT",
        "ts": "1597096115.374500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ctvyd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I found this particular bit really interesting:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Latency and Lag\nFrom the time Profile\u2019s system received camera-position information to Unreal\u2019s rendering of the new position on the LED wall, there was about an 8 frame delay. This delay could be slightly longer if the signal had to also then be fed back to say a Steadicam operator. To allow for this when the team was rendering high resolution, camera-specific patches behind the actor (showing the correct parallax from the camera\u2019s point of view) the team would actually render a 40% larger oversized patch. This additional error margin gave a camera operator room to pan or tilt and not see the edge of the patch before the system could catch up with the correct field of view."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597094873.373200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "client_msg_id": "13329cfc-b8ad-46da-b76a-3148ae7ebe32",
        "type": "message",
        "text": "They're doing type safety which I approve of. And it looks like they're trying to offer fairly general primitives, which I also approve of.\n\nIt looks like you have to jump out of the system and write JSON/JS to define new functions, though? And I'd be curious how a user would express iteration.",
        "user": "U6FKVSVCK",
        "ts": "1597096267.374800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vKQZ3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They're doing type safety which I approve of. And it looks like they're trying to offer fairly general primitives, which I also approve of.\n\nIt looks like you have to jump out of the system and write JSON/JS to define new functions, though? And I'd be curious how a user would express iteration."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1596963256.327200",
        "parent_user_id": "UBN9AFS0N"
    }
]