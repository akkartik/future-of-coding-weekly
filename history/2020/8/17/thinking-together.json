[
    {
        "client_msg_id": "4F9F91D0-08E8-4103-B18D-85600DD9F3C0",
        "type": "message",
        "text": "What is future of hardware and how will it impact the future of code? What are the most promising approaches to breaking free of Von Neumann bottleneck? &lt;- is this still a thing?\nI have heard Simon Peyton Jones say a couple of times that they tried to create new architectures for functional languages but they failed.\nWould these architectures succeed today? Are the constraints(business, technical, community) different enough or will be differ enough in 10 years that they could succeed?",
        "user": "UKP3B2J5D",
        "ts": "1597671602.008000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UKP3B2J5D",
            "ts": "1597676220.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9i47",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is future of hardware and how will it impact the future of code? What are the most promising approaches to breaking free of Von Neumann bottleneck? <- is this still a thing?\nI have heard Simon Peyton Jones say a couple of times that they tried to create new architectures for functional languages but they failed.\nWould these architectures succeed today? Are the constraints(business, technical, community) different enough or will be differ enough in 10 years that they could succeed?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "reply_count": 17,
        "reply_users_count": 9,
        "latest_reply": "1597784262.074200",
        "reply_users": [
            "UBN9AFS0N",
            "U014WA16VNJ",
            "UKP3B2J5D",
            "UJN1TAYEQ",
            "U01661S9F34",
            "UHWC9PXBL",
            "UCUSW7WVD",
            "UFB8STN7K",
            "U013ZLJARC7"
        ],
        "subscribed": true,
        "last_read": "1597784262.074200",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1da87f39-15a9-4585-a82a-45ae69313ef9",
        "type": "message",
        "text": "the memristor and non volatile RAM should change how we code, no longer need to think about state persistence as a separate step, the problem is that now we can't fix by rebooting :smile:",
        "user": "UBN9AFS0N",
        "ts": "1597671789.010300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UtWLI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the memristor and non volatile RAM should change how we code, no longer need to think about state persistence as a separate step, the problem is that now we can't fix by rebooting "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UKP3B2J5D",
                    "UA14TGLTC",
                    "U01661S9F34",
                    "ULM3U6275",
                    "UJ6LDMMN0"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "75CC4CEB-12EE-465F-B73A-62D5F5C5FF8E",
        "type": "message",
        "text": "I\u2019m unrelentingly hyped for <https://en.wikipedia.org/wiki/Field-programmable_gate_array|FPGAs> and anything resembling graph-processing. Merging memory, storage, and computing into the same substrate is also exciting.\n\nMore than the specific possible hardware, my real hope is to remember _computation_ is king, and hardware should be in support of the computation we\u2019d like to do quickly. If you have a way of computing that may be awesome but is hard to reconcile with hardware, that\u2019s a sign hardware should adapt to fit.\n\nIntel has had long enough dictating the terms of programming, and we certainly don\u2019t want to replace them with an ARMs race to the next monopoly.\n\n\u201cIf hardware is unjust, change hardware!\u201d\n\u2014 stealing from a quote about naturalism",
        "user": "U014WA16VNJ",
        "ts": "1597672015.014600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1597672111.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oj6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m unrelentingly hyped for "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Field-programmable_gate_array",
                                "text": "FPGAs"
                            },
                            {
                                "type": "text",
                                "text": " and anything resembling graph-processing. Merging memory, storage, and computing into the same substrate is also exciting.\n\nMore than the specific possible hardware, my real hope is to remember "
                            },
                            {
                                "type": "text",
                                "text": "computation ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "is king, and hardware should be in support of the computation we\u2019d like to do quickly. If you have a way of computing that may be awesome but is hard to reconcile with hardware, that\u2019s a sign hardware should adapt to fit.\n\nIntel has had long enough dictating the terms of programming, and we certainly don\u2019t want to replace them with an ARMs race to the next monopoly.\n\n\u201cIf hardware is unjust, change hardware!\u201d\n\u2014 stealing from a quote about naturalism"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "UKP3B2J5D",
                    "UCGAK10LS"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "UNCP67JSK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "9C113619-05BF-4D4C-8C39-545DA109F98A",
        "type": "message",
        "text": "I was lead down this path by wondering if there are enough people writing python, for example, that a python interpreter compiled to hardware (a machine that only knows to how to interpret python 3.7 for example and optimised to do so) would be a great idea i.e makes sense from a unit cost perspective and efficient in other ways. \n\nWe probably don\u2019t want to compile user code to hardware since we still want to be able to change code so quickly but things like the interpreter that are relatively fixed and are used by enough people maybe it makes sense. \nShould we hardware be a more significant portion of the stack? Does the tradeoff make sense? Flexibility for power. (Just checked Wikipedia, yeah ASIC or FPGA that is just for python for example). Wonder if anyone has tried it and if it would be more widespread in future. ",
        "user": "UKP3B2J5D",
        "ts": "1597672674.024200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T=t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was lead down this path by wondering if there are enough people writing python, for example, that a python interpreter compiled to hardware (a machine that only knows to how to interpret python 3.7 for example and optimised to do so) would be a great idea i.e makes sense from a unit cost perspective and efficient in other ways. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "We probably don\u2019t want to compile user code to hardware since we still want to be able to change code so quickly but things like the interpreter that are relatively fixed and are used by enough people maybe it makes sense. \nShould we hardware be a more significant portion of the stack? Does the tradeoff make sense? Flexibility for power. (Just checked Wikipedia, yeah ASIC or FPGA that is just for python for example). Wonder if anyone has tried it and if it would be more widespread in future. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "a18b16b8-31eb-4fc7-b63d-b05936fadff1",
        "type": "message",
        "text": "It looks like GPUs are the way we break free of the Von Neumann bottleneck. Desktop discrete GPUs have thousands of processing units. Every personal computer (desktop, laptop, mobile) now has a powerful GPU. Machine learning has made GPUs even more relevant. The future of code needs to take GPUs into account, and not ignore this powerful hardware. My project, Curv, lets you write simple, high level code that executes either on the CPU or on the GPU. Curv is a pure functional language because it's easier to compile pure functional code into massively parallel GPU code. I think that GPUs are viable as an architecture for pure functional programming. I do think that you need to design your pure functional language with GPUs in mind, and that wasn't a consideration for the design of Haskell. I'm not claiming that Haskell is the ideal GPU programming language.",
        "user": "UJN1TAYEQ",
        "ts": "1597672921.024600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8nk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It looks like GPUs are the way we break free of the Von Neumann bottleneck. Desktop discrete GPUs have thousands of processing units. Every personal computer (desktop, laptop, mobile) now has a powerful GPU. Machine learning has made GPUs even more relevant. The future of code needs to take GPUs into account, and not ignore this powerful hardware. My project, Curv, lets you write simple, high level code that executes either on the CPU or on the GPU. Curv is a pure functional language because it's easier to compile pure functional code into massively parallel GPU code. I think that GPUs are viable as an architecture for pure functional programming. I do think that you need to design your pure functional language with GPUs in mind, and that wasn't a consideration for the design of Haskell. I'm not claiming that Haskell is the ideal GPU programming language."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "748739a1-2c82-41aa-be95-ddf0080c99d4",
        "type": "message",
        "text": "&gt; If you have a way of computing that may be awesome but is hard to reconcile with hardware, that\u2019s a sign hardware should adapt to fit.\nThat hasn't worked out for the Haskell people:\n&gt; I have heard Simon Peyton Jones say a couple of times that they tried to create new architectures for functional languages but they failed.",
        "user": "UJN1TAYEQ",
        "ts": "1597673306.027000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YpM",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you have a way of computing that may be awesome but is hard to reconcile with hardware, that\u2019s a sign hardware should adapt to fit."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That hasn't worked out for the Haskell people:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have heard Simon Peyton Jones say a couple of times that they tried to create new architectures for functional languages but they failed."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "F900A114-3A05-463F-AF7A-FA933B0C5D34",
        "type": "message",
        "text": "<@UJN1TAYEQ> +1\nI hope one day in the future we can design programming systems on top of computational constructs like concurrency, parallelism, uncertainty, etc. and have hardware like GPUs, CPUs or networked machines be chosen dynamically without human design interventions for specific architectures.\n\nThese are all technically challenging and won\u2019t always succeed, but for it to have a chance we\u2019ll need to change the direction of funding around, flowing from code requirements to hardware imperatives.",
        "user": "U014WA16VNJ",
        "ts": "1597673365.027200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1597673550.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LZGW8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " +1\nI hope one day in the future we can design programming systems on top of computational constructs like concurrency, parallelism, uncertainty, etc. and have hardware like GPUs, CPUs or networked machines be chosen dynamically without human design interventions for specific architectures.\n\nThese are all technically challenging and won\u2019t always succeed, but for it to have a chance we\u2019ll need to change the direction of funding around, flowing from code requirements to hardware imperatives."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "840223F9-8CBE-4A29-8C23-56B28E049570",
        "type": "message",
        "text": "BOOKS! I\u2019m running dangerously low on books and would love some FoC related recommendations. I feel I barely know what\u2019s out there.\n\nEdit: am now out of books, please save me.\n",
        "user": "U014WA16VNJ",
        "ts": "1597675256.030400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1597676974.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5yf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "BOOKS! I\u2019m running dangerously low on books and would love some FoC related recommendations. I feel I barely know what\u2019s out there.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Edit: am now out of books, please save me.\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "reply_count": 14,
        "reply_users_count": 8,
        "latest_reply": "1597922674.000600",
        "reply_users": [
            "USH01JEDQ",
            "UDQBTJ211",
            "UC2A2ARPT",
            "U014WA16VNJ",
            "UP6G25H35",
            "UCGAK10LS",
            "UN57U8V53",
            "UG0EL18H3"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "0D477898-F089-4679-A0CB-5CD57A72D0C1",
        "type": "message",
        "text": "My suggestion is off-topic for FoC, but for FoB (future-of-books)... I highly recommend Reality Hunger by David Shields. Read that and see what it does to your brain. And then I think that new brain will have some fresh perspectives on FoC. \n\nReality Hunger is a thought-experiment about employing collage for new types of composition. I think it's relevant to this group because so many FoC meta-patterns correlate to collage - placing in free-space, implicit connection, higher-order effects, ease of creation.",
        "user": "USH01JEDQ",
        "ts": "1597677849.035100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PYwHG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My suggestion is off-topic for FoC, but for FoB (future-of-books)... I highly recommend Reality Hunger by David Shields. Read that and see what it does to your brain. And then I think that new brain will have some fresh perspectives on FoC. \n\n"
                            },
                            {
                                "type": "text",
                                "text": "Reality Hunger is a thought-experiment about employing collage for new types of composition. I think it's relevant to this group because so many FoC meta-patterns correlate to collage - placing in free-space, implicit connection, higher-order effects, ease of creation."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U014WA16VNJ",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "5699dbf4-20a0-4c37-a3ae-80565b21e9a8",
        "type": "message",
        "text": "Not really FoC but I enjoyed The Idea Factory which is about Bell Labs",
        "user": "UDQBTJ211",
        "ts": "1597678251.035400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wql",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not really FoC but I enjoyed The Idea Factory which is about Bell Labs"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U014WA16VNJ",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b5ca5e20-7d61-468b-a9fd-265698dfd232",
        "type": "message",
        "text": "My criticism of Haskell is that ubiquitous lazy evaluation is not a good idea. This feature means that understanding and tuning the performance of a program is much harder in Haskell than in any other language. Debugging is also messed up: it doesn't really make sense to ask for a stack trace. Attempts to build high performance Haskell hardware have failed. All these facts are closely related. Haskell is somehow lacking in mechanical empathy.",
        "user": "UJN1TAYEQ",
        "ts": "1597679586.036000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/Ni3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My criticism of Haskell is that ubiquitous lazy evaluation is not a good idea. This feature means that understanding and tuning the performance of a program is much harder in Haskell than in any other language. Debugging is also messed up: it doesn't really make sense to ask for a stack trace. Attempts to build high performance Haskell hardware have failed. All these facts are closely related. Haskell is somehow lacking in mechanical empathy."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "90b081b2-a4f1-4df5-9988-5b26c018a7b7",
        "type": "message",
        "text": "Modern CPUs are designed to execute single threaded C programs as quickly as possible. There is a ton of silicon devoted to superscalar out-of-order speculative execution, etc. It isn't an efficient use of hardware.\n\n&gt; My real hope is to remember _computation_ is king, and hardware should be in support of the computation we\u2019d like to do quickly.\nModern GPUs are designed to maximize the percentage of silicon that contains ALUs, relative to the amount of control logic. It is an efficient way to use silicon, if your goal is to maximize the amount of compute that can be accomplished with a given transistor budget.\n\nSo we start with this super powerful hardware with monster compute abilities, and we build languages that let us easily program it.",
        "user": "UJN1TAYEQ",
        "ts": "1597679968.036200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MuI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Modern CPUs are designed to execute single threaded C programs as quickly as possible. There is a ton of silicon devoted to superscalar out-of-order speculative execution, etc. It isn't an efficient use of hardware.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My real hope is to remember "
                            },
                            {
                                "type": "text",
                                "text": "computation ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "is king, and hardware should be in support of the computation we\u2019d like to do quickly."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nModern GPUs are designed to maximize the percentage of silicon that contains ALUs, relative to the amount of control logic. It is an efficient way to use silicon, if your goal is to maximize the amount of compute that can be accomplished with a given transistor budget.\n\nSo we start with this super powerful hardware with monster compute abilities, and we build languages that let us easily program it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597671602.008000",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "66c17395-497d-4b73-82e0-8778dade8785",
        "type": "message",
        "text": "Can't ever read too much Borges.\n\nSpeaking of Borges \u2014 if you want a collection of FoC-relevant short-form pieces (fiction and non), this textbook can be had for like $10 used on Amazon \u2014 <http://www.newmediareader.com>. Worth the price just for the cute ways the make the book interlinked, in an attempt to treat trad. media like hypermedia.",
        "user": "UC2A2ARPT",
        "ts": "1597680057.036400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1597680125.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cveZX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can't ever read too much Borges.\n\nSpeaking of Borges \u2014 if you want a collection of FoC-relevant short-form pieces (fiction and non), this textbook can be had for like $10 used on Amazon \u2014 "
                            },
                            {
                                "type": "link",
                                "url": "http://www.newmediareader.com"
                            },
                            {
                                "type": "text",
                                "text": ". Worth the price just for the cute ways the make the book interlinked, in an attempt to treat trad. media like hypermedia."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "star",
                "users": [
                    "USH01JEDQ",
                    "UMWF81HTP"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1C69B30A-9D8B-43BB-9464-7A19AF901D9E",
        "type": "message",
        "text": "<@USH01JEDQ> <@UDQBTJ211> ordered!",
        "user": "U014WA16VNJ",
        "ts": "1597680770.037300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ViRBu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "USH01JEDQ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " ordered!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "muscle",
                "users": [
                    "USH01JEDQ",
                    "UDQBTJ211"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "51479B07-94ED-4C1B-9469-737F62C5F605",
        "type": "message",
        "text": "<@UC2A2ARPT> ordered the new media reader, looks like _treasure_! (I also have Computer Lib/Dream Machines and it feels like I\u2019m collecting historical artefacts, I love it!) \n\nI\u2019m completely unfamiliar with Borges, any recommendations to start off?",
        "user": "U014WA16VNJ",
        "ts": "1597681130.040300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HU2u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " ordered the new media reader, looks like "
                            },
                            {
                                "type": "text",
                                "text": "treasure",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "! (I also have Computer Lib/Dream Machines and it feels like I\u2019m collecting historical artefacts, I love it!) \n\nI\u2019m completely unfamiliar with Borges, any recommendations to start off?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "parent_user_id": "U014WA16VNJ"
    },
    {
        "client_msg_id": "116b8f20-3043-4978-8d2b-17dae2c5f883",
        "type": "message",
        "text": "Garden of Forking Paths is included in the NMR. I'd also recommend The Library of Babel (another short story). You may want to just grab the _Ficciones_ collection, or the _Labyrinths_ collection (they have a lot of overlap, mind)",
        "user": "UC2A2ARPT",
        "ts": "1597681697.040700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1597681876.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pdjPS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Garden of Forking Paths is included in the NMR. I'd also recommend The Library of Babel (another short story). You may want to just grab the "
                            },
                            {
                                "type": "text",
                                "text": "Ficciones ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "collection, or the "
                            },
                            {
                                "type": "text",
                                "text": "Labyrinths ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "collection (they have a lot of overlap, mind)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1597675256.030400",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    }
]