[
    {
        "client_msg_id": "d863239a-3792-4833-9879-7213eb384cda",
        "type": "message",
        "text": "Hi everyone, long-time lurker here. I wanted to share a project I worked on for my PhD and hear your thoughts. It is a platform for quickly assembling web apps out of a new kind of software module we call a concept. Concepts are full-stack units of end-user functionality. For example, a comment concept manages the creation and display of comments, and a posting concept lets users create posts.\n\nEach concept exports a set of components, which are similar to components in modern web frameworks like React. A key difference, however, is that concept components have an associated server-side action, which can be synchronized with other actions. In our platform, called D\u00e9j\u00e0 Vu, a developer builds an app by including concepts and synchronizing the server-side actions of components. To assemble apps you only write JSON, HTML, and CSS\u2014no server-side code or client-side JavaScript is required.\n\nWebpage:\u00a0<https://deja-vu-platform.com>\nPaper:\u00a0<https://spderosso.github.io/onward19.pdf>\nSlides of the most recent talk: <https://spderosso.github.io/slides/thesisdefense20.pdf>\nDemo of the graphical environment (developed by Barry, a master student in our group):\u00a0<https://www.youtube.com/watch?v=10IexBI5v-A&amp;feature=youtu.be>\n\nIf you have any feedback, let me know. Also, if you are working on modularity/software composition, I\u2019d love to see what you are up to!",
        "user": "UP7N4QVK2",
        "ts": "1591918996.315500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UP7N4QVK2",
            "ts": "1591919237.000000"
        },
        "attachments": [
            {
                "service_name": "D\u00e9j\u00e0 Vu Platform",
                "title": "about",
                "title_link": "https://deja-vu-platform.com/",
                "text": "assemble web apps from concepts using HTML",
                "fallback": "D\u00e9j\u00e0 Vu Platform: about",
                "from_url": "https://deja-vu-platform.com/",
                "service_icon": "https://deja-vu-platform.com/favicon.ico",
                "id": 1,
                "original_url": "https://deja-vu-platform.com"
            },
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "D\u00e9j\u00e0 Vu Designer Demo",
                "title_link": "https://www.youtube.com/watch?v=10IexBI5v-A&amp;feature=youtu.be",
                "author_name": "Barry McNamara",
                "author_link": "https://www.youtube.com/user/vegemoth1995",
                "thumb_url": "https://i.ytimg.com/vi/10IexBI5v-A/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: D\u00e9j\u00e0 Vu Designer Demo",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/10IexBI5v-A?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=10IexBI5v-A&amp;feature=youtu.be",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 2,
                "original_url": "https://www.youtube.com/watch?v=10IexBI5v-A&amp;feature=youtu.be"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wikn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone, long-time lurker here. I wanted to share a project I worked on for my PhD and hear your thoughts. It is a platform for quickly assembling web apps out of a new kind of software module we call a concept. Concepts are full-stack units of end-user functionality. For example, a comment concept manages the creation and display of comments, and a posting concept lets users create posts.\n\nEach concept exports a set of components, which are similar to components in modern web frameworks like React. A key difference, however, is that concept components have an associated server-side action, which can be synchronized with other actions. In our platform, called D\u00e9j\u00e0 Vu, a developer builds an app by including concepts and synchronizing the server-side actions of components. To assemble apps you only write JSON, HTML, and CSS\u2014no server-side code or client-side JavaScript is required.\n\nWebpage:\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://deja-vu-platform.com"
                            },
                            {
                                "type": "text",
                                "text": "\nPaper:\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://spderosso.github.io/onward19.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\nSlides of the most recent talk: "
                            },
                            {
                                "type": "link",
                                "url": "https://spderosso.github.io/slides/thesisdefense20.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\nDemo of the graphical environment (developed by Barry, a master student in our group):\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=10IexBI5v-A&feature=youtu.be"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIf you have any feedback, let me know. Also, if you are working on modularity/software composition, I\u2019d love to see what you are up to!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "reply_count": 24,
        "reply_users_count": 10,
        "latest_reply": "1592942544.336000",
        "reply_users": [
            "UEQ6M68H0",
            "USH01JEDQ",
            "UAVCC2X70",
            "UJKKBAMLL",
            "UP7N4QVK2",
            "UC2A2ARPT",
            "U012XRK1371",
            "UHWC9PXBL",
            "UD6EXQVM0",
            "UN57U8V53"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U012XRK1371",
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UUQ2EQW21"
                ],
                "count": 4
            },
            {
                "name": "thinking_face",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0b8d3586-9f6d-4a8d-91ca-9afe0b564f0b",
        "type": "message",
        "text": "An unusual effort. Apparently you created new HTML tags. And they have semantics. What i don't see anywhere which baffles me is your data structuring. Programs = Algorithms + data structures according to Prof. Wirth, and where are the data structures? What are the primitive types of your system? If there are no data structures, then how would you do a tic tac toe game for example, where you track the mutable state of the game as it progresses?  Or do you intend the game to be a custom module. JSON is a highly limiting data storage format, it only has boolean, string, and numeric data, and meta data is quite awkward to embed.\n\nI did like that you had students build little test apps.",
        "user": "UEQ6M68H0",
        "ts": "1591929608.315900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ALA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An unusual effort. Apparently you created new HTML tags. And they have semantics. What i don't see anywhere which baffles me is your data structuring. Programs = Algorithms + data structures according to Prof. Wirth, and where are the data structures? What are the primitive types of your system? If there are no data structures, then how would you do a tic tac toe game for example, where you track the mutable state of the game as it progresses?  Or do you intend the game to be a custom module. JSON is a highly limiting data storage format, it only has boolean, string, and numeric data, and meta data is quite awkward to embed.\n\nI did like that you had students build little test apps."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    },
    {
        "client_msg_id": "E67B05D2-3439-4ABF-B5A5-0C586AB07108",
        "type": "message",
        "text": "Components can act as data structures - and transformations can accomplish a lot",
        "user": "USH01JEDQ",
        "ts": "1591934331.317000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sxf9U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Components can act as data structures - and transformations can accomplish a lot"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    },
    {
        "client_msg_id": "59752834-5518-46a2-8b18-11a02b225643",
        "type": "message",
        "text": "if a component acts as a data structure, how would component B access the contents of component A's data structures? If you only have JSON, how does one import a sound or bitmap? are you using explicit RAM pointers like JS? If so how do you then serialize your data for transport over the net? How does one introspect the contents of a component? If you have no meta data structuring, then each component author may adopt a different protocol. The devil is in the details as they say.",
        "user": "UEQ6M68H0",
        "ts": "1591940524.317200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/9=C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if a component acts as a data structure, how would component B access the contents of component A's data structures? If you only have JSON, how does one import a sound or bitmap? are you using explicit RAM pointers like JS? If so how do you then serialize your data for transport over the net? How does one introspect the contents of a component? If you have no meta data structuring, then each component author may adopt a different protocol. The devil is in the details as they say."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3910a8a9-fdcb-4b86-85d9-c09588414370",
        "type": "message",
        "text": "I have yet to look at this closer, but it sounds very interesting!",
        "user": "UAVCC2X70",
        "ts": "1591940981.317400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OIN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have yet to look at this closer, but it sounds very interesting!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UP7N4QVK2"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "94C002B2-E436-409D-AA6E-B6A5B1CE9809",
        "type": "message",
        "text": "Edward, you should try declarative programming, you may enjoy it",
        "user": "USH01JEDQ",
        "ts": "1591969890.318400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fDlj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Edward, you should try declarative programming, you may enjoy it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    },
    {
        "client_msg_id": "a6400ac1-21e4-4a25-a532-dac008d3b6d8",
        "type": "message",
        "text": "It\u2019s not clear to me *who* this is for and *what* problem are you solving? You mention concepts like objects, id, inputs, outputs,, events, components, classes, and properties which are pretty strong terms \u2014 all requiring explanation of domain and constraints. The foundation of the UX is also quite complex which will turn-away most people.\n\nAdditionally, the problem you are solving is not clear. Instead of comparing to other apps (which I think is not a good approach) I rather ask what specific problem this is solving? Internal or external tools? What department?",
        "user": "UJKKBAMLL",
        "ts": "1591982548.318600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d6QaB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s not clear to me "
                            },
                            {
                                "type": "text",
                                "text": "who",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " this is for and "
                            },
                            {
                                "type": "text",
                                "text": "what",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " problem are you solving? You mention concepts like objects, id, inputs, outputs,, events, components, classes, and properties which are pretty strong terms \u2014 all requiring explanation of domain and constraints. The foundation of the UX is also quite complex which will turn-away most people.\n\nAdditionally, the problem you are solving is not clear. Instead of comparing to other apps (which I think is not a good approach) I rather ask what specific problem this is solving? Internal or external tools? What department?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    },
    {
        "client_msg_id": "7ef02db5-fcdd-4abe-a17e-e5b0250a1acc",
        "type": "message",
        "text": "\u201cthe dollar sign means its coming from the parent in the Deja Ju language; which you don\u2019t need to know - your designer will, unless you want to type it out yourself\u201d \u2014 That statement is revealing to my comment above.",
        "user": "UJKKBAMLL",
        "ts": "1591982698.318800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OTbwb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\u201cthe dollar sign means its coming from the parent in the Deja Ju language; which you don\u2019t need to know - your designer will, unless you want to type it out yourself\u201d \u2014 That statement is revealing to my comment above."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    },
    {
        "client_msg_id": "c50bcfa4-09d2-4f53-a187-aa8fe4eb65bb",
        "type": "message",
        "text": "<@UEQ6M68H0>   To answer your question about the tic-tac-toe game, we would expect that to be a separate concept. The goal of D\u00e9j\u00e0 Vu is not to be a general-purpose programming system, and it will not be well-suited for some types of web applications like games. That said, in our HTML extension, you can write expressions for the input/output bindings between components, and we have some concepts like \u201cProperty\u201d, which are quite generic and can be configured to support different use cases.",
        "user": "UP7N4QVK2",
        "ts": "1591989357.319000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UP7N4QVK2",
            "ts": "1592003733.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qGR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": "   To answer your question about the tic-tac-toe game, we would expect that to be a separate concept. The goal of D\u00e9j\u00e0 Vu is not to be a general-purpose programming system, and it will not be well-suited for some types of web applications like games. That said, in our HTML extension, you can write expressions for the input/output bindings between components, and we have some concepts like \u201cProperty\u201d, which are quite generic and can be configured to support different use cases."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    },
    {
        "client_msg_id": "bd63e764-c1b0-46f5-bb2c-dafc4265c822",
        "type": "message",
        "text": "<@UJKKBAMLL> the goal is to make it easy for people to develop web apps that are a mix of commonly found functionality, with little custom behavior. For example, a basic Yelp clone for your community, or a social app for planning events on campus, etc. The audience is people that know HTML/CSS (if they want to use our language and get absolute control of the layout/styling of the page) or people that don\u2019t necessarily know how to code, which is what the graphical environment is for.",
        "user": "UP7N4QVK2",
        "ts": "1591989991.319200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UP7N4QVK2",
            "ts": "1591992480.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B06",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": " the goal is to make it easy for people to develop web apps that are a mix of commonly found functionality, with little custom behavior. For example, a basic Yelp clone for your community, or a social app for planning events on campus, etc. The audience is people that know HTML/CSS (if they want to use our language and get absolute control of the layout/styling of the page) or people that don\u2019t necessarily know how to code, which is what the graphical environment is for."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "67400851-5184-4d5d-b39c-2320a115034e",
        "type": "message",
        "text": "<@UJKKBAMLL> I agree that the tool is more complex than it should be :slightly_smiling_face: This is a research project with little funding and we focus our efforts on validating our approach instead of doing a ton of engineering work to build an enterprise-ready shiny version of our tool",
        "user": "UP7N4QVK2",
        "ts": "1591990100.319400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CKRTD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": " I agree that the tool is more complex than it should be "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " This is a research project with little funding and we focus our efforts on validating our approach instead of doing a ton of engineering work to build an enterprise-ready shiny version of our tool"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "c8625c67-c975-419b-9d5e-acef6217c832",
        "type": "message",
        "text": "<@UJKKBAMLL> to add a bit more on the question about who is this for: today you have many people using CMSs like WordPress/Drupal to build medium-complexity apps that go beyond a regular blog.  You can do a lot with plug-ins in CMSs, but plug-ins lack a generic composition mechanism, so composing them often requires a lot very complicated glue code. In D\u00e9j\u00e0 Vu, our plug-ins (the concepts) can be combined together more easily through the declarative synchronization of the server-side actions of components. Essentially what we did is build a generic composition mechanism for plug-ins.",
        "user": "UP7N4QVK2",
        "ts": "1591990887.319800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UP7N4QVK2",
            "ts": "1591992681.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uRtsh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": " to add a bit more on the question about who is this for: today you have many people using CMSs like WordPress/Drupal to build medium-complexity apps that go beyond a regular blog.  You can do a lot with plug-ins in CMSs, but plug-ins lack a generic composition mechanism, so composing them often requires a lot very complicated glue code. In D\u00e9j\u00e0 Vu, our plug-ins (the concepts) can be combined together more easily through the declarative synchronization of the server-side actions of components. Essentially what we did is build a generic composition mechanism for plug-ins."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    },
    {
        "client_msg_id": "72a9dcc0-b8a8-4e6a-b647-9bfbb36016d0",
        "type": "message",
        "text": "HTML/CSS is coding though. It may be the basics, but it\u2019s certainly already in the realm of complexity that most people don\u2019t know and may have learned out of necessity. Figma, Notion, Fibery, Airtable, and several other nocode platforms that already exist today feel more appropriate for these types of use cases. They may not fit perfectly, but that is not the point and the user won\u2019t know that until they try various solutions.",
        "user": "UJKKBAMLL",
        "ts": "1591991176.320000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ax3Ke",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "HTML/CSS is coding though. It may be the basics, but it\u2019s certainly already in the realm of complexity that most people don\u2019t know and may have learned out of necessity. Figma, Notion, Fibery, Airtable, and several other nocode platforms that already exist today feel more appropriate for these types of use cases. They may not fit perfectly, but that is not the point and the user won\u2019t know that until they try various solutions."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4b56b61a-2c6b-439e-a2bf-5ac0a0fd76ae",
        "type": "message",
        "text": "<@UJKKBAMLL> I read it as..\n&gt; The audience is (A) people that know HTML/CSS ... or (B) people that don\u2019t necessarily know how to code, which is what the graphical environment is for.\nSo yes, HTML/CSS is coding \u2014 that's the point. Deja Vu seems to be intended for people who are right near the dividing line between \"comfortable with basic forms of coding\" and \"not\" \u2014\u00a0which is an interesting space, because clearly Deja Vu is a coding tool too, so it's pushing that boundary a bit.\n\n&gt; Figma, Notion, Fibery, Airtable, and several other nocode platforms that already exist today feel more appropriate for these types of use cases. They may not fit perfectly, but that is not the point and the user won\u2019t know that until they try various solutions.\nI don't understand your point here. Are you arguing that these existing tools are already doing the work that Deja Vu aims to do? What should Santiago take away from this?",
        "user": "UC2A2ARPT",
        "ts": "1591993249.320700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1591993361.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ba9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": " I read it as..\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The audience is (A) people that know HTML/CSS ... or (B) people that don\u2019t necessarily know how to code, which is what the graphical environment is for."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSo yes, HTML/CSS is coding \u2014 that's the point. Deja Vu seems to be intended for people who are right near the dividing line between \"comfortable with basic forms of coding\" and \"not\" \u2014\u00a0which is an interesting space, because clearly Deja Vu is a coding tool too, so it's pushing that boundary a bit.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Figma, Notion, Fibery, Airtable, and several other nocode platforms that already exist today feel more appropriate for these types of use cases. They may not fit perfectly, but that is not the point and the user won\u2019t know that until they try various solutions."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI don't understand your point here. Are you arguing that these existing tools are already doing the work that Deja Vu aims to do? What should Santiago take away from this?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    },
    {
        "client_msg_id": "4ab23114-f60e-44c3-bc36-1bc82f7b49e9",
        "type": "message",
        "text": "&gt; Figma, Notion, Fibery, Airtable, and several other nocode platforms that already exist today feel more appropriate for these types of use cases\nYou might be able to build some of these apps using no-code tools, but it\u2019s more work than using D\u00e9j\u00e0 Vu. If you use something like Bubble, for example, you have to write all the end-user behavior yourself (when a user clicks on this button, do this, etc) and if you use a plug-in like Discord for comments, you still need to write back-end triggers for things like when a new comment is created, do X, etc, to get the compound behavior you want. In D\u00e9j\u00e0 Vu, you can get compound behavior by synchronizing server-side actions (you only put components inside a &lt;dv.tx&gt; tag).\n\nFor more about this, see section 1.2 of the paper:\n<https://spderosso.github.io/onward19.pdf>",
        "user": "UP7N4QVK2",
        "ts": "1591994634.321000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UP7N4QVK2",
            "ts": "1591994729.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pol7",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Figma, Notion, Fibery, Airtable, and several other nocode platforms that already exist today feel more appropriate for these types of use cases"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might be able to build some of these apps using no-code tools, but it\u2019s more work than using D\u00e9j\u00e0 Vu. If you use something like Bubble, for example, you have to write all the end-user behavior yourself (when a user clicks on this button, do this, etc) and if you use a plug-in like Discord for comments, you still need to write back-end triggers for things like when a new comment is created, do X, etc, to get the compound behavior you want. In D\u00e9j\u00e0 Vu, you can get compound behavior by synchronizing server-side actions (you only put components inside a <dv.tx> tag).\n\nFor more about this, see section 1.2 of the paper:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://spderosso.github.io/onward19.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "733a8a47-69ec-48b0-af0e-846172f331ff",
        "type": "message",
        "text": "<@UC2A2ARPT> I\u2019ve been chatting with Santiago in DM with much more content. I\u2019m more interested at poking at the foundational questions of WHO and WHY before we get to the HOW. And yes, I do believe existing tools today solve the problems at hand. It remains unclear to what DejaVu is focused on (who/why? not how yet) which is what I\u2019m DM\u2019ing him about.",
        "user": "UJKKBAMLL",
        "ts": "1591996107.321300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y=jfE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I\u2019ve been chatting with Santiago in DM with much more content. I\u2019m more interested at poking at the foundational questions of WHO and WHY before we get to the HOW. And yes, I do believe existing tools today solve the problems at hand. It remains unclear to what DejaVu is focused on (who/why? not how yet) which is what I\u2019m DM\u2019ing him about."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591918996.315500",
        "parent_user_id": "UP7N4QVK2"
    }
]