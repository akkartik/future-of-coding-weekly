[
    {
        "client_msg_id": "1c3cb392-cd06-4658-ae35-70f1057cf087",
        "type": "message",
        "text": "Hi, not sure if this is a good place to bring awareness to this:  <https://www.shutdownstem.com/who>. I think in light of what is happening around us, it will be quite tone deaf of people who considers the future of coding not to consider the people making it happen. My DMs are open to people who want to share/discuss antiracism even within code. just today, I worked with a coworker to make sure we stop using black/white list and use block/allow list instead. seems rather trivial and we know the intentions wasn\u2019t a racist one, but this is a purposeful change in our codebase to remove subtle/nonsubtle racism.",
        "user": "UCXR52MU2",
        "ts": "1591741456.139100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eGl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, not sure if this is a good place to bring awareness to this:  "
                            },
                            {
                                "type": "link",
                                "url": "https://www.shutdownstem.com/who"
                            },
                            {
                                "type": "text",
                                "text": ". I think in light of what is happening around us, it will be quite tone deaf of people who considers the future of coding not to consider the people making it happen. My DMs are open to people who want to share/discuss antiracism even within code. just today, I worked with a coworker to make sure we stop using black/white list and use block/allow list instead. seems rather trivial and we know the intentions wasn\u2019t a racist one, but this is a purposeful change in our codebase to remove subtle/nonsubtle racism."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591741456.139100",
        "reply_count": 8,
        "reply_users_count": 5,
        "latest_reply": "1591857217.151500",
        "reply_users": [
            "UC2A2ARPT",
            "UE6EFEPTQ",
            "U015902ESJC",
            "U6FKVSVCK",
            "UBSMEUXAA"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UCUSW7WVD",
                    "U013HU44GLS",
                    "USH01JEDQ",
                    "UFB8STN7K",
                    "UA14TGLTC",
                    "U015902ESJC",
                    "U0123H7JRDM",
                    "UBN9AFS0N",
                    "U01554W5BS5",
                    "UR482RFPY",
                    "UHWC9PXBL",
                    "UV1CVSXGC",
                    "UBSMEUXAA",
                    "US370TRJA"
                ],
                "count": 15
            },
            {
                "name": "clap",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "fc7e478b-b67c-4028-a42a-1d55e8355774",
        "type": "message",
        "text": "That's a helpful link, thank you.\n\nIf anyone here is planning to participate in this, and feels comfortable sharing that fact, I think an indication of solidarity would be a positive gesture. Feel free to post a comment here, or throw a :black_nib: on the parent post. (I hope that's appropriate.)\n\nIf anyone would like to see changes to this community so that we can do a better job amplifying the influence of the underrepresented (which is one of the community's core principles), I invite you to start a <#CEXED56UR|meta> thread or DM me to tell me what I can do to help.\n\nFinally, if anyone has favourite Black people or people of color that they'd like to hear me interview on the podcast, I'm always looking. (My potential-guest list is already about 50 people long \u2014\u00a0I cannot get to everyone, but the more options I have, the better job I can do covering all bases in a cohesive way where each episode builds on the ones before.)",
        "user": "UC2A2ARPT",
        "ts": "1591742648.139400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jrVc+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's a helpful link, thank you.\n\nIf anyone here is planning to participate in this, and feels comfortable sharing that fact, I think an indication of solidarity would be a positive gesture. Feel free to post a comment here, or throw a "
                            },
                            {
                                "type": "emoji",
                                "name": "black_nib"
                            },
                            {
                                "type": "text",
                                "text": " on the parent post. (I hope that's appropriate.)\n\nIf anyone would like to see changes to this community so that we can do a better job amplifying the influence of the underrepresented (which is one of the community's core principles), I invite you to start a "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CEXED56UR"
                            },
                            {
                                "type": "text",
                                "text": " thread or DM me to tell me what I can do to help.\n\nFinally, if anyone has favourite Black people or people of color that they'd like to hear me interview on the podcast, I'm always looking. (My potential-guest list is already about 50 people long \u2014\u00a0I cannot get to everyone, but the more options I have, the better job I can do covering all bases in a cohesive way where each episode builds on the ones before.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591741456.139100",
        "parent_user_id": "UCXR52MU2"
    },
    {
        "client_msg_id": "373225bc-4e26-4fc2-9a6b-31396e07f984",
        "type": "message",
        "text": "Are you open to collaborating on this? I'd be happy to give it some more CSS treatment.",
        "user": "UC2A2ARPT",
        "ts": "1591743249.139800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ainH7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you open to collaborating on this? I'd be happy to give it some more CSS treatment."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591605576.049500",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "29ef417f-3ef0-40d0-bcfc-bae4f9a34ccc",
        "type": "message",
        "text": "other examples:\n\u2022 \"master/slave\"\n\u2022 training sets for ML or facial rec that have bias to white/western\n\u2022 assumption of L-R text\n\u2022 I8N as an afterthought\n\u2022 maps with a projection that shrinks the African continent\n\u2022 whitehat/blackhat\n\u2022 assumption of family name/personal name order\njust off the top of my head",
        "user": "UE6EFEPTQ",
        "ts": "1591744037.140000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1591745572.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6sHaV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "other examples:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"master/slave\""
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "training sets for ML or facial rec that have bias to white/western"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "assumption of L-R text"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I8N as an afterthought"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "maps with a projection that shrinks the African continent"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "whitehat/blackhat"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "assumption of family name/personal name order"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "just off the top of my head"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591741456.139100",
        "parent_user_id": "UCXR52MU2",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCXR52MU2",
                    "UJBAJNFLK",
                    "UHWC9PXBL",
                    "USH01JEDQ",
                    "UBSMEUXAA"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "36ba60be-d082-488e-a87e-fedb78f00b63",
        "type": "message",
        "text": "The wikipedia article on <https://en.wikipedia.org/wiki/Algorithmic_bias|Algorithmic Bias> is really, really good.",
        "user": "UC2A2ARPT",
        "ts": "1591745431.140300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1591745436.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ca0rb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The wikipedia article on "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Algorithmic_bias",
                                "text": "Algorithmic Bias"
                            },
                            {
                                "type": "text",
                                "text": " is really, really good."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591741456.139100",
        "parent_user_id": "UCXR52MU2",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCXR52MU2",
                    "UJBAJNFLK",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "189b1ce7-b5dd-4331-be3a-994b9e45fb33",
        "type": "message",
        "text": "By original context do you mean that the video was shot at PARC while they were actively researching?",
        "user": "UMWF81HTP",
        "ts": "1591751779.141600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BkF9X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "By original context do you mean that the video was shot at PARC while they were actively researching?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591694632.107500",
        "parent_user_id": "UJFN50C00"
    },
    {
        "client_msg_id": "f25f3918-f368-4140-8ea8-f0bc5d40d47a",
        "type": "message",
        "text": "I pulled up an organization wide GitHub search. We have a few references to some of these phrases that we need to update. I'm sure there are other technical docs we need to update as well. I'm going to spend some time on the 10th thinking through what actions I can take to promote anti-racism in spaces that I contribute to. Thanks for the suggestion and link!",
        "user": "U015902ESJC",
        "ts": "1591765028.142200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XfSS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I pulled up an organization wide GitHub search. We have a few references to some of these phrases that we need to update. I'm sure there are other technical docs we need to update as well. I'm going to spend some time on the 10th thinking through what actions I can take to promote anti-racism in spaces that I contribute to. Thanks for the suggestion and link!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591741456.139100",
        "parent_user_id": "UCXR52MU2",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UCXR52MU2"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UCXR52MU2"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3e48a3b8-d2c3-4980-a338-2106b93174e8",
        "type": "message",
        "text": "Some comments on moving towards getting things done (which I strongly support as a goal):\n1. Remember McLuhan: the medium is the message. This community is organized around three stream-type media (see <https://hapgood.us/2015/10/17/the-garden-and-the-stream-a-technopastoral/amp/|this essay> for stream vs. garden): a podcast, a Slack, and a newsletter. These are media for exchanging information, not for collaborating. Garden-type media that support collaboration are, unfortunately, much less numerous. Basically we have Wikis and Git repositories. Someone needs to set up a garden and oversee its evolution. That's work, and unfortunately not highly valued nowadays. Ask Open Source maintainer for testimonials. I suspect this is the main obstacle to be solved.\n2. What we all have in common is dissatisfaction with the present state of the tech world. That doesn't mean we have the same goals, nor the same ideas about reaching our goals. I doubt we could all productively collaborate. So we need to aim for \"getting things done\" communities (plural) that overlap with this one but which are not identical.",
        "user": "UJBAJNFLK",
        "ts": "1591771954.143000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Hapgood",
                "title": "The Garden and the Stream: A Technopastoral",
                "title_link": "https://hapgood.us/2015/10/17/the-garden-and-the-stream-a-technopastoral/amp/",
                "text": "Opening keynote for dLRN 2015. Delivered October 16th @ Stanford. Actual keynote may have gone on significant tangents\u2026 1 | a year in the garden A week or so ago, I was reading about the Oreg\u2026",
                "fallback": "Hapgood: The Garden and the Stream: A Technopastoral",
                "thumb_url": "https://mikecaulfield.files.wordpress.com/2015/10/t_554f0905-ecb1-19ab-c1ba-22d0c80aa40f.jpg",
                "ts": 1445090856,
                "from_url": "https://hapgood.us/2015/10/17/the-garden-and-the-stream-a-technopastoral/amp/",
                "thumb_width": 624,
                "thumb_height": 244,
                "service_icon": "https://hapgood.us/favicon.ico",
                "id": 1,
                "original_url": "https://hapgood.us/2015/10/17/the-garden-and-the-stream-a-technopastoral/amp/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0q83/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some comments on moving towards getting things done (which I strongly support as a goal):\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Remember McLuhan: the medium is the message. This community is organized around three stream-type media (see "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://hapgood.us/2015/10/17/the-garden-and-the-stream-a-technopastoral/amp/",
                                        "text": "this essay"
                                    },
                                    {
                                        "type": "text",
                                        "text": " for stream vs. garden): a podcast, a Slack, and a newsletter. These are media for exchanging information, not for collaborating. Garden-type media that support collaboration are, unfortunately, much less numerous. Basically we have Wikis and Git repositories. Someone needs to set up a garden and oversee its evolution. That's work, and unfortunately not highly valued nowadays. Ask Open Source maintainer for testimonials. I suspect this is the main obstacle to be solved."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What we all have in common is dissatisfaction with the present state of the tech world. That doesn't mean we have the same goals, nor the same ideas about reaching our goals. I doubt we could all productively collaborate. So we need to aim for \"getting things done\" communities (plural) that overlap with this one but which are not identical."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1591463789.003800",
        "parent_user_id": "U71PMQ1V0"
    },
    {
        "client_msg_id": "0d356eba-3ad4-4d6c-80bd-0e1043cd4cbb",
        "type": "message",
        "text": "sure! the code is on the repo, the only thing is that it has to be as self contained as possible to make it easy to export the same style. history/index.html and history/app.js on the gh-pages branch (you have to start a web server at the root of the repo, `python3 -m http.server` will do)",
        "user": "UBN9AFS0N",
        "ts": "1591776053.143400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1591776078.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BDl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sure! the code is on the repo, the only thing is that it has to be as self contained as possible to make it easy to export the same style. history/index.html and history/app.js on the gh-pages branch (you have to start a web server at the root of the repo, "
                            },
                            {
                                "type": "text",
                                "text": "python3 -m http.server",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " will do)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591605576.049500",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "232fc61f-b4bd-4c14-9f70-1d9493fc332c",
        "type": "message",
        "text": "<@UJBAJNFLK> Working in isolation is a recipe for depression and failure. I've been trying to bring the \"alternative programming\" community together for years with various workshops. It is like herding cats. My latest idea is that if we could agree on a set of challenge problems, we could at least establish some basis for communication, comparison, and feedback.",
        "user": "U6KQ2S410",
        "ts": "1591799855.144600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xod",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Working in isolation is a recipe for depression and failure. I've been trying to bring the \"alternative programming\" community together for years with various workshops. It is like herding cats. My latest idea is that if we could agree on a set of challenge problems, we could at least establish some basis for communication, comparison, and feedback."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591463789.003800",
        "parent_user_id": "U71PMQ1V0",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC",
                    "UJBAJNFLK"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d407db5f-6f5c-44ea-b135-512e8316235e",
        "type": "message",
        "text": "Along the lines of <@UE6EFEPTQ>\u2019s mention of names, there is the famous <https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/>, and many more categories of commonly-assumed falsehoods which were spawned from it (though not all cultural): <https://github.com/kdeldycke/awesome-falsehood>",
        "user": "U6FKVSVCK",
        "ts": "1591814467.145200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "kdeldycke/awesome-falsehood",
                "text": ":scream: Falsehoods Programmers Believe in",
                "title": "kdeldycke/awesome-falsehood",
                "footer": "<https://github.com/kdeldycke/awesome-falsehood|kdeldycke/awesome-falsehood>",
                "id": 1,
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "ts": 1473326027,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "11840",
                        "short": true
                    },
                    {
                        "title": "Last updated",
                        "value": "2 hours ago",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https://github.com/kdeldycke/awesome-falsehood",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RVTi0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Along the lines of "
                            },
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "\u2019s mention of names, there is the famous "
                            },
                            {
                                "type": "link",
                                "url": "https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/"
                            },
                            {
                                "type": "text",
                                "text": ", and many more categories of commonly-assumed falsehoods which were spawned from it (though not all cultural): "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/kdeldycke/awesome-falsehood"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591741456.139100",
        "parent_user_id": "UCXR52MU2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE6EFEPTQ",
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UBSMEUXAA",
                    "UCXR52MU2"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "536af5e9-fe5b-4278-82ab-87b18a773fcf",
        "type": "message",
        "text": "I like sweet expressions - they are similar in spirit to my own Loyc Expression Syntax (<http://loyc.net/les|loyc.net/les>), and I see they've been enhanced since I last saw them (it was a very simple proposal originally). Are any major tutorials teaching a Lisp variant based on them?",
        "user": "UD6EXQVM0",
        "ts": "1591818188.145600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1591818328.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tDFAa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like sweet expressions - they are similar in spirit to my own Loyc Expression Syntax ("
                            },
                            {
                                "type": "link",
                                "url": "http://loyc.net/les",
                                "text": "loyc.net/les"
                            },
                            {
                                "type": "text",
                                "text": "), and I see they've been enhanced since I last saw them (it was a very simple proposal originally). Are any major tutorials teaching a Lisp variant based on them?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590712683.260000",
        "parent_user_id": "UT60XSVCN"
    },
    {
        "client_msg_id": "bb2f8b57-c2cd-4360-8b94-e21b52b5ee56",
        "type": "message",
        "text": "z and t 'scrollbars' are often implemented by extra arrow buttons pointing left and right, or with a slider control.",
        "user": "UD6EXQVM0",
        "ts": "1591819129.146000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wNB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "z and t 'scrollbars' are often implemented by extra arrow buttons pointing left and right, or with a slider control."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589470005.387400",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "887c1c0e-e771-4af1-a39a-3f191a851767",
        "type": "message",
        "text": "This issue was the driving force behind my earlier question about reactive calculations. I think most of the woes of state management and UI programming are for want of a good algorithm... (but also, most devs don't have a drive to build good foundations that make it easier to write the higher-level program.) <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1588994003263900>",
        "user": "UD6EXQVM0",
        "ts": "1591820377.146500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1591821044.000000"
        },
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1588994003263900",
                "fallback": "[May 8th, 2020 8:13 PM] qwertie256: Is anyone aware of a programming language or library that efficiently solves the problem of incremental reactive recalculations involving collections? I'm a fan of libraries that support reactive updates, such as Assisticant, KnockoutJS, MobX, Vue.js and SwiftUI, but I don't know of one that contains the algorithm I want. I'll explain the problem by example. Suppose you have:\n\n1. an \"observable\" list of a million items, and you insert or remove an item somewhere in the list\n2. a filtered list based on the million items showing perhaps a thousand of the items\n3. a projection of the filtered list (map/select)\nSo, when you insert or remove the item, the library should efficiently (and automatically!) propagate the change through the filtered list to the projected list. If the new or removed item is filtered out anyway, propagation should stop so the projected list is not notified of a change. Ideally, change notifications should be deferred in some way so that if several changes are made to the same list item in rapid succession, the derived items (2 and 3) would only be notified once.",
                "ts": "1588994003.263900",
                "author_id": "UD6EXQVM0",
                "author_subname": "David Piepgrass",
                "channel_id": "C5T9GPWFL",
                "channel_name": "general",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "Is anyone aware of a programming language or library that efficiently solves the problem of incremental reactive recalculations involving collections? I'm a fan of libraries that support reactive updates, such as Assisticant, KnockoutJS, MobX, Vue.js and SwiftUI, but I don't know of one that contains the algorithm I want. I'll explain the problem by example. Suppose you have:\n\n1. an \"observable\" list of a million items, and you insert or remove an item somewhere in the list\n2. a filtered list based on the million items showing perhaps a thousand of the items\n3. a projection of the filtered list (map/select)\nSo, when you insert or remove the item, the library should efficiently (and automatically!) propagate the change through the filtered list to the projected list. If the new or removed item is filtered out anyway, propagation should stop so the projected list is not notified of a change. Ideally, change notifications should be deferred in some way so that if several changes are made to the same list item in rapid succession, the derived items (2 and 3) would only be notified once.",
                "author_name": "David Piepgrass",
                "author_link": "https://futureofcoding.slack.com/team/UD6EXQVM0",
                "author_icon": "https://secure.gravatar.com/avatar/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1588994003263900",
                "footer": "Thread in #general"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NTor",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This issue was the driving force behind my earlier question about reactive calculations. I think most of the woes of state management and UI programming are for want of a good algorithm... (but also, most devs don't have a drive to build good foundations that make it easier to write the higher-level program.) "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1588994003263900"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590774956.270400",
        "parent_user_id": "U71PMQ1V0"
    },
    {
        "client_msg_id": "54963ec0-109d-450d-bb09-8f3f6e144cb6",
        "type": "message",
        "text": "I don't know how you can talk about the turing tar-pit without mentioning C++ template metaprogramming :stuck_out_tongue:... actually that's the whole problem with the article, a lack of examples to focus the discussion.",
        "user": "UD6EXQVM0",
        "ts": "1591820613.147200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1591820800.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MZs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know how you can talk about the turing tar-pit without mentioning C++ template metaprogramming "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue"
                            },
                            {
                                "type": "text",
                                "text": "... actually that's the whole problem with the article, a lack of examples to focus the discussion."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590222346.167400",
        "parent_user_id": "UJFN50C00"
    },
    {
        "client_msg_id": "0e9a7dbe-9a57-4e8e-a069-1f815adc1500",
        "type": "message",
        "text": "Think about how it's implemented. 64-bit integer/pointer unions, right? If it's small, it's an integer, if it's big it's a pointer. Well, first off, .NET can't support that, but maybe you don't mind.  Anyway, the very fact that integers have variable size forces every \"add\" operation to become two checks for \"is this first operand a big int, or is this other operand a big int\" alongside each 64-bit add operation. It also precludes standard vectorization. Equality tests are trickier... if two 64-bit values are unequal, you have to then check whether they are pointers and if so, call an equality-testing function. Perhaps worst of all, every time an integer goes out of scope you have to check if integer memory has to be freed. This could be mitigated with alloca, but only for integers that are local to the function. What if a bigint is located inside a struct on the stack? It can't use the optimization unless it \"knows\" it is on the stack.\n\nDon't get me wrong, BigInt support is great, but in my career I've mostly written performance-critical code which I would usually design to avoid overflow reliably, rather than suffer the performance penalty of a BigInt.",
        "user": "UD6EXQVM0",
        "ts": "1591821961.148100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1591822004.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CXsqB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Think about how it's implemented. 64-bit integer/pointer unions, right? If it's small, it's an integer, if it's big it's a pointer. Well, first off, .NET can't support that, but maybe you don't mind.  Anyway, the very fact that integers have variable size forces every \"add\" operation to become two checks for \"is this first operand a big int, or is this other operand a big int\" alongside each 64-bit add operation. It also precludes standard vectorization. Equality tests are trickier... if two 64-bit values are unequal, you have to then check whether they are pointers and if so, call an equality-testing function. Perhaps worst of all, every time an integer goes out of scope you have to check if integer memory has to be freed. This could be mitigated with alloca, but only for integers that are local to the function. What if a bigint is located inside a struct on the stack? It can't use the optimization unless it \"knows\" it is on the stack.\n\nDon't get me wrong, BigInt support is great, but in my career I've mostly written performance-critical code which I would usually design to avoid overflow reliably, rather than suffer the performance penalty of a BigInt."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590977348.305600",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6fc7b7b7-50e5-42e7-af76-e32d559031a6",
        "type": "message",
        "text": "There's been a ton of progress in the last 20 years... compare C#  to C# 8 (LINQ, tuples, decent functional programming features, null-pointer avoidance), or C++03 to C++20 (it still sucks, but an expert can pour the molasses much faster). And how about Go and Rust? Okay, Go still doesn't have generics, and I hear the Rust compiler is slow, but give it a few years... metaprogramming in D is much better than C++ ... the design could have been better, but, well, how about Nim?\n\nBottom line, I'm not actually happy with the current state of affairs, but it has improved a lot. Oh and I love both Visual Studio IDEs.",
        "user": "UD6EXQVM0",
        "ts": "1591822779.148500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1591822945.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U/P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's been a ton of progress in the last 20 years... compare C#  to C# 8 (LINQ, tuples, decent functional programming features, null-pointer avoidance), or C++03 to C++20 (it still sucks, but an expert can pour the molasses much faster). And how about Go and Rust? Okay, Go still doesn't have generics, and I hear the Rust compiler is slow, but give it a few years... metaprogramming in D is much better than C++ ... the design could have been better, but, well, how about Nim?\n\nBottom line, I'm not actually happy with the current state of affairs, but it has improved a lot. Oh and I love both Visual Studio IDEs."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591042038.317200",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "89288fa1-c1c5-4094-a2be-72e6332f4830",
        "type": "message",
        "text": "Yeah, there are lots of z/t implementation - just seems like it would have been fun to make explicit / all 4-dimensions visible - at least during the visible scrollbar era",
        "user": "USH01JEDQ",
        "ts": "1591823240.149400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9XB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, there are lots of z/t implementation - just seems like it would have been fun to make explicit / all 4-dimensions visible - at least during the visible scrollbar era"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589470005.387400",
        "parent_user_id": "USH01JEDQ"
    }
]