[
    {
        "client_msg_id": "324a5963-8912-4a78-9b8c-170e851e02e9",
        "type": "message",
        "text": "I think it's easier to understand WASM if you forget about the \"web\" part and just see it as a lightweight re-imagining of JVM/.NET without all the built-in garbage collector, OOP system, heavy runtime gunk and just the basics you need to run C (from whence you can run mostly anything)",
        "user": "U014Y19RYA3",
        "ts": "1592178205.297300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hOj1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's easier to understand WASM if you forget about the \"web\" part and just see it as a lightweight re-imagining of JVM/.NET without all the built-in garbage collector, OOP system, heavy runtime gunk and just the basics you need to run C (from whence you can run mostly anything)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5d6cb434-e96e-41ec-8e29-96aa3213e027",
        "type": "message",
        "text": "the fact that you can also easily export any functions you want from your host into the WASM space to enable easy interop (at the C level of ints, floats, and pointers) to call any function in the place the WASM is embedded is very nice -- it enables restricting the code's view of the outside world to whatever you want it to have",
        "user": "U014Y19RYA3",
        "ts": "1592178283.297500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jqR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the fact that you can also easily export any functions you want from your host into the WASM space to enable easy interop (at the C level of ints, floats, and pointers) to call any function in the place the WASM is embedded is very nice -- it enables restricting the code's view of the outside world to whatever you want it to have"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "95befdc2-98c5-4c54-983d-724362e38a65",
        "type": "message",
        "text": "I haven't watched it yet, but the 5-minute Para demo is :exploding_head:\n\n<https://youtu.be/Tdvj8XMrqXc>",
        "user": "UCUSW7WVD",
        "ts": "1592193278.298000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Adobe MAX 2014 Sneaks: #ProjectPara  | Adobe Creative Cloud",
                "title_link": "https://youtu.be/Tdvj8XMrqXc",
                "author_name": "Adobe Creative Cloud",
                "author_link": "https://www.youtube.com/user/AdobeCreativeCloud",
                "thumb_url": "https://i.ytimg.com/vi/Tdvj8XMrqXc/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Adobe MAX 2014 Sneaks: #ProjectPara  | Adobe Creative Cloud",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/Tdvj8XMrqXc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/Tdvj8XMrqXc",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/Tdvj8XMrqXc"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DHhA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't watched it yet, but the 5-minute Para demo is "
                            },
                            {
                                "type": "emoji",
                                "name": "exploding_head"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/Tdvj8XMrqXc"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592169728.296900",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "52fd31be-03bd-40d9-b42e-274b2659204b",
        "type": "message",
        "text": "PR sent! Feel free to DM me if you want to discuss the direction I've taken things.",
        "user": "UC2A2ARPT",
        "ts": "1592201244.298800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gc==t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "PR sent! Feel free to DM me if you want to discuss the direction I've taken things."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591605576.049500",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "bc9e47d6-bb48-4355-9dc6-71541ca3176a",
        "type": "message",
        "text": "Going with the Scatch example.  You can make costumes for your sprites.  You can program sprites to change costumes.  But you can't program sprites to make costumes.",
        "user": "UA14TGLTC",
        "ts": "1592202932.299100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EZd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Going with the Scatch example.  You can make costumes for your sprites.  You can program sprites to change costumes.  But you can't program sprites to make costumes."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1591041589.315800",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "876c6a8c-5f70-49f8-aa79-76c15a4856aa",
        "type": "message",
        "text": "I'm looking for papers / projects / programming languages in which the presentation / editing representation is text and the storage representation is decoupled from presentation / editing. In typical programming languages these representations are the same (code is edited as text and stored 1:1). In structured / projectional editing environments the editing representation is often non-textual. Even though these environments separate presentation from storage, it seems like a by-product while the focus lies on the editing experience. I'd like to see studies of the implications of separating presentation and storage representations for programming languages. I can imagine that this could help backwards-compatible language evolution, end a lot of syntax bike-shedding discussions and probably even let different programming languages share common concepts. I'm not the first one to think about this for sure, but I didn't manage to find useful resources.",
        "user": "UAL7940NM",
        "ts": "1592206702.310100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VqPRa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm looking for papers / projects / programming languages in which the presentation / editing representation is text and the storage representation is decoupled from presentation / editing. In typical programming languages these representations are the same (code is edited as text and stored 1:1). In structured / projectional editing environments the editing representation is often non-textual. Even though these environments separate presentation from storage, it seems like a by-product while the focus lies on the editing experience. I'd like to see studies of the implications of separating presentation and storage representations for programming languages. I can imagine that this could help backwards-compatible language evolution, end a lot of syntax bike-shedding discussions and probably even let different programming languages share common concepts. I'm not the first one to think about this for sure, but I didn't manage to find useful resources."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592206702.310100",
        "reply_count": 11,
        "reply_users_count": 5,
        "latest_reply": "1592430326.367100",
        "reply_users": [
            "UAL7940NM",
            "UJN1TAYEQ",
            "UFPPABQ7P",
            "UPMFG2571",
            "UEDDR6L5Q"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "63bbffdb-b495-446e-8133-ff2282335840",
        "type": "message",
        "text": "Do you know related research or have some thoughts on this? Please post below and thanks in advance :wink:",
        "user": "UAL7940NM",
        "ts": "1592206794.310200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ys2hE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you know related research or have some thoughts on this? Please post below and thanks in advance "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "2ab107c5-3443-4ee7-bd6c-2ee9d0dfbe0b",
        "type": "message",
        "text": "Timely!",
        "user": "UA14TGLTC",
        "ts": "1592213080.310400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bBa+j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Timely!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592169728.296900",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "4514a5d4-70c9-47f9-90ba-9da4d78ae731",
        "type": "message",
        "text": "You might look at the Intentional Programming project. <https://en.wikipedia.org/wiki/Intentional_programming>",
        "user": "UJN1TAYEQ",
        "ts": "1592221693.311000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Intentional programming",
                "title_link": "https://en.wikipedia.org/wiki/Intentional_programming",
                "from_url": "https://en.wikipedia.org/wiki/Intentional_programming",
                "author_name": "Wikipedia",
                "author_link": "https://en.wikipedia.org/",
                "text": "In computer programming, Intentional Programming is a programming paradigm developed by Charles Simonyi that encodes in software source code the precise intention which programmers (or users) have in mind when conceiving their work. By using the appropriate level of abstraction at which the programmer is thinking, creating and maintaining computer programs become easier. By separating the concerns for intentions and how they are being operated upon, the software becomes more modular and allows for more reusable software code.\nIntentional Programming was developed by former Microsoft chief architect Charles Simonyi, who led a team in Microsoft Research, which developed the paradigm and built an integrated development environment (IDE) called IP (for Intentional Programming) that demonstrated the paradigm. Microsoft decided not to productize the Intentional Programming paradigm, as in the early 2000s Microsoft was rolling out C# and .NET to counter Java adoption. Charles Simonyi decided, with approval of Microsoft, to take his idea out from Microsoft and commercialize it himself. He founded the company Intentional Software to pursue this. Microsoft licensed the Intentional Programming patents Simonyi had acquired while at Microsoft, but no source code, to Intentional Software.\nAn overview of Intentional Programming as it was developed at Microsoft Research is given in Chapter 11 of the book Generative Programming: Methods, Tools, and Applications.",
                "fallback": "wikipedia: Intentional programming",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png",
                "id": 1,
                "original_url": "https://en.wikipedia.org/wiki/Intentional_programming"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z1b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might look at the Intentional Programming project. "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Intentional_programming"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "6ff05429-e0c3-4a77-ad59-be957ee36e52",
        "type": "message",
        "text": "As for implications...\nIf the storage representation is quite different from the text presentation (eg, XML vs C-like syntax), then you'll be using a tree as an intermediate representation. Even though \"the presentation / editing representation is text\", there is a challenge if you want to provide a convention text editing interface, because maybe not all texts can be backward mapped into your tree representation (eg, what about mismatched parentheses)? So what happens? If there is a syntax error, you can't save your file until the syntax error is fixed? Or you provide a \"structured editing\" interface that doesn't allow you to make syntax errors? What I've read about structure editors is that there's a learning curve, and you run into the problem that a lot of common idioms that programmers learn for editing code using a conventional text editor don't work in a structure editor, creating frustration.",
        "user": "UJN1TAYEQ",
        "ts": "1592237524.311700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nKp0g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As for implications...\nIf the storage representation is quite different from the text presentation (eg, XML vs C-like syntax), then you'll be using a tree as an intermediate representation. Even though \"the presentation / editing representation is text\", there is a challenge if you want to provide a convention text editing interface, because maybe not all texts can be backward mapped into your tree representation (eg, what about mismatched parentheses)? So what happens? If there is a syntax error, you can't save your file until the syntax error is fixed? Or you provide a \"structured editing\" interface that doesn't allow you to make syntax errors? What I've read about structure editors is that there's a learning curve, and you run into the problem that a lot of common idioms that programmers learn for editing code using a conventional text editor don't work in a structure editor, creating frustration."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "f0c5a7e2-d7db-4104-956e-ab05058e137a",
        "type": "message",
        "text": "<@UAL7940NM> I hope you're doing well!\nAt Storyscript we have a projectional editor which doesn't show syntax errors per se, it only says when code is correct and \"runnable\". We couple that with \"grammar suggestions\" like in MS Word / Grammarly to help show you how to make corrections. In this way, any syntax that isn't \"valid\" is simply stored as stylable text. It took a lot of trial-and-error to figure out how strict our exportable/saveable representation would be to an AST, but we struck a pretty good balance IMO (leaning more towards flexibility / error tolerant than what we started with).\nA part of our approach was made more complex, because we threw the whole \"compilation pipeline concept\" out the window, and went with managing our authoring tool using an ECS data model (like in game development)",
        "user": "UFPPABQ7P",
        "ts": "1592240266.311900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1592240287.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f=gO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAL7940NM"
                            },
                            {
                                "type": "text",
                                "text": " I hope you're doing well!\nAt Storyscript we have a projectional editor which doesn't show syntax errors per se, it only says when code is correct and \"runnable\". We couple that with \"grammar suggestions\" like in MS Word / Grammarly to help show you how to make corrections. In this way, any syntax that isn't \"valid\" is simply stored as stylable text. It took a lot of trial-and-error to figure out how strict our exportable/saveable representation would be to an AST, but we struck a pretty good balance IMO (leaning more towards flexibility / error tolerant than what we started with).\nA part of our approach was made more complex, because we threw the whole \"compilation pipeline concept\" out the window, and went with managing our authoring tool using an ECS data model (like in game development)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "8fe2e0e0-3361-4876-92e2-c132508bfb47",
        "type": "message",
        "text": "Why do you guys think COM interop in Windows has fallen out of vogue? At the surface, it seems like an awesome way to get apps working together, but I haven't seen it used in a very long time.",
        "user": "UJK8MKYAZ",
        "ts": "1592242443.312300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rj7w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why do you guys think COM interop in Windows has fallen out of vogue? At the surface, it seems like an awesome way to get apps working together, but I haven't seen it used in a very long time."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592242443.312300",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1592341222.346600",
        "reply_users": [
            "UD6EXQVM0"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "c590daa8-66ca-44f2-841e-2e3b58f123d0",
        "type": "message",
        "text": "TIL Deutsch Limit: <https://en.wikipedia.org/wiki/Deutsch_limit>\nEtymology from this quip: \u201cWell, this is all fine and well, but the problem with visual programming languages is that you can\u2019t have more than 50 visual primitives on the screen at the same time. How are you going to write an operating system?\u201d",
        "user": "UDKTZSD6H",
        "ts": "1592244482.313000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1592244601.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MfCBw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "TIL Deutsch Limit: "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Deutsch_limit"
                            },
                            {
                                "type": "text",
                                "text": "\nEtymology from this quip: \u201cWell, this is all fine and well, but the problem with visual programming languages is that you can\u2019t have more than 50 visual primitives on the screen at the same time. How are you going to write an operating system?\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592244482.313000",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1592359006.353800",
        "reply_users": [
            "UC2A2ARPT",
            "U6FKVSVCK",
            "UDKTZSD6H",
            "UHWC9PXBL"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "upside_down_face",
                "users": [
                    "UC2A2ARPT",
                    "UEBG0NPDK",
                    "U6FKVSVCK",
                    "UUB7RA7PF"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "e37253f4-7a85-49ae-9383-7d169dba277b",
        "type": "message",
        "text": "That and other _totally bogus_ objections collected here: <https://github.com/ivanreese/visual-programming-codex/blob/master/criticisms.md>",
        "user": "UC2A2ARPT",
        "ts": "1592244650.313300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1592244655.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CWQLT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That and other "
                            },
                            {
                                "type": "text",
                                "text": "totally bogus",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " objections collected here: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/ivanreese/visual-programming-codex/blob/master/criticisms.md"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UDKTZSD6H",
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "8d77b16e-8867-4498-8d45-276ada744363",
        "type": "message",
        "text": "I find it at least a little amusing that the text editor I have open is currently displaying just over 60 lines of code.",
        "user": "U6FKVSVCK",
        "ts": "1592246120.314100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l1c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find it at least a little amusing that the text editor I have open is currently displaying just over 60 lines of code."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e24ec01e-9f6b-47be-811b-76bb651183be",
        "type": "message",
        "text": "<@UEQ6M68H0> there are unwritten requirements for getting papers published, handed down verbally from advisor to student. It's almost impossible if you haven't been on the inside. Nevertheless, once you learn the code, getting published may be more likely to have a long-term impact than having your product become popular.",
        "user": "U6KQ2S410",
        "ts": "1592246317.314300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=vYc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " there are unwritten requirements for getting papers published, handed down verbally from advisor to student. It's almost impossible if you haven't been on the inside. Nevertheless, once you learn the code, getting published may be more likely to have a long-term impact than having your product become popular."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592007162.213400",
        "parent_user_id": "UEQ6M68H0"
    },
    {
        "client_msg_id": "a3e82aca-5034-4381-86af-ce0f16e1a29c",
        "type": "message",
        "text": "<@U6KQ2S410> how true.  Getting published is almost as mysterious as getting a grant. I tried a few times to get a grant but was unsuccessful. One time i bid on a USAID project on Tanzania, where i was going to ship container loads of paper and HP LaserJets with satellite internet to a small set of towns outside the capital, so they could print textbooks on demand that were created by a small staff in the capital, with bilingual versions for the regional languages. With a net price of about $3 per 100 page book, it was the most cost effective textbook delivery system imaginable, and the state dept liked the project and we were in the final contention, but the big textbook company that was planning to sell the typical books for $80 a book got them to delay the offering and kills us because we couldn't keep hanging onto a project that never starts at a predictable time. You can't hold a staff without already having projects. Knowing how to navigate the grant system is a truly dark art, and the people who know how to wrangle grants on a consistent basis earn a lot of money and have ultimate job security. One of the groups i bumped into called their Washington office \"proposal island\", because it becomes a continuous process.",
        "user": "UEQ6M68H0",
        "ts": "1592247347.314500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TMRrE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " how true.  Getting published is almost as mysterious as getting a grant. I tried a few times to get a grant but was unsuccessful. One time i bid on a USAID project on Tanzania, where i was going to ship container loads of paper and HP LaserJets with satellite internet to a small set of towns outside the capital, so they could print textbooks on demand that were created by a small staff in the capital, with bilingual versions for the regional languages. With a net price of about $3 per 100 page book, it was the most cost effective textbook delivery system imaginable, and the state dept liked the project and we were in the final contention, but the big textbook company that was planning to sell the typical books for $80 a book got them to delay the offering and kills us because we couldn't keep hanging onto a project that never starts at a predictable time. You can't hold a staff without already having projects. Knowing how to navigate the grant system is a truly dark art, and the people who know how to wrangle grants on a consistent basis earn a lot of money and have ultimate job security. One of the groups i bumped into called their Washington office \"proposal island\", because it becomes a continuous process."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592007162.213400",
        "parent_user_id": "UEQ6M68H0"
    },
    {
        "client_msg_id": "b2e176d0-f792-4706-8bea-8cc8eb57daa8",
        "type": "message",
        "text": "<@UJN1TAYEQ> Thanks for bringing Intentional Programming up. I heard of it but never really took a deeper look. It's time for that I guess. Regarding mapping into the storage representation: I would be ok with not allowing to save code that contains syntax errors. It shouldn't be too hard to bring code into a form that parses, and on the other hand this forces you to deal with these kinds of errors early. Committed code and input to compilers would be guaranteed to be well formed to some extend, which I think is a good thing.\nStructured editing doesn't work IMO when requiring each edit to map from one valid AST to another valid one. There's just to many operations needed for this to be practical. Text editing allows composing a few simple edit operations into larger transformations, kinda unix-philosophy style.",
        "user": "UAL7940NM",
        "ts": "1592248589.314700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J=5U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for bringing Intentional Programming up. I heard of it but never really took a deeper look. It's time for that I guess. Regarding mapping into the storage representation: I would be ok with not allowing to save code that contains syntax errors. It shouldn't be too hard to bring code into a form that parses, and on the other hand this forces you to deal with these kinds of errors early. Committed code and input to compilers would be guaranteed to be well formed to some extend, which I think is a good thing.\nStructured editing doesn't work IMO when requiring each edit to map from one valid AST to another valid one. There's just to many operations needed for this to be practical. Text editing allows composing a few simple edit operations into larger transformations, kinda unix-philosophy style."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592206702.310100",
        "parent_user_id": "UAL7940NM"
    },
    {
        "type": "message",
        "text": "Also, my background is in 3d animation. Don't come at me with that \"50 visual primitives\" nonsense, Fred.",
        "files": [
            {
                "id": "F015FGFSWLB",
                "created": 1592249199,
                "timestamp": 1592249199,
                "name": "atlas.jpg",
                "title": "atlas.jpg",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "UC2A2ARPT",
                "editable": false,
                "size": 131906,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F015FGFSWLB/atlas.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F015FGFSWLB/download/atlas.jpg",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 228,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 304,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_720.jpg",
                "thumb_720_w": 720,
                "thumb_720_h": 455,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 506,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_960.jpg",
                "thumb_960_w": 960,
                "thumb_960_h": 607,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F015FGFSWLB-ebee270594/atlas_1024.jpg",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 647,
                "original_w": 1281,
                "original_h": 810,
                "thumb_tiny": "AwAeADCtRRRQAUvGDn04pKcMDBPrQAY5PtSfSpppTIdqjAA54qEjjtQAUlFLQAUdsd80hz2pVJVgeOKADByRnp1ozxin7wHJxkGo6AP/2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UC2A2ARPT/F015FGFSWLB/atlas.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F015FGFSWLB-56ad146328",
                "is_starred": false,
                "has_rich_preview": false
            },
            {
                "id": "F015MFMDWKE",
                "created": 1592249206,
                "timestamp": 1592249206,
                "name": "mathilda.jpg",
                "title": "mathilda.jpg",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "UC2A2ARPT",
                "editable": false,
                "size": 46181,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F015MFMDWKE/mathilda.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F015MFMDWKE/download/mathilda.jpg",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F015MFMDWKE-31536c3dd9/mathilda_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F015MFMDWKE-31536c3dd9/mathilda_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F015MFMDWKE-31536c3dd9/mathilda_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 203,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F015MFMDWKE-31536c3dd9/mathilda_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 270,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F015MFMDWKE-31536c3dd9/mathilda_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F015MFMDWKE-31536c3dd9/mathilda_720.jpg",
                "thumb_720_w": 720,
                "thumb_720_h": 405,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F015MFMDWKE-31536c3dd9/mathilda_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 450,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F015MFMDWKE-31536c3dd9/mathilda_960.jpg",
                "thumb_960_w": 960,
                "thumb_960_h": 540,
                "original_w": 960,
                "original_h": 540,
                "thumb_tiny": "AwAbADBNx7emaaJCc9DgZpgyxwCOlJyQSe1AiQyAjAPNKJAOCeajPzcYyaB8vGMUAS7qN1RbqN1MBqYOc0vy4b5h04oKLszjtVehqwJ3JVbBoLZNRUUhkm6jdUY61I4AXgCnYR//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UC2A2ARPT/F015MFMDWKE/mathilda.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F015MFMDWKE-e3901ce51b",
                "is_starred": false,
                "has_rich_preview": false
            },
            {
                "id": "F0150HX5ARM",
                "created": 1592249207,
                "timestamp": 1592249207,
                "name": "muscle.jpg",
                "title": "muscle.jpg",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "UC2A2ARPT",
                "editable": false,
                "size": 81325,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F0150HX5ARM/muscle.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0150HX5ARM/download/muscle.jpg",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F0150HX5ARM-41b82e3762/muscle_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F0150HX5ARM-41b82e3762/muscle_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F0150HX5ARM-41b82e3762/muscle_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 316,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F0150HX5ARM-41b82e3762/muscle_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 421,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F0150HX5ARM-41b82e3762/muscle_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F0150HX5ARM-41b82e3762/muscle_720.jpg",
                "thumb_720_w": 720,
                "thumb_720_h": 632,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F0150HX5ARM-41b82e3762/muscle_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 702,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F0150HX5ARM-41b82e3762/muscle_960.jpg",
                "thumb_960_w": 960,
                "thumb_960_h": 843,
                "original_w": 967,
                "original_h": 849,
                "thumb_tiny": "AwAqADCpRRRQAoGaSnoVHXrQ4XAK9OhoAZRRRQAU5QD1ptFAD1wTk0u3BZc0z+HHenMSGz6ikAyiiimAUUUUAOI2jk8kUEYUZ/AU2nOcsc0ANooooA//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UC2A2ARPT/F0150HX5ARM/muscle.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0150HX5ARM-cc550d4279",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jE3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, my background is in 3d animation. Don't come at me with that \"50 visual primitives\" nonsense, Fred."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UC2A2ARPT",
        "ts": "1592249237.314900",
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "43870f24-2acd-4c66-8ce3-401d61e30b5b",
        "type": "message",
        "text": "(No shade directed at you, <@UDKTZSD6H> \u2014 I just _love_ dumping mud on the Deutsch Limit)",
        "user": "UC2A2ARPT",
        "ts": "1592249331.315700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Ef",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(No shade directed at you, "
                            },
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": " \u2014 I just "
                            },
                            {
                                "type": "text",
                                "text": "love",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " dumping mud on the Deutsch Limit)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H"
    },
    {
        "client_msg_id": "8703da9a-1898-4e50-bb98-5d0ba5a35424",
        "type": "message",
        "text": "Oh nope, I am pretty programming is barely just symbolic manipulation guy. I just found it amusing that quasi-science (like most of UX anyway) has ideas like that. Also, sweet move in compiling the criticisms in a repo.",
        "user": "UDKTZSD6H",
        "ts": "1592249637.316000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1592249738.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B=pK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh nope, I am pretty programming is barely just symbolic manipulation guy. I just found it amusing that quasi-science (like most of UX anyway) has ideas like that. Also, sweet move in compiling the criticisms in a repo."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592244482.313000",
        "parent_user_id": "UDKTZSD6H"
    },
    {
        "client_msg_id": "f1d408c8-7348-41ac-b3f7-fe644d6ca2c0",
        "type": "message",
        "text": "No Code on Hacker News <https://news.ycombinator.com/item?id=23520185>",
        "user": "ULM3U6275",
        "ts": "1592250420.316700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kDB/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No Code on Hacker News "
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=23520185"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592250420.316700",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1592288232.326300",
        "reply_users": [
            "ULM3U6275",
            "UDQKHNP51"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "aa1ab3f2-9403-48a2-a3d3-09bbe24239e2",
        "type": "message",
        "text": "I enjoyed this comment: \u201cLittle story: I did a lot of work with Army grunts trying to avoid getting blown up. The main tool was excel. Software shops kept delivering junk that nobody used. The acquisitions guys loved a slick demo and that\u2019s pretty much all it did. They\u2019d come in and install a new server cluster, which means a bigger server room, which means more cooling, which means a bigger generator, which means more diesel trucks, which means more convoys on the road, which means more getting blown up. New grunts would tool around on it for a month and then get a novel task they had to use excel for, and never go back. The acq guys had such disdain for the \u2018users\u2019 that they couldn\u2019t imagine that they actually knew WTF they were doing. The slick demo went on to win the DCGS contract, and now they\u2019re stuck with \u2018easy\u2019 where they need flexible, customizable, fast, simple (all the way down the stack).\u201d",
        "user": "ULM3U6275",
        "ts": "1592250636.316800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jnn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I enjoyed this comment: \u201cLittle story: I did a lot of work with Army grunts trying to avoid getting blown up. The main tool was excel. Software shops kept delivering junk that nobody used. The acquisitions guys loved a slick demo and that\u2019s pretty much all it did. They\u2019d come in and install a new server cluster, which means a bigger server room, which means more cooling, which means a bigger generator, which means more diesel trucks, which means more convoys on the road, which means more getting blown up. New grunts would tool around on it for a month and then get a novel task they had to use excel for, and never go back. The acq guys had such disdain for the \u2018users\u2019 that they couldn\u2019t imagine that they actually knew WTF they were doing. The slick demo went on to win the DCGS contract, and now they\u2019re stuck with \u2018easy\u2019 where they need flexible, customizable, fast, simple (all the way down the stack).\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592250420.316700",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEBG0NPDK",
                    "UFLN9JFRT",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "53c465d1-93d4-436c-bdf3-1d53bd9ae4cc",
        "type": "message",
        "text": "Basically all documentation tools I\u2019m aware of are aimed at communicating things others. Is anyone aware of tools that are instead focused on personal documentation? Tools that are tied into the source/source control in some way, but that are for personal use and not shared with others? Obviously people can make their own little conventions and things in stuff like org mode. But I\u2019m curious if anyone is aware of purpose built tools for this.",
        "user": "UK3LH8CF5",
        "ts": "1592252831.319600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kf2U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Basically all documentation tools I\u2019m aware of are aimed at communicating things others. Is anyone aware of tools that are instead focused on personal documentation? Tools that are tied into the source/source control in some way, but that are for personal use and not shared with others? Obviously people can make their own little conventions and things in stuff like org mode. But I\u2019m curious if anyone is aware of purpose built tools for this."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592252831.319600",
        "reply_count": 14,
        "reply_users_count": 9,
        "latest_reply": "1592475025.371200",
        "reply_users": [
            "U010SQSJGLS",
            "UE1JQM9HQ",
            "UETFVV24Q",
            "UK3LH8CF5",
            "UDQKHNP51",
            "UCUSW7WVD",
            "UJBAJNFLK",
            "UMWF81HTP",
            "UE0ETTCG7"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "e83c2d8c-20d0-4224-9be4-8a001b527462",
        "type": "message",
        "text": "I guess my experience is that communicating with my future self is a lot like communicating with other people.",
        "user": "U010SQSJGLS",
        "ts": "1592253829.319900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rUKS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess my experience is that communicating with my future self is a lot like communicating with other people."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UDQKHNP51",
                    "UMWF81HTP",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "cc07f644-74de-47b8-99c3-99e6aee6db92",
        "type": "message",
        "text": "I\u2019ve pulled up notes I wrote to myself long ago and thought \u201cI have no idea what I was talking about\u2026\u201c.",
        "user": "U010SQSJGLS",
        "ts": "1592253842.320100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U010SQSJGLS",
            "ts": "1592253852.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gXcAS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve pulled up notes I wrote to myself long ago and thought \u201cI have no idea what I was talking about\u2026\u201c."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5"
    },
    {
        "client_msg_id": "e17c92c7-d658-445c-8198-e86300c828ef",
        "type": "message",
        "text": "Interesting question, <@UK3LH8CF5>. Could you detail what type of documentation do you have in mind? Is it documentation of code, or something else?",
        "user": "UE1JQM9HQ",
        "ts": "1592257223.320500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE1JQM9HQ",
            "ts": "1592257240.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GVPl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting question, "
                            },
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": ". Could you detail what type of documentation do you have in mind? Is it documentation of code, or something else?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592252831.319600",
        "parent_user_id": "UK3LH8CF5"
    }
]