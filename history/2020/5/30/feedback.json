[
    {
        "client_msg_id": "1ebea594-1c8c-46cd-9b4e-141beb517bdd",
        "type": "message",
        "text": "I'm working on some approaches to extract sub-page/window frames out of existing apps. These frames would then exist as separate windows locally which you could arrange however you prefer, and can also be shared with other people, snapshot for archiving, etc. It would be a huge help to hear what people might want to use this ability for, so I recently tweeted to collect some feedback. Happy to have replies in a thread here or on Twitter, whichever you prefer.\n\n<https://twitter.com/jryans/status/1266166240114020352>",
        "user": "UML4ZEKDK",
        "ts": "1590790470.218300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/jryans|@jryans>: I'm evaluating several different approaches to making this happen, and it would help enormously to hear use cases people are dreaming of. :innocent:\n\nNaming specific apps and goals you want to achieve by slicing them up into frames is even better. <https://twitter.com/rsnous/status/1259663160471982081>",
                "ts": 1590712530,
                "author_name": "J. Ryan Stinnett",
                "author_link": "https://twitter.com/jryans/status/1266166240114020352",
                "author_icon": "https://pbs.twimg.com/profile_images/3249761611/16a8377071c8693ded58d788f7fb21ff_normal.jpeg",
                "author_subname": "@jryans",
                "text": "I'm evaluating several different approaches to making this happen, and it would help enormously to hear use cases people are dreaming of. :innocent:\n\nNaming specific apps and goals you want to achieve by slicing them up into frames is even better. <https://twitter.com/rsnous/status/1259663160471982081>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/jryans/status/1266166240114020352",
                "id": 1,
                "original_url": "https://twitter.com/jryans/status/1266166240114020352",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https://twitter.com/rsnous|@rsnous>: <https://twitter.com/yoshikischmitz|@yoshikischmitz> I like the idea that you could 'carve' chunks out of a live Web app and move them around your desktop etc and they all stay wired up to the app in the back",
                "ts": 1589162075,
                "author_name": "Omar Rizwan",
                "author_link": "https://twitter.com/rsnous/status/1259663160471982081",
                "author_icon": "https://pbs.twimg.com/profile_images/646523069343793152/qXmq04Eq_normal.png",
                "author_subname": "@rsnous",
                "text": "<https://twitter.com/yoshikischmitz|@yoshikischmitz> I like the idea that you could 'carve' chunks out of a live Web app and move them around your desktop etc and they all stay wired up to the app in the back",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/rsnous/status/1259663160471982081",
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pqZF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm working on some approaches to extract sub-page/window frames out of existing apps. These frames would then exist as separate windows locally which you could arrange however you prefer, and can also be shared with other people, snapshot for archiving, etc. It would be a huge help to hear what people might want to use this ability for, so I recently tweeted to collect some feedback. Happy to have replies in a thread here or on Twitter, whichever you prefer.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/jryans/status/1266166240114020352"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "reply_count": 10,
        "reply_users_count": 4,
        "latest_reply": "1590862388.251500",
        "reply_users": [
            "UKDM3GLAJ",
            "UML4ZEKDK",
            "UHWC9PXBL",
            "UEQ6M68H0"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "e5b70f28-c86c-4d64-9375-57b54dc814e4",
        "type": "message",
        "text": "I\u2019m going to give different feedback than you asked for. Not so much how would I use this, but what is table stakes for me using this. I have a strong emotional reaction to this idea (or my understanding of it).\n[Non-quote to collect my scenario:]\n&gt; I picture a rectangle select happening on an app or a web app, and then having a rectangle primitive that I can work with (maybe it\u2019s a window on its own, maybe I combine it with other stuff). This seems like it could be super powerful. But that is not my dominant reaction. My reaction is dread. Dread for the moment I go to scroll and my scroll gets picked up by the wrong layer and now my widget is broken. And then I spend hours/days/weeks looking for a solution to this, only to discover that the app designer is handling scroll events in a way that makes it impossible. \nI assume that something like this would be finnicky and fragile. I think making it *not be*, and *convincing people* that it\u2019s not going to be is an important problem. I think remixing apps is an important goal to work towards, but I personally would have a high bar for robustness.",
        "user": "UKDM3GLAJ",
        "ts": "1590792344.218500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l+FQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m going to give different feedback than you asked for. Not so much how would I use this, but what is table stakes for me using this. I have a strong emotional reaction to this idea (or my understanding of it).\n[Non-quote to collect my scenario:]\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I picture a rectangle select happening on an app or a web app, and then having a rectangle primitive that I can work with (maybe it\u2019s a window on its own, maybe I combine it with other stuff). This seems like it could be super powerful. But that is not my dominant reaction. My reaction is dread. Dread for the moment I go to scroll and my scroll gets picked up by the wrong layer and now my widget is broken. And then I spend hours/days/weeks looking for a solution to this, only to discover that the app designer is handling scroll events in a way that makes it impossible. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I assume that something like this would be finnicky and fragile. I think making it "
                            },
                            {
                                "type": "text",
                                "text": "not be",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and "
                            },
                            {
                                "type": "text",
                                "text": "convincing people",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that it\u2019s not going to be is an important problem. I think remixing apps is an important goal to work towards, but I personally would have a high bar for robustness."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK"
    },
    {
        "client_msg_id": "94f03a13-3a2c-4def-9517-93379eb454e0",
        "type": "message",
        "text": "<@UKDM3GLAJ> Thanks, happy to have feedback of any kind. :smile: Yes, I agree it's important to ensure it's a robust experience so that people can trust that these frames will behave as they expect. I think it could be quite an enabling, powerful tool / primitive, but only if you can be confident it will work the way you expect when first extracted and remain working thereafter.",
        "user": "UML4ZEKDK",
        "ts": "1590793539.218700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R==",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKDM3GLAJ"
                            },
                            {
                                "type": "text",
                                "text": " Thanks, happy to have feedback of any kind. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I agree it's important to ensure it's a robust experience so that people can trust that these frames will behave as they expect. I think it could be quite an enabling, powerful tool / primitive, but only if you can be confident it will work the way you expect when first extracted and remain working thereafter."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK"
    },
    {
        "client_msg_id": "C2FE1865-7264-4236-9A75-C287F2CBCCB7",
        "type": "message",
        "text": "i\u2019ve been working on similar stuff\u2014<https://twitter.com/no_defects/status/1266409814403493888?s=21|https://twitter.com/no_defects/status/1266409814403493888?s=21> i\u2019m figuring out how to take data that\u2019s in an html tree, renormalizing it to represent the data structure the server blew into some html template, and giving it back to the user",
        "user": "UHWC9PXBL",
        "ts": "1590809260.221600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/no_defects|@no_defects>: finally making progress on an extension im building to help normal people extract structured information from websites <https://pbs.twimg.com/ext_tw_video_thumb/1266409595414732803/pu/img/NK3IJr-CWkFwjQjP.jpg>",
                "ts": 1590770603,
                "author_name": "no_defects",
                "author_link": "https://twitter.com/no_defects/status/1266409814403493888",
                "author_icon": "https://pbs.twimg.com/profile_images/1095908314263838720/oZJfmojK_normal.jpg",
                "author_subname": "@no_defects",
                "text": "finally making progress on an extension im building to help normal people extract structured information from websites",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/no_defects/status/1266409814403493888?s=21",
                "thumb_url": "https://pbs.twimg.com/ext_tw_video_thumb/1266409595414732803/pu/img/NK3IJr-CWkFwjQjP.jpg",
                "thumb_width": 738,
                "thumb_height": 720,
                "video_html_width": 738,
                "video_html_height": 720,
                "video_html": "<video controls poster=\"https://pbs.twimg.com/ext_tw_video_thumb/1266409595414732803/pu/img/NK3IJr-CWkFwjQjP.jpg\" width=\"738\" height=\"720\"><source type=\"video/mp4\" src=\"https://video.twimg.com/ext_tw_video/1266409595414732803/pu/vid/738x720/Nahj0TS-mWc6nKIw.mp4?tag=10\"></video>",
                "id": 1,
                "original_url": "https://twitter.com/no_defects/status/1266409814403493888?s=21",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BVe6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i\u2019ve been working on similar stuff\u2014"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/no_defects/status/1266409814403493888?s=21",
                                "text": "https://twitter.com/no_defects/status/1266409814403493888?s=21"
                            },
                            {
                                "type": "text",
                                "text": " i\u2019m figuring out how to take data that\u2019s in an html tree, renormalizing it to represent the data structure the server blew into some html template, and giving it back to the user"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK"
    },
    {
        "client_msg_id": "2AF19D43-5E5F-472E-BBB7-3D6D022373AC",
        "type": "message",
        "text": "idk if that or the video makes sense\u2014let me know. DMs open",
        "user": "UHWC9PXBL",
        "ts": "1590809282.222500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Ns",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "idk if that or the video makes sense\u2014let me know. DMs open"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK"
    },
    {
        "client_msg_id": "073D9EE1-C1F2-4131-BA96-CA37B4A3E73F",
        "type": "message",
        "text": "less targeted at carving out live views of apps and more at helping users gather the data they asked for",
        "user": "UHWC9PXBL",
        "ts": "1590809356.224000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/ep",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "less targeted at carving out live views of apps and more at helping users gather the data they asked for"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK"
    },
    {
        "client_msg_id": "3ea3ce68-2a02-461b-b287-888c266ff1f7",
        "type": "message",
        "text": "I've put together a few slides about Glance's goals and strategy. Questions and criticism welcome. TLDR: The Glance project aims to \"dramatically increase the programming capabilities of everyone (especially beginners) by creating a visual programming inspired software creation tool that is both easy to learn and powerful enough to solve complex problems.\" <https://docs.google.com/presentation/d/1vm0uyc_swsSMTe_uIigCH-TBWj3QAX_4wYFoamFgI4w/edit?usp=sharing>",
        "user": "UP3FH4CLU",
        "ts": "1590817630.225600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RHsj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've put together a few slides about Glance's goals and strategy. Questions and criticism welcome. TLDR: The Glance project aims to \"dramatically increase the programming capabilities of everyone (especially beginners) by creating a visual programming inspired software creation tool that is both easy to learn and powerful enough to solve complex problems.\" "
                            },
                            {
                                "type": "link",
                                "url": "https://docs.google.com/presentation/d/1vm0uyc_swsSMTe_uIigCH-TBWj3QAX_4wYFoamFgI4w/edit?usp=sharing"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590817630.225600",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1590911061.260100",
        "reply_users": [
            "U0123H7JRDM",
            "UP3FH4CLU",
            "UEQ6M68H0",
            "U85HCL7JP"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UAVCC2X70"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "8C4E2E63-C4C9-4694-8CBE-0A2A5F402348",
        "type": "message",
        "text": "Very interesting and thanks for sharing! Are your findings based on (existing) research? I am building a visual programming environment myself and try to map it less directly on textual program language commands although some nodes in the flow perform very simple taks like checking a condition or performing an assignment. I want to abstract away certain bigger tasks inside the nodes themselves (which can be extended by plugins)",
        "user": "U0123H7JRDM",
        "ts": "1590822732.232500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3yIaT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting and thanks for sharing! Are your findings based on (existing) research? I am building a visual programming environment myself and try to map it less directly on textual program language commands although some nodes in the flow perform very simple taks like checking a condition or performing an assignment. I want to abstract away certain bigger tasks inside the nodes themselves (which can be extended by plugins)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU"
    },
    {
        "client_msg_id": "10376fcb-4401-4883-ad2e-f78355dd4a31",
        "type": "message",
        "text": "&gt; Are your findings based on (existing) research?\nNot really. My supposition that\n&gt; *The visual programming complexity ceiling exists because* visual syntax becomes large and cluttered when representing large programs \n&gt; and the semantics of the visual language do not support sufficient abstractions.\nis a bit of a simplification, and there are other problems with visual programming that aren't mentioned. Also, there are some visual languages that are general purpose (\"support sufficient abstractions\"), but it's uncommon.\n\nThe proposed solutions are not directly based on research.\n\nThere has been some research comparing the understandability of visual representations vs. textual representations. The paper \"<https://www.cl.cam.ac.uk/~afb21/publications/aire.pdf|Cognitive Factors in Programming with Diagrams\"> has an overview of some of the older research.",
        "user": "UP3FH4CLU",
        "ts": "1590825751.232700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aw1",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are your findings based on (existing) research?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not really. My supposition that\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The visual programming complexity ceiling exists because ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "visual syntax becomes large and cluttered when representing large programs \nand the semantics of the visual language do not support sufficient abstractions."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is a bit of a simplification, and there are other problems with visual programming that aren't mentioned. Also, there are some visual languages that are general purpose (\"support sufficient abstractions\"), but it's uncommon.\n\nThe proposed solutions are not directly based on research.\n\nThere has been some research comparing the understandability of visual representations vs. textual representations. The paper "
                            },
                            {
                                "type": "text",
                                "text": "\"",
                                "style": {
                                    "unlink": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https://www.cl.cam.ac.uk/~afb21/publications/aire.pdf",
                                "text": "Cognitive Factors in Programming with Diagrams\""
                            },
                            {
                                "type": "text",
                                "text": " has an overview of some of the older research.",
                                "style": {
                                    "unlink": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU"
    },
    {
        "client_msg_id": "c21bd1e8-535d-4c4a-927b-995519f00750",
        "type": "message",
        "text": "<@UHWC9PXBL> Ah cool, thanks for sharing this! :smile: I'm also interested in such techniques as well: further into the future, I can imagine going beyond just extracting frames from apps towards wanting to manipulate and modify them, which becomes much easier when you can detect the structure of the data on the page. I'll reply on Twitter with a bit more.",
        "user": "UML4ZEKDK",
        "ts": "1590846649.233000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A3D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Ah cool, thanks for sharing this! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": " I'm also interested in such techniques as well: further into the future, I can imagine going beyond just extracting frames from apps towards wanting to manipulate and modify them, which becomes much easier when you can detect the structure of the data on the page. I'll reply on Twitter with a bit more."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK"
    },
    {
        "client_msg_id": "C5396EA8-62FE-4ED1-91B6-B1EAA6654ED1",
        "type": "message",
        "text": "I read your slideshow with great interest. One thing I would like to caution you about is that the example you chose the fizz buzz program is far too small a task. If you measure length of programs by counting the words, in the textual version a task like fizzbuzz is so near zero words that it doesn\u2019t provide any information about whether or not the graphic of notation is helpful at mitigating complexity. In my Beads project samples I show a ramp of difficulty starting with a clock and going to TicTacToe, minesweeper, to chess, and then to the start of an IDE. Chess is over 1000 words, and is an excellent small test, as it combines both graphics and somewhat complex rules. I suggest you pick a task to program that has enough complexity that it cannot be represented on one screen and directly confront the central problem we are trying to solve. Which is how to make something more understandable then textual format does. If you limit yourself to trivial examples you will generate a false positive on the value Of your graphical representation. Even TicTacToe is hard enough that your diagrams would get A little messy. So I think you should Avoid basing your examples on a task too simple.  Another example that\u2019s too simple is the to do list, which is often presented to show how simple a new language would be, Any example based on data entry Fields is inevitably going to hide the million lines of code that goes into properly handling a multi lingual text entry box. operating systems exist just to handle the text entry box, Because the intrinsic complexity of rendering Truetype fonts and input method editors for Asian languages, and you are talking thousands of man-months, all concealed in the underlying layers.\n\nYou can pick a graphical task or a business task or a Database kind of task, but whatever task area you do select for your example, please be sure it has enough intrinsic complexity to go beyond what can be shown with a dozen nodes.\n\nI would also caution you that a goal of delivering \"an easy to read visual representation of Haskell\" is probably an oxymoron, because there is nothing that easy about reading Haskell. Some of Haskell's fancy features like currying are of negligible practical value, and make it very hard to read, because now you have to know at all times how many arguments a function expects, so you can tell the difference between passing a function pointer with a missing arg, or calling a function. Nothing easy to read about that feature; it is pure poison to a reader and for that reason i rejected it instantly as a feature in Beads.",
        "user": "UEQ6M68H0",
        "ts": "1590851167.238400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1590904233.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SIR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I read your slideshow with great interest. One thing I would like to caution you about is that the example you chose the fizz buzz program is far too small a task. If you measure length of programs by counting the words, in the textual version a task like fizzbuzz is so near zero words that it doesn\u2019t provide any information about whether or not the graphic of notation is helpful at mitigating complexity. In my Beads project samples I show a ramp of difficulty starting with a clock and going to TicTacToe, minesweeper, to chess, and then to the start of an IDE. Chess is over 1000 words, and is an excellent small test, as it combines both graphics and somewhat complex rules. I suggest you pick a task to program that has enough complexity that it cannot be represented on one screen and directly confront the central problem we are trying to solve. Which is how to make something more understandable then textual format does. If you limit yourself to trivial examples you will generate a false positive on the value Of your graphical representation. Even TicTacToe is hard enough that your diagrams would get A little messy. So I think you should Avoid basing your examples on a task too simple.  Another example that\u2019s too simple is the to do list, which is often presented to show how simple a new language would be, Any example based on data entry Fields is inevitably going to hide the million lines of code that goes into properly handling a multi lingual text entry box. operating systems exist just to handle the text entry box, Because the intrinsic complexity of rendering Truetype fonts and input method editors for Asian languages, and you are talking thousands of man-months, all concealed in the underlying layers.\n\nYou can pick a graphical task or a business task or a Database kind of task, but whatever task area you do select for your example, please be sure it has enough intrinsic complexity to go beyond what can be shown with a dozen nodes.\n\nI would also caution you that a goal of delivering \"an easy to read visual representation of Haskell\" is probably an oxymoron, because there is nothing that easy about reading Haskell. Some of Haskell's fancy features like currying are of negligible practical value, and make it very hard to read, because now you have to know at all times how many arguments a function expects, so you can tell the difference between passing a function pointer with a missing arg, or calling a function. Nothing easy to read about that feature; it is pure poison to a reader and for that reason i rejected it instantly as a feature in Beads."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590817630.225600",
        "parent_user_id": "UP3FH4CLU"
    },
    {
        "client_msg_id": "3AB8B3AF-BFAD-4025-A78D-BE8A23281028",
        "type": "message",
        "text": "Are you guys are talking about extracting and scraping data from websites which is a very common task nowadays, Because companies don\u2019t want to give access to their underlying data bases but The correct probing of their website you can get them to spill a lot of their data. and then you can reconstruct the data structures that generated the website. I will caution you that some of the big boys in the business such as Facebook spend a great deal of their time obfuscating the graphics and texts that are on their webpages so as to make it as difficult as possible to scrape. Facebook goes to perverse levels of obfuscation and concealment to the point where they even hide their crappy Little user interface icons, and they\u2019re not even drawing them as JPEG\u2019s or PNG\u2019s from a link location. When you have engineering devoted to blocking people using the information programmatically So as to induce people to enter contractual relations to obtain the data directly such as Facebook does, you are techniques will hit  these kinds of barriers. ",
        "user": "UEQ6M68H0",
        "ts": "1590851554.239900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YJWJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you guys are talking about extracting and scraping data from websites which is a very common task nowadays, Because companies don\u2019t want to give access to their underlying data bases but The correct probing of their website you can get them to spill a lot of their data. and then you can "
                            },
                            {
                                "type": "text",
                                "text": "reconstruct"
                            },
                            {
                                "type": "text",
                                "text": " the data structures that generated the website. I will caution you that some of the big boys in the business such as Facebook "
                            },
                            {
                                "type": "text",
                                "text": "spend"
                            },
                            {
                                "type": "text",
                                "text": " a great deal of their time obfuscating the graphics and texts that are on their "
                            },
                            {
                                "type": "text",
                                "text": "webpages"
                            },
                            {
                                "type": "text",
                                "text": " so as to make it as difficult as possible to scrape. Facebook goes to perverse levels of obfuscation and concealment to the point where they even hide their "
                            },
                            {
                                "type": "text",
                                "text": "crappy Little user interface icons, and they\u2019re not even drawing them as JPEG\u2019s or PNG\u2019s from a link location. When you have engineering devoted to blocking people using the information programmatically So as to induce people to enter contractual relations to obtain the data directly such as Facebook does, you are techniques will hit  these kinds of barriers. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK"
    },
    {
        "client_msg_id": "D42945B3-A038-4A38-ADE0-CE2D691AD8D6",
        "type": "message",
        "text": "<@UML4ZEKDK> yep\u2014that was exactly my comment on twitter about <@UCDBW1H26>\u2019s wildcard: <https://www.geoffreylitt.com/wildcard/|https://www.geoffreylitt.com/wildcard/>, which lets you make exactly those modifications. this is just a simple way to make data adapters for it using the mouse instead of code\n\n<@UEQ6M68H0> for the record, that\u2019s exactly what i\u2019m talking about! so far the code also works on facebook (don\u2019t have time to redact all the personal data, so no video) and almost works on twitter (at least for text content extraction). one upside is that the technique works as long as they maintain a tree structure in the dom that mirrors their presentation objects. it doesn\u2019t really care about class names or the data types of things. just makes it easy to identify normalized relationships\u2014give me every element that\u2019s at the same position with respect to its local tree, if that makes sense.",
        "user": "UHWC9PXBL",
        "ts": "1590852417.247000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Geoffrey Litt",
                "title_link": "https://www.geoffreylitt.com/wildcard/",
                "text": "Geoffrey Litt is a programmer and designer.",
                "fallback": "Geoffrey Litt",
                "thumb_url": "https://geoffreylitt.com/images/headshot.jpg",
                "from_url": "https://www.geoffreylitt.com/wildcard/",
                "thumb_width": 800,
                "thumb_height": 800,
                "service_name": "geoffreylitt.com",
                "id": 1,
                "original_url": "https://www.geoffreylitt.com/wildcard/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=1qg6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": " yep\u2014that was exactly my comment on twitter about "
                            },
                            {
                                "type": "user",
                                "user_id": "UCDBW1H26"
                            },
                            {
                                "type": "text",
                                "text": "\u2019s wildcard: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.geoffreylitt.com/wildcard/",
                                "text": "https://www.geoffreylitt.com/wildcard/"
                            },
                            {
                                "type": "text",
                                "text": ", which lets you make exactly those modifications. this is just a simple way to make data adapters for it using the mouse instead of code\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " for the record, that\u2019s exactly what i\u2019m talking about! so far the code also works on facebook (don\u2019t have time to redact all the personal data, so no video) and almost works on twitter (at least for text content extraction). one upside is that the technique works as long as they maintain a tree structure in the dom that mirrors their presentation objects. it doesn\u2019t really care about class names or the data types of things. just makes it easy to identify normalized relationships\u2014give me every element that\u2019s at the same position with respect to its local tree, if that makes sense."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK"
    },
    {
        "client_msg_id": "4A21A01C-8544-4107-A45C-0960342618B0",
        "type": "message",
        "text": "<@UHWC9PXBL> Right, that\u2019s the sort of thing I was hoping to see in future work at the end of my Wildcard review: <https://malleable.systems/blog/2020/02/29/wildcard-review/|https://malleable.systems/blog/2020/02/29/wildcard-review/> I think it could be useful for any systems that want to act on page structure while avoiding the need for lots of site-specific code.",
        "user": "UML4ZEKDK",
        "ts": "1590860344.250800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Wildcard review",
                "title_link": "https://malleable.systems/blog/2020/02/29/wildcard-review/",
                "text": "Geoffrey Litt and Daniel Jackson have been working on Wildcard, which enables customising websites via one of the most popular programming models in existence today: the spreadsheet. Wildcard\u2019s sheet is bidirectionally linked to the site content, so that changes and also user additions to the sheet are reflected back in the site\u2019s UI. Similarly, if the site content changes, the sheet is updated as well.",
                "fallback": "Wildcard review",
                "thumb_url": "https://malleable.systems/meta/android-chrome-512x512.png",
                "ts": 1583001872,
                "from_url": "https://malleable.systems/blog/2020/02/29/wildcard-review/",
                "thumb_width": 512,
                "thumb_height": 512,
                "service_icon": "https://malleable.systems/meta/apple-touch-icon.png",
                "service_name": "malleable.systems",
                "id": 1,
                "original_url": "https://malleable.systems/blog/2020/02/29/wildcard-review/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T62d4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Right, that\u2019s the sort of thing I was hoping to see in future work at the end of my Wildcard review: "
                            },
                            {
                                "type": "link",
                                "url": "https://malleable.systems/blog/2020/02/29/wildcard-review/",
                                "text": "https://malleable.systems/blog/2020/02/29/wildcard-review/"
                            },
                            {
                                "type": "text",
                                "text": " I think it could be useful for any systems that want to act on page structure while avoiding the need for lots of site-specific code."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "98171273-12AF-49A0-997C-CDB960CF4877",
        "type": "message",
        "text": "wow i can\u2019t believe i missed that article! we\u2019re on exactly the same page lmao",
        "user": "UHWC9PXBL",
        "ts": "1590862388.251500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g/G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wow i can\u2019t believe i missed that article! we\u2019re on exactly the same page lmao"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590790470.218300",
        "parent_user_id": "UML4ZEKDK",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    }
]