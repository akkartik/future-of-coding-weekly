[
    {
        "client_msg_id": "8e51d115-36f4-40f3-8e80-1fef154d3808",
        "type": "message",
        "text": "So apparently a 9\u00bd minute video is too long for the 2-minute video channel. Who would've thought! This is an introduction to Loyc trees and LES which I've been working on for a few years.\n<https://www.youtube.com/watch?v=Eqm2Eip884E>",
        "user": "UD6EXQVM0",
        "ts": "1588857325.175400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "The Universal Syntax Tree",
                "title_link": "https://www.youtube.com/watch?v=Eqm2Eip884E",
                "author_name": "David Piepgrass",
                "author_link": "https://www.youtube.com/channel/UCE11bX-pdzvpNtYjgkBclcQ",
                "thumb_url": "https://i.ytimg.com/vi/Eqm2Eip884E/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: The Universal Syntax Tree",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/Eqm2Eip884E?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=Eqm2Eip884E",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=Eqm2Eip884E"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Muoea",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So apparently a 9\u00bd minute video is too long for the 2-minute video channel. Who would've thought! This is an introduction to Loyc trees and LES which I've been working on for a few years.\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=Eqm2Eip884E"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588857325.175400",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1588949759.186400",
        "reply_users": [
            "UC2A2ARPT",
            "UQ706GB9U",
            "UD6EXQVM0"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U79HM6726"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "89ddde41-6029-4d98-ac14-97fa149cfe26",
        "type": "message",
        "text": "Given that you normalize all syntax (going by the the `**` vs `^` example), I'm curious how you might encode something like APL, which has a bunch of syntax that doesn't have an analog in other languages.\n\n...or something like the language Whitespace, which ignores all non-whitespace characters and assigns meaning to spaces, tabs, and linefeeds.\n\n...or perhaps a language where the syntax will have different meaning depending on context. For instance, where a construct like `if` can be an expression in some contexts and a statement in others.",
        "user": "UC2A2ARPT",
        "ts": "1588869844.175600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588870033.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dmE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Given that you normalize all syntax (going by the the "
                            },
                            {
                                "type": "text",
                                "text": "**",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs "
                            },
                            {
                                "type": "text",
                                "text": "^",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " example), I'm curious how you might encode something like APL, which has a bunch of syntax that doesn't have an analog in other languages.\n\n...or something like the language Whitespace, which ignores all non-whitespace characters and assigns meaning to spaces, tabs, and linefeeds.\n\n...or perhaps a language where the syntax will have different meaning depending on context. For instance, where a construct like "
                            },
                            {
                                "type": "text",
                                "text": "if",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " can be an expression in some contexts and a statement in others."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588857325.175400",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "bcff1c2c-d435-4cda-b6f7-a95998379dae",
        "type": "message",
        "text": "It reminded me of the IR of compilers like LLVM.",
        "user": "UQ706GB9U",
        "ts": "1588875022.176100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n+E9s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It reminded me of the IR of compilers like LLVM."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588857325.175400",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "83daf461-9ee3-4e28-8789-2ae43c5cd0e1",
        "type": "message",
        "text": "You're not even allowed 2:59, I checked.. :smirk:",
        "user": "UE6EFEPTQ",
        "ts": "1588878587.176900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6eY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You're not even allowed 2:59, I checked.. "
                            },
                            {
                                "type": "emoji",
                                "name": "smirk"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588878587.176900",
        "reply_count": 12,
        "reply_users_count": 5,
        "latest_reply": "1588959423.188100",
        "reply_users": [
            "UC2A2ARPT",
            "U79HM6726",
            "UBN9AFS0N",
            "UD6EXQVM0",
            "UE6EFEPTQ"
        ],
        "subscribed": true,
        "last_read": "1588959423.188100"
    },
    {
        "client_msg_id": "7a77e598-62d7-4bf8-879a-115bb32b0aa4",
        "type": "message",
        "text": "Like Brian Eno after making the Windows 3.1 startup chime... working in the small scale should give you a new appreciation for what you can do in the large (say, your next conf talk).\n\nFor inspiration, cue up _twenty four_ of these: <http://5secondfilms.com>",
        "user": "UC2A2ARPT",
        "ts": "1588881010.177000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588881015.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4htH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Like Brian Eno after making the Windows 3.1 startup chime... working in the small scale should give you a new appreciation for what you can do in the large (say, your next conf talk).\n\nFor inspiration, cue up "
                            },
                            {
                                "type": "text",
                                "text": "twenty four",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of these: "
                            },
                            {
                                "type": "link",
                                "url": "http://5secondfilms.com"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588878587.176900",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J",
                    "UMWF81HTP"
                ],
                "count": 2
            }
        ]
    }
]