[
    {
        "client_msg_id": "E60C4334-6A2E-405C-A3E0-3D346F88673E",
        "type": "message",
        "text": "i\u2019d like to congratulate this community on successfully derailing the tabs vs spaces debate that started fomenting with the (IMO) much more interesting textual vs graphical/projectional debate",
        "user": "UHWC9PXBL",
        "ts": "1588809766.168700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ierZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i\u2019d like to congratulate this community on successfully derailing the tabs vs spaces debate that started fomenting with the (IMO) much more interesting textual vs graphical/projectional debate"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "fd8fbf99-ac28-4ab7-b51c-cba8eddb69b2",
        "type": "message",
        "text": "Yup, meant more like project soli",
        "user": "UNBPP291C",
        "ts": "1588810043.169000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s6yx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yup, meant more like project soli"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "81e5d064-ce0a-467f-988f-62adc8c819b5",
        "type": "message",
        "text": "damn forgot that exists in pixels",
        "user": "UNBPP291C",
        "ts": "1588810054.169200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w4GLW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "damn forgot that exists in pixels"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "BE7A3B67-3AB9-4F5D-846E-084E978FA6A1",
        "type": "message",
        "text": "the co-dfns author did a workshop on how he made trees parallel by construction that i will probably have to digest for a full year: <https://youtu.be/lc4IjR1iJTg|https://youtu.be/lc4IjR1iJTg>",
        "user": "UHWC9PXBL",
        "ts": "1588810344.170900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Aaron Hsu - Parallel-by-construction Tree Manipulation with APL (Part 1) - \u03bbC 2018",
                "title_link": "https://youtu.be/lc4IjR1iJTg",
                "author_name": "LambdaConf",
                "author_link": "https://www.youtube.com/channel/UCEtohQeDqMSebi2yvLMUItg",
                "thumb_url": "https://i.ytimg.com/vi/lc4IjR1iJTg/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Aaron Hsu - Parallel-by-construction Tree Manipulation with APL (Part 1) - \u03bbC 2018",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/lc4IjR1iJTg?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/lc4IjR1iJTg",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/lc4IjR1iJTg"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "859V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the co-dfns author did a workshop on how he made trees parallel by construction that i will probably have to digest for a full year: "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/lc4IjR1iJTg",
                                "text": "https://youtu.be/lc4IjR1iJTg"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "39EB49B7-1170-4962-AD65-475BEEBEBDD0",
        "type": "message",
        "text": "goto reminds me of hyperlinks, so i\u2019m partial to it. i also think the first example is clearer\u2014but i\u2019m also prone to liking things like the not-quite-deprecated-but-very-frowned-upon with statement in javascript, so i may just favor underdogs",
        "user": "UHWC9PXBL",
        "ts": "1588810895.173900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gje",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "goto reminds me of hyperlinks, so i\u2019m partial to it. i also think the first example is clearer\u2014but i\u2019m also prone to liking things like the not-quite-deprecated-but-very-frowned-upon with statement in javascript, so i may just favor underdogs"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588771688.136100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "72C911B9-8BEF-4894-8188-3F8C62322DE4",
        "type": "message",
        "text": "goto\u2019s confusion IMO is a classic example of plaintext failing programming\u2014extremely complicated hypertext fiction created by nontechnical authors suggests that better interfaces may make it relatively intuitive",
        "user": "UHWC9PXBL",
        "ts": "1588810982.176200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qSJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "goto\u2019s confusion IMO is a classic example of plaintext failing programming\u2014extremely complicated hypertext fiction created by nontechnical authors suggests that better interfaces may make it relatively intuitive"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588771688.136100",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "EC2D800F-DAE3-48ED-AE6D-7B2FF346DA56",
        "type": "message",
        "text": "Yeah but.. coloured tabs vs coloured spaces. Syntax highlighting has had a blind spot for too long. And don't give me that \"rainbow parens\" nonsense. We all know lisp isn't a real art form.",
        "user": "UC2A2ARPT",
        "ts": "1588812895.178100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sftm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah but.. coloured tabs vs coloured spaces. Syntax highlighting has had a blind spot for too long. And don't give me that \"rainbow parens\" nonsense. We all know lisp isn't a real art form."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "2555eb60-b048-46be-9c4d-4204cf347400",
        "type": "message",
        "text": "<@UJN1TAYEQ> Thanks for all those links! You seem like you know what's going on in the GPU space, I'll have to tap your brain :slightly_smiling_face:. And wow, I've never looked into Tensorflow because my eyes glaze over when people start talking about machine learning. I didn't realise it was a more general platform. Time to pay attention!",
        "user": "UCGAK10LS",
        "ts": "1588814521.178400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1o0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for all those links! You seem like you know what's going on in the GPU space, I'll have to tap your brain "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": ". And wow, I've never looked into Tensorflow because my eyes glaze over when people start talking about machine learning. I didn't realise it was a more general platform. Time to pay attention!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "3997c828-0334-4373-98cb-0af2dc8c9176",
        "type": "message",
        "text": "<@U71PMQ1V0> Couldn't the fact that game programmers still do a lot of work on the CPU be explained by the fact that:\n\u2022 It's hard to write massively parallel code in traditional languages\n\u2022 GPUs are very hard to program, especially with pre-2016 APIs\n\u2022 Not all work is slow enough to benefit from extensive parallelization\n\u2022 Everyone thinks CPUs are \"normal\" and GPUs are \"special\"\nNone of those factors imply that GPUs would be a performance _regression_, they just imply that CPUs are the easy or \"good enough\" path.\nI mean... I've made some small video games before, and I never decided to use a CPU because a GPU _wouldn't work._ It's more that CPUs are the default choice.\nOn the other hand, I can see how an SQL database would be a problem on the GPU since you have to shuffle a ton of data around and disk/memory speed would limit any potential gains. I'm not personally interested in \"big data\" apps thankfully, so I'm happy to presume my language only works with &lt;~2 GB workloads.\nAnd yeah, I think \"the future\" is integration of CPU and GPU cores such that there is no perceivable communication overhead. It might be reasonable to take that as an assumption, if helpful.",
        "user": "UCGAK10LS",
        "ts": "1588815736.178600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eB0V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U71PMQ1V0"
                            },
                            {
                                "type": "text",
                                "text": " Couldn't the fact that game programmers still do a lot of work on the CPU be explained by the fact that:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "It's hard to write massively parallel code in traditional languages"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "GPUs are very hard to program, especially with pre-2016 APIs"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Not all work is slow enough to benefit from extensive parallelization"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Everyone thinks CPUs are \"normal\" and GPUs are \"special\""
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "None of those factors imply that GPUs would be a performance "
                            },
                            {
                                "type": "text",
                                "text": "regression",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", they just imply that CPUs are the easy or \"good enough\" path.\nI mean... I've made some small video games before, and I never decided to use a CPU because a GPU "
                            },
                            {
                                "type": "text",
                                "text": "wouldn't work.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " It's more that CPUs are the default choice.\nOn the other hand, I can see how an SQL database would be a problem on the GPU since you have to shuffle a ton of data around and disk/memory speed would limit any potential gains. I'm not personally interested in \"big data\" apps thankfully, so I'm happy to presume my language only works with <~2 GB workloads.\nAnd yeah, I think \"the future\" is integration of CPU and GPU cores such that there is no perceivable communication overhead. It might be reasonable to take that as an assumption, if helpful."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "type": "message",
        "text": "Reading <https://scholar.colorado.edu/concern/reports/t722h9830|Building the Memex Sixty Years Later: Trends and Directions in Personal Knowledge Bases> and they mention tree + graph as a data structure to consider :slightly_smiling_face:",
        "files": [
            {
                "id": "F013KBLUTS5",
                "created": 1588816045,
                "timestamp": 1588816045,
                "name": "Screen Shot 2020-05-06 at 9.46.43 PM.png",
                "title": "Screen Shot 2020-05-06 at 9.46.43 PM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UUK6Y29R8",
                "editable": false,
                "size": 183582,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F013KBLUTS5/screen_shot_2020-05-06_at_9.46.43_pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F013KBLUTS5/download/screen_shot_2020-05-06_at_9.46.43_pm.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F013KBLUTS5-f141ea8412/screen_shot_2020-05-06_at_9.46.43_pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F013KBLUTS5-f141ea8412/screen_shot_2020-05-06_at_9.46.43_pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F013KBLUTS5-f141ea8412/screen_shot_2020-05-06_at_9.46.43_pm_360.png",
                "thumb_360_w": 266,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F013KBLUTS5-f141ea8412/screen_shot_2020-05-06_at_9.46.43_pm_480.png",
                "thumb_480_w": 355,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F013KBLUTS5-f141ea8412/screen_shot_2020-05-06_at_9.46.43_pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F013KBLUTS5-f141ea8412/screen_shot_2020-05-06_at_9.46.43_pm_720.png",
                "thumb_720_w": 532,
                "thumb_720_h": 720,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F013KBLUTS5-f141ea8412/screen_shot_2020-05-06_at_9.46.43_pm_800.png",
                "thumb_800_w": 591,
                "thumb_800_h": 800,
                "original_w": 603,
                "original_h": 816,
                "thumb_tiny": "AwAwACO+UJJ/xo2N/k1JRQBHtb/Jo2tUlFACKCBzS0UUAMLHJ+YUm4/3hSHGTx+tGR6frQAu5v7wpQx/vCm5Hp+tHHp+tAEinjrmlpq/dHGKWgCNhyeRRj3FI33j9aKAFCjuwo2j+9RtPpSbT6GgCVcbeDS01Qdop1AH/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UUK6Y29R8/F013KBLUTS5/screen_shot_2020-05-06_at_9.46.43_pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F013KBLUTS5-8406aa1506",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EKMJd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reading "
                            },
                            {
                                "type": "link",
                                "url": "https://scholar.colorado.edu/concern/reports/t722h9830",
                                "text": "Building the Memex Sixty Years Later: Trends and Directions in Personal Knowledge Bases"
                            },
                            {
                                "type": "text",
                                "text": " and they mention tree + graph as a data structure to consider "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UUK6Y29R8",
        "display_as_bot": false,
        "ts": "1588816047.178800",
        "edited": {
            "user": "UUK6Y29R8",
            "ts": "1588816078.000000"
        },
        "client_msg_id": "187efd97-1575-48f3-bbf5-208881d2dfb3",
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "84483ed3-b5a5-405b-a58d-b67ffcc83386",
        "type": "message",
        "text": "&gt; <@UCGAK10LS> I think the future is integration of CPU and GPU cores such that there is no perceivable communication overhead.\nSo AMD has been pushing this idea for 8 years with their HSA architecture. If it is such a great idea, why are Intel and nVidia not doing it? An honest question, I know very little about HSA or about any engineering tradeoffs that might be involved. <https://en.wikipedia.org/wiki/Heterogeneous_System_Architecture>",
        "user": "UJN1TAYEQ",
        "ts": "1588818223.179300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Heterogeneous System Architecture",
                "title_link": "https://en.wikipedia.org/wiki/Heterogeneous_System_Architecture",
                "from_url": "https://en.wikipedia.org/wiki/Heterogeneous_System_Architecture",
                "author_name": "Wikipedia",
                "author_link": "https://en.wikipedia.org/",
                "text": "Heterogeneous System Architecture (HSA) is a cross-vendor set of specifications that allow for the integration of central processing units and graphics processors on the same bus, with shared memory and tasks. The HSA is being developed by the HSA Foundation, which includes (among many others) AMD and ARM. The platform's stated aim is to reduce communication latency between CPUs, GPUs and other compute devices, and make these various devices more compatible from a programmer's perspective, relieving the programmer of the task of planning the moving of data between devices' disjoint memories (as must currently be done with OpenCL or CUDA).CUDA and OpenCL as well as most other fairly advanced programming languages can use HSA to increase their execution performance.  Heterogeneous computing is widely used in system-on-chip devices such as tablets, smartphones, other mobile devices, and video game consoles. HSA allows programs to use the graphics processor for floating point calculations without separate memory or scheduling.",
                "fallback": "wikipedia: Heterogeneous System Architecture",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png",
                "id": 1,
                "original_url": "https://en.wikipedia.org/wiki/Heterogeneous_System_Architecture"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EC=L",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I think the future is integration of CPU and GPU cores such that there is no perceivable communication overhead."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So AMD has been pushing this idea for 8 years with their HSA architecture. If it is such a great idea, why are Intel and nVidia not doing it? An honest question, I know very little about HSA or about any engineering tradeoffs that might be involved. "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Heterogeneous_System_Architecture"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "F3F32C7F-5340-4CDE-9F09-03BC7FC4B04C",
        "type": "message",
        "text": "My first guess would be Nvidia doesn\u2019t see itself as a CPU company and Intel doesn\u2019t see itself as a GPU company. They\u2019re focused on their own niches. AMD has an equal focus on both technologies.",
        "user": "UCGAK10LS",
        "ts": "1588818363.181500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8i=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My first guess would be Nvidia doesn\u2019t see itself as a CPU company and Intel doesn\u2019t see itself as a GPU company. They\u2019re focused on their own niches. AMD has an equal focus on both technologies."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "484689C1-5DF8-4F85-BEB9-AB033C69D0E3",
        "type": "message",
        "text": "Of course all companies have crossed into both technologies, but not deeply.",
        "user": "UCGAK10LS",
        "ts": "1588818406.182400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dQZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Of course all companies have crossed into both technologies, but not deeply."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "5dd58e01-bb83-4b38-a376-433c2b9936e2",
        "type": "message",
        "text": "<@UUK6Y29R8>\n\"Although graphs are a strict superset of trees...\", object trees with circular references are actually no less general than \"general graphs\" because 1) each node can relate to any other node or to a group of nodes (\"children:[child1,child2,child3]\"), 2) there can be multiple kinds of relations (\"son: value\", \"daughter: value\", etc.). So I cannot imagine any relation which could not be expressed with object tree structure. Object tree is a graph which just has a default convenient structure, but is not limited by it.\nPlease correct me if I am wrong in substence or in terminology.",
        "user": "UTG9XLGKZ",
        "ts": "1588837993.183500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UTG9XLGKZ",
            "ts": "1588838053.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MvfP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUK6Y29R8"
                            },
                            {
                                "type": "text",
                                "text": "\n\"Although graphs are a strict superset of trees...\", object trees with circular references are actually no less general than \"general graphs\" because 1) each node can relate to any other node or to a group of nodes (\"children:[child1,child2,child3]\"), 2) there can be multiple kinds of relations (\"son: value\", \"daughter: value\", etc.). So I cannot imagine any relation which could not be expressed with object tree structure. Object tree is a graph which just has a default convenient structure, but is not limited by it.\nPlease correct me if I am wrong in substence or in terminology."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "72F56F80-CBB5-45AF-90B6-D2504D9C8F0D",
        "type": "message",
        "text": "Interesting discussion! I mainly avoid scripting or customization for this weird reason: it feels like tight coupling to me, which is what I try to avoid in programming and system design as well. If I use certain configuration or scripting mechanisms, it initially feels like I have much more control over the system than I have over a system that doesn\u2019t provide these. You don\u2019t notice that it\u2019s an illusion until the system changes dramatically or goes away. In a way I could also describe it as \u201cI want to use a product that has been well designed in the first place, not a mediocre system that only becomes a great one after I put the effort in to customize it.\u201d There are things I want to be involved in building, but there are also things I just want to work without me having to make them work first.\n\nThat\u2019s why I value good defaults over configurability and extendablity. I\u2019ll rather use a product that is somewhat limited in features, if it chose good defaults over a product that is more configurable but starts with poorly chosen defaults and I have to spend time to set it up the way I want it first. I don\u2019t know exactly where this comes from, and I know way more people \u2014 especially in our community \u2014 who value configurability more and don\u2019t care about defaults that much. So I know I\u2019m closer to the weird end of the spectrum \u2014 is it just me, or are there others who know what I\u2019m talking about?\n\nI\u2019m still trying to get to the core of this weird feeling, and it still feels too hard to describe, but it seems obvious to me that it plays a large role in the platform and tool choices we make.",
        "user": "U5STGTB3J",
        "ts": "1588847736.203300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9PHs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting discussion! I mainly avoid scripting or customization for this weird reason: it feels like tight coupling to me, which is what I try to avoid in programming and system design as well. If I use certain configuration or scripting mechanisms, it initially feels like I have much more control over the system than I have over a system that doesn\u2019t provide these. You don\u2019t notice that it\u2019s an illusion until the system changes dramatically or goes away. In a way I could also describe it as \u201cI want to use a product that has been well designed in the first place, not a mediocre system that only becomes a great one after I put the effort in to customize it.\u201d There are things I want to be involved in building, but there are also things I just want to work without me having to make them work first.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "That\u2019s why I value good defaults over configurability and extendablity. I\u2019ll rather use a product that is somewhat limited in features, if it chose good defaults over a product that is more configurable but starts with poorly chosen defaults and I have to spend time to set it up the way I want it first. I don\u2019t know exactly where this comes from, and I know way more people \u2014 especially in our community \u2014 who value configurability more and don\u2019t care about defaults that much. So I know I\u2019m closer to the weird end of the spectrum \u2014 is it just me, or are there others who know what I\u2019m talking about?\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I\u2019m still trying to get to the core of this weird feeling, and it still feels too hard to describe, but it seems obvious to me that it plays a large role in the platform and tool choices we make."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4aba239d-7b3b-4b17-b6e3-bb330cc4ca17",
        "type": "message",
        "text": "&gt;  Object tree is a graph which just has a default convenient structure\nI\u2019m not an expert on this, but yes I would say that an object tree is a kind of graph since you can have cycles and bi-directionality",
        "user": "UUK6Y29R8",
        "ts": "1588859052.204500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "acKm",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Object tree is a graph which just has a default convenient structure"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m not an expert on this, but yes I would say that an object tree is a kind of graph since you can have cycles and bi-directionality"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "c714c668-566d-4ea9-bd2c-2f32662aea2d",
        "type": "message",
        "text": "Wait, soli wasn't an april fools joke??! AWESOME!",
        "user": "UNCP67JSK",
        "ts": "1588859898.204700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WAE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wait, soli wasn't an april fools joke??! AWESOME!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "bb74ad9f-94fe-48a5-af7b-d6ac8fb8e38f",
        "type": "message",
        "text": "<@UNCP67JSK> no, it\u2019s running in prod :smile:",
        "user": "UNBPP291C",
        "ts": "1588859999.204900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L1O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " no, it\u2019s running in prod "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "127b4095-e898-4a35-81b6-f48f8b117806",
        "type": "message",
        "text": "if you have more than 1 \u201cparent\u201d, it\u2019s a graph. graph is just a perspective of a tree.",
        "user": "UNBPP291C",
        "ts": "1588860051.205100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y/=Ty",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you have more than 1 \u201cparent\u201d, it\u2019s a graph. graph is just a perspective of a tree."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "8f43afdb-8088-46ca-934e-f5a22bf0ea9a",
        "type": "message",
        "text": "or vice versa :thinking_face:",
        "user": "UNBPP291C",
        "ts": "1588860062.205300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JCu2t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "or vice versa "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "a2688b4e-a6de-4253-96eb-ed5ed238f9d1",
        "type": "message",
        "text": "<@U5STGTB3J> I can back this up from my side for sure! Although I love programming/engineering and tinkering, when I need something to work, I will certainly prefer opinionated solution with good defaults then configuring stuff myself. One part is certainly the time I would need to spend on configuring, however I enjoy that sometimes - but the biggest thing is certainly maintainance! Yes, if I configured it myself, it might work exactly as I want it, but what when it stops working? And at that moment, I might not have the luxury of choosing the time when I will fix it, it might be urgent and critical. So for me, to put it simply, it is the cost of maintainance - the less I am responsible for, the more I can focus on what I want.",
        "user": "UUB7RA7PF",
        "ts": "1588860709.205500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R6rf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " I can back this up from my side for sure! Although I love programming/engineering and tinkering, when I need something to work, I will certainly prefer opinionated solution with good defaults then configuring stuff myself. One part is certainly the time I would need to spend on configuring, however I enjoy that sometimes - but the biggest thing is certainly maintainance! Yes, if I configured it myself, it might work exactly as I want it, but what when it stops working? And at that moment, I might not have the luxury of choosing the time when I will fix it, it might be urgent and critical. So for me, to put it simply, it is the cost of maintainance - the less I am responsible for, the more I can focus on what I want."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7f604cb9-d290-4768-b61f-1c1e46ea0129",
        "type": "message",
        "text": "Apparently it's not just github but a microsoft product : <https://visualstudio.microsoft.com/fr/services/visual-studio-codespaces/?rr=https%3A%2F%2Fonline.visualstudio.com%2Flogin>",
        "user": "U012WT6NP2N",
        "ts": "1588860801.205800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Visual Studio",
                "title": "Visual Studio Codespaces - IDE cloud - \u00c9diteur de code en ligne",
                "title_link": "https://visualstudio.microsoft.com/fr/services/visual-studio-codespaces/?rr=https%3A%2F%2Fonline.visualstudio.com%2Flogin",
                "text": "D\u00e9veloppez en tout lieu gr\u00e2ce \u00e0 un environnement de d\u00e9veloppement cloud. B\u00e9n\u00e9ficiez de la collaboration en temps r\u00e9el sur n\u2019importe quel appareil pour n\u2019importe quel projet.",
                "fallback": "Visual Studio: Visual Studio Codespaces - IDE cloud - \u00c9diteur de code en ligne",
                "image_url": "https://visualstudio.microsoft.com/wp-content/uploads/2019/10/VSOSocSharing2x.jpg",
                "image_width": 446,
                "image_height": 250,
                "from_url": "https://visualstudio.microsoft.com/fr/services/visual-studio-codespaces/?rr=https%3A%2F%2Fonline.visualstudio.com%2Flogin",
                "image_bytes": 124748,
                "service_icon": "https://visualstudio.microsoft.com/wp-content/uploads/2017/02/BrandVisualStudioIDE2017RTW_64x.png",
                "id": 1,
                "original_url": "https://visualstudio.microsoft.com/fr/services/visual-studio-codespaces/?rr=https%3A%2F%2Fonline.visualstudio.com%2Flogin"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QiHi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Apparently it's not just github but a microsoft product : "
                            },
                            {
                                "type": "link",
                                "url": "https://visualstudio.microsoft.com/fr/services/visual-studio-codespaces/?rr=https%3A%2F%2Fonline.visualstudio.com%2Flogin"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "a7fa07c8-4cb5-4622-8a97-3b37c44e30cb",
        "type": "message",
        "text": "But yes as you said, your local dev environnement has a bleak future.",
        "user": "U012WT6NP2N",
        "ts": "1588860853.206100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wlBa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But yes as you said, your local dev environnement has a bleak future."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "6b6fa0a9-3dc4-4117-b4bc-289da303a3dc",
        "type": "message",
        "text": "instead of local/remote we could push for a standard for \"roaming\" environments of which this is one instance and then local and remote are basically the same",
        "user": "UBN9AFS0N",
        "ts": "1588861826.206300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lAxG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "instead of local/remote we could push for a standard for \"roaming\" environments of which this is one instance and then local and remote are basically the same"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "dd04104b-f148-4e1a-9d08-03e86d478b3a",
        "type": "message",
        "text": "I would like to isolate my local environments as much as those in github codespaces, I want to version them and share them with coworkers, fetch them on a new machine",
        "user": "UBN9AFS0N",
        "ts": "1588861865.206500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "flT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would like to isolate my local environments as much as those in github codespaces, I want to version them and share them with coworkers, fetch them on a new machine"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "729d49dd-8cf9-410f-81ca-88a41fabe81f",
        "type": "message",
        "text": "I really like the framing of the goal as \"roaming\"/isolated development environments. Regarding Codespaces does anyone know if you can ssh into your Codespace? And tangentially, does this model allow using any text editor (or any other program) besides Visual Studio Code? E.g., can you edit an image in Photoshop in the Codespace for example? I'm sure not today, but ever? Does the model allow for that?",
        "user": "UE0ETTCG7",
        "ts": "1588862584.206800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d+dO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like the framing of the goal as \"roaming\"/isolated development environments. Regarding Codespaces does anyone know if you can ssh into your Codespace? And tangentially, does this model allow using any text editor (or any other program) besides Visual Studio Code? E.g., can you edit an image in Photoshop in the Codespace for example? I'm sure not today, but ever? Does the model allow for that?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "adf14d53-b3df-4a21-8a51-b985f099788f",
        "type": "message",
        "text": "VS Code has a \"remote\" protocol builtin, it uses that to connect to a container as far as I understand, if the protocol was a standard others could implement it (since VS Code is open source it shouldn't be hard to reuse it), and since the env is an environment it should be possible to ssh to it, don't know if this service allows it",
        "user": "UBN9AFS0N",
        "ts": "1588862756.207000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iVc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "VS Code has a \"remote\" protocol builtin, it uses that to connect to a container as far as I understand, if the protocol was a standard others could implement it (since VS Code is open source it shouldn't be hard to reuse it), and since the env is an environment it should be possible to ssh to it, don't know if this service allows it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "672e8f8b-733a-44e3-b19e-69f84bc3fd90",
        "type": "message",
        "text": "<https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack>",
        "user": "UBN9AFS0N",
        "ts": "1588862838.207200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C/8YW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "7250b5bd-6b9f-4c9e-a6cd-97db450a08f8",
        "type": "message",
        "text": "<https://code.visualstudio.com/docs/remote/ssh>",
        "user": "UBN9AFS0N",
        "ts": "1588862872.207400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1588862878.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "giBa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://code.visualstudio.com/docs/remote/ssh"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "fc7ccf31-2db7-4a87-b09e-dbefff1bc60f",
        "type": "message",
        "text": "<@UNBPP291C>\n\"if you have more than 1 parent\"\nThanks, I forgot to consider this case.\nThough I think it still can be handled with an object tree. There are two options:\n\n1. You can simply know that \"child\"/\"son\"/\"daughter\" relation is by its nature a multy-parent relation, so each time you see \"child\"/\"son\"/\"daughter\" property you should look at the referenced object and get information about reciprocal relation from there: in this case you look at \"parents\" property of the referenced object and get all other parents from there. Thus you got info about this multy-parent relation.\n\n2. If you require that it should be semantically indicated that a relation is multi-parent each time you look at this relation, you can implement this with object tree through the following convention: a relation value can contain not only the referenced object, but also some meta-information about this relation besides its name:\nJohn={name:'John', son:{multy-parent:true, referenceObject:James}}\n\nNot sure if I am correct with terminology.",
        "user": "UTG9XLGKZ",
        "ts": "1588865274.207800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UTG9XLGKZ",
            "ts": "1588865606.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4dd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNBPP291C"
                            },
                            {
                                "type": "text",
                                "text": "\n\"if you have more than 1 parent\"\nThanks, I forgot to consider this case.\nThough I think it still can be handled with an object tree. There are two options:\n\n1. You can simply know that \"child\"/\"son\"/\"daughter\" relation is by its nature a multy-parent relation, so each time you see \"child\"/\"son\"/\"daughter\" property you should look at the referenced object and get information about reciprocal relation from there: in this case you look at \"parents\" property of the referenced object and get all other parents from there. Thus you got info about this multy-parent relation.\n\n2. If you require that it should be semantically indicated that a relation is multi-parent each time you look at this relation, you can implement this with object tree through the following convention: a relation value can contain not only the referenced object, but also some meta-information about this relation besides its name:\nJohn={name:'John', son:{multy-parent:true, referenceObject:James}}\n\nNot sure if I am correct with terminology."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "784dcec3-a528-444b-8b50-3ee175eee5e0",
        "type": "message",
        "text": "I like the \"roam\" label as well. Local vs. cloud is not really the important point. What matters to me is being in control. If next week I need to work offline, I want to be able to do that. If my cloud IDE provides goes bankrupt, I want to be able to move to a different one without loss or major effort.",
        "user": "UJBAJNFLK",
        "ts": "1588867374.208300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3hBQH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like the \"roam\" label as well. Local vs. cloud is not really the important point. What matters to me is being in control. If next week I need to work offline, I want to be able to do that. If my cloud IDE provides goes bankrupt, I want to be able to move to a different one without loss or major effort."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "a7cb234f-56f2-4203-9ac8-365b5483e17d",
        "type": "message",
        "text": "I'd add to control also being able to use any apps with your source code. I love the idea of being able to spin up a development environment from anywhere, but I don't want to be forced to use VSCode to do so. (I use and love VSCode, but I still don't want to be forced to use it.)",
        "user": "UE0ETTCG7",
        "ts": "1588870136.209100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7OHuV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd add to control also being able to use any apps with your source code. I love the idea of being able to spin up a development environment from anywhere, but I don't want to be forced to use VSCode to do so. (I use and love VSCode, but I still don't want to be forced to use it.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588787721.156700",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "e83c91a1-26c9-41cd-b1a3-45bbbc4eb5bc",
        "type": "message",
        "text": "<@UCGAK10LS> see my response above, none of those things are true for the current state of the AAA game industry, game engines are using (less) massively parallel code on the CPU by default, the main reason now is resource allocation, and once again many workloads that were CPU only are moving to the GPU now",
        "user": "UBSMEUXAA",
        "ts": "1588873089.211600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0FjA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " see my response above, none of those things are true for the current state of the AAA game industry, game engines are using (less) massively parallel code on the CPU by default, the main reason now is resource allocation, and once again many workloads that were CPU only are moving to the GPU now"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "bd5c821b-d3ba-4a33-8c7c-069808da8a14",
        "type": "message",
        "text": "sure there is a lot of game code that is still single threaded",
        "user": "UBSMEUXAA",
        "ts": "1588873104.211800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5GQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sure there is a lot of game code that is still single threaded"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "ed515a7d-221f-412f-a63a-0a5d85a5c85a",
        "type": "message",
        "text": "Also one thing about the memory issue is game consoles already almost universally have unified memory",
        "user": "UBSMEUXAA",
        "ts": "1588873156.212000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h=J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also one thing about the memory issue is game consoles already almost universally have unified memory"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "3beae54f-9235-4446-b16c-74de78ec710e",
        "type": "message",
        "text": "and have had it for years",
        "user": "UBSMEUXAA",
        "ts": "1588873161.212200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SunT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and have had it for years"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "48ecca83-102a-4d38-a131-4470b2b96bfa",
        "type": "message",
        "text": "Stephen Kell during Convivial Computing Salon Q&amp;A: \"[C's] concept of memory is bigger than the process\u2026 avoiding the denigration of the outside.\"",
        "user": "UFEQUBNNT",
        "ts": "1588873457.213000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gz/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Stephen Kell during Convivial Computing Salon Q&A: \"[C's] concept of memory is bigger than the process\u2026 avoiding the denigration of the outside.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "reply_count": 25,
        "reply_users_count": 6,
        "latest_reply": "1588997445.273400",
        "reply_users": [
            "UDQBTJ211",
            "UFEQUBNNT",
            "UT60XSVCN",
            "UCUSW7WVD",
            "U8A5MS6R1",
            "USH01JEDQ"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "USH01JEDQ",
                    "U8A5MS6R1"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "a7ea610d-05c4-4338-ba5e-58a8b6e73004",
        "type": "message",
        "text": "Is it on Youtube? Annoyed I missed it",
        "user": "UDQBTJ211",
        "ts": "1588873583.213300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zyE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it on Youtube? Annoyed I missed it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "9758fc41-3e2f-4bc8-93a9-14d8e5a677a0",
        "type": "message",
        "text": "I heard Jonathan Edwards saying that he was updating the agenda spreadsheet to replace the Zoom links with recording links as they go along.",
        "user": "UFEQUBNNT",
        "ts": "1588873714.213500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7xblK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I heard Jonathan Edwards saying that he was updating the agenda spreadsheet to replace the Zoom links with recording links as they go along."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "35dd7a16-b60d-41ea-b76e-a7df6dd73e77",
        "type": "message",
        "text": "on consoles there often is very little communication overhead, consoles use AMD (or Nvidia with Switch) SOCs, there are still many reasons why you can't or don't want the CPU and GPU operating on the exact same data and you don't want the CPU waiting for the GPU or vice a versa. GPU and CPU don't share caches, GPU prefers large pipelined workloads to hide memory latency and wants to saturate bandwidth, etc. but many of those same rules apply to any multiprocessor system and are valid if you want good performance with multithreaded CPU code",
        "user": "UBSMEUXAA",
        "ts": "1588873923.213700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i3ZMo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "on consoles there often is very little communication overhead, consoles use AMD (or Nvidia with Switch) SOCs, there are still many reasons why you can't or don't want the CPU and GPU operating on the exact same data and you don't want the CPU waiting for the GPU or vice a versa. GPU and CPU don't share caches, GPU prefers large pipelined workloads to hide memory latency and wants to saturate bandwidth, etc. but many of those same rules apply to any multiprocessor system and are valid if you want good performance with multithreaded CPU code"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "1d5623a9-4467-4726-9a10-d148d718c6f3",
        "type": "message",
        "text": "Any chance we could get them uploaded to youtube or some other video site?",
        "user": "UT60XSVCN",
        "ts": "1588874180.214100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6n/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Any chance we could get them uploaded to youtube or some other video site?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "71517fa8-e4d4-4595-b5aa-3413031d9a6c",
        "type": "message",
        "text": "<@UDQBTJ211> I missed the first talk today because I transferred the time wrong to my calendar :sob: Extremely disheartening after spending much of my week thinking about this schedule.",
        "user": "UCUSW7WVD",
        "ts": "1588874196.214300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VTi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " I missed the first talk today because I transferred the time wrong to my calendar "
                            },
                            {
                                "type": "emoji",
                                "name": "sob"
                            },
                            {
                                "type": "text",
                                "text": " Extremely disheartening after spending much of my week thinking about this schedule."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "pensive",
                "users": [
                    "UFEQUBNNT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "4ecd2613-2ca1-471b-9e0d-a766c39e1393",
        "type": "message",
        "text": "<@UCGAK10LS> Intel is working on a discrete GPU (that will actually ship, I think), so maybe that will change.  I think Intel is more of a GPU company than Nvidia is a CPU company",
        "user": "UBSMEUXAA",
        "ts": "1588874243.214600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rcw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Intel is working on a discrete GPU (that will actually ship, I think), so maybe that will change.  I think Intel is more of a GPU company than Nvidia is a CPU company"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "e5edf5e9-fc81-4523-bbcd-05555b781b6e",
        "type": "message",
        "text": "There is also this idea that, everyone has a integrated GPU sitting in their Intel CPU, and that thing is often idle if a discrete GPU is active",
        "user": "UBSMEUXAA",
        "ts": "1588874348.214800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tSZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is also this idea that, everyone has a integrated GPU sitting in their Intel CPU, and that thing is often idle if a discrete GPU is active"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "11ec8237-37aa-4b34-8bd3-ac13497fd3c2",
        "type": "message",
        "text": "and sure its under-powered, but it still has some compute capability that's non-trivial",
        "user": "UBSMEUXAA",
        "ts": "1588874542.215000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hNfp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and sure its under-powered, but it still has some compute capability that's non-trivial"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "31719801-3178-4a13-a42c-3bb6cbad740f",
        "type": "message",
        "text": "its under-powered compared to high end discrete GPUs",
        "user": "UBSMEUXAA",
        "ts": "1588874560.215200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "chxh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "its under-powered compared to high end discrete GPUs"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "b7efd845-1abd-4ac2-aae6-351aa611ef6a",
        "type": "message",
        "text": "also integrated GPUs on PC are UMA",
        "user": "UBSMEUXAA",
        "ts": "1588874583.215400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ORy8u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also integrated GPUs on PC are UMA"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588742541.079700",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "e5f2bfd7-fb16-4ce5-a189-a4203829fa7d",
        "type": "message",
        "text": "I have a counterpoint to Stephen's. Is the C memory model not an imposition of the C paradigm to anyone who wishes to interoperate?",
        "user": "U8A5MS6R1",
        "ts": "1588874815.215600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1588874826.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "79P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a counterpoint to Stephen's. Is the C memory model not an imposition of the C paradigm to anyone who wishes to interoperate?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "c06b02b7-3cdb-49e9-9faa-e1e02892cacf",
        "type": "message",
        "text": "BTW, Kartik's talk coming up soon, right? I have 12pm Pacific.",
        "user": "U8A5MS6R1",
        "ts": "1588874929.215900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1588874946.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CMhf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "BTW, Kartik's talk coming up soon, right? I have 12pm Pacific."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UDQBTJ211"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "I think it's the other way around. Memory exists, so we have \"systems\" programming languages that use it directly. But your point feeds into a thought I was composing\u2026\n\nMemory extending beyond a single process enables mostly just low-level bit munging. It seems to me that one mechanism for \"connection over containment\" (also from Stephen Kell's talk) would be rethinking what's \"outside.\"\n\nStandard \"outside\" today has std streams, the filesystem, the clock. But your language's objects probably don't extend beyond a single process. Your types probably don't (unless you're targeting a Lisp machine). BeOS's rich file attributes encourage you to put most of your program on the \"outside.\"",
        "user": "UFEQUBNNT",
        "ts": "1588875251.216600",
        "thread_ts": "1588873457.213000",
        "root": {
            "client_msg_id": "48ecca83-102a-4d38-a131-4470b2b96bfa",
            "type": "message",
            "text": "Stephen Kell during Convivial Computing Salon Q&amp;A: \"[C's] concept of memory is bigger than the process\u2026 avoiding the denigration of the outside.\"",
            "user": "UFEQUBNNT",
            "ts": "1588873457.213000",
            "team": "T5TCAFTA9",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "Gz/",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Stephen Kell during Convivial Computing Salon Q&A: \"[C's] concept of memory is bigger than the process\u2026 avoiding the denigration of the outside.\""
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1588873457.213000",
            "reply_count": 25,
            "reply_users_count": 6,
            "latest_reply": "1588997445.273400",
            "reply_users": [
                "UDQBTJ211",
                "UFEQUBNNT",
                "UT60XSVCN",
                "UCUSW7WVD",
                "U8A5MS6R1",
                "USH01JEDQ"
            ],
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4aGYY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's the other way around. Memory exists, so we have \"systems\" programming languages that use it directly. But your point feeds into a thought I was composing\u2026\n\nMemory extending beyond a single process enables mostly just low-level bit munging. It seems to me that one mechanism for \"connection over containment\" (also from Stephen Kell's talk) would be rethinking what's \"outside.\"\n\nStandard \"outside\" today has std streams, the filesystem, the clock. But your language's objects probably don't extend beyond a single process. Your types probably don't (unless you're targeting a Lisp machine). BeOS's rich file attributes encourage you to put most of your program on the \"outside.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "93facb52-2053-4b47-936e-14def12a9842",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC",
                    "UJBAJNFLK"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "5a240497-19b2-46e3-b145-467e9762d096",
        "type": "message",
        "text": "Maybe everyone already knows this, and it's just that nobody wants to make an OS. :slightly_smiling_face:",
        "user": "UFEQUBNNT",
        "ts": "1588875434.217000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tCRx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe everyone already knows this, and it's just that nobody wants to make an OS. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "02f1dbe3-8d63-4d05-a886-1daf15cb4f8e",
        "type": "message",
        "text": "Was it similar material to this? <https://www.youtube.com/watch?v=LwicN2u6Dro>",
        "user": "UDQBTJ211",
        "ts": "1588875908.217300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "\"Liberating the Smalltalk lurking in C and Unix\" by Stephen Kell",
                "title_link": "https://www.youtube.com/watch?v=LwicN2u6Dro",
                "author_name": "Strange Loop",
                "author_link": "https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https://i.ytimg.com/vi/LwicN2u6Dro/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Liberating the Smalltalk lurking in C and Unix\" by Stephen Kell",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/LwicN2u6Dro?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=LwicN2u6Dro",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=LwicN2u6Dro"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BfT4l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Was it similar material to this? "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=LwicN2u6Dro"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "7695824c-a4a2-4fda-bbe5-6c2efcb7d453",
        "type": "message",
        "text": "I like when a system/tool allows you to configure things. But now I also value a lot those with good defaults. And in the end I find myself seeking configurable tools with nice defaults. For example, I use zsh as my interactive shell, with which one can configure lots of things, and I chose it for that. But after having installed it, I found the defaults was good enough for me, and I didn't have to to tweak it much.",
        "user": "UJ6LDMMN0",
        "ts": "1588876590.217900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v9He",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like when a system/tool allows you to configure things. But now I also value a lot those with good defaults. And in the end I find myself seeking configurable tools with nice defaults. For example, I use zsh as my interactive shell, with which one can configure lots of things, and I chose it for that. But after having installed it, I found the defaults was good enough for me, and I didn't have to to tweak it much."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUB7RA7PF"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "48bdd967-f949-4f37-badd-9772d4dc22f3",
        "type": "message",
        "text": "Different. Here's the abstract. I think the slides and recording will be posted at some point: <https://2020.programming-conference.org/details/salon-2020-papers/9/Convivial-design-heuristics-for-software-systems>",
        "user": "U8A5MS6R1",
        "ts": "1588876611.218100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1588876618.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FjV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Different. Here's the abstract. I think the slides and recording will be posted at some point: "
                            },
                            {
                                "type": "link",
                                "url": "https://2020.programming-conference.org/details/salon-2020-papers/9/Convivial-design-heuristics-for-software-systems"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "34f45f32-9d58-4eba-895d-4fa10dfbb008",
        "type": "message",
        "text": "The C comment was in the discussion, afair.",
        "user": "U8A5MS6R1",
        "ts": "1588876632.218600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2tMC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The C comment was in the discussion, afair."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7d9c35c3-7e59-4f94-8efc-8dcd9bc467b3",
        "type": "message",
        "text": "This post seems to show the limitations of malleable systems: <https://medium.com/diesdas-direct/notion-encourages-busy-work-and-im-tired-of-it-b1e049edb663>",
        "user": "UBN9AFS0N",
        "ts": "1588876723.219100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Medium",
                "title": "Notion encourages busy-work and I\u2019m tired of it",
                "title_link": "https://medium.com/diesdas-direct/notion-encourages-busy-work-and-im-tired-of-it-b1e049edb663",
                "text": "Why has everything become so needlessly complicated?",
                "fallback": "Medium: Notion encourages busy-work and I\u2019m tired of it",
                "image_url": "https://miro.medium.com/max/1200/1*LDfSFsT3Ta_heGbJReiOPw.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "7 min read",
                        "short": true
                    }
                ],
                "ts": 1587630197,
                "from_url": "https://medium.com/diesdas-direct/notion-encourages-busy-work-and-im-tired-of-it-b1e049edb663",
                "image_width": 444,
                "image_height": 250,
                "image_bytes": 67831,
                "service_icon": "https://cdn-images-1.medium.com/fit/c/152/152/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 1,
                "original_url": "https://medium.com/diesdas-direct/notion-encourages-busy-work-and-im-tired-of-it-b1e049edb663"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vyRL0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This post seems to show the limitations of malleable systems: "
                            },
                            {
                                "type": "link",
                                "url": "https://medium.com/diesdas-direct/notion-encourages-busy-work-and-im-tired-of-it-b1e049edb663"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588876723.219100",
        "reply_count": 6,
        "reply_users_count": 5,
        "latest_reply": "1588945880.250500",
        "reply_users": [
            "UETFVV24Q",
            "UKDM3GLAJ",
            "ULM3U6275",
            "UE0ETTCG7",
            "ULK0Z4MPV"
        ],
        "subscribed": true,
        "last_read": "1588951741.186800"
    },
    {
        "client_msg_id": "1313c152-6b22-4cb4-81bd-9c7bf431754a",
        "type": "message",
        "text": "To follow <@UFEQUBNNT>'s thread - yes inside vs outside is very important. All interplay is within some homogenous and agreed upon model. You can say this is 'bytes' but really that's also an imposition.",
        "user": "U8A5MS6R1",
        "ts": "1588876727.219300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9dGOd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To follow "
                            },
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": "'s thread - yes inside vs outside is very important. All interplay is within some homogenous and agreed upon model. You can say this is 'bytes' but really that's also an imposition."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "98c11ae0-07ed-406e-9234-ced849837ca8",
        "type": "message",
        "text": "There's an (IMO) utterly cringe-worthy mobbing going on at the moment regarding a Github repo for the epidemiologists who produced an influential paper regard Covid-19 <https://github.com/mrc-ide/covid-sim/issues/165>",
        "user": "UDQBTJ211",
        "ts": "1588877031.220900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "author_name": "jMyles",
                "fallback": "[mrc-ide/covid-sim] #165 We, the undersigned software engineers, call for any papers based on this codebase to be immediately retracted.",
                "text": "The <https://github.com/mrc-ide/covid-sim/tree/master/tests|tests in this project>, being limited to broad, \"smoke test\"-style assertions, do not support an assurance that the equations are being executed faithfully in discrete units of logic, nor that they are integrated into the application in such a way that the accepted practices of epidemiology are being modeled in accordance with the standards of that profession.\n\nBillions of lives have been disrupted worldwide on the basis that the study produced by the logic contained in this codebase is accurate, and since there are no tests to show that, the findings of this study (and any others based on this codebase) are not a sound basis for public policy at this time.\n\nI want to be clear that this Issue is not meant to denigrate the authors of this code - we've all written code that isn't our best work and code that is untested. But when a codebase is used to craft scholarly publications that are in turn used to influence public policy, the authors of those publications (and ultimately policy) need to ensure that the science is verifiable in a public sense. The lack of tests makes that an impossibility. So closure of this Issue, by retraction of studies based on it, is meant as a critique of the publication and policy authors, not the contributors to this repo.\n\n(Note: In addition to the :+1: emoji, it's probably sensible to \"sign\" as a comment with your username, as it becomes impossible to see the emoji-ers above a certain threshold).",
                "title": "#165 We, the undersigned software engineers, call for any papers based on this codebase to be immediately retracted.",
                "footer": "<https://github.com/mrc-ide/covid-sim|mrc-ide/covid-sim>",
                "id": 1,
                "title_link": "https://github.com/mrc-ide/covid-sim/issues/165",
                "author_link": "https://github.com/jMyles",
                "author_icon": "https://avatars2.githubusercontent.com/u/311973?v=4",
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "ts": 1588816028,
                "color": "cb2431",
                "fields": [
                    {
                        "title": "Comments",
                        "value": "43",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https://github.com/mrc-ide/covid-sim/issues/165",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Q8A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's an (IMO) utterly cringe-worthy mobbing going on at the moment regarding a Github repo for the epidemiologists who produced an influential paper regard Covid-19 "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/mrc-ide/covid-sim/issues/165"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "reply_count": 21,
        "reply_users_count": 10,
        "latest_reply": "1589178817.327000",
        "reply_users": [
            "UDQBTJ211",
            "UC2A2ARPT",
            "UKDM3GLAJ",
            "UEQ6M68H0",
            "UKJGU23KP",
            "UETJZ9V0T",
            "UA14TGLTC",
            "UJBAJNFLK",
            "UE6EFEPTQ",
            "UNS7QDKFV"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "f7f35076-9de5-44b5-ba8c-bce42814b4b0",
        "type": "message",
        "text": "If you can wade through the insufferable brogrammers there's an interesting conflict going on between scientists, for whom code is a temporary tool, and software engineers, who are upset that they are doing it wrong",
        "user": "UDQBTJ211",
        "ts": "1588877124.221100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vEQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you can wade through the insufferable brogrammers there's an interesting conflict going on between scientists, for whom code is a temporary tool, and software engineers, who are upset that they are doing it wrong"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            },
            {
                "name": "cry",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6b461636-d9d3-4287-97f2-4fb20d4b6bb1",
        "type": "message",
        "text": "What's next? We'll learn that it's unethical for any software with an SLA to be programmed in a dynamically-typed language?",
        "user": "UC2A2ARPT",
        "ts": "1588877280.221400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oSrDs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What's next? We'll learn that it's unethical for any software with an SLA to be programmed in a dynamically-typed language?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211"
    },
    {
        "client_msg_id": "63000d7a-cf60-4cb2-bae2-b3893f37e846",
        "type": "message",
        "text": "One point of contention is that due to fairly complicated technical reasons, the code is not deterministic. The scientists point out that the entire simulation is stochastic, so what does it matter? When they are preparing their results they run it 1000s of times and just note the results somewhere (like - gasp - on paper maybe?!).",
        "user": "UDQBTJ211",
        "ts": "1588877354.221600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "loYY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One point of contention is that due to fairly complicated technical reasons, the code is not deterministic. The scientists point out that the entire simulation is stochastic, so what does it matter? When they are preparing their results they run it 1000s of times and just note the results somewhere (like - gasp - on paper maybe?!)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211"
    },
    {
        "client_msg_id": "3fc24c4b-9516-433f-8b09-651dfa64831b",
        "type": "message",
        "text": "Love this conversation - keep adding relevant materials on inside/outside as you can think of them",
        "user": "USH01JEDQ",
        "ts": "1588877457.221800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pJK0q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Love this conversation - keep adding relevant materials on inside/outside as you can think of them"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "c14aaf10-6184-4dc5-8e3f-bb32f14ab046",
        "type": "message",
        "text": "Wait 'til these programmers learn the meaning of the word \"simulation\". Oh, to see the looks on their faces!\n\nWhat is a programmer? A miserable pile of secrets.",
        "user": "UC2A2ARPT",
        "ts": "1588877464.222000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z7gH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wait 'til these programmers learn the meaning of the word \"simulation\". Oh, to see the looks on their faces!\n\nWhat is a programmer? A miserable pile of secrets."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "rolling_on_the_floor_laughing",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b7399d58-6193-4a09-a933-afd10a2c3e88",
        "type": "message",
        "text": "Upsets me no end to see these guys basically bullied by trolls during what must be the most anxiety inducing period of their lives.\n\nVery heartened to see John Carmack take a stand against the mob - <https://twitter.com/ID_AA_Carmack/status/1254872368763277313>",
        "user": "UDQBTJ211",
        "ts": "1588877490.222200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/ID_AA_Carmack|@ID_AA_Carmack>: The Imperial College epidemic simulation code that I helped a little on is now public: <https://github.com/mrc-ide/covid-sim>  I am a strong proponent of public code for models that may influence policy, and while this is a \"release\" rather than a \"live\" depot, it is a Good Thing.",
                "ts": 1588019861,
                "author_name": "John Carmack",
                "author_link": "https://twitter.com/ID_AA_Carmack/status/1254872368763277313",
                "author_icon": "https://pbs.twimg.com/profile_images/1106497789/aa_icon_option_2_normal.jpg",
                "author_subname": "@ID_AA_Carmack",
                "text": "The Imperial College epidemic simulation code that I helped a little on is now public: <https://github.com/mrc-ide/covid-sim>  I am a strong proponent of public code for models that may influence policy, and while this is a \"release\" rather than a \"live\" depot, it is a Good Thing.",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/ID_AA_Carmack/status/1254872368763277313",
                "id": 1,
                "original_url": "https://twitter.com/ID_AA_Carmack/status/1254872368763277313",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ObJQH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Upsets me no end to see these guys basically bullied by trolls during what must be the most anxiety inducing period of their lives.\n\nVery heartened to see John Carmack take a stand against the mob - "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/ID_AA_Carmack/status/1254872368763277313"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "3ee31286-e9a3-4056-a17f-f137accd199e",
        "type": "message",
        "text": "&gt; That was my fear \u2014 what if the code turned out to be a horror show, making all the simulations questionable? I can\u2019t vouch for the actual algorithms, but the software engineering seems fine.",
        "user": "UC2A2ARPT",
        "ts": "1588877588.222700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "byBRd",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That was my fear \u2014 what if the code turned out to be a horror show, making all the simulations questionable? I can\u2019t vouch for the actual algorithms, but the software engineering seems fine."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211"
    },
    {
        "client_msg_id": "0b51e71a-479c-40e1-8bba-01b65a3f2251",
        "type": "message",
        "text": "interesting, I feel like a takeaway is, even when we have tools that remove as much accidental complexity as possible from software creation, there\u2019s still the essential complexity of how to actually design the app well. Whether everyone can/should be an app creator is an open question",
        "user": "UETFVV24Q",
        "ts": "1588877725.222900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X5sr2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "interesting, I feel like a takeaway is, even when we have tools that remove as much accidental complexity as possible from software creation, there\u2019s still the essential complexity of how to actually design the app well. Whether everyone can/should be an app creator is an open question"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588876723.219100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "bc6525b7-47d1-4610-803a-536f20a3a1e8",
        "type": "message",
        "text": "Some people don\u2019t have the cooking skill to cook a hot dog and that\u2019s okay",
        "user": "UETFVV24Q",
        "ts": "1588877771.223100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Wsj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some people don\u2019t have the cooking skill to cook a hot dog and that\u2019s okay"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588876723.219100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "855eefa1-efda-4ad1-bc48-c2523a289f1a",
        "type": "message",
        "text": "I read this before and had a different take. Caveat: I haven't used notion, and my project is a malleability project, so I'm bought in. The first two points (notifications and lack of design) actually seem like notion just isn't malleable enough. Notifications should be customizable based on the meaning of the way something is being used. Same with the graphical components. I want a sane default appearance and the ability to relayout things according to my preferences. As for the endless tweaking, I have two thoughts: it's good that people are able to customize things and explore new workflows, and it's bad that existing work isn't being discovered and repurposed. It sounds like reinvention (and some amount of incompatibility/churn) is the problem, more than the inclination to tweak things. Which is why I think any kind of malleability project should also have, like, an app store or component library, or some good way of sharing the work that has been accomplished.",
        "user": "UKDM3GLAJ",
        "ts": "1588877787.223300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2SQNe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I read this before and had a different take. Caveat: I haven't used notion, and my project is a malleability project, so I'm bought in. The first two points (notifications and lack of design) actually seem like notion just isn't malleable enough. Notifications should be customizable based on the meaning of the way something is being used. Same with the graphical components. I want a sane default appearance and the ability to relayout things according to my preferences. As for the endless tweaking, I have two thoughts: it's good that people are able to customize things and explore new workflows, and it's bad that existing work isn't being discovered and repurposed. It sounds like reinvention (and some amount of incompatibility/churn) is the problem, more than the inclination to tweak things. Which is why I think any kind of malleability project should also have, like, an app store or component library, or some good way of sharing the work that has been accomplished."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588876723.219100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "e1560311-88b3-402b-bb77-723f2be918cf",
        "type": "message",
        "text": "The implication that all of these folks see their tests pass and \u201cknow\u201d they\u2019ve written correct code is also horrifying.",
        "user": "UKDM3GLAJ",
        "ts": "1588878178.223700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lX4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The implication that all of these folks see their tests pass and \u201cknow\u201d they\u2019ve written correct code is also horrifying."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA",
                    "UD31LGQKB"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d391484d-c457-468e-88c1-fbde414214fd",
        "type": "message",
        "text": "Unfortunately these models were weaponized as instruments of politics; the run of the model that predicted hundreds of thousands of deaths caused the UK to pivot abruptly into major lockdown, and on the day the lockdown was announced the model was rerun and the death estimate lowered to 20k. That is what i read somewhere. With 280 parameters to tweak, this model can be coerced into yielding any desired result, and as a predictive tool it is frankly worthless. Models like this are better for helping build understanding of the factors than generating predictions. This isn't fluid dynamics, which at this point is extremely accurate.\n\nThe fallout from this politicization of modeling, whereby you release a subsequently retracted non-peer reviewed paper that has major consequences, with no chance for others to validate or double check before decisions were made upon it, was a derail of the normally calm scientific process, and outrageous overestimates in the original paper, which were calculated to spur action, probably with foreknowledge they were exaggerated, will tarnish computer modeling for a long time to come. Per the body victorious, a virus can \"create 10^72 copies in 12 hours\", so how does one model a process that is like an atomic bomb?",
        "user": "UEQ6M68H0",
        "ts": "1588878804.224900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1588879275.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "76YUu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unfortunately these models were weaponized as instruments of politics; the run of the model that predicted hundreds of thousands of deaths caused the UK to pivot abruptly into major lockdown, and on the day the lockdown was announced the model was rerun and the death estimate lowered to 20k. That is what i read somewhere. With 280 parameters to tweak, this model can be coerced into yielding any desired result, and as a predictive tool it is frankly worthless. Models like this are better for helping build understanding of the factors than generating predictions. This isn't fluid dynamics, which at this point is extremely accurate.\n\nThe fallout from this politicization of modeling, whereby you release a subsequently retracted non-peer reviewed paper that has major consequences, with no chance for others to validate or double check before decisions were made upon it, was a derail of the normally calm scientific process, and outrageous overestimates in the original paper, which were calculated to spur action, probably with foreknowledge they were exaggerated, will tarnish computer modeling for a long time to come. Per the body victorious, a virus can \"create 10^72 copies in 12 hours\", so how does one model a process that is like an atomic bomb?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211"
    },
    {
        "client_msg_id": "7aece632-ceeb-4df9-8a1d-0b019d439366",
        "type": "message",
        "text": "I agree, but I feel like being agreed-upon is still just part of the picture. C denigrates memory less than, say, filesystems, because everything's in memory: every variable is in memory, and even the code itself is in memory, so nearly the whole program is on the \"outside,\" and it just happens to be an annoying outside for interplay. Filesystems extend beyond a single process, but the boundary between one process and another, by way of the filesystem, is nearly absolute.",
        "user": "UFEQUBNNT",
        "ts": "1588878821.225100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fesfI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree, but I feel like being agreed-upon is still just part of the picture. C denigrates memory less than, say, filesystems, because everything's in memory: every variable is in memory, and even the code itself is in memory, so nearly the whole program is on the \"outside,\" and it just happens to be an annoying outside for interplay. Filesystems extend beyond a single process, but the boundary between one process and another, by way of the filesystem, is nearly absolute."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "9A00625F-42A6-46BF-98C1-FF2215D0C3FA",
        "type": "message",
        "text": "\u201cToo often people can\u2019t handle the great power Notion gives them: they frequently build the most sophisticated, most complex solution for a problem because that makes them look smart. \u201c A good description of the problem of software in general.",
        "user": "ULM3U6275",
        "ts": "1588878822.225300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q4Sgk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\u201cToo often people can\u2019t handle the great power Notion gives them: they frequently build the most sophisticated, most complex solution for a problem because that makes them look smart. \u201c A good description of the problem of software in general."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588876723.219100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U5STGTB3J",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "UFLN9JFRT"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "f5a65797-c51c-40d9-931d-dcb6ff42c20f",
        "type": "message",
        "text": "I think there\u2019s a lot of interesting questions about the reliability of scientific code, that responsible people in scientific computing struggle with, and make valiant efforts to improve.\n\nAnd I think this github issue contributes nothing of value to that effort, public understanding, or anything other than some commentators\u2019 sense of superiority.",
        "user": "UKJGU23KP",
        "ts": "1588878992.225500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UKJGU23KP",
            "ts": "1588879008.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UPHw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think there\u2019s a lot of interesting questions about the reliability of scientific code, that responsible people in scientific computing struggle with, and make valiant efforts to improve.\n\nAnd I think this github issue contributes nothing of value to that effort, public understanding, or anything other than some commentators\u2019 sense of superiority."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDQBTJ211",
                    "UC2A2ARPT",
                    "UJBAJNFLK"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "df590463-c901-4cfa-b5d4-dac78fb009e0",
        "type": "message",
        "text": "I keep coming back to \"connection over containment\" too. Via memory, you can connect to any process, whereas a filesystem interface or network protocol or whatever is clearly containment.",
        "user": "UFEQUBNNT",
        "ts": "1588879130.225800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1588879142.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oEBsW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I keep coming back to \"connection over containment\" too. Via memory, you can connect to any process, whereas a filesystem interface or network protocol or whatever is clearly containment."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "d2982b26-0533-4fdd-bdb7-085863bde780",
        "type": "message",
        "text": "Could you elaborate connection over containment? Is about emphasizing composition?",
        "user": "U8A5MS6R1",
        "ts": "1588880271.226700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RNTD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could you elaborate connection over containment? Is about emphasizing composition?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "6739DD08-D568-4307-9CB9-492CAFE2BF9E",
        "type": "message",
        "text": "There are three levels to information management:\n\n1. Information is lost\n2. Information is disorganized \n3. Information is usable\n\nThe writer appears to be looking at the growing pains between 2 and 3, and asking why can\u2019t we just go back to 0?",
        "user": "UE0ETTCG7",
        "ts": "1588880315.227100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BUc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are three levels to information management:\n\n1. Information is lost\n2. Information is disorganized \n3. Information is usable\n\nThe writer appears to be looking at the growing pains between 2 and 3, and asking why can\u2019t we just go back to 0?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588876723.219100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U010328JA1E",
                    "ULM3U6275",
                    "UFLN9JFRT"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "f2066531-3a62-4d74-9d69-3543db88572b",
        "type": "message",
        "text": "IIRC, yes, as a design heuristic for convivial computing.",
        "user": "UFEQUBNNT",
        "ts": "1588880574.227300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1588880673.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mEfe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "IIRC, yes, as a design heuristic for convivial computing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "74758fc8-adfb-44a2-aceb-b1e46630614e",
        "type": "message",
        "text": "&gt; will tarnish computer modeling for a long time to come\nOr to frame it in a positive way, it'll help the public gradually learn that models are not fortune tellers, but rather tools to assist reasoning \u2014 and that the models themselves are more valuable than the individual results they produce. All people are going to gradually learn this, and that sort of societal literacy takes a long time to develop, and is not a clean and straightforward process. This is a good thing. We're going to have to go through the same process with ML, and it's going to be even messier. That's not a knock against ML or the people misusing ML. The cybernetic human is in its infancy.",
        "user": "UC2A2ARPT",
        "ts": "1588880677.227600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1588880782.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U9Yp",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "will tarnish computer modeling for a long time to come"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOr to frame it in a positive way, it'll help the public gradually learn that models are not fortune tellers, but rather tools to assist reasoning \u2014 and that the models themselves are more valuable than the individual results they produce. All people are going to gradually learn this, and that sort of societal literacy takes a long time to develop, and is not a clean and straightforward process. This is a good thing. We're going to have to go through the same process with ML, and it's going to be even messier. That's not a knock against ML or the people misusing ML. The cybernetic human is in its infancy."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UETJZ9V0T",
                    "U5STGTB3J",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "c7c241a8-3b3e-4dac-ad54-9e4bafe64175",
        "type": "message",
        "text": "from an educator\u2019s perspective, this is one of the reasons i\u2019ve been thinking a lot lately about how to teach reflective simulation design &amp; simulation epistemology. one of the weird holes in computer science education right now is the lack of a critical pedagogy around modeling real-world phenomena in code. it\u2019s my hope that giving people tools to craft simulations of phenomena they care about for themselves, and putting them in a workshop or studio environment where they can collectively critique one another\u2019s models, might be useful for building this kind of simulation literacy \u2013 but i haven\u2019t gotten a chance to put any of this into practice yet",
        "user": "UETJZ9V0T",
        "ts": "1588881573.231000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mM1X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from an educator\u2019s perspective, this is one of the reasons i\u2019ve been thinking a lot lately about how to teach reflective simulation design & simulation epistemology. one of the weird holes in computer science education right now is the lack of a critical pedagogy around modeling real-world phenomena in code. it\u2019s my hope that giving people tools to craft simulations of phenomena they care about for themselves, and putting them in a workshop or studio environment where they can collectively critique one another\u2019s models, might be useful for building this kind of simulation literacy \u2013 but i haven\u2019t gotten a chance to put any of this into practice yet"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT",
                    "UD31LGQKB",
                    "UMWF81HTP",
                    "UBSMEUXAA",
                    "U010RH58PL7"
                ],
                "count": 5
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "253e99c9-2621-44cb-b143-72b9c8670482",
        "type": "message",
        "text": "<@UCUSW7WVD> in his Convivial Computing Salon Q&amp;A: Mu has a \"*barbarian ethos*\" in the sense that barbarians trade with nearby settlements for technology they don't have, similar to how Mu minimizes dependencies, but he's creating it on a Mac, in a text editor, etc.",
        "user": "UFEQUBNNT",
        "ts": "1588881606.231300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "itS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " in his Convivial Computing Salon Q&A: Mu has a \""
                            },
                            {
                                "type": "text",
                                "text": "barbarian ethos",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\" in the sense that barbarians trade with nearby settlements for technology they don't have, similar to how Mu minimizes dependencies, but he's creating it on a Mac, in a text editor, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "reply_count": 15,
        "reply_users_count": 3,
        "latest_reply": "1588912762.247300",
        "reply_users": [
            "UC2A2ARPT",
            "UCUSW7WVD",
            "UDQBTJ211"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "7563d2bb-5189-4192-a68d-3e17604687c2",
        "type": "message",
        "text": "Yeah I agree with that idea in general. I didn't see the whole talk, but did follow the questions so I missed some of the context.",
        "user": "U8A5MS6R1",
        "ts": "1588881760.231400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bTYr7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I agree with that idea in general. I didn't see the whole talk, but did follow the questions so I missed some of the context."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "dbaea694-5b57-427a-adc5-9ea619ccd40f",
        "type": "message",
        "text": "I think composition one of the main issues and very poorly solved. We have composition via byte formats, APIs and other higher level models. But it all seems too brittle.",
        "user": "U8A5MS6R1",
        "ts": "1588881830.231600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+lIQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think composition one of the main issues and very poorly solved. We have composition via byte formats, APIs and other higher level models. But it all seems too brittle."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6adc0645-7dad-445c-9abc-a00c8b430727",
        "type": "message",
        "text": "To add to this, I wouldnt be so sure that majority of people prefer customisation/extensibility Vs good defaults/ease of usage - it is just that most experts prefer customization/extensibility, due to them being experts who need more power/control, and experts are also much louder in the community since they have more to say, are building tools and so on. It is hard to say to which degree this goes, but I am pretty sure these is some bias there / skewed perception. I remember Haskellers discussing smth similar, about Haskell appearing harder than it is because most of the stuff discussed online is happening between senior Haskellers, so it is rather complex concepts, and if you read Reddit posts for example, you quickly get feeling you will never be productive. But, allegedly we are seeing just the top of the pyramid of Haskellers.",
        "user": "UUB7RA7PF",
        "ts": "1588882159.231800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GHHfO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To add to this, I wouldnt be so sure that majority of people prefer customisation/extensibility Vs good defaults/ease of usage - it is just that most experts prefer customization/extensibility, due to them being experts who need more power/control, and experts are also much louder in the community since they have more to say, are building tools and so on. It is hard to say to which degree this goes, but I am pretty sure these is some bias there / skewed perception. I remember Haskellers discussing smth similar, about Haskell appearing harder than it is because most of the stuff discussed online is happening between senior Haskellers, so it is rather complex concepts, and if you read Reddit posts for example, you quickly get feeling you will never be productive. But, allegedly we are seeing just the top of the pyramid of Haskellers."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "707DE54C-9530-4F13-B505-B8F4A7251464",
        "type": "message",
        "text": "<@UUB7RA7PF> Not sure if that was in response to my comment, but just to clarify: what I meant and according to my anecdotal experience is that I would assume more people in this particular community and probably among programmers in general to prefer customization, while I also firmly believe that end-users prefer good defaults. Although I\u2019d also argue that many end-users are not making that choice as consciously as programmers/people here do.",
        "user": "U5STGTB3J",
        "ts": "1588883093.237000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yxqNG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUB7RA7PF"
                            },
                            {
                                "type": "text",
                                "text": " Not sure if that was in response to my comment, but just to clarify: what I meant and according to my anecdotal experience is that I would assume more people in this particular community and probably among programmers in general to prefer customization, while I also firmly believe that end-users prefer good defaults. Although I\u2019d also argue that many end-users are not making that choice as consciously as programmers/people here do."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUB7RA7PF",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "1450ca71-af5c-45c6-a3dd-07b315f9a6ec",
        "type": "message",
        "text": "<@UEQ6M68H0> This is somewhat off topic but just to correct some misinformation, their report was not changed nor retracted. You can read it here <https://www.imperial.ac.uk/media/imperial-college/medicine/sph/ide/gida-fellowships/Imperial-College-COVID19-NPI-modelling-16-03-2020.pdf> (see pg 13) - one of the team addresses this misconception here - <https://github.com/mrc-ide/covid-sim/issues/175#issuecomment-625377867>",
        "user": "UDQBTJ211",
        "ts": "1588883103.237200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "author_name": "weshinsley",
                "fallback": "[mrc-ide/covid-sim] Comment on #175",
                "text": "To add to this, please read report 9 properly. The 500k UK prediction was if governments did nothing whatsoever - we never believed governments would do _nothing_ but we modelled it as a base case, because that's part of what you do when you model.\n\nWith the full social distancing the report suggestd it might be possible to reduce deaths perhaps to 20k - a death count we have already exceeded. Nobody here is laughing about that. The report was also very frank about the uncertainty involved in trying to predict what might happen at that stage",
                "title": "Comment on #175 BUG: Incorrect Results from Model",
                "footer": "<https://github.com/mrc-ide/covid-sim|mrc-ide/covid-sim>",
                "id": 1,
                "title_link": "https://github.com/mrc-ide/covid-sim/issues/175#issuecomment-625377867",
                "author_link": "https://github.com/weshinsley",
                "author_icon": "https://avatars3.githubusercontent.com/u/9009312?u=f0b7135d31e9d71d1490ecf5bfb8ad32c887f3ff&v=4",
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "ts": 1588870866,
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https://github.com/mrc-ide/covid-sim/issues/175#issuecomment-625377867",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FViI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " This is somewhat off topic but just to correct some misinformation, their report was not changed nor retracted. You can read it here "
                            },
                            {
                                "type": "link",
                                "url": "https://www.imperial.ac.uk/media/imperial-college/medicine/sph/ide/gida-fellowships/Imperial-College-COVID19-NPI-modelling-16-03-2020.pdf"
                            },
                            {
                                "type": "text",
                                "text": " (see pg 13) - one of the team addresses this misconception here - "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/mrc-ide/covid-sim/issues/175#issuecomment-625377867"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "fadb2933-09f4-4164-a7e6-2ed02e05e354",
        "type": "message",
        "text": "That rocks.\n\n(Sad I missed the live stream, but I only realized it was happening 15 minutes after it started. I hope there will be videos soon)",
        "user": "UC2A2ARPT",
        "ts": "1588883239.238200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xZy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That rocks.\n\n(Sad I missed the live stream, but I only realized it was happening 15 minutes after it started. I hope there will be videos soon)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "Here are the slides.\n\nI'll also paste the links I posted into the conference Slack:\nPaper: <http://akkartik.name/akkartik-convivial-20200315.pdf>\nRepo: <https://github.com/akkartik/mu>\nCompiler summary: <http://akkartik.github.io/mu/html/mu_instructions.html>\nMe: <http://akkartik.name>\n\nYou've seen them all, but it may be helpful to lay them out in one place.",
        "files": [
            {
                "id": "F013MHQ1S5P",
                "created": 1588883456,
                "timestamp": 1588883456,
                "name": "KartikAgaram-Convivial-Slides.pdf",
                "title": "KartikAgaram-Convivial-Slides.pdf",
                "mimetype": "application/pdf",
                "filetype": "pdf",
                "pretty_type": "PDF",
                "user": "UCUSW7WVD",
                "editable": false,
                "size": 1492074,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F013MHQ1S5P/kartikagaram-convivial-slides.pdf",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F013MHQ1S5P/download/kartikagaram-convivial-slides.pdf",
                "thumb_pdf": "https://files.slack.com/files-tmb/T5TCAFTA9-F013MHQ1S5P-4d518b3103/kartikagaram-convivial-slides_thumb_pdf.png",
                "thumb_pdf_w": 1100,
                "thumb_pdf_h": 619,
                "permalink": "https://futureofcoding.slack.com/files/UCUSW7WVD/F013MHQ1S5P/kartikagaram-convivial-slides.pdf",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F013MHQ1S5P-d93d05147c",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ritc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here are the slides.\n\nI'll also paste the links I posted into the conference Slack:\nPaper: "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/akkartik-convivial-20200315.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\nRepo: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/mu"
                            },
                            {
                                "type": "text",
                                "text": "\nCompiler summary: "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.github.io/mu/html/mu_instructions.html"
                            },
                            {
                                "type": "text",
                                "text": "\nMe: "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name"
                            },
                            {
                                "type": "text",
                                "text": "\n\nYou've seen them all, but it may be helpful to lay them out in one place."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "ts": "1588883459.238600",
        "client_msg_id": "b77fb906-d28c-4ec9-969b-d27be8cca87e",
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "87a819f7-2faf-4bcf-a6a0-8946f132d3d6",
        "type": "message",
        "text": "I would like to make a disctintion between 'can connect' and the 'domain of connection'. At the lowest level we have electricity flying over connected wires and various interconnected micro devices _which are compatible_ because they use the same voltage, etc. Just because we can connect two micro devices doesn't mean it will do any useful. Once we implement 'bytes' it becomes totally irrelevant what voltage and shape of wires is used to represent 'bytes as ram'. So you can switch out the voltage and entire circuitry with something very different and as long as you can simulate 'bytes', its still all good - because your program is dealing with 'bytes' and not 'voltage'. (In fact we have gone through many iterations in hardware from vacuum tubes). But what about bytes and _byte formats_? To me they are just like voltage - not very important to the real goal. Just because one program can 'see the bytes' of another program (analogous to just wiring up random micro devices) doesn't mean its useful. They have to agree on the byte formats. What do bytes transmit? data structures which represent _information_. So for composition between two entities, they must agree, at least partly, on the _shape of the information._ If this is possible, they could negotiate and converge on one of many possible byte representations (or perhaps forgo bytes altogether in some other future computer). Basically I'm arguing that byte formats are irrelevant and information models are where it's at, however most of our composition models are deeply coupled with irrelevant details. The entrenched bytearray orientation via Unix/C is one culprit here.",
        "user": "U8A5MS6R1",
        "ts": "1588883588.239000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1588884004.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "40dDD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would like to make a disctintion between 'can connect' and the 'domain of connection'. At the lowest level we have electricity flying over connected wires and various interconnected micro devices "
                            },
                            {
                                "type": "text",
                                "text": "which are compatible",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " because they use the same voltage, etc. Just because we can connect two micro devices doesn't mean it will do any useful. Once we implement 'bytes' it becomes totally irrelevant what voltage and shape of wires is used to represent 'bytes as ram'. So you can switch out the voltage and entire circuitry with something very different and as long as you can simulate 'bytes', its still all good - because your program is dealing with 'bytes' and not 'voltage'. (In fact we have gone through many iterations in hardware from vacuum tubes). But what about bytes and "
                            },
                            {
                                "type": "text",
                                "text": "byte formats",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? To me they are just like voltage - not very important to the real goal. Just because one program can 'see the bytes' of another program (analogous to just wiring up random micro devices) doesn't mean its useful. They have to agree on the byte formats. What do bytes transmit? data structures which represent "
                            },
                            {
                                "type": "text",
                                "text": "information",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". So for composition between two entities, they must agree, at least partly, on the "
                            },
                            {
                                "type": "text",
                                "text": "shape of the information.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " If this is possible, they could negotiate and converge on one of many possible byte representations (or perhaps forgo bytes altogether in some other future computer). Basically I'm arguing that byte formats are irrelevant and information models are where it's at, however most of our composition models are deeply coupled with irrelevant details. The entrenched bytearray orientation via Unix/C is one culprit here."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588873457.213000",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UFEQUBNNT",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "a2610815-4397-4d3d-98e6-c44f8e153682",
        "type": "message",
        "text": "Why is it necessary to have SubX and Mu as different languages, can't you just have a restriction of Mu with the same syntax?",
        "user": "UDQBTJ211",
        "ts": "1588884052.239400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qqGM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why is it necessary to have SubX and Mu as different languages, can't you just have a restriction of Mu with the same syntax?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "9ec4d4a7-4b23-478f-a13e-42831cb57043",
        "type": "message",
        "text": "I understand the benefit in terms of making the implementation of the compiler/translator easier, but I don't see this as being a part of the system that users will really care about understanding",
        "user": "UDQBTJ211",
        "ts": "1588884121.239600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QXK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I understand the benefit in terms of making the implementation of the compiler/translator easier, but I don't see this as being a part of the system that users will really care about understanding"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "344604c9-d0f6-4213-a04f-b5aa70fb752b",
        "type": "message",
        "text": "Since Mu has to be safe, I have to disallow a lot of stuff that is allowed in SubX. Like goto :slightly_smiling_face:",
        "user": "UCUSW7WVD",
        "ts": "1588884144.239800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2hHb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Since Mu has to be safe, I have to disallow a lot of stuff that is allowed in SubX. Like goto "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "0e53a034-1684-44a3-9ea1-459847fceee3",
        "type": "message",
        "text": "What is the advantage of this representation;\n`8b/copy 0/mod/indirect 1/rm32/ecx 8/disp8 0/r32/eax`",
        "user": "UDQBTJ211",
        "ts": "1588884246.240000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d2iu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is the advantage of this representation;\n"
                            },
                            {
                                "type": "text",
                                "text": "8b/copy 0/mod/indirect 1/rm32/ecx 8/disp8 0/r32/eax",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "672a136e-140c-41cd-bfa3-104b363ff978",
        "type": "message",
        "text": "why not `registers['eax'] = memory[registers['ecx']]`",
        "user": "UDQBTJ211",
        "ts": "1588884325.240200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ui3F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why not "
                            },
                            {
                                "type": "text",
                                "text": "registers['eax'] = memory[registers['ecx']]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "0ff0c31a-625a-480c-805d-189d35631abd",
        "type": "message",
        "text": "Relative to the binary:\n1. It's text.\n2. It raises errors immediately and with error messages rather than just `segmentation fault`.\n\nRelative to conventional syntax:\n1. It's easy to translate, and that means less stuff for you to understand if/when you end up wanting to understand the internals. Which is the whole point of Mu, to not leave you without a paddle.",
        "user": "UCUSW7WVD",
        "ts": "1588884380.240400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e1/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Relative to the binary:\n1. It's text.\n2. It raises errors immediately and with error messages rather than just "
                            },
                            {
                                "type": "text",
                                "text": "segmentation fault",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nRelative to conventional syntax:\n1. It's easy to translate, and that means less stuff for you to understand if/when you end up wanting to understand the internals. Which is the whole point of Mu, to not leave you without a paddle."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "1f899cf5-2798-4233-abbe-daf3ef4c3ab2",
        "type": "message",
        "text": "I used Python but hopefully you get the idea. I'm trying to draw a distinction between the physical fact that \"registers\" is a 8-big dictionary with certain keys, and a particular way of writing information",
        "user": "UDQBTJ211",
        "ts": "1588884400.240600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G5=Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I used Python but hopefully you get the idea. I'm trying to draw a distinction between the physical fact that \"registers\" is a 8-big dictionary with certain keys, and a particular way of writing information"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "267949bc-f056-4d34-852c-c3497e14b47a",
        "type": "message",
        "text": "One is a compromise we have to make to the machine, the other one I don't see why you \"give way\" so much to the binary representation, which only the machine likes not humans",
        "user": "UDQBTJ211",
        "ts": "1588884441.240800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xLQuf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One is a compromise we have to make to the machine, the other one I don't see why you \"give way\" so much to the binary representation, which only the machine likes not humans"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "5897b64c-e9e5-436e-a4ec-7216d2bcd597",
        "type": "message",
        "text": "I'm not sure I'm quite following you. If you like I'd love to do a quick call sometime. I'm on vacation all this week and weekend, so more flexible than usual.",
        "user": "UCUSW7WVD",
        "ts": "1588884460.241000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sqt8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure I'm quite following you. If you like I'd love to do a quick call sometime. I'm on vacation all this week and weekend, so more flexible than usual."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "beach_with_umbrella",
                "users": [
                    "UC2A2ARPT",
                    "UFEQUBNNT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "6c23269a-058b-4dcf-bc00-256b2114640e",
        "type": "message",
        "text": "Mu's hypothesis is that trying to cater to humans (in the short term) has costs. So at lower levels it might reduce total cost to cater less to humans in the short term, and cater more to machines and to humans in the long term (by being easy to learn albeit with some initial hump).\n\nFor example, this notation is trying to avoid creating a new standard. It's so close to x86 that you can use an existing standard.\nAnd I can implement it with just machine code too, and the implementation can be relatively ergonomic.\nPerhaps a Python-like syntax can be implemented in x86, but it feels like it would be larger and more complex.",
        "user": "UCUSW7WVD",
        "ts": "1588884660.241200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1588884676.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VhN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mu's hypothesis is that trying to cater to humans (in the short term) has costs. So at lower levels it might reduce total cost to cater less to humans in the short term, and cater more to machines and to humans in the long term (by being easy to learn albeit with some initial hump).\n\nFor example, this notation is trying to avoid creating a new standard. It's so close to x86 that you can use an existing standard.\nAnd I can implement it with just machine code too, and the implementation can be relatively ergonomic.\nPerhaps a Python-like syntax can be implemented in x86, but it feels like it would be larger and more complex."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "ba7a4e18-109d-4c65-81a2-7f47bce6c36b",
        "type": "message",
        "text": "I will compose my thoughts better then get back to you properly later in the weekend",
        "user": "UDQBTJ211",
        "ts": "1588886051.241600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gCM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I will compose my thoughts better then get back to you properly later in the weekend"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588881606.231300",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]