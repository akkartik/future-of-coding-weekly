[
    {
        "client_msg_id": "39497386-f636-434f-b465-eff08d1371ef",
        "type": "message",
        "text": "One as yet unimplemented plan is that abstraction will come from building \"symbols\", which are a collection of graphics / logic wrapped up into an isolated unit with a clearly defined interface \u2014\u00a0typical patcher stuff.\n\nEach symbol instance will need its own sense of time. When looking at a particular instance, all child instances will execute \"infinitely fast\" to simulate continuous time semantics. All parent instances will execute discretely, only when necessary to satisfy the needs of the currently observed instance.\n\nThe GUI, including things like pulling a point off an edge, would be the ur parent of the simulation hierarchy. So if it were possible to run time backwards _outside_ the GUI level, your editing interactions would gradually be undone, and that pulled point would hop back onto the edge where you pulled it off, right at the moment that you had pulled it (since the flow of time of the points-and-edges simulation is happening _inside_ the GUI).\n\nNot sure I'll end up going with this plan, though. I have stack of imagined \"it would feel nice to ____\" experiences that guide my development. I'm trying each of them, keeping the ones that feel most simpatico. So we'll see!",
        "user": "UC2A2ARPT",
        "ts": "1589148499.316300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xR1Pr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One as yet unimplemented plan is that abstraction will come from building \"symbols\", which are a collection of graphics / logic wrapped up into an isolated unit with a clearly defined interface \u2014\u00a0typical patcher stuff.\n\nEach symbol instance will need its own sense of time. When looking at a particular instance, all child instances will execute \"infinitely fast\" to simulate continuous time semantics. All parent instances will execute discretely, only when necessary to satisfy the needs of the currently observed instance.\n\nThe GUI, including things like pulling a point off an edge, would be the ur parent of the simulation hierarchy. So if it were possible to run time backwards "
                            },
                            {
                                "type": "text",
                                "text": "outside",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the GUI level, your editing interactions would gradually be undone, and that pulled point would hop back onto the edge where you pulled it off, right at the moment that you had pulled it (since the flow of time of the points-and-edges simulation is happening "
                            },
                            {
                                "type": "text",
                                "text": "inside",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the GUI).\n\nNot sure I'll end up going with this plan, though. I have stack of imagined \"it would feel nice to ____\" experiences that guide my development. I'm trying each of them, keeping the ones that feel most simpatico. So we'll see!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588802632.228900",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "1fe4f766-96cb-41ff-9a52-8b025ac1ad8e",
        "type": "message",
        "text": "Also \u2014\n&gt; Moving time backwards no longer includes that point.\nMaybe. Some rewind strategies I've played with have this behaviour. Some don't. Still trying to find the approach (likely a hybrid of strategies) that feels nicest to use.",
        "user": "UC2A2ARPT",
        "ts": "1589148651.316900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v2AL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also \u2014\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Moving time backwards no longer includes that point."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe. Some rewind strategies I've played with have this behaviour. Some don't. Still trying to find the approach (likely a hybrid of strategies) that feels nicest to use."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588802632.228900",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "1e23fd0f-c071-4a82-a65a-fed78657f477",
        "type": "message",
        "text": "&gt; The major problem encountered in time travel is not that of accidentally becoming your own father or mother. There is no problem involved in becoming your own father or mother that a broadminded and well-adjusted family can't cope with. There is also no problem in changing the course of history; the course of history does not change because it all fits together like a jigsaw. All the important changes have happened before the things they were supposed to change and it all sorts itself out in the end.\n&gt; \n&gt; No, the major problem is quite simply one of grammar, and the main work to consult in this matter is Dr Dan Streetmentioner's _Time Traveller's Handbook of 1001 Tense Formations_. It will tell you for instance how to describe something that was about to happen to you in the past before you avoided it by time-jumping forward two days in order to avoid it. The event will be described differently according to whether you are talking about it from the standpoint of your own natural time, from a time in the further future, or a time in the further past and is further complicated by the possibility of conducting conversations whilst you are actually travelling from one time to another with the intention of becoming your own father or mother.\n&gt; \n&gt; Most readers get as far as the Future Semi-Conditionally Modified Subinverted Plagal Past Subjunctive Intentional before giving up: and in fact in later editions of the book all the pages beyond this point have been left blank to save on printing costs.\n-- _\"The Hitchhiker's Guide to the Galaxy\"_",
        "user": "UCUSW7WVD",
        "ts": "1589156116.317300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1589156133.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yVp",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The major problem encountered in time travel is not that of accidentally becoming your own father or mother. There is no problem involved in becoming your own father or mother that a broadminded and well-adjusted family can't cope with. There is also no problem in changing the course of history; the course of history does not change because it all fits together like a jigsaw. All the important changes have happened before the things they were supposed to change and it all sorts itself out in the end.\n\nNo, the major problem is quite simply one of grammar, and the main work to consult in this matter is Dr Dan Streetmentioner's "
                            },
                            {
                                "type": "text",
                                "text": "Time Traveller's Handbook of 1001 Tense Formations",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". It will tell you for instance how to describe something that was about to happen to you in the past before you avoided it by time-jumping forward two days in order to avoid it. The event will be described differently according to whether you are talking about it from the standpoint of your own natural time, from a time in the further future, or a time in the further past and is further complicated by the possibility of conducting conversations whilst you are actually travelling from one time to another with the intention of becoming your own father or mother.\n\nMost readers get as far as the Future Semi-Conditionally Modified Subinverted Plagal Past Subjunctive Intentional before giving up: and in fact in later editions of the book all the pages beyond this point have been left blank to save on printing costs."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "-- "
                            },
                            {
                                "type": "text",
                                "text": "\"The Hitchhiker's Guide to the Galaxy\"",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588802632.228900",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UBN9AFS0N"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "It was a slow week this week.  I found I didn't have my usual energy for after-hours projects, and I needed a rest this weekend.  As is usually the case in such circumstances, I spent some time cleaning up code and refactoring - I often find such activities help keep the project momentum up, while requiring less time &amp; effort.\nI have spent some time recently thinking about how to manage note events and synchronize beats &amp; timing.  It seems like a good idea to integrate Ableton Link at the outset, because on some level it helps drive towards a cleaner management of such things.  It is also really nice to have a built in way for musicians to work together with a live coder; a USP perhaps.  I don't say it in the video, but the tempo of the audio is being controlled using the iPad drumming app, which the sample app and the synth are aligning with.\nAnother piece of ongoing work is the integration of Orca-c which I've shown previously.  This is an embedded Orca inside my text editor and forms one way in which a coder can drive the synthesizer (and later, I hope, some geometry/graphics too).  Orca isn't the only way I intend to generate music, but it represents a relatively easier integration than music languages, etc.  As I say in the video, there is still work to do to complete this feature.",
        "files": [
            {
                "id": "F013CEZR2CV",
                "created": 1589200968,
                "timestamp": 1589200968,
                "name": "Week4.mp4",
                "title": "Week4.mp4",
                "mimetype": "video/mp4",
                "filetype": "mp4",
                "pretty_type": "MPEG 4 Video",
                "user": "UUQ2EQW21",
                "editable": false,
                "size": 8676823,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F013CEZR2CV/week4.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F013CEZR2CV/download/week4.mp4",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F013CEZR2CV-a6b3373263/week4_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/UUQ2EQW21/F013CEZR2CV/week4.mp4",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F013CEZR2CV-0832f1f8dc",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W9beX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was a slow week this week.  I found I didn't have my usual energy for after-hours projects, and I needed a rest this weekend.  As is usually the case in such circumstances, I spent some time cleaning up code and refactoring - I often find such activities help keep the project momentum up, while requiring less time & effort.\nI have spent some time recently thinking about how to manage note events and synchronize beats & timing.  It seems like a good idea to integrate Ableton Link at the outset, because on some level it helps drive towards a cleaner management of such things.  It is also really nice to have a built in way for musicians to work together with a live coder; a USP perhaps.  I don't say it in the video, but the tempo of the audio is being controlled using the iPad drumming app, which the sample app and the synth are aligning with.\nAnother piece of ongoing work is the integration of Orca-c which I've shown previously.  This is an embedded Orca inside my text editor and forms one way in which a coder can drive the synthesizer (and later, I hope, some geometry/graphics too).  Orca isn't the only way I intend to generate music, but it represents a relatively easier integration than music languages, etc.  As I say in the video, there is still work to do to complete this feature."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UUQ2EQW21",
        "display_as_bot": false,
        "ts": "1589200973.318200",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1589201231.000000"
        },
        "client_msg_id": "f26ed515-aa2e-41e3-8a15-089d9162a6fe",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013BB9KZV1",
                    "U85HCL7JP"
                ],
                "count": 2
            }
        ]
    }
]