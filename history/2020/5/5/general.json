[
    {
        "client_msg_id": "7f1bab2a-8cb8-441c-b80d-19cbf02355bf",
        "type": "message",
        "text": "Edwards, Kell, Petricek and Church, _\"Evaluating programming systems design\"_, Psychology of Programming Interest Group\n\n<https://alarmingdevelopment.org/?p=1358>\n\nBasically they're asking the following question: Assume we start writing interactive essays as the output of research. How does the review process change? How do we maintain academic rigor?",
        "user": "UCUSW7WVD",
        "ts": "1588648801.004400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Alarming Development",
                "title": "Evaluating programming systems design",
                "title_link": "https://alarmingdevelopment.org/?p=1358",
                "text": "I collaborated on this paper at PPIG19. They haven\u2019t published the proceedings yet, so I\u2019ve put the paper up here. Abstract: Research on programming systems design needs to consider a w\u2026",
                "fallback": "Alarming Development: Evaluating programming systems design",
                "thumb_url": "https://s0.wp.com/i/blank.jpg",
                "ts": 1588086292,
                "from_url": "https://alarmingdevelopment.org/?p=1358",
                "thumb_width": 200,
                "thumb_height": 200,
                "id": 1,
                "original_url": "https://alarmingdevelopment.org/?p=1358"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LDR=R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Edwards, Kell, Petricek and Church, "
                            },
                            {
                                "type": "text",
                                "text": "\"Evaluating programming systems design\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", Psychology of Programming Interest Group\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://alarmingdevelopment.org/?p=1358"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBasically they're asking the following question: Assume we start writing interactive essays as the output of research. How does the review process change? How do we maintain academic rigor?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "U8A5MS6R1",
                    "UML4ZEKDK"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "ae5902ae-8549-451e-988d-914e196cf40f",
        "type": "message",
        "text": "Ask yourself: When\u2019s the last time you used an app, or visited a website, that was made by an actual individual _person_? How many of the tools you use at work, or apps you spend time on for fun, come from a community that you're part of? If you\u2019re a coder, when\u2019s the last time you just quickly built something to solve a problem for yourself or simply because it was a fun idea?\n\n<https://www.linkedin.com/pulse/code-great-heres-why-we-need-yes-anil-dash>",
        "user": "UBN9AFS0N",
        "ts": "1588674308.005200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "\"No Code\" is great. But here's why we need *Yes* Code.",
                "title_link": "https://www.linkedin.com/pulse/code-great-heres-why-we-need-yes-anil-dash",
                "text": "The hardest part about creating with code isn\u2019t the code. For years, people in the tech industry have talked about \u201cNo Code\u201d \u2014 tools and services that let you build a website or an app just by clicking or tapping, without having to know how to write code.",
                "fallback": "\"No Code\" is great. But here's why we need *Yes* Code.",
                "image_url": "https://media-exp1.licdn.com/dms/image/C4E12AQEMcDzqPy6Orw/article-cover_image-shrink_720_1280/0?e=1594252800&v=beta&t=Y1an2CFPoi0RF4UeUlH2WfUbRDBn7AK2whlr4gIqj6w",
                "from_url": "https://www.linkedin.com/pulse/code-great-heres-why-we-need-yes-anil-dash",
                "image_width": 484,
                "image_height": 250,
                "image_bytes": 331330,
                "service_icon": "https://static-exp1.licdn.com/scds/common/u/images/logos/favicons/v1/favicon.ico",
                "service_name": "linkedin.com",
                "id": 1,
                "original_url": "https://www.linkedin.com/pulse/code-great-heres-why-we-need-yes-anil-dash"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GNlfT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ask yourself: When\u2019s the last time you used an app, or visited a website, that was made by an actual individual "
                            },
                            {
                                "type": "text",
                                "text": "person",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? How many of the tools you use at work, or apps you spend time on for fun, come from a community that you're part of? If you\u2019re a coder, when\u2019s the last time you just quickly built something to solve a problem for yourself or simply because it was a fun idea?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.linkedin.com/pulse/code-great-heres-why-we-need-yes-anil-dash"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "reply_count": 19,
        "reply_users_count": 7,
        "latest_reply": "1588883093.237000",
        "reply_users": [
            "UBN9AFS0N",
            "UJBAJNFLK",
            "UUB7RA7PF",
            "UE0ETTCG7",
            "UAVCC2X70",
            "U5STGTB3J",
            "UJ6LDMMN0"
        ],
        "subscribed": true,
        "last_read": "1588883093.237000"
    },
    {
        "client_msg_id": "f85381c7-8756-42ea-9d75-f96c89a8e77f",
        "type": "message",
        "text": "That human web has disappeared because it got too hard to just create things on the web. Building and sharing an app should be as easy as creating and sharing a video",
        "user": "UBN9AFS0N",
        "ts": "1588674342.005400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NpGTU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That human web has disappeared because it got too hard to just create things on the web. Building and sharing an app should be as easy as creating and sharing a video"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "d8a94a22-c0b1-42ce-a837-9718091996cd",
        "type": "message",
        "text": "Last time I visited a Web site made by an individual? Right now, 15 minutes ago (reading a blog post). Rarely more than a few hours during the day.\nTools made by individuals are a different story. I use a few at work, but those are very specialized research tools.",
        "user": "UJBAJNFLK",
        "ts": "1588675352.005600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MV+h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Last time I visited a Web site made by an individual? Right now, 15 minutes ago (reading a blog post). Rarely more than a few hours during the day.\nTools made by individuals are a different story. I use a few at work, but those are very specialized research tools."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "357db877-d02b-4cdd-b413-8df8fac00d5d",
        "type": "message",
        "text": "Maybe it is a good idea to use zooming (ctrl + mouse wheel) to transition between various visual representations of the program. Zoom out \u2014 and you'll see the whole picture. Zoom in \u2014 and you'll see the code. Zoom in even further \u2014 and you'll see some details. Etc. I wonder how many different useful layers in between we can think of.\n\nAre there programming environments which somehow implement this idea?\nDo you like this idea?",
        "user": "UTG9XLGKZ",
        "ts": "1588677125.006200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UTG9XLGKZ",
            "ts": "1588695310.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/kV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe it is a good idea to use zooming (ctrl + mouse wheel) to transition between various visual representations of the program. Zoom out \u2014 and you'll see the whole picture. Zoom in \u2014 and you'll see the code. Zoom in even further \u2014 and you'll see some details. Etc. I wonder how many different useful layers in between we can think of.\n\nAre there programming environments which somehow implement this idea?\nDo you like this idea?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "reply_count": 32,
        "reply_users_count": 10,
        "latest_reply": "1588897645.244700",
        "reply_users": [
            "UBN9AFS0N",
            "UKDM3GLAJ",
            "UNCP67JSK",
            "UDQBTJ211",
            "UA14TGLTC",
            "U5STGTB3J",
            "UTG9XLGKZ",
            "UUK6Y29R8",
            "UNBPP291C",
            "USUMN6XLH"
        ],
        "subscribed": true,
        "last_read": "1588897645.244700",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UNCP67JSK",
                    "UJN1TAYEQ",
                    "USUMN6XLH"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UD6EXQVM0"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7ad09c15-afe3-4b2e-b123-b7eb467b11fc",
        "type": "message",
        "text": "a long time ago I saw a demo similar to that, I can't find it but I found this one which may be a good starting point to explore related work: <https://www.youtube.com/watch?v=5JzaEUJ7IbE>",
        "user": "UBN9AFS0N",
        "ts": "1588677655.016600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "PA3D: Early zoomable user interface (ZUI)",
                "title_link": "https://www.youtube.com/watch?v=5JzaEUJ7IbE",
                "author_name": "Ben Bederson",
                "author_link": "https://www.youtube.com/user/bbederson",
                "thumb_url": "https://i.ytimg.com/vi/5JzaEUJ7IbE/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: PA3D: Early zoomable user interface (ZUI)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/5JzaEUJ7IbE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://www.youtube.com/watch?v=5JzaEUJ7IbE",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=5JzaEUJ7IbE"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ePZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a long time ago I saw a demo similar to that, I can't find it but I found this one which may be a good starting point to explore related work: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=5JzaEUJ7IbE"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UNCP67JSK",
                    "UTG9XLGKZ"
                ],
                "count": 2
            },
            {
                "name": "star-struck",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            },
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3c44943c-ec03-4f59-a24e-cbdcd0359cc4",
        "type": "message",
        "text": "I believe touch designer pro uses this to support nested data flow programs ( at a low zoom level you see a node, and at a higher zoom level the node becomes its own graph). I think it's a good idea for visualizing recursive things.",
        "user": "UKDM3GLAJ",
        "ts": "1588677706.017800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jWJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe touch designer pro uses this to support nested data flow programs ( at a low zoom level you see a node, and at a higher zoom level the node becomes its own graph). I think it's a good idea for visualizing recursive things."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "9f29cbe7-a8a3-4ebf-855c-f44edd30c6ee",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=62KcJ09k7cE>",
        "user": "UBN9AFS0N",
        "ts": "1588677816.021000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Pad++ with PadPrints and GrayMatters",
                "title_link": "https://www.youtube.com/watch?v=62KcJ09k7cE",
                "author_name": "Ben Bederson",
                "author_link": "https://www.youtube.com/user/bbederson",
                "thumb_url": "https://i.ytimg.com/vi/62KcJ09k7cE/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Pad++ with PadPrints and GrayMatters",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/62KcJ09k7cE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://www.youtube.com/watch?v=62KcJ09k7cE",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=62KcJ09k7cE"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hDp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=62KcJ09k7cE"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "DD15D86F-62A5-4B5B-9419-CB26649FF6AC",
        "type": "message",
        "text": "YES! I really like this idea (in fact, working on it :) ). Node n noodle software usually has the concept of double clicking a node to open it up, revealing its subnodes / implementation. Though zooming is a bit more natural in certain cases. I have a combination of outliner/mindmap on an infinite canvas (translation + zoom), in which a node may be expanded as a list in the outline, or exploded to the side as a mindmap/graph, or fully moved into (becoming the current ctx/workspace). When expanded in the current ctx, its nodes becomes a bit smaller, thus allowing infinite expansion on the same view, resulting in a fractal-like zoom experience. The subnodes may be static logic, or a dynamic result, and in such case, they may define their rendering to a certain degree themself, so making an actual fractal out of this wouldn't be too far off :)",
        "user": "UNCP67JSK",
        "ts": "1588677825.021400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dKQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "YES! I really like this idea (in fact, working on it :) ). Node n noodle software usually has the concept of double clicking a node to open it up, revealing its subnodes / implementation. Though zooming is a bit more natural in certain cases. I have a combination of outliner/mindmap on an infinite canvas (translation + zoom), in which a node may be expanded as a list in the outline, or exploded to the side as a mindmap/graph, or fully moved into (becoming the current ctx/workspace). When expanded in the current ctx, its nodes becomes a bit smaller, thus allowing infinite expansion on the same view, resulting in a fractal-like zoom experience. The subnodes may be static logic, or a dynamic result, and in such case, they may define their rendering to a certain degree themself, so making an actual fractal out of this wouldn't be too far off :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "e7af6425-f33b-4330-85d1-28bf27b1ed70",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=G6yPQKt3mBA> &lt;- this one is close to the one I remember",
        "user": "UBN9AFS0N",
        "ts": "1588677910.021600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Eagle Mode",
                "title_link": "https://www.youtube.com/watch?v=G6yPQKt3mBA",
                "author_name": "oh417",
                "author_link": "https://www.youtube.com/user/oh417",
                "thumb_url": "https://i.ytimg.com/vi/G6yPQKt3mBA/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Eagle Mode",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/G6yPQKt3mBA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=G6yPQKt3mBA",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=G6yPQKt3mBA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fuW+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=G6yPQKt3mBA"
                            },
                            {
                                "type": "text",
                                "text": " <- this one is close to the one I remember"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UDQBTJ211",
                    "UTGN8SP1P",
                    "UML4ZEKDK"
                ],
                "count": 3
            },
            {
                "name": "heart_eyes",
                "users": [
                    "UTG9XLGKZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5138ea2a-0d45-4dd0-8849-f5cc2d2904ad",
        "type": "message",
        "text": "I really think ZUIs are underexplored.\n\nIf I ever get round to designing a UI it will be a ZUI combined with \"search anywhere\". I think these two together can combine the best of CLI and GUI.",
        "user": "UDQBTJ211",
        "ts": "1588678172.021900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hzP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really think ZUIs are underexplored.\n\nIf I ever get round to designing a UI it will be a ZUI combined with \"search anywhere\". I think these two together can combine the best of CLI and GUI."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "point_up",
                "users": [
                    "U5STGTB3J",
                    "UD6EXQVM0"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "99554318-dc8e-4694-accb-b7feb93bbdb3",
        "type": "message",
        "text": "For programs, semantic zoom (of various sorts) is what you want.  And yes, ZUIs are underexplored.",
        "user": "UA14TGLTC",
        "ts": "1588679737.022900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cqc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For programs, semantic zoom (of various sorts) is what you want.  And yes, ZUIs are underexplored."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUB7RA7PF"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "FA97A89A-4A3D-4E47-B9ED-5AFD034189B3",
        "type": "message",
        "text": "&gt; I really think ZUIs are underexplored.\n&gt; \nAbsolutely! For me this falls into the category of interesting opportunities in the space between 2D and 3D interfaces. It\u2019s easy to be distracted by the possibilities of AR and VR in \u201ctrue\u201d 3D, although there is still so much more to explore in 2D (2.5D?) space.\n\nZooming is one of those interactions deeply rooted in the way we think. It has an embodied physicality to it, which provides a powerful metaphor that most people understand intuitively. This is why the touch gestures for it (pinch to zoom) are so easily remembered. \n\nI\u2019m sure there are many more ways for us to build upon the patterns (kinesthetic image schemas) that provide the underpinnings for most of our linguistic reasoning and build interfaces with them that can truly be \u201cintuitive\u201d.",
        "user": "U5STGTB3J",
        "ts": "1588680602.032600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dkD4d",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really think ZUIs are underexplored.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Absolutely! For me this falls into the category of interesting opportunities in the space between 2D and 3D interfaces. It\u2019s easy to be distracted by the possibilities of AR and VR in \u201ctrue\u201d 3D, although there is still so much more to explore in 2D (2.5D?) space.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Zooming is one of those interactions deeply rooted in the way we think. It has an embodied physicality to it, which provides a powerful metaphor that most people understand intuitively. This is why the touch gestures for it (pinch to zoom) are so easily remembered. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I\u2019m sure there are many more ways for us to build upon the patterns (kinesthetic image schemas) that provide the underpinnings for most of our linguistic reasoning and build interfaces with them that can truly be \u201cintuitive\u201d."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UTG9XLGKZ",
                    "UA14TGLTC",
                    "UJ6LDMMN0"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "ce901e64-2303-4eb3-94c4-2f1cc61944de",
        "type": "message",
        "text": "<@UBN9AFS0N>\nOh my God, this Eagle Mode is so amazing. In this way you can keep so much more information in your working memory \u2014 when transitions are continuous, than in the usual way when you discretely jump between contexts (windows, files, webpages, ...). I feel like I keep everything which was shown \u2014 because nothing disappeared abruptly, just smoothly diminished so I remember where to find it.\n\nThank you so much for showing it.\n\nWhy doesn't everybody here use something like this every day?\n\nAnother half of my amazement is by the experience of this question-answer interface: I imagined what I wanted to see, posted a question to the right place, and in minutes I get something wonderful and relevant. How much better experience it is than googling.\nCan it be scaled so that thousands or millions of people can have such super high quality prompt answers to their questions?",
        "user": "UTG9XLGKZ",
        "ts": "1588682337.032800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UTG9XLGKZ",
            "ts": "1588706082.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iMhu4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": "\nOh my God, this Eagle Mode is so amazing. In this way you can keep so much more information in your working memory \u2014 when transitions are continuous, than in the usual way when you discretely jump between contexts (windows, files, webpages, ...). I feel like I keep everything which was shown \u2014 because nothing disappeared abruptly, just smoothly diminished so I remember where to find it.\n\nThank you so much for showing it.\n\nWhy doesn't everybody here use something like this every day?\n\nAnother half of my amazement is by the experience of this question-answer interface: I imagined what I wanted to see, posted a question to the right place, and in minutes I get something wonderful and relevant. How much better experience it is than googling.\nCan it be scaled so that thousands or millions of people can have such super high quality prompt answers to their questions?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UNCP67JSK",
                    "UBN9AFS0N",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d988c5f4-196c-45ba-b5b9-4d80c263a274",
        "type": "message",
        "text": "Thanks <@U7C7B75R6>! I had found houdini, but I hadn\u2019t seen that layout page.",
        "user": "UKDM3GLAJ",
        "ts": "1588683364.033500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H8v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U7C7B75R6"
                            },
                            {
                                "type": "text",
                                "text": "! I had found houdini, but I hadn\u2019t seen that layout page."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588186429.337500",
        "parent_user_id": "UKDM3GLAJ"
    },
    {
        "client_msg_id": "0752a95d-beae-4387-b865-9fda25ef7bf7",
        "type": "message",
        "text": "Maybe web browser should work like this? Zoom into a link instead of opening the link in a new tab.\n\nThat is, we can combine zooming with hyper-linking. Similar to when you browse a tree object with circular references: every object can have connections to other objects, and you can explore each link right here, in the current context.",
        "user": "UTG9XLGKZ",
        "ts": "1588683753.033900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UTG9XLGKZ",
            "ts": "1588703622.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mw6cL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe web browser should work like this? Zoom into a link instead of opening the link in a new tab.\n\nThat is, we can combine zooming with hyper-linking. Similar to when you browse a tree object with circular references: every object can have connections to other objects, and you can explore each link right here, in the current context."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "3ba28ec6-0254-4365-8f2a-c63a22f1e9bd",
        "type": "message",
        "text": "Thanks for sharing <@UBN9AFS0N>, this got me super excited since I am working on this exact problem :slightly_smiling_face: (with DSL approach at the moment)! I agree that a lot of web is already there (medium, wordpress, shopify, wix, bubble, ...), but as <@UJBAJNFLK> said, if we want to build a tool / actual app, that is different story. That is in part due to tools/apps just inherently being more complex, that is something that we can't avoid, but there is certainly still a lot of space to make it simpler than it is right now (removing accidental complexity).",
        "user": "UUB7RA7PF",
        "ts": "1588683911.034200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UUB7RA7PF",
            "ts": "1588683938.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OhJ5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": ", this got me super excited since I am working on this exact problem "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " (with DSL approach at the moment)! I agree that a lot of web is already there (medium, wordpress, shopify, wix, bubble, ...), but as "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " said, if we want to build a tool / actual app, that is different story. That is in part due to tools/apps just inherently being more complex, that is something that we can't avoid, but there is certainly still a lot of space to make it simpler than it is right now (removing accidental complexity)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5b790054-1536-4beb-b88e-f8c963e3f3ef",
        "type": "message",
        "text": "I\u2019m also a huge fun of ZUIs. And I do think the question\n&gt; Why doesn\u2019t everybody here use something like this every day?\nis a good one. My guess as to why ZUIs are not more mainstream is that, though they can be quite effective for readers by leveraging spatial perception, they are rather difficult for makers of ZUIs. Essentially, making a ZUI is akin to cartography, but the digital world is ultimately unbounded (infinite canvas). Parent-child relationships can be mapped to containers and relative size, so something like \u201cEagle Mode\u201d (which is awesome!!!) works really well since filesystems are a tree. But even then, there are many display and layout questions like the how many columns and rows per container.\n\nOn the application side, something like <https://youtu.be/En_2T7KH6RA|Project Xanadu> uses a ZUI for relating documents and text to one another, but once you get to a certain number of documents, I think this seems pretty intractable as well. Spatial perception is a lot harder when the X-Y-Z dimensions are unbounded. This is just my guess though! What does everyone think?",
        "user": "UUK6Y29R8",
        "ts": "1588684078.034500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Ted Nelson demonstrates Xanadu Space",
                "title_link": "https://youtu.be/En_2T7KH6RA",
                "author_name": "photonhunter",
                "author_link": "https://www.youtube.com/user/photonhunter",
                "thumb_url": "https://i.ytimg.com/vi/En_2T7KH6RA/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Ted Nelson demonstrates Xanadu Space",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/En_2T7KH6RA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/En_2T7KH6RA",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/En_2T7KH6RA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hbp+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m also a huge fun of ZUIs. And I do think the question\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why doesn\u2019t everybody here use something like this every day?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is a good one. My guess as to why ZUIs are not more mainstream is that, though they can be quite effective for readers by leveraging spatial perception, they are rather difficult for makers of ZUIs. Essentially, making a ZUI is akin to cartography, but the digital world is ultimately unbounded (infinite canvas). Parent-child relationships can be mapped to containers and relative size, so something like \u201cEagle Mode\u201d (which is awesome!!!) works really well since filesystems are a tree. But even then, there are many display and layout questions like the how many columns and rows per container.\n\nOn the application side, something like "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/En_2T7KH6RA",
                                "text": "Project Xanadu"
                            },
                            {
                                "type": "text",
                                "text": " uses a ZUI for relating documents and text to one another, but once you get to a certain number of documents, I think this seems pretty intractable as well. Spatial perception is a lot harder when the X-Y-Z dimensions are unbounded. This is just my guess though! What does everyone think?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "405c5394-d7f1-44c1-97bf-c9c832dc80ac",
        "type": "message",
        "text": "One of the great mysteries about computers is why so few programmers write programs to speed up their own workflows? Sure, Emacs is a thing, and a lot of people do a bit of customization with their shell. But the vast majority of programmers I've met and worked with, do not do this, and effectively write zero code to help with their own workflows. You can see this in the numbers by looking at the meteoric success of Visual Studio Code (arguably the most popular GUI programming tool in history), which is much harder to customize than say, Emacs, Vim, or Atom.",
        "user": "UE0ETTCG7",
        "ts": "1588689479.038300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3BjXQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of the great mysteries about computers is why so few programmers write programs to speed up their own workflows? Sure, Emacs is a thing, and a lot of people do a bit of customization with their shell. But the vast majority of programmers I've met and worked with, do not do this, and effectively write zero code to help with their own workflows. You can see this in the numbers by looking at the meteoric success of Visual Studio Code (arguably the most popular GUI programming tool in history), which is much harder to customize than say, Emacs, Vim, or Atom."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4de118ee-52ab-4107-862f-6ad7f06b17a2",
        "type": "message",
        "text": "About web publishing, I don't think that web publishing has gotten more difficult, in fact the opposite is true: It's gotten far easier. The reason that there are so few handmade websites is twofold: One, those websites have been dwarfed by the amount of web content that's now published by people without the technical expertise to do traditional web publishing. So while traditional web publishing has not gotten more difficult, other forms of web publishing have gotten far easier.",
        "user": "UE0ETTCG7",
        "ts": "1588690201.038500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zrZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "About web publishing, I don't think that web publishing has gotten more difficult, in fact the opposite is true: It's gotten far easier. The reason that there are so few handmade websites is twofold: One, those websites have been dwarfed by the amount of web content that's now published by people without the technical expertise to do traditional web publishing. So while traditional web publishing has not gotten more difficult, other forms of web publishing have gotten far easier."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "80b61d27-5ebf-4106-8e47-77ae58b47917",
        "type": "message",
        "text": "The other reason is simply that in order to promote content today, you need to leverage network effects, and self-published content makes that harder.",
        "user": "UE0ETTCG7",
        "ts": "1588690276.038700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JLHjN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The other reason is simply that in order to promote content today, you need to leverage network effects, and self-published content makes that harder."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "6b642159-3460-4fa9-9254-aaaef72943df",
        "type": "message",
        "text": "<@UUK6Y29R8>\nIt seems to me that an object tree with circular references is a pretty nice (and scalable) structure. One giant tree can hold all your data. Any object (node) can have links to all other objects (nodes) related to it in the form of key-value pairs (object properties). You can know and use the \"real/absolute address\" (e.g. shortest path from the root) of a node if you want, but you as well can start from any node and go \"only down\" \u2014 following the links which relate a node to all other things meaningfully related to it. And so on recursively.",
        "user": "UTG9XLGKZ",
        "ts": "1588691196.038900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UTG9XLGKZ",
            "ts": "1588696096.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dfY+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUK6Y29R8"
                            },
                            {
                                "type": "text",
                                "text": "\nIt seems to me that an object tree with circular references is a pretty nice (and scalable) structure. One giant tree can hold all your data. Any object (node) can have links to all other objects (nodes) related to it in the form of key-value pairs (object properties). You can know and use the \"real/absolute address\" (e.g. shortest path from the root) of a node if you want, but you as well can start from any node and go \"only down\" \u2014 following the links which relate a node to all other things meaningfully related to it. And so on recursively."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "93f8883e-8fbe-49f6-b055-e543d71eb772",
        "type": "message",
        "text": "A challenge with ZUI is how to see several nodes from different places of the same tree at once and select and manipulate them collectively.\nThis could be a solution: imagine you can draw an arbitrary shape on your screen and this shape becomes an independent view into your tree: you just continue zooming in this shape, and only this shape changes its zoom level, while all other shapes stay at their current zoom levels. So in this way you split your screen into several independent views, zoom each shape to a needed level so that you see all the objects you need at once, then you can select these objects at once (ctrl+click) and then do some action on them collectively.\nIt could also be convenient to automatically magnify (slightly resize) the area in which you are currently zooming \u2014 while other areas are still visible, just diminished slightly.",
        "user": "UTG9XLGKZ",
        "ts": "1588693226.039600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jpX0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A challenge with ZUI is how to see several nodes from different places of the same tree at once and select and manipulate them collectively.\nThis could be a solution: imagine you can draw an arbitrary shape on your screen and this shape becomes an independent view into your tree: you just continue zooming in this shape, and only this shape changes its zoom level, while all other shapes stay at their current zoom levels. So in this way you split your screen into several independent views, zoom each shape to a needed level so that you see all the objects you need at once, then you can select these objects at once (ctrl+click) and then do some action on them collectively.\nIt could also be convenient to automatically magnify (slightly resize) the area in which you are currently zooming \u2014 while other areas are still visible, just diminished slightly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "5227ebcc-3cf7-434c-943e-f82cdd5d6058",
        "type": "message",
        "text": "Is a tree with circular references the same thing as a graph with a root?",
        "user": "UKDM3GLAJ",
        "ts": "1588693259.039800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rkT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is a tree with circular references the same thing as a graph with a root?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ"
    },
    {
        "client_msg_id": "f8477fb1-2512-4991-b19f-92a8de267fe0",
        "type": "message",
        "text": "<@UE0ETTCG7> hm, well the answer regarding writing programs for our own workflows might be pretty simple - it is always lower priority compared to the project we are working on, and it provides long term benefits compared to short term benefits of solving the immediate task (and we naturally go for short term).",
        "user": "UUB7RA7PF",
        "ts": "1588693397.040100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bTx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " hm, well the answer regarding writing programs for our own workflows might be pretty simple - it is always lower priority compared to the project we are working on, and it provides long term benefits compared to short term benefits of solving the immediate task (and we naturally go for short term)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "type": "message",
        "text": "I mean object tree, like this:",
        "files": [
            {
                "id": "F0132UQ19U2",
                "created": 1588693618,
                "timestamp": 1588693618,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UTG9XLGKZ",
                "editable": false,
                "size": 27502,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F0132UQ19U2/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0132UQ19U2/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F0132UQ19U2-f7782a9d11/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F0132UQ19U2-f7782a9d11/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F0132UQ19U2-f7782a9d11/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 177,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F0132UQ19U2-f7782a9d11/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 237,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F0132UQ19U2-f7782a9d11/image_160.png",
                "original_w": 629,
                "original_h": 310,
                "thumb_tiny": "AwAXADDSI+v50buP/r0ppobB6jH1oAUNk8fzoyfSk3c44/OnZHrQACikyMZzSgg9DQAUmD/k0tFADSD2/nSqMdaWigAooooA/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UTG9XLGKZ/F0132UQ19U2/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0132UQ19U2-fa1ef3131c",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/4C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean object tree, like this:"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UTG9XLGKZ",
        "display_as_bot": false,
        "ts": "1588693621.040300",
        "client_msg_id": "f61c55fa-fcd0-408d-9797-7abf14229cf3",
        "thread_ts": "1588677125.006200",
        "parent_user_id": "UTG9XLGKZ",
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UKDM3GLAJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3a6dca67-7efa-4b99-ad71-a613575db5e5",
        "type": "message",
        "text": "I don't disagree that that's a factor, but it feels incomplete to me. For example, you could say the same about learning new programming languages or new frameworks. But I don't find programmers particularly adverse to doing that, and they often actually find that exciting. If I were to rank programmer preference for how invest in longer-term gains, I'd put them in this order:\n\nLearn a new language or framework &gt; Learn a new tool (e.g., IDE or text editor) &gt; Write code to solve their own problems\n\nThe first thing I'd say that ordering reveals is that branding works: languages, frameworks, and tools all have branding, while writing a script doesn't.",
        "user": "UE0ETTCG7",
        "ts": "1588696153.042300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZRLM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't disagree that that's a factor, but it feels incomplete to me. For example, you could say the same about learning new programming languages or new frameworks. But I don't find programmers particularly adverse to doing that, and they often actually find that exciting. If I were to rank programmer preference for how invest in longer-term gains, I'd put them in this order:\n\nLearn a new language or framework > Learn a new tool (e.g., IDE or text editor) > Write code to solve their own problems\n\nThe first thing I'd say that ordering reveals is that branding works: languages, frameworks, and tools all have branding, while writing a script doesn't."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "ea17a8f6-6f7e-4078-a104-7a6a49273743",
        "type": "message",
        "text": "I actually think that the reason programmers don't write code to solve their own problems, is that broadly speaking, programmers (and people in general) don't feel deficiencies in their tools. Most people don't really care if something takes 30 steps as long as it gets done. They don't really worry about whether that could be done in one step, if they already have a way to get it done.",
        "user": "UE0ETTCG7",
        "ts": "1588696247.042500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1588700313.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tqm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I actually think that the reason programmers don't write code to solve their own problems, is that broadly speaking, programmers (and people in general) don't feel deficiencies in their tools. Most people don't really care if something takes 30 steps as long as it gets done. They don't really worry about whether that could be done in one step, if they already have a way to get it done."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "3dd3c18f-ac92-4478-b798-f12561d9ba12",
        "type": "message",
        "text": "Announcement:\n\n:christmas_tree: I've spun up a new channel for <#C0133ED5811|functional-programming>. If that's an area of interest for you then be sure to join.\n\nNote that this channel, like our other subject-specific channels (<#CLYCGTCPL|end-user-programming>, <#CE1R695T7|graphics>, <#CEZ6QTHL1|music>, maybe others someday \u2014\u00a0see <#CEXED56UR|meta>) are intended for discussion _by and for_ people who are sincerely enthusiastic about the subject. These are positive spaces, focused on studying and critiquing the ideas _within_ the field, not questioning the field itself. If you'd like to call into question the merits of an entire field or practice, that belongs in <#C5T9GPWFL|general>...\n\n...or perhaps in another community entirely if it's just a rehash of the same old tabs-spaces debate. After all, we all know that tabs are the supe-:dash:",
        "user": "UC2A2ARPT",
        "ts": "1588700944.049400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mrjG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Announcement:\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "christmas_tree"
                            },
                            {
                                "type": "text",
                                "text": " I've spun up a new channel for "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C0133ED5811"
                            },
                            {
                                "type": "text",
                                "text": ". If that's an area of interest for you then be sure to join.\n\nNote that this channel, like our other subject-specific channels ("
                            },
                            {
                                "type": "channel",
                                "channel_id": "CLYCGTCPL"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CE1R695T7"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CEZ6QTHL1"
                            },
                            {
                                "type": "text",
                                "text": ", maybe others someday \u2014\u00a0see "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CEXED56UR"
                            },
                            {
                                "type": "text",
                                "text": ") are intended for discussion "
                            },
                            {
                                "type": "text",
                                "text": "by and for",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " people who are sincerely enthusiastic about the subject. These are positive spaces, focused on studying and critiquing the ideas "
                            },
                            {
                                "type": "text",
                                "text": "within",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the field, not questioning the field itself. If you'd like to call into question the merits of an entire field or practice, that belongs in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": "...\n\n...or perhaps in another community entirely if it's just a rehash of the same old tabs-spaces debate. After all, we all know that tabs are the supe-"
                            },
                            {
                                "type": "emoji",
                                "name": "dash"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "reply_count": 28,
        "reply_users_count": 11,
        "latest_reply": "1588812895.178100",
        "reply_users": [
            "UUQ2EQW21",
            "UE6EFEPTQ",
            "UC2A2ARPT",
            "UKDM3GLAJ",
            "UEQ6M68H0",
            "UT60XSVCN",
            "UA14TGLTC",
            "U8A5MS6R1",
            "UJN1TAYEQ",
            "U5STGTB3J",
            "UHWC9PXBL"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "73dc103c-6613-4dba-a76f-42b4f2f19c0a",
        "type": "message",
        "text": "On the subject of tab/spaces, I heard recently that Screen Readers are easier to use with Tabbed documents vs spaces.  It is the first argument I've heard for the merits of one over the other  - personally, I'm a spaces man, but if it is genuinely true, then I will have to reconsider.... For this reason, I got around to adding tab support to my text editor.",
        "user": "UUQ2EQW21",
        "ts": "1588702019.049500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nHl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On the subject of tab/spaces, I heard recently that Screen Readers are easier to use with Tabbed documents vs spaces.  It is the first argument I've heard for the merits of one over the other  - personally, I'm a spaces man, but if it is genuinely true, then I will have to reconsider.... For this reason, I got around to adding tab support to my text editor."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "98f3705f-9421-4eb7-8e9e-17cb76f36bc9",
        "type": "message",
        "text": "Spaces FTW. And Vim.",
        "user": "UE6EFEPTQ",
        "ts": "1588702645.049700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qui6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Spaces FTW. And Vim."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "55809095-1b02-4215-af7e-45d184e99d98",
        "type": "message",
        "text": "We earn more apparently. Studies have shown.",
        "user": "UE6EFEPTQ",
        "ts": "1588702673.049900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VHQIS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We earn more apparently. Studies have shown."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "eacd7cea-f5b7-4fb6-bd88-1ee255f3c662",
        "type": "message",
        "text": "The benefit of saying you use tabs is that people look at you funny, which is delightful. Meanwhile, you can actually use spac-:dash:",
        "user": "UC2A2ARPT",
        "ts": "1588705012.050500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kg3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The benefit of saying you use tabs is that people look at you funny, which is delightful. Meanwhile, you can actually use spac-"
                            },
                            {
                                "type": "emoji",
                                "name": "dash"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UE6EFEPTQ",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b6ce0dce-b0a3-4fc7-9df7-a5dbf11b5a16",
        "type": "message",
        "text": "I like to think that your use of :dash: means you just indent with dashes and have customized an entire workflow around this. As somebody who unironically turns on visual whitespace, I could get behind that.",
        "user": "UKDM3GLAJ",
        "ts": "1588705354.050700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tyZrk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like to think that your use of "
                            },
                            {
                                "type": "emoji",
                                "name": "dash"
                            },
                            {
                                "type": "text",
                                "text": " means you just indent with dashes and have customized an entire workflow around this. As somebody who unironically turns on visual whitespace, I could get behind that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "sob",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "19387a5e-8a91-4cc7-90f2-8e56c45776aa",
        "type": "message",
        "text": "In Beads i solved this long running debate by preventing the use of spaces in the beginning of a line. You can only use tabs in the beginning, which solves a big problem with Python in terms of interchanging code which was formatted with differing numbers of spaces per tab equivalent. After the first alphabetic character you can use spaces of course. Works great, highly recommended.",
        "user": "UEQ6M68H0",
        "ts": "1588708745.051100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J=3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Beads i solved this long running debate by preventing the use of spaces in the beginning of a line. You can only use tabs in the beginning, which solves a big problem with Python in terms of interchanging code which was formatted with differing numbers of spaces per tab equivalent. After the first alphabetic character you can use spaces of course. Works great, highly recommended."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "exploding_head",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "open_mouth",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "881d8acb-41dc-4103-86d7-56c3e1fc597c",
        "type": "message",
        "text": "Since i am the only one in this entire community who ever met John Backus (1973), i will leave the ancient field of FP to the fanatics. If they think a 50 year old concept is state of the art, they are drinking the kool-aid. But he couldn't get anyone to switch out of either COBOL or his prior invention FORTRAN, so there are obvious problems with pure FP.  I see a lot of languages adopting FP-like features to blunt its penetration. Deduction and Declarative style trumps FP anyway, that's where i am headed.",
        "user": "UEQ6M68H0",
        "ts": "1588708972.051300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RlqPU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Since i am the only one in this entire community who ever met John Backus (1973), i will leave the ancient field of FP to the fanatics. If they think a 50 year old concept is state of the art, they are drinking the kool-aid. But he couldn't get anyone to switch out of either COBOL or his prior invention FORTRAN, so there are obvious problems with pure FP.  I see a lot of languages adopting FP-like features to blunt its penetration. Deduction and Declarative style trumps FP anyway, that's where i am headed."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "8f699de3-1697-4e70-af35-c87221e9f0ba",
        "type": "message",
        "text": "tabs for indentation, spaces for alignment; though I'd like to see elastic tabstops used more",
        "user": "UT60XSVCN",
        "ts": "1588713576.051800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JyH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "tabs for indentation, spaces for alignment; though I'd like to see elastic tabstops used more"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588700944.049400",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "56cc5937-c266-476c-ac97-1a470311f05e",
        "type": "message",
        "text": "This article is how I feel generally about programming and programming languages.\n\nWhat \"no code\" offers is ready-made components that are easy to compose. But that can be done with (well disciplined) code and libraries all the same. The difference is that you typically have to do that composition in the midst of a lot of programming and language boilerplate / noise. But if that were cleaned up (e.g. provide a clean interface or declarative view) for the components you want, then you can have that \"no code\" feel on top, but still have all the power to customize and program what goes into it.\n\nIt's like creating a collection of functions (a library) that give you all the basic tools you need for something simple, except nothing stopping you from also writing new functions or selectively mixing some of those with your own code.",
        "user": "UAVCC2X70",
        "ts": "1588714486.052000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1588714683.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OG7R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This article is how I feel generally about programming and programming languages.\n\nWhat \"no code\" offers is ready-made components that are easy to compose. But that can be done with (well disciplined) code and libraries all the same. The difference is that you typically have to do that composition in the midst of a lot of programming and language boilerplate / noise. But if that were cleaned up (e.g. provide a clean interface or declarative view) for the components you want, then you can have that \"no code\" feel on top, but still have all the power to customize and program what goes into it.\n\nIt's like creating a collection of functions (a library) that give you all the basic tools you need for something simple, except nothing stopping you from also writing new functions or selectively mixing some of those with your own code."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588674308.005200",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UUB7RA7PF"
                ],
                "count": 1
            }
        ]
    }
]