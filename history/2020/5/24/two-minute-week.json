[
    {
        "client_msg_id": "38343f0f-089b-45e5-b211-51d2bcdbebd1",
        "type": "message",
        "text": "Anything behind the name Jorvik?",
        "user": "UC2A2ARPT",
        "ts": "1590296932.431700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bxu7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anything behind the name Jorvik?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590252990.431100",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "ff0a545b-e0f3-4f5e-ac46-574c7f1df2c3",
        "type": "message",
        "text": "This week in Beads language development was devoted to implementing code coverage measurement. In Beads you have the concept of a monitor program that can run another program inside a window. This is useful for performance analysis and automated testing. I expanded the Builder program to have a toggle switch which shows the number of times each function/subroutine in the system has been called. By identifying functions with 0 calls you can see which parts of your code have not been tested.  <https://youtu.be/rW3H_BR7gLk>  This counts are also useful for identifying super high frequency utility functions, as those are strong candidates for putting in time on performance. It is always better to measure frequency of use before trying to optimize your code.",
        "user": "UEQ6M68H0",
        "ts": "1590299640.435700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Beads programming language, Ep 009, measuring code coverage",
                "title_link": "https://youtu.be/rW3H_BR7gLk",
                "author_name": "Edward De Jong",
                "author_link": "https://www.youtube.com/channel/UCiBO5hr2IVsYK8wiLznImTQ",
                "thumb_url": "https://i.ytimg.com/vi/rW3H_BR7gLk/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Beads programming language, Ep 009, measuring code coverage",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/rW3H_BR7gLk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/rW3H_BR7gLk",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/rW3H_BR7gLk"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CZ8S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This week in Beads language development was devoted to implementing code coverage measurement. In Beads you have the concept of a monitor program that can run another program inside a window. This is useful for performance analysis and automated testing. I expanded the Builder program to have a toggle switch which shows the number of times each function/subroutine in the system has been called. By identifying functions with 0 calls you can see which parts of your code have not been tested.  "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/rW3H_BR7gLk"
                            },
                            {
                                "type": "text",
                                "text": "  This counts are also useful for identifying super high frequency utility functions, as those are strong candidates for putting in time on performance. It is always better to measure frequency of use before trying to optimize your code."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013HU44GLS",
                    "UBN9AFS0N"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "84adfa73-4764-4d7c-a873-9b7ad009c272",
        "type": "message",
        "text": "yay! nanovg! cool!",
        "user": "U013HU44GLS",
        "ts": "1590300234.436100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OKY82",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yay! nanovg! cool!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590252990.431100",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "c73cf076-ea3a-400a-90b7-dd1d05fa3b5a",
        "type": "message",
        "text": "<@UC2A2ARPT> It refers to where I live, in York.   I have no idea if this is the final name - haven't decided.  It is pronounced with a 'Y'  <https://en.wikipedia.org/wiki/Scandinavian_York>",
        "user": "UUQ2EQW21",
        "ts": "1590316023.436500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UUQ2EQW21",
            "ts": "1590316028.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PSv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " It refers to where I live, in York.   I have no idea if this is the final name - haven't decided.  It is pronounced with a 'Y'  "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Scandinavian_York"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590252990.431100",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "8ce1c2f6-fe91-4b58-b9ff-1e8ad950a871",
        "type": "message",
        "text": "<@U013HU44GLS> I like nanovg a lot, but I'm only using it instead of ImGui because it has the gradient fills I use, which I think helps lift the UI off the screen a little.  Now I'm abstracted, it won't be hard to try other approaches.",
        "user": "UUQ2EQW21",
        "ts": "1590316159.436900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0Su",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013HU44GLS"
                            },
                            {
                                "type": "text",
                                "text": " I like nanovg a lot, but I'm only using it instead of ImGui because it has the gradient fills I use, which I think helps lift the UI off the screen a little.  Now I'm abstracted, it won't be hard to try other approaches."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590252990.431100",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "1f844082-8e10-4dff-a3da-96266e7ebd0d",
        "type": "message",
        "text": "The downside is it only supports GL and D3D9 (a backend I contributed a long time ago).  ImGui might be more sensible long term.",
        "user": "UUQ2EQW21",
        "ts": "1590316188.437100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KFO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The downside is it only supports GL and D3D9 (a backend I contributed a long time ago).  ImGui might be more sensible long term."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590252990.431100",
        "parent_user_id": "UUQ2EQW21"
    }
]