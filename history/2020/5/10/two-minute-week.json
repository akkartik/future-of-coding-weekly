[
    {
        "client_msg_id": "dbdef38a-3b35-46e7-a0fd-62cb6c5091b7",
        "type": "message",
        "text": "Sorry i posted only a partially uploaded file. This is a corrected version. Thanks to <@UA14TGLTC> for catching that.\nHere is a short video showing how to build a temperature control. You proceed directly from a sketch to a final shippable product using Beads, with no prototyping necessary. A lot of wasted work happens in our industry by using wireframing tools that can't be executed. You are better off with a crude-looking working product than a fake but pretty demo. It saves time, when the final shapes are all worked out from the running product, then you apply the final polish.\n Beads is rare among languages in that it carries at runtime physical units of measurement (by creating a new datatype which carries the unit exponent array and magnitude of the value), and has pre-programmed all the common conversions, such as degrees Kelvin to degrees Centigrade, etc. In this example i also show how you can have two interlinked controls on the screen, and whichever one changes the model the other control tracks its value, all without any additional code.  <https://youtu.be/JmmwmisRd2g>",
        "user": "UEQ6M68H0",
        "ts": "1589079026.313600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Beads language Ep 005, building a dual scale temperature control",
                "title_link": "https://youtu.be/JmmwmisRd2g",
                "author_name": "Edward De Jong",
                "author_link": "https://www.youtube.com/channel/UCiBO5hr2IVsYK8wiLznImTQ",
                "thumb_url": "https://i.ytimg.com/vi/JmmwmisRd2g/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Beads language Ep 005, building a dual scale temperature control",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/JmmwmisRd2g?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/JmmwmisRd2g",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/JmmwmisRd2g"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nhv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry i posted only a partially uploaded file. This is a corrected version. Thanks to "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " for catching that.\nHere is a short video showing how to build a temperature control. You proceed directly from a sketch to a final shippable product using Beads, with no prototyping necessary. A lot of wasted work happens in our industry by using wireframing tools that can't be executed. You are better off with a crude-looking working product than a fake but pretty demo. It saves time, when the final shapes are all worked out from the running product, then you apply the final polish.\n Beads is rare among languages in that it carries at runtime physical units of measurement (by creating a new datatype which carries the unit exponent array and magnitude of the value), and has pre-programmed all the common conversions, such as degrees Kelvin to degrees Centigrade, etc. In this example i also show how you can have two interlinked controls on the screen, and whichever one changes the model the other control tracks its value, all without any additional code.  "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/JmmwmisRd2g"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589079026.313600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1589105357.314500",
        "reply_users": [
            "UBN9AFS0N"
        ],
        "subscribed": true,
        "last_read": "1589105357.314500"
    },
    {
        "client_msg_id": "ead4f08d-e80a-49e6-9ea6-012187320bba",
        "type": "message",
        "text": "great demo! one question, the track expression is tracking all events on all elements of the app or you specify which ones to track somehow? if all, how does it scale and how do you know which is the target?",
        "user": "UBN9AFS0N",
        "ts": "1589105357.314500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hcM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "great demo! one question, the track expression is tracking all events on all elements of the app or you specify which ones to track somehow? if all, how does it scale and how do you know which is the target?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589079026.313600",
        "parent_user_id": "UEQ6M68H0"
    }
]