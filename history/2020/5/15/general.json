[
    {
        "client_msg_id": "1f82755b-0d8d-4ca5-85ad-49e71b991dc9",
        "type": "message",
        "text": "Now that we know how good ML models are at hallucinating plausible natural language, using them to recognize and complete coding idioms makes sense and I want it! <https://kite.com/blog/product/kite-launches-ai-powered-javascript-completions/>",
        "user": "UFEQUBNNT",
        "ts": "1589495699.393800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Code Faster with Kite",
                "title": "Kite Launches AI-Powered JavaScript Completions",
                "title_link": "https://kite.com/blog/product/kite-launches-ai-powered-javascript-completions/",
                "text": "Kite launches JavaScript completions to help automate away repetitive boilerplate and save developers from syntax errors.",
                "fallback": "Code Faster with Kite: Kite Launches AI-Powered JavaScript Completions",
                "image_url": "https://kite.com/wp-content/uploads/2019/09/meta-image-test-1080x648-1.png",
                "image_width": 417,
                "image_height": 250,
                "ts": 1589266860,
                "from_url": "https://kite.com/blog/product/kite-launches-ai-powered-javascript-completions/",
                "image_bytes": 18650,
                "service_icon": "https://kite.com/wp-content/themes/kite/favicon.ico",
                "id": 1,
                "original_url": "https://kite.com/blog/product/kite-launches-ai-powered-javascript-completions/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7vl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now that we know how good ML models are at hallucinating plausible natural language, using them to recognize and complete coding idioms makes sense and I want it! "
                            },
                            {
                                "type": "link",
                                "url": "https://kite.com/blog/product/kite-launches-ai-powered-javascript-completions/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "968d31a0-ba77-4fc8-9152-de0e2a212986",
        "type": "message",
        "text": "These are awesome, thanks! I know someone in my twitter feed is using this for code navigation but I can't find it and it's forever lost in the feed now.",
        "user": "ULK0Z4MPV",
        "ts": "1589497402.394000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P9iP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "These are awesome, thanks! I know someone in my twitter feed is using this for code navigation but I can't find it and it's forever lost in the feed now."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589469455.386200",
        "parent_user_id": "UAZT04VT4"
    },
    {
        "client_msg_id": "3b7acc6d-0c74-445a-a919-2713b58965b7",
        "type": "message",
        "text": "Yes - doesn't always have to be visible, but doesn't that seem like an understandable affordance to zoom out/in and undo/redo?",
        "user": "USH01JEDQ",
        "ts": "1589498276.394200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xDUZv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes - doesn't always have to be visible, but doesn't that seem like an understandable affordance to zoom out/in and undo/redo?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589470005.387400",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "0e43d3a0-25d6-4868-925b-a26985db13e1",
        "type": "message",
        "text": "Zooming is used a fair amount nowadays. You see it in the Atom editor, with the shrunken form of the document on the right. It is used extensively in Fancade, which because it is based on a Isometric projection of 3D space, is quite natural. All graphic design products use zooming constantly. The reason you don't see it used that much in programming is that once you zoom text below 6 pt it is illegible, and therefore useless. Seeing the shape of code does not inform you in any way as to the function of the code. Unlike a bitmap which can be sampled to 1/16th of its pixels and still be quite legible, code basically turns to mush when shrunken. Looking at a blobby bunch of wires may be sexy at first glance, but without comprehension it is mere graphical artifice with no substance or actual productive value. I don't find the Atom shrunken text form on the right is much better than a scrollbar.\n\nZooming does preserve context better than jumping, and i think we will see more of it, but don't pin your hopes on a UI trick going to advance programming significantly.",
        "user": "UEQ6M68H0",
        "ts": "1589513028.395200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1589513168.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wZh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Zooming is used a fair amount nowadays. You see it in the Atom editor, with the shrunken form of the document on the right. It is used extensively in Fancade, which because it is based on a Isometric projection of 3D space, is quite natural. All graphic design products use zooming constantly. The reason you don't see it used that much in programming is that once you zoom text below 6 pt it is illegible, and therefore useless. Seeing the shape of code does not inform you in any way as to the function of the code. Unlike a bitmap which can be sampled to 1/16th of its pixels and still be quite legible, code basically turns to mush when shrunken. Looking at a blobby bunch of wires may be sexy at first glance, but without comprehension it is mere graphical artifice with no substance or actual productive value. I don't find the Atom shrunken text form on the right is much better than a scrollbar.\n\nZooming does preserve context better than jumping, and i think we will see more of it, but don't pin your hopes on a UI trick going to advance programming significantly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589469455.386200",
        "parent_user_id": "UAZT04VT4"
    },
    {
        "client_msg_id": "a444f5e7-027b-4828-9d3a-b186c089e160",
        "type": "message",
        "text": "<@UEQ6M68H0>\nWhat about semantic zooming? <https://www.youtube.com/watch?v=5JzaEUJ7IbE&amp;t=194>",
        "user": "UTG9XLGKZ",
        "ts": "1589519167.395800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "PA3D: Early zoomable user interface (ZUI)",
                "title_link": "https://www.youtube.com/watch?v=5JzaEUJ7IbE&amp;t=194",
                "author_name": "Ben Bederson",
                "author_link": "https://www.youtube.com/user/bbederson",
                "thumb_url": "https://i.ytimg.com/vi/5JzaEUJ7IbE/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: PA3D: Early zoomable user interface (ZUI)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/5JzaEUJ7IbE?feature=oembed&start=194&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://www.youtube.com/watch?v=5JzaEUJ7IbE&amp;t=194",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=5JzaEUJ7IbE&amp;t=194"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LHYl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": "\nWhat about semantic zooming? "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=5JzaEUJ7IbE&t=194"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589469455.386200",
        "parent_user_id": "UAZT04VT4"
    },
    {
        "type": "message",
        "text": "anybody know any good channels for general developer productivity?",
        "user": "UL5AX4G2H",
        "ts": "1589545821.396800",
        "team": "T5TCAFTA9"
    },
    {
        "client_msg_id": "cb83ac1e-0a32-4918-974d-19297b4eea2d",
        "type": "message",
        "text": "MS apps often have a zoom scrollbar, Paint for example",
        "user": "UDQBTJ211",
        "ts": "1589547557.396900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LWBM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "MS apps often have a zoom scrollbar, Paint for example"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589470005.387400",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "d0caed79-d2b2-4103-9436-7431a7145f7a",
        "type": "message",
        "text": "I think it's generally not as useful because for most contexts it is very easy to tell \"where you are\" i.e. how zoomed in you are. It's not possible to tell how far through a document you are in the same way",
        "user": "UDQBTJ211",
        "ts": "1589547635.397100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "70RH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's generally not as useful because for most contexts it is very easy to tell \"where you are\" i.e. how zoomed in you are. It's not possible to tell how far through a document you are in the same way"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589470005.387400",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "37a980dc-00a4-42e8-b01a-9667eed794ed",
        "type": "message",
        "text": "For best developer productivity, stay off Slack. :stuck_out_tongue:",
        "user": "U010SQSJGLS",
        "ts": "1589548631.397500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YzX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For best developer productivity, stay off Slack. "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589548631.397500",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1589552903.406500",
        "reply_users": [
            "UE1JQM9HQ",
            "U010SQSJGLS",
            "U0123H7JRDM"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UA14TGLTC",
                    "UL3EE9WR1"
                ],
                "count": 2
            },
            {
                "name": "thread-please",
                "users": [
                    "UBN9AFS0N",
                    "UAL7940NM",
                    "U8A5MS6R1"
                ],
                "count": 3
            },
            {
                "name": "smile",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "97231a97-755a-46d5-8e1a-c3f642562078",
        "type": "message",
        "text": "Interesting. We have an opposite experience :slightly_smiling_face:",
        "user": "UE1JQM9HQ",
        "ts": "1589549620.398100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tZ9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting. We have an opposite experience "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589548631.397500",
        "parent_user_id": "U010SQSJGLS"
    },
    {
        "client_msg_id": "03cec081-a8b7-4260-82db-1b0319c7ba80",
        "type": "message",
        "text": "It was mostly a joke. Slack can be a useful work tool too.",
        "user": "U010SQSJGLS",
        "ts": "1589549679.398300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zvWve",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was mostly a joke. Slack can be a useful work tool too."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589548631.397500",
        "parent_user_id": "U010SQSJGLS"
    },
    {
        "client_msg_id": "8fbe42dd-c465-43de-a485-fe6e12177f6f",
        "type": "message",
        "text": "I thought this was a slack about it? I figure the future of programming is tightly coupled to productivity :)",
        "user": "UNBPP291C",
        "ts": "1589549824.399200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nun",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I thought this was a slack about it? I figure the future of programming is tightly coupled to productivity :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589549824.399200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1589563669.420300",
        "reply_users": [
            "UC2A2ARPT"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "thread-please",
                "users": [
                    "UBN9AFS0N",
                    "UAL7940NM",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "460e037d-d894-4b08-b43d-4c49b36f2eb1",
        "type": "message",
        "text": "Well, breaching the subject -  what are your favorite ways to generate/template code?",
        "user": "UNBPP291C",
        "ts": "1589549889.400500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "imA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, breaching the subject -  what are your favorite ways to generate/template code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589549889.400500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1589549998.401800",
        "reply_users": [
            "UNBPP291C"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "dd80880d-a710-4c96-8831-05e6111dca45",
        "type": "message",
        "text": "I\u2019ve found IntelliJ\u2019s templating to be pretty neat - altho a bit annoyance, but it can let you create wizards and use them to generate code inside project. It\u2019s a pretty great boost if you\u2019ve got a framework for yourself.\n\nI tried mustaches and annotation procesors, some custom mustache like logic, but everything feels\u2026 kinda iffy.",
        "user": "UNBPP291C",
        "ts": "1589549998.401800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6eAEj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve found IntelliJ\u2019s templating to be pretty neat - altho a bit annoyance, but it can let you create wizards and use them to generate code inside project. It\u2019s a pretty great boost if you\u2019ve got a framework for yourself.\n\nI tried mustaches and annotation procesors, some custom mustache like logic, but everything feels\u2026 kinda iffy."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589549889.400500",
        "parent_user_id": "UNBPP291C"
    },
    {
        "client_msg_id": "95695fb0-7a61-44af-9be6-ea711b45e6a7",
        "type": "message",
        "text": "<@UCGAK10LS> I also wished there were less APIs solving the same task, less poor abstractions and especially less tooling (<https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f>). But on the practical side, cutting down on existing stuff is pretty hard. Who would decide what to keep and what to do with all existing projects using some tech you'd like to get rid of? In theory, I'm totally with you (together with probably most web devs) in theory, but achieving practical improvements is the real challenge here. I Hope that WASM/WASI will be the kind of restart we all want, but let's see.\n\nAnother thing is that the web isn't the only platform suffering from growing complexity. I guess that if I wanted to write a native Android app, it wouldn't be much easier than using web tech. The only thing would be that I had to write like 5 other apps for the other major platforms and deal with all the little differences between them. Compared to that, a single web app that can be installed on all platforms and works consistently sounds pretty interesting.",
        "user": "UAL7940NM",
        "ts": "1589551249.402200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "How it feels to learn JavaScript in 2016 | Hacker Noon",
                "title_link": "https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f",
                "fallback": "How it feels to learn JavaScript in 2016 | Hacker Noon",
                "image_url": "https://hackernoon.com/Devimg/story-image-default.png",
                "from_url": "https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 7649,
                "service_icon": "https://hackernoon.com/favicon.ico",
                "service_name": "hackernoon.com",
                "id": 1,
                "original_url": "https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UeN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I also wished there were less APIs solving the same task, less poor abstractions and especially less tooling ("
                            },
                            {
                                "type": "link",
                                "url": "https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f"
                            },
                            {
                                "type": "text",
                                "text": "). But on the practical side, cutting down on existing stuff is pretty hard. Who would decide what to keep and what to do with all existing projects using some tech you'd like to get rid of? In theory, I'm totally with you (together with probably most web devs) in theory, but achieving practical improvements is the real challenge here. I Hope that WASM/WASI will be the kind of restart we all want, but let's see.\n\nAnother thing is that the web isn't the only platform suffering from growing complexity. I guess that if I wanted to write a native Android app, it wouldn't be much easier than using web tech. The only thing would be that I had to write like 5 other apps for the other major platforms and deal with all the little differences between them. Compared to that, a single web app that can be installed on all platforms and works consistently sounds pretty interesting."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589352652.370700",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "9fee6b7e-67ba-4ce8-a218-a6c18521e03d",
        "type": "message",
        "text": "<@U71PMQ1V0> Couldn't agree more. I'm a huge fan of offline-first web apps. My last comment didn't mean to argue against that, I just wanted to say that random deletion of data by the browser shouldn't cause data loss. So in the email-example, if the browser deleted data it could be restored from the email-server. This may be inconvenient, but not a big problem. And as long as there's plenty of storage available, why should the browser free up memory? I can kind of understand that browsers won't guarantee to keep the data forever. Extending PWAs to allow unlimited data storage and have some form of UI to check data usage of each PWA would be great.",
        "user": "UAL7940NM",
        "ts": "1589552133.402500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Xr5P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U71PMQ1V0"
                            },
                            {
                                "type": "text",
                                "text": " Couldn't agree more. I'm a huge fan of offline-first web apps. My last comment didn't mean to argue against that, I just wanted to say that random deletion of data by the browser shouldn't cause data loss. So in the email-example, if the browser deleted data it could be restored from the email-server. This may be inconvenient, but not a big problem. And as long as there's plenty of storage available, why should the browser free up memory? I can kind of understand that browsers won't guarantee to keep the data forever. Extending PWAs to allow unlimited data storage and have some form of UI to check data usage of each PWA would be great."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589352652.370700",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "BD1CE76E-2806-424B-B3CF-058160530DB0",
        "type": "message",
        "text": "Yes , certainly. The other project which I am working on we use it to communicate internally inbetween team members but also stakeholders. It helps our productivity together with other tools like whatsapp and teams. And while we are all working at home because of corona it's crucial I think",
        "user": "U0123H7JRDM",
        "ts": "1589552903.406500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vng",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes , certainly. The other project which I am working on we use it to communicate internally inbetween team members but also stakeholders. It helps our productivity together with other tools like whatsapp and teams. And while we are all working at home because of corona it's crucial I think"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589548631.397500",
        "parent_user_id": "U010SQSJGLS"
    },
    {
        "client_msg_id": "076a3875-ddea-4b43-9f3d-b8ee66841df7",
        "type": "message",
        "text": "----TODAYS DEVELOPMENT COMPLAINTS----\nContext: I\u2019m reimplementing a dragbox select a la: <https://simonwep.github.io/selection/> or many other libraries because I need to deal with elements that are overlapping (I\u2019m using it for dom element selection, but you could imagine selecting items in an outline and you\u2019d have 60% of the hairiness).\n---ISSUES IN THREAD BELOW---",
        "user": "UHWC9PXBL",
        "ts": "1589560472.416600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1589560554.000000"
        },
        "attachments": [
            {
                "service_name": "Selectionjs",
                "title": "Selectionjs - Selection engine",
                "title_link": "https://simonwep.github.io/selection/",
                "text": "Simple and lightweight library to realize visual DOM Selections, like on your Desktop. No jQuery. Supports any CSS library, e.g. Bootstrap. Including vertical &amp; horizontal scroll support.",
                "fallback": "Selectionjs: Selectionjs - Selection engine",
                "from_url": "https://simonwep.github.io/selection/",
                "id": 1,
                "original_url": "https://simonwep.github.io/selection/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F4tNt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "----TODAYS DEVELOPMENT COMPLAINTS----\nContext: I\u2019m reimplementing a dragbox select a la: "
                            },
                            {
                                "type": "link",
                                "url": "https://simonwep.github.io/selection/"
                            },
                            {
                                "type": "text",
                                "text": " or many other libraries because I need to deal with elements that are overlapping (I\u2019m using it for dom element selection, but you could imagine selecting items in an outline and you\u2019d have 60% of the hairiness).\n---ISSUES IN THREAD BELOW---"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589560472.416600",
        "reply_count": 3,
        "reply_users_count": 1,
        "latest_reply": "1589577561.424900",
        "reply_users": [
            "UHWC9PXBL"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "129dac9c-c213-418d-86b1-0f93dc8e221a",
        "type": "message",
        "text": "1. I\u2019ve looked at four or five of these libraries and every single one of them implements its own, slightly unique logic for:\n\na. handling/drawing the box when you drag select/making it disappear on mouseup. this seems like it should really be much simpler, but like with the convivial talk on dealing with SVG for modeling object models (\u00a0<https://youtu.be/uXv_386TyqY?t=1419>\u00a0) the DOM gives you very specific handles on geometry for mouse moves (weird choices off offsets, no other options)\n\nb. wrappers/callbacks for the javascript event model for mice and keyboards. it\u00a0_always_\u00a0feels so, so wrong. I don\u2019t know quite how to describe this: it\u2019s like a lego kit where you have to mix chemicals and mold 20% of the bricks yourself. You\u2019re constantly interrupting every single mouse move or click to check a condition. Shouldn\u2019t this be more of a \u201cbidirectional\u201d relationship? where you can put the \u201cif\u201d block outside the mouse move?? I certainly dont personally think \u201cam i holding a knife?\u201d every single time I move my arm\u2014not sure if this analogy makes sense.",
        "user": "UHWC9PXBL",
        "ts": "1589560587.417000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Convivial Computing Salon 2020 Session #1: Joel Jakubovic",
                "title_link": "https://youtu.be/uXv_386TyqY?t=1419",
                "author_name": "FluidProject",
                "author_link": "https://www.youtube.com/user/FluidProject",
                "thumb_url": "https://i.ytimg.com/vi/uXv_386TyqY/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Convivial Computing Salon 2020 Session #1: Joel Jakubovic",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/uXv_386TyqY?start=1419&feature=oembed&start=1419&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/uXv_386TyqY?t=1419",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/uXv_386TyqY?t=1419"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/0x=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "1. I\u2019ve looked at four or five of these libraries and every single one of them implements its own, slightly unique logic for:\n\na. handling/drawing the box when you drag select/making it disappear on mouseup. this seems like it should really be much simpler, but like with the convivial talk on dealing with SVG for modeling object models (\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/uXv_386TyqY?t=1419"
                            },
                            {
                                "type": "text",
                                "text": "\u00a0) the DOM gives you very specific handles on geometry for mouse moves (weird choices off offsets, no other options)\n\nb. wrappers/callbacks for the javascript event model for mice and keyboards. it\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "always",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0feels so, so wrong. I don\u2019t know quite how to describe this: it\u2019s like a lego kit where you have to mix chemicals and mold 20% of the bricks yourself. You\u2019re constantly interrupting every single mouse move or click to check a condition. Shouldn\u2019t this be more of a \u201cbidirectional\u201d relationship? where you can put the \u201cif\u201d block outside the mouse move?? I certainly dont personally think \u201cam i holding a knife?\u201d every single time I move my arm\u2014not sure if this analogy makes sense."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589560472.416600",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "9998918c-77f1-4042-a67f-3712f29152b8",
        "type": "message",
        "text": "2. Github\u2019s new-ish \u201cjump to definitions\u201d feature is just good enough to make reading other peoples code clearer, but it\u2019s like getting a moment of clarity where you realize you\u2019ve become way more inebriated than you intended. What am I doing here? Why does this jump me out of my context instead of opening the function in a sidebar? Why doesn\u2019t this pop open a console and let me test values with each function definition in some kind of reasonably scoped way? Why don\u2019t example uses of libraries contain a little collapsed and interactive debugger of the library tools running with example input?",
        "user": "UHWC9PXBL",
        "ts": "1589560594.417300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zNG56",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "2. Github\u2019s new-ish \u201cjump to definitions\u201d feature is just good enough to make reading other peoples code clearer, but it\u2019s like getting a moment of clarity where you realize you\u2019ve become way more inebriated than you intended. What am I doing here? Why does this jump me out of my context instead of opening the function in a sidebar? Why doesn\u2019t this pop open a console and let me test values with each function definition in some kind of reasonably scoped way? Why don\u2019t example uses of libraries contain a little collapsed and interactive debugger of the library tools running with example input?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589560472.416600",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "a361cb71-ab14-4c8e-a96c-208811e37391",
        "type": "message",
        "text": "ZUI is one of the key aspects of the UI for the upcoming iPad app Muse <https://museapp.com/>",
        "user": "UE0ETTCG7",
        "ts": "1589561519.417500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Muse",
                "title_link": "https://museapp.com/",
                "text": "A fluid workspace for your research, notes, creativity, and deep work. $99/year, beta testing now.",
                "fallback": "Muse",
                "image_url": "https://museapp.com/assets/muse-unfurl-2.png",
                "from_url": "https://museapp.com/",
                "image_width": 497,
                "image_height": 250,
                "image_bytes": 293810,
                "service_icon": "https://museapp.com/favicon.ico",
                "service_name": "museapp.com",
                "id": 1,
                "original_url": "https://museapp.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N81",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ZUI is one of the key aspects of the UI for the upcoming iPad app Muse "
                            },
                            {
                                "type": "link",
                                "url": "https://museapp.com/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589469455.386200",
        "parent_user_id": "UAZT04VT4",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b31a03ef-b92e-43ed-ad3d-a420b043d207",
        "type": "message",
        "text": "There's also a great piece about the research behind the design of the app, including the ZUI <https://www.inkandswitch.com/muse-studio-for-ideas.html#zooming-navigation>",
        "user": "UE0ETTCG7",
        "ts": "1589561563.417800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Muse: designing a studio for ideas",
                "title_link": "https://www.inkandswitch.com/muse-studio-for-ideas.html#zooming-navigation",
                "text": "Physical workspaces inspire a fast, fluid digital tool for creative thinking.",
                "fallback": "Muse: designing a studio for ideas",
                "image_url": "https://www.inkandswitch.com/media/muse-studio-for-ideas/muse-annotating.png",
                "from_url": "https://www.inkandswitch.com/muse-studio-for-ideas.html#zooming-navigation",
                "image_width": 444,
                "image_height": 250,
                "image_bytes": 673693,
                "service_icon": "https://www.inkandswitch.com/assets/logo-favicon-apple-touch.png",
                "service_name": "inkandswitch.com",
                "id": 1,
                "original_url": "https://www.inkandswitch.com/muse-studio-for-ideas.html#zooming-navigation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oZ2t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's also a great piece about the research behind the design of the app, including the ZUI "
                            },
                            {
                                "type": "link",
                                "url": "https://www.inkandswitch.com/muse-studio-for-ideas.html#zooming-navigation"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589469455.386200",
        "parent_user_id": "UAZT04VT4"
    },
    {
        "client_msg_id": "D6194F71-9CCF-42F9-8A39-1E24BFFD1415",
        "type": "message",
        "text": "Not at all. Productivity is just one axis along which things can be improved. I'd also say that future tools should also better enable people to be counterproductive :)\n\n(Aside: when replying to someone, please always use a thread rather than posting at the top level. That's what :thread-please: means)",
        "user": "UC2A2ARPT",
        "ts": "1589563669.420300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1589563692.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U0NG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not at all. Productivity is just one axis along which things can be improved. I'd also say that future tools should also better enable people to be counterproductive :)\n\n(Aside: when replying to someone, please always use a thread rather than posting at the top level. That's what "
                            },
                            {
                                "type": "emoji",
                                "name": "thread-please"
                            },
                            {
                                "type": "text",
                                "text": " means)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589549824.399200",
        "parent_user_id": "UNBPP291C"
    },
    {
        "client_msg_id": "f6cf484b-cdc8-4478-a720-6ea6373956ae",
        "type": "message",
        "text": "```We started this new incubator out of Mozilla in order to work with &amp; invest in developers, startups, and technology enthusiasts who are building things that will shape the internet and have a positive impact without needing to hyper focus on the bottom line. We call this our \"fix-the-internet\" incubator. ```\n<https://builders.mozilla.community/>",
        "user": "UBN9AFS0N",
        "ts": "1589565642.422100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Mozilla Builders Incubator",
                "title_link": "https://builders.mozilla.community/",
                "text": "Help Mozilla build a new generation of startups, products, services, and projects that deliver on the full promise of the internet.",
                "fallback": "Mozilla Builders Incubator",
                "image_url": "https://builders.mozilla.community/assets/img/share.jpg",
                "from_url": "https://builders.mozilla.community/",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 33912,
                "service_icon": "https://builders.mozilla.community/favicon.ico",
                "service_name": "builders.mozilla.community",
                "id": 1,
                "original_url": "https://builders.mozilla.community/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l6Y",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We started this new incubator out of Mozilla in order to work with & invest in developers, startups, and technology enthusiasts who are building things that will shape the internet and have a positive impact without needing to hyper focus on the bottom line. We call this our \"fix-the-internet\" incubator. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://builders.mozilla.community/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589565642.422100",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1589598483.427400",
        "reply_users": [
            "UFZFETUH1",
            "UJN1TAYEQ"
        ],
        "subscribed": true,
        "last_read": "1589611060.429100",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UHWC9PXBL",
                    "UT9TWSZB5",
                    "UFZFETUH1"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UTG9XLGKZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7aa0154d-cc83-4640-b389-f4b2fea0a6bd",
        "type": "message",
        "text": "I wonder how exactly they would define \"fixing the internet\". I don't really see the common denominator in \"Firefox, Wikipedia, Wordpress, DuckDuckGo, Kickstarter, GitHub, Node.js, Ethereum\". My best guess would be that it's about privacy?",
        "user": "UFZFETUH1",
        "ts": "1589568222.422600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vq/xP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder how exactly they would define \"fixing the internet\". I don't really see the common denominator in \"Firefox, Wikipedia, Wordpress, DuckDuckGo, Kickstarter, GitHub, Node.js, Ethereum\". My best guess would be that it's about privacy?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589565642.422100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "809ad157-298d-462f-8bfa-600900b3c3c9",
        "type": "message",
        "text": "And to add to that, I feel like the \"Bret Victor army\" is not quite the demographics they're looking for. Just my thoughts, still interesting! Thanks for the link.",
        "user": "UFZFETUH1",
        "ts": "1589568430.422800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RHqzb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And to add to that, I feel like the \"Bret Victor army\" is not quite the demographics they're looking for. Just my thoughts, still interesting! Thanks for the link."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589565642.422100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "grin",
                "users": [
                    "U01362XBSNA"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "B7D9214E-7C99-4CB6-8DC8-B9F6DDB72706",
        "type": "message",
        "text": "the getBoundingClientRect API feels like it was designed by a sphinx who lost its job during the recession and got pressured into learning to code",
        "user": "UHWC9PXBL",
        "ts": "1589577561.424900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1KDp6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the getBoundingClientRect API feels like it was designed by a sphinx who lost its job during the recession and got pressured into learning to code"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589560472.416600",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9b37b517-884b-4653-ba3c-660fe8de617a",
        "type": "message",
        "text": "&gt;  if the browser deleted data it could be restored from the email-server\nOnly if the server has already synced that data. Otherwise it just deleted some emails that were queued waiting to be sent and undid all the changes to my inbox.\n\nAnd even if there is no data loss, deleting the data assumes that I'm almost always online and that it's only stored locally as an optimization. I have this problem in practice with eg spotify which occasionally clears all downloaded music for some reason, usually just as we're about to drive into the mountains and out of cell phone coverage. Or when I'm abroad and don't have mobile data.\n\nThere was a proposal to allow tagging browser data as persistent so that it won't be deleted by the browser without asking the user first - that would be big improvement if it lands. But I still expect the APIs in general to be built around an online-first model of the world.",
        "user": "U71PMQ1V0",
        "ts": "1589578652.425400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U71PMQ1V0",
            "ts": "1589578664.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7VD",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " if the browser deleted data it could be restored from the email-server"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOnly if the server has already synced that data. Otherwise it just deleted some emails that were queued waiting to be sent and undid all the changes to my inbox.\n\nAnd even if there is no data loss, deleting the data assumes that I'm almost always online and that it's only stored locally as an optimization. I have this problem in practice with eg spotify which occasionally clears all downloaded music for some reason, usually just as we're about to drive into the mountains and out of cell phone coverage. Or when I'm abroad and don't have mobile data.\n\nThere was a proposal to allow tagging browser data as persistent so that it won't be deleted by the browser without asking the user first - that would be big improvement if it lands. But I still expect the APIs in general to be built around an online-first model of the world."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589352652.370700",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "76ba8489-b9e0-4933-9f31-e93f718792af",
        "type": "message",
        "text": "&gt;  This may be inconvenient, but not a big problem.\nIt's not just inconvenient, it's a symptom of an architecture that is based around turning my multi-thousand-dollar supercomputer into a dumb client for an overloaded vps somewhere on the other side of the world and on the other side of a spotty cell connection. Not because it produces a better experience - aside from the ease of distribution most web apps provide dramatically worse UX than the native apps of the 20th century - but because it's more profitable to own the users data. So it really bugs me to see that model becoming not just prevalent but invisible, to the point that people design api's for offline usage that are not usable by someone who is regularly offline.",
        "user": "U71PMQ1V0",
        "ts": "1589579119.425700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PDo",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " This may be inconvenient, but not a big problem."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt's not just inconvenient, it's a symptom of an architecture that is based around turning my multi-thousand-dollar supercomputer into a dumb client for an overloaded vps somewhere on the other side of the world and on the other side of a spotty cell connection. Not because it produces a better experience - aside from the ease of distribution most web apps provide dramatically worse UX than the native apps of the 20th century - but because it's more profitable to own the users data. So it really bugs me to see that model becoming not just prevalent but invisible, to the point that people design api's for offline usage that are not usable by someone who is regularly offline."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589352652.370700",
        "parent_user_id": "UAL7940NM",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ff01bca1-0fb5-48f5-a6e3-bd373c1e0017",
        "type": "message",
        "text": "I think that scrollbars make the most sense for documents that scroll in 1 dimension. For moving a viewport across a large 2D canvas, I prefer a UI that lets you pan in 2D using mouse movements. Like Google Maps, for example. Using two separate X and Y scrollbars to move around is clumsy by comparison. If I want to visualize where my viewport is in 2D space, I prefer a 2D map of the entire canvas that shows my current viewport position, rather than 2 separate X and Y scroll bars. If you add zooming to this (a Z axis), then again I like the Google Maps UI where you use the mouse scroll wheel or the trackpad scroll gesture to zoom in and out, in preference to a Z axis scroll bar. This is what I've mostly implemented in my Curv project.\n\nCurv is missing a \"time scrollbar\" for rewinding an animation, but I think this is a good idea. It works well in the viewer for Youtube videos.",
        "user": "UJN1TAYEQ",
        "ts": "1589579725.425900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UUl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that scrollbars make the most sense for documents that scroll in 1 dimension. For moving a viewport across a large 2D canvas, I prefer a UI that lets you pan in 2D using mouse movements. Like Google Maps, for example. Using two separate X and Y scrollbars to move around is clumsy by comparison. If I want to visualize where my viewport is in 2D space, I prefer a 2D map of the entire canvas that shows my current viewport position, rather than 2 separate X and Y scroll bars. If you add zooming to this (a Z axis), then again I like the Google Maps UI where you use the mouse scroll wheel or the trackpad scroll gesture to zoom in and out, in preference to a Z axis scroll bar. This is what I've mostly implemented in my Curv project.\n\nCurv is missing a \"time scrollbar\" for rewinding an animation, but I think this is a good idea. It works well in the viewer for Youtube videos."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589470005.387400",
        "parent_user_id": "USH01JEDQ"
    }
]