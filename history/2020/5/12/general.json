[
    {
        "client_msg_id": "b39b2fd6-bac3-4726-bc68-09638eb17ccd",
        "type": "message",
        "text": "right, I guess when you have no restrictions is hard to settle down for a particular language, for instance",
        "user": "UN9SCH5RD",
        "ts": "1589234429.341800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mg9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "right, I guess when you have no restrictions is hard to settle down for a particular language, for instance"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589228847.338400",
        "parent_user_id": "UN9SCH5RD"
    },
    {
        "client_msg_id": "51355013-61ad-4c90-b1f3-ff5e17fb7058",
        "type": "message",
        "text": "One example is that you are designing a new language on github, and a few people have graciously submitted bug reports or contributed changes. Now you have users! There are some new language features you would like to add, but what about maintaining backward compatibility. If you screw up an experimental language change, then you'll need to later go back and make a non-backward compatible change. Which would be terrible! Better get the design perfect the first time.",
        "user": "UJN1TAYEQ",
        "ts": "1589239908.342000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y9tb=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One example is that you are designing a new language on github, and a few people have graciously submitted bug reports or contributed changes. Now you have users! There are some new language features you would like to add, but what about maintaining backward compatibility. If you screw up an experimental language change, then you'll need to later go back and make a non-backward compatible change. Which would be terrible! Better get the design perfect the first time."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589228847.338400",
        "parent_user_id": "UN9SCH5RD"
    },
    {
        "client_msg_id": "0690071c-026f-4d43-a699-e20e3d41c933",
        "type": "message",
        "text": "oh, been reading these patterns on using named graphs: <https://patterns.dataincubator.org/book/data-management-patterns.html>",
        "user": "UN9SCH5RD",
        "ts": "1589251285.342400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Chapter\u00a05.\u00a0Data Management Patterns",
                "title_link": "https://patterns.dataincubator.org/book/data-management-patterns.html",
                "text": "While the statements in an RDF dataset describe a direct graph of connections between resources, the collection of triples itself has no structure: it is just a set of RDF statements. This lack of structure is not a problem for many simple RDF applications; the application code and behaviour is focused on exploring the connections in the graph. But for more complex systems that involve integrating data from many different sources it becomes useful to be able to partition a graph into a collection of smaller sub-graphs. One reason for partitioning of the graph, is to support data extraction. Creating a useful view over one or more resources in a graph, e.g. to drive a user interface. There are a number of different partitioning mechanisms that can be used and these are covered in the Bounded Description pattern described in the next chapter. A very important reason for wanting to partition a graph is to make data management simpler. By partitioning a graph according to its source or the kinds of statements it contains we can make it easier to organise and update a dataset. Managing smaller graphs gives more affordance to the data, allowing entire collections of statements to be manipulated more easily. The means by which this affordance is created is by extending the core triple model of RDF to include an extra identifier. This allows us to identify collections of RDF triples, known as Named Graphs. The patterns captured in this chapter describe different approaches for managing RDF data using Named Graphs. The patterns cover different approaches for deciding on the scope of individual graphs, as well as how to annotate individual graphs, as well as ultimately re-assembling graphs back into a useful whole. It should be apparent that Named Graphs is essentially a document-oriented approach to managing RDF data. Each document contains a collection of RDF statements. This means that we can benefit from thinking about good document design when determining the scope of each graph, as well as more general document management practices in deciding how to organise our data. The beauty of the RDF model is that it is trivial to manage a triple store as a collection of documents (graphs) whilst still driving application logic from the overall web of connections described by the statements contained in those documents. An XML database might also offer facilities for managing collections of XML documents, but there is no standard way in which the content of those documents can be viewed or manipulated. In contrast the data merging model described by RDF provides a principled way to merge data across documents ((Union Graph). This flexibility provides some powerful data management options for RDF applications.",
                "fallback": "Chapter\u00a05.\u00a0Data Management Patterns",
                "from_url": "https://patterns.dataincubator.org/book/data-management-patterns.html",
                "service_name": "patterns.dataincubator.org",
                "id": 1,
                "original_url": "https://patterns.dataincubator.org/book/data-management-patterns.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kP3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh, been reading these patterns on using named graphs: "
                            },
                            {
                                "type": "link",
                                "url": "https://patterns.dataincubator.org/book/data-management-patterns.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587929392.275700",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "81b70e55-5921-4950-b32c-f7813f8b50a6",
        "type": "message",
        "text": ":control_knobs:  Episode 47 - Max/MSP &amp; Pure Data with Miller Puckette :headphones:\n\nI heard an interview with Miller on another podcast (linked in the show notes), which focussed on the history of Max and Pd and the arc of his career. He dropped a few kernels of design-related ideas that went unexplored, so I decided to bring Miller on our show and have him go in-depth. We talked about the design of Max's scheduler (vs other kinds of realtime scheduling available in the early 80s), how he arrived at the visual \"patcher\" interface, why Pd looks and feels so spartan compared to Max, to what extent the patcher interface is actually _visual_ as opposed to just a fancier CLI, and other notions that'd be interesting to folks designing their own live/visual programming environments.\n\nThis episode is the shortest, tightest interview I've done yet. I'm also slowly dialling-in the sonic identity that I'd like the show to have. Not there yet, but getting closer.\n\nEnjoy! And please help spread the word about the show if you have a good way to do so.\n\nShow notes &amp; detailed transcript: <https://futureofcoding.org/episodes/047>",
        "user": "UC2A2ARPT",
        "ts": "1589265827.352600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1589291797.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q1u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "control_knobs"
                            },
                            {
                                "type": "text",
                                "text": "  Episode 47 - Max/MSP & Pure Data with Miller Puckette "
                            },
                            {
                                "type": "emoji",
                                "name": "headphones"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI heard an interview with Miller on another podcast (linked in the show notes), which focussed on the history of Max and Pd and the arc of his career. He dropped a few kernels of design-related ideas that went unexplored, so I decided to bring Miller on our show and have him go in-depth. We talked about the design of Max's scheduler (vs other kinds of realtime scheduling available in the early 80s), how he arrived at the visual \"patcher\" interface, why Pd looks and feels so spartan compared to Max, to what extent the patcher interface is actually "
                            },
                            {
                                "type": "text",
                                "text": "visual",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as opposed to just a fancier CLI, and other notions that'd be interesting to folks designing their own live/visual programming environments.\n\nThis episode is the shortest, tightest interview I've done yet. I'm also slowly dialling-in the sonic identity that I'd like the show to have. Not there yet, but getting closer.\n\nEnjoy! And please help spread the word about the show if you have a good way to do so.\n\nShow notes & detailed transcript: "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.org/episodes/047"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589265827.352600",
        "reply_count": 13,
        "reply_users_count": 5,
        "latest_reply": "1589611060.429100",
        "reply_users": [
            "UBN9AFS0N",
            "UC2A2ARPT",
            "UUQ2EQW21",
            "UJ6LDMMN0",
            "UA14TGLTC"
        ],
        "subscribed": true,
        "last_read": "1589611060.429100",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUQ2EQW21",
                    "UN9SCH5RD",
                    "UDQBTJ211",
                    "U8A5MS6R1",
                    "UJN1TAYEQ",
                    "U013351J6SK",
                    "UML4ZEKDK",
                    "U013HU44GLS",
                    "UPRSF90CW",
                    "UBSMEUXAA",
                    "U013JEPTZCK",
                    "U0123H7JRDM"
                ],
                "count": 12
            },
            {
                "name": "tada",
                "users": [
                    "UUQ2EQW21",
                    "UBN9AFS0N",
                    "UJBAJNFLK",
                    "UAJ9DV971",
                    "ULK0Z4MPV",
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 7
            },
            {
                "name": "heart",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "13351f6d-89cc-4b91-b878-b4da22de832c",
        "type": "message",
        "text": "As so often, that's a comment from a software professional who seems quite ignorant about what he criticizes: research. The statement that \"*for thirteen years, taxpayer funding from the MRC went to Ferguson and his team, and all it produced was code...\"* is very wrong. Computational scientists all around the world still struggle to get funding for software development. Public research funding is attributed for producing research papers, not software. And people who invest too much time on software development don't get jobs in academia. And that's a big part of the problem. Decision makers in public research have only very recently begun to understand that code is both and important tool for doing science and an important output of research. And I hope that the story of this model will help to accelerate this process.",
        "user": "UJBAJNFLK",
        "ts": "1589279530.353300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W66c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As so often, that's a comment from a software professional who seems quite ignorant about what he criticizes: research. The statement that \""
                            },
                            {
                                "type": "text",
                                "text": "for thirteen years, taxpayer funding from the MRC went to Ferguson and his team, and all it produced was code...\" ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "is very wrong. Computational scientists all around the world still struggle to get funding for software development. Public research funding is attributed for producing research papers, not software. And people who invest too much time on software development don't get jobs in academia. And that's a big part of the problem. Decision makers in public research have only very recently begun to understand that code is both and important tool for doing science and an important output of research. And I hope that the story of this model will help to accelerate this process."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0ba1c44d-b628-4728-b03d-88825f5dca3f",
        "type": "message",
        "text": "on the front page of HN",
        "user": "UBN9AFS0N",
        "ts": "1589288272.354000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OzRyC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "on the front page of HN"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589265827.352600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "beers",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "a9ad188d-b1e0-490e-94c5-a2a5d1ed4df7",
        "type": "message",
        "text": "His bio said he was a virologist and did computational work so I think the useful content of that post is \u201csomeone doing very similar work has concerns about Ferguson\u2019s model\u201d, which is more interesting than \u201csoftware professionals in an unrelated area do\u201d.",
        "user": "UKJGU23KP",
        "ts": "1589295235.355800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UKJGU23KP",
            "ts": "1589295257.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "39qf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "His bio said he was a virologist and did computational work so I think the useful content of that post is \u201csomeone doing very similar work has concerns about Ferguson\u2019s model\u201d, which is more interesting than \u201csoftware professionals in an unrelated area do\u201d."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1588877031.220900",
        "parent_user_id": "UDQBTJ211"
    },
    {
        "client_msg_id": "b8d5cb90-d434-4225-8c29-9efb5cfe210e",
        "type": "message",
        "text": "This surpassed the previous 1-day download record by 62%! Glad it's getting spread around a bit.",
        "user": "UC2A2ARPT",
        "ts": "1589312503.357400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1589379483.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aNr1y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This surpassed the previous 1-day download record by 62%! Glad it's getting spread around a bit."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1589265827.352600",
        "parent_user_id": "UC2A2ARPT"
    }
]