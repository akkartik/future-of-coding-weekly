[
    {
        "client_msg_id": "c721ed01-0456-4b7f-85e1-38c7d9aa0a0d",
        "type": "message",
        "text": "I agree with most of what you say, but keep wondering of what exactly you mean by \"code\". Most often that term is used for algorithms and data structures expressed in a programming language. However, many scientific ideas are not of that kind. The most powerful scientific models we have are expressed as specifications, not algorithms, and programming languages are not a good medium to express them.\n\n<@U8A5MS6R1> just shared a paper by Terry Winograd on Twitter (<https://twitter.com/chatur_shalabh/status/1331410504204488706>) that addresses this point very well (and is 40 years old!). It describes \"Three domains of descriptions\" of software systems. Scientific concepts, models, and ideas belong to the \"subject domain\", whereas code is designed for the \"domain of implementation\".\n\nHowever, if you define \"code\" in a wider sense that includes formal languages designed for other purposes than \"programming\", then I agree with everything you say :wink:",
        "user": "UJBAJNFLK",
        "ts": "1606298304.273800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/chatur_shalabh|@chatur_shalabh>: \u201cA programming system needs to provide a powerful set of mechanisms for building up and maintaining \"world views\"\u2014coherent sets of description structures in the subject domain that are independent of any implementation.\u201d\n\n\u2014 Beyond Programming Languages\n<https://john.cs.olemiss.edu/~dwilkins/Seminar/S05/winogradPL.pdf>",
                "ts": 1606267975,
                "author_name": "Shalabh",
                "author_link": "https://twitter.com/chatur_shalabh/status/1331410504204488706",
                "author_icon": "https://pbs.twimg.com/profile_images/1168926214343536641/wNcbqYu0_normal.jpg",
                "author_subname": "@chatur_shalabh",
                "text": "\u201cA programming system needs to provide a powerful set of mechanisms for building up and maintaining \"world views\"\u2014coherent sets of description structures in the subject domain that are independent of any implementation.\u201d\n\n\u2014 Beyond Programming Languages\n<https://john.cs.olemiss.edu/~dwilkins/Seminar/S05/winogradPL.pdf>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/chatur_shalabh/status/1331410504204488706",
                "id": 1,
                "original_url": "https://twitter.com/chatur_shalabh/status/1331410504204488706",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8gA+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with most of what you say, but keep wondering of what exactly you mean by \"code\". Most often that term is used for algorithms and data structures expressed in a programming language. However, many scientific ideas are not of that kind. The most powerful scientific models we have are expressed as specifications, not algorithms, and programming languages are not a good medium to express them.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " just shared a paper by Terry Winograd on Twitter ("
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/chatur_shalabh/status/1331410504204488706"
                            },
                            {
                                "type": "text",
                                "text": ") that addresses this point very well (and is 40 years old!). It describes \"Three domains of descriptions\" of software systems. Scientific concepts, models, and ideas belong to the \"subject domain\", whereas code is designed for the \"domain of implementation\".\n\nHowever, if you define \"code\" in a wider sense that includes formal languages designed for other purposes than \"programming\", then I agree with everything you say "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606248562.273000",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "3ae3abf6-c92a-4a2b-914f-51ee5ff8665d",
        "type": "message",
        "text": "Excellent, thanks for the reference, <@UJBAJNFLK>! Sitting down with this paper this AM. of course you\u2019re right - I\u2019ll plug your Leibniz work here for anyone else following this thread <https://github.com/khinsen/leibniz>",
        "user": "U01EHAE9D0W",
        "ts": "1606322842.274200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "khinsen/leibniz",
                "title_link": "https://github.com/khinsen/leibniz",
                "text": "A Digital Scientific Notation. Contribute to khinsen/leibniz development by creating an account on GitHub.",
                "fallback": "GitHub: khinsen/leibniz",
                "thumb_url": "https://avatars1.githubusercontent.com/u/94934?s=400&v=4",
                "from_url": "https://github.com/khinsen/leibniz",
                "thumb_width": 157,
                "thumb_height": 157,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/khinsen/leibniz"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XaPS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excellent, thanks for the reference, "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": "! Sitting down with this paper this AM. of course you\u2019re right - I\u2019ll plug your Leibniz work here for anyone else following this thread "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/khinsen/leibniz"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606248562.273000",
        "parent_user_id": "U01EHAE9D0W"
    },
    {
        "client_msg_id": "d7c45386-b129-44eb-bf59-2ac7bfa7a9d6",
        "type": "message",
        "text": "I\u2019m going to start sharing these physics-as-code essays that can\u2019t animate themselves yet, so in part I was trying to prepare folks for the knee-jerk \u201cwait, how is all this code he\u2019s sending us any better than reading the original math?\u201d",
        "user": "U01EHAE9D0W",
        "ts": "1606322938.274500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S6fg1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m going to start sharing these physics-as-code essays that can\u2019t animate themselves yet, so in part I was trying to prepare folks for the knee-jerk \u201cwait, how is all this code he\u2019s sending us any better than reading the original math?\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606248562.273000",
        "parent_user_id": "U01EHAE9D0W",
        "reactions": [
            {
                "name": "wink",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "U8A5MS6R1"
                ],
                "count": 2
            }
        ]
    }
]