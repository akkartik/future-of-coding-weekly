[
    {
        "client_msg_id": "900f6e07-8b13-4bec-b1a9-a605e4580866",
        "type": "message",
        "text": "I don't see them as mutually exclusive: we need \"thinkers\" and \"tinkerers\" in equal numbers, and the fact is that the intersection between those two groups is larger than it might seem! The corollary to this is that building the future of programming is not a zero-sum game: for someone on Handmade to win doesn't mean anyone in FoC has to lose, and vice-versa. There are always going to be folks who are more willing to engage in building  projects and showing them off, and we provide great platforms to do so in this community, but we have to be conscious that there are just as many folks whose joy lies in the more academic or philosophical pursuits. Sure, these camps are sometimes at odds with each other, but in order to push the needle forward, we need them both!",
        "user": "UG0EL18H3",
        "ts": "1605654856.028800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4dzQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't see them as mutually exclusive: we need \"thinkers\" and \"tinkerers\" in equal numbers, and the fact is that the intersection between those two groups is larger than it might seem! The corollary to this is that building the future of programming is not a zero-sum game: for someone on Handmade to win doesn't mean anyone in FoC has to lose, and vice-versa. There are always going to be folks who are more willing to engage in building  projects and showing them off, and we provide great platforms to do so in this community, but we have to be conscious that there are just as many folks whose joy lies in the more academic or philosophical pursuits. Sure, these camps are sometimes at odds with each other, but in order to push the needle forward, we need them both!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605529303.475100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "a0ca0be8-3484-4f0f-9c11-7166c9203a06",
        "type": "message",
        "text": "<@UFB8STN7K>'s expressiveness benchmark[1] reminds me:\n\nWatching this talk helped me realize why I never really got the Felleisen paper: their notion of \"expressiveness\" is almost diametrically opposite what I (and, I think, most people) associate with the term.\n\n<https://pwlconf.org/2019/shriram-krishnamurthi>\n\nAs an almost trivial example, they say that a `for` loop is not more expressive than a `while` loop, because it can be rewritten with a local transform (Lisp macro). I consider it _more_ expressive because it creates a new structure for loops that allows us to reason about updates separately from the body. Lisp macros are powerful because they allow my program to get progressively more expressive. Isn't this the normal meaning of the term? A more expressive language helps you express intent more tersely.\n\nThe paper is cool. But they need to get off my lawn and find a new term for themselves. See also <https://en.wikipedia.org/wiki/Expressive_power_%28computer_science%29#Information_description>\n\n[1] <https://willcrichton.net/expressiveness-benchmark>",
        "user": "UCUSW7WVD",
        "ts": "1605670028.033900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1605735146.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "It3MC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": "'s expressiveness benchmark[1] reminds me:\n\nWatching this talk helped me realize why I never really got the Felleisen paper: their notion of \"expressiveness\" is almost diametrically opposite what I (and, I think, most people) associate with the term.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://pwlconf.org/2019/shriram-krishnamurthi"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAs an almost trivial example, they say that a "
                            },
                            {
                                "type": "text",
                                "text": "for",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " loop is not more expressive than a "
                            },
                            {
                                "type": "text",
                                "text": "while",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " loop, because it can be rewritten with a local transform (Lisp macro). I consider it "
                            },
                            {
                                "type": "text",
                                "text": "more",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " expressive because it creates a new structure for loops that allows us to reason about updates separately from the body. Lisp macros are powerful because they allow my program to get progressively more expressive. Isn't this the normal meaning of the term? A more expressive language helps you express intent more tersely.\n\nThe paper is cool. But they need to get off my lawn and find a new term for themselves. See also "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Expressive_power_%28computer_science%29#Information_description"
                            },
                            {
                                "type": "text",
                                "text": "\n\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https://willcrichton.net/expressiveness-benchmark"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "reply_count": 14,
        "reply_users_count": 4,
        "latest_reply": "1605803832.053300",
        "reply_users": [
            "UN9SCH5RD",
            "UCUSW7WVD",
            "UFZFETUH1",
            "UA14TGLTC"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "6efb6ddf-f43d-4140-94e9-d9d444728218",
        "type": "message",
        "text": "the whole point of the paper and the talk is about defining expressiveness in a mathematical rigorous and unambiguous way, so while you think Felleisen redefined an existing word, he probably thinks the definition he found is way more precise and useful",
        "user": "UN9SCH5RD",
        "ts": "1605681578.034300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dIzP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the whole point of the paper and the talk is about defining expressiveness in a mathematical rigorous and unambiguous way, so while you think Felleisen redefined an existing word, he probably thinks the definition he found is way more precise and useful"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "6c54b239-a58e-48b3-9204-86c0ac3ee2db",
        "type": "message",
        "text": "in any case I don't think you need to worry too much about your lawn because I suspect most people don't use Felleisen's rigorous meaning of expressiveness when they talk about languages :slightly_smiling_face:",
        "user": "UN9SCH5RD",
        "ts": "1605681632.034500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GcoC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in any case I don't think you need to worry too much about your lawn because I suspect most people don't use Felleisen's rigorous meaning of expressiveness when they talk about languages "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "8425a09c-2379-47cd-bdd5-d278580e1dcb",
        "type": "message",
        "text": "I was kidding about the lawn, hopefully that was obvious :slightly_smiling_face: I don't really have a lawn if I go toe to toe against Shriram Krishnamurthy. This thread was an effort to spread the word on what they did. Hopefully by highlighting what got in the way for me so others who share the misconception don't spend as much time not getting it.\n\nParticularly when doing a retrospective, it feels like a missed opportunity to not point out the two possible meanings. (I disagree that Shriram means what I mean, just in a more precise way. The two interpretations here have little in common. Sometimes we need to contrast two Lisp macros and debate which is more expressive, more clearly conveying intention. This paper wouldn't help there.)",
        "user": "UCUSW7WVD",
        "ts": "1605682040.034800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1605682087.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FUd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was kidding about the lawn, hopefully that was obvious "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " I don't really have a lawn if I go toe to toe against Shriram Krishnamurthy. This thread was an effort to spread the word on what they did. Hopefully by highlighting what got in the way for me so others who share the misconception don't spend as much time not getting it.\n\nParticularly when doing a retrospective, it feels like a missed opportunity to not point out the two possible meanings. (I disagree that Shriram means what I mean, just in a more precise way. The two interpretations here have little in common. Sometimes we need to contrast two Lisp macros and debate which is more expressive, more clearly conveying intention. This paper wouldn't help there.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UAHHWT22U"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9cf1074d-4438-4e7e-a708-e2bc56126ecb",
        "type": "message",
        "text": "ah yes I think he dedicates all the extent of 30 seconds or so at the very end to mention \"human aspects are important too\" :stuck_out_tongue:",
        "user": "UN9SCH5RD",
        "ts": "1605682374.035100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5HZ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ah yes I think he dedicates all the extent of 30 seconds or so at the very end to mention \"human aspects are important too\" "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "8f05b164-ed1f-4838-8949-71cfa7582af0",
        "type": "message",
        "text": "55:30 (<https://youtu.be/43XaZEn2aLc?t=3329>)",
        "user": "UN9SCH5RD",
        "ts": "1605682483.035300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UN9SCH5RD",
            "ts": "1605682488.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "39vNi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "55:30 ("
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/43XaZEn2aLc?t=3329"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "05dcaa2e-c964-4a7e-9dcc-09947982c621",
        "type": "message",
        "text": "I took it as a tool for language designers, to be used something like: \"go crazy with your features as long as they don't increase expressive power (while loops! for loops! do/while loops!), but as soon as your feature increases expressive power, be very careful in adding new stuff\"",
        "user": "UN9SCH5RD",
        "ts": "1605682938.035700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0J24",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I took it as a tool for language designers, to be used something like: \"go crazy with your features as long as they don't increase expressive power (while loops! for loops! do/while loops!), but as soon as your feature increases expressive power, be very careful in adding new stuff\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "d22f798c-8837-401e-ac3c-dc969d2f55b3",
        "type": "message",
        "text": "also as an end user I always want to use the most powerful tool available, but according to this definition I could be making my life easier by finding a language with less expressive power that still is able to accomplish the given task",
        "user": "UN9SCH5RD",
        "ts": "1605682981.035900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qFh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also as an end user I always want to use the most powerful tool available, but according to this definition I could be making my life easier by finding a language with less expressive power that still is able to accomplish the given task"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "7dc1a34d-debd-434f-964b-fd95a7299cfd",
        "type": "message",
        "text": "Particularly if you have existing expectations.\n\nIf you're starting from scratch with a new system, you want it to be as powerful as possible. But _once you start using it_, moving the goalposts often feels hostile.",
        "user": "UCUSW7WVD",
        "ts": "1605683220.036300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1605684958.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bTE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Particularly if you have existing expectations.\n\nIf you're starting from scratch with a new system, you want it to be as powerful as possible. But "
                            },
                            {
                                "type": "text",
                                "text": "once you start using it",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", moving the goalposts often feels hostile."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "1f275e2e-5f33-4dc1-a2a7-607b134cb4b4",
        "type": "message",
        "text": "I'd propose to use the two terms \"expressive\" and \"powerful\"",
        "user": "UFZFETUH1",
        "ts": "1605689054.036600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tQeG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd propose to use the two terms \"expressive\" and \"powerful\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e32ae628-b3ba-443e-9ba1-4e457b91b699",
        "type": "message",
        "text": "Expressive is the code giving you more information, more to reason about. E.g. for is more expressive than while.\n\nHowever, while is more powerful than if, as it empowers the user: you can do more with it.",
        "user": "UFZFETUH1",
        "ts": "1605689121.036800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GiZR8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Expressive is the code giving you more information, more to reason about. E.g. for is more expressive than while.\n\nHowever, while is more powerful than if, as it empowers the user: you can do more with it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "a346795e-6973-4413-9ab7-11c2c1087d4f",
        "type": "message",
        "text": "It's the other way around? `while` and `for` are of equal power because you can locally rewrite one into the other. The paper is really discussing power. \"Local rewrites\" is a finer gradation of power than the leap from context-sensitive to Turing-complete languages. But it feels like it belongs on that spectrum.",
        "user": "UCUSW7WVD",
        "ts": "1605714820.037400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1605715095.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9iV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's the other way around? "
                            },
                            {
                                "type": "text",
                                "text": "while",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "for",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are of equal power because you can locally rewrite one into the other. The paper is really discussing power. \"Local rewrites\" is a finer gradation of power than the leap from context-sensitive to Turing-complete languages. But it feels like it belongs on that spectrum."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605670028.033900",
        "parent_user_id": "UCUSW7WVD"
    }
]