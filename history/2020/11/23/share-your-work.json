[
    {
        "client_msg_id": "9da636ed-e2ba-4e3c-a7e0-2fdbbd1ef118",
        "type": "message",
        "text": "I've been experimenting with RDF and graph databases. I think RDF is a great basis for content management systems. I recently found about TerminusDB which on top of the RDF model provides a git-like storage system (so data can be branched and merged, reverted, etc.). I came up with a little proof of concept for rendering content snippets embedding triple data <https://github.com/EmmanuelOga/NeonTetra>",
        "user": "UN9SCH5RD",
        "ts": "1606107649.267700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "EmmanuelOga/NeonTetra",
                "title_link": "https://github.com/EmmanuelOga/NeonTetra",
                "text": "A simple proof of concept of storing content on TerminusDB for a CMS-like system. - EmmanuelOga/NeonTetra",
                "fallback": "GitHub: EmmanuelOga/NeonTetra",
                "thumb_url": "https://avatars3.githubusercontent.com/u/13634?s=400&v=4",
                "from_url": "https://github.com/EmmanuelOga/NeonTetra",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/EmmanuelOga/NeonTetra"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y7G7r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been experimenting with RDF and graph databases. I think RDF is a great basis for content management systems. I recently found about TerminusDB which on top of the RDF model provides a git-like storage system (so data can be branched and merged, reverted, etc.). I came up with a little proof of concept for rendering content snippets embedding triple data "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/EmmanuelOga/NeonTetra"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606107649.267700",
        "reply_count": 7,
        "reply_users_count": 3,
        "latest_reply": "1606444842.278400",
        "reply_users": [
            "UN9SCH5RD",
            "U013ZLJARC7",
            "UA14TGLTC"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UJBAJNFLK",
                    "UHWC9PXBL",
                    "UPX3PH28N"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "U8A5MS6R1"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "1e749f36-3f70-4899-ab17-578239ecbd13",
        "type": "message",
        "text": "been thinking a little of what an `/admin` ui for a system like this could work... the two options I came up with is a form-heavy UI allowing users to create new structures and then fill them. This is what a lot of the newish \"Headless CMS\"s do I think. The other option I came up with is to write some special widgets for a Notebook like Jupyter. Given I'm doing this for Personal Information Management I would probably adopt the Notebook UI for a start :slightly_smiling_face:",
        "user": "UN9SCH5RD",
        "ts": "1606107910.267900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1Yr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "been thinking a little of what an "
                            },
                            {
                                "type": "text",
                                "text": "/admin",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ui for a system like this could work... the two options I came up with is a form-heavy UI allowing users to create new structures and then fill them. This is what a lot of the newish \"Headless CMS\"s do I think. The other option I came up with is to write some special widgets for a Notebook like Jupyter. Given I'm doing this for Personal Information Management I would probably adopt the Notebook UI for a start "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606107649.267700",
        "parent_user_id": "UN9SCH5RD"
    },
    {
        "client_msg_id": "42b6a3fa-3fe7-4461-869f-51221c152cf9",
        "type": "message",
        "text": "Will probably start exploring Jupyter-Lab",
        "user": "UN9SCH5RD",
        "ts": "1606107935.268100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iuu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Will probably start exploring Jupyter-Lab"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606107649.267700",
        "parent_user_id": "UN9SCH5RD"
    },
    {
        "client_msg_id": "9e6b4348-533a-45c8-ae02-b94b3c5e1449",
        "type": "message",
        "text": "<@UUB7RA7PF> Your tool will go a long way towards removing some pain points when doing web page creation. The problem I was trying to get at is that when the hierarchies start forming, things become really hard to instrument without reaching in through a lot of levels. Like there would be a need to put data in and take it out by going through a lot of cycles. That aspect also spawns this other related idea that things will become polymorphic in the presence of particular contexts. These two then gets braided together and it becomes a bit too hard to instrument with text based programming. I\u2019m probably not making myself particularly clear there unless you have bumped into the problem.\n\nTree like hierarchies alleviate this problem to a certain level except when the cyclicality becomes a dominant mode in the interface. What I find cool with your start is that you have a ground where you can have the compiler generate the dependency graph and make it a first class entity to understand the (cyclomatic) complexity of your codebase.",
        "user": "UDKTZSD6H",
        "ts": "1606117029.268500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pML",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUB7RA7PF"
                            },
                            {
                                "type": "text",
                                "text": " Your tool will go a long way towards removing some pain points when doing web page creation. The problem I was trying to get at is that when the hierarchies start forming, things become really hard to instrument without reaching in through a lot of levels. Like there would be a need to put data in and take it out by going through a lot of cycles. That aspect also spawns this other related idea that things will become polymorphic in the presence of particular contexts. These two then gets braided together and it becomes a bit too hard to instrument with text based programming. I\u2019m probably not making myself particularly clear there unless you have bumped into the problem.\n\nTree like hierarchies alleviate this problem to a certain level except when the cyclicality becomes a dominant mode in the interface. What I find cool with your start is that you have a ground where you can have the compiler generate the dependency graph and make it a first class entity to understand the (cyclomatic) complexity of your codebase."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605630429.212300",
        "parent_user_id": "UUB7RA7PF"
    },
    {
        "client_msg_id": "f6bfd49e-438b-40ad-8cd1-bc2b7146f848",
        "type": "message",
        "text": "RDF has spent the last 20 years as a great data format without any compelling UI work. If you can make it usable for normal people you'll have done a fine service to the world. :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1606123324.268800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V1g21",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "RDF has spent the last 20 years as a great data format without any compelling UI work. If you can make it usable for normal people you'll have done a fine service to the world. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606107649.267700",
        "parent_user_id": "UN9SCH5RD",
        "reactions": [
            {
                "name": "crossed_fingers",
                "users": [
                    "UAHHWT22U",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "star-struck",
                "users": [
                    "UN9SCH5RD"
                ],
                "count": 1
            }
        ]
    }
]