[
    {
        "client_msg_id": "e9667834-50bd-4dfb-a291-deb3be648bd2",
        "type": "message",
        "text": "Yep it's specialized. I wrote something similar for Maya/Max/Blender/Unreal Engine when I was at *<https://quixel.com/bridge|Quixel>*, but the engineering team we now have at Polygonflow is much, much more skilled than I am, and actually stores the geometry data in memory instead of sending it via sockets, and they only use sockets to help softwares communicate with each other, know when to import something, when to send something, etc...\n\nSupport for a new program is actually pretty simple; but it gets more complicated on open source softwares like Blender that are under the GPLv3 license. In such cases, you're lucky if the software gives you access to the python module ctypes, which we use to access the pointers of internal Blender objects, and communicate with DLLs without ever writing a big chunk of code in Blender itself :grin:",
        "user": "U018HK8QM2R",
        "ts": "1606522380.280100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U018HK8QM2R",
            "ts": "1606523100.000000"
        },
        "attachments": [
            {
                "service_name": "Quixel",
                "title": "Quixel Bridge",
                "title_link": "https://quixel.com/bridge",
                "text": "Quixel Bridge connects Megascans to all your favorite tools. Browse, manage, and export assets, straight from your desktop.",
                "fallback": "Quixel: Quixel Bridge",
                "thumb_url": "https://cdn.quixel.com/quixel/thumbs/page-thumb-bridge.jpg",
                "from_url": "https://quixel.com/bridge",
                "thumb_width": 1200,
                "thumb_height": 630,
                "service_icon": "https://quixel.com/favicon.png",
                "id": 1,
                "original_url": "https://quixel.com/bridge"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3D/QT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep it's specialized. I wrote something similar for Maya/Max/Blender/Unreal Engine when I was at "
                            },
                            {
                                "type": "link",
                                "url": "https://quixel.com/bridge",
                                "text": "Quixel",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but the engineering team we now have at Polygonflow is much, much more skilled than I am, and actually stores the geometry data in memory instead of sending it via sockets, and they only use sockets to help softwares communicate with each other, know when to import something, when to send something, etc...\n\nSupport for a new program is actually pretty simple; but it gets more complicated on open source softwares like Blender that are under the GPLv3 license. In such cases, you're lucky if the software gives you access to the python module ctypes, which we use to access the pointers of internal Blender objects, and communicate with DLLs without ever writing a big chunk of code in Blender itself "
                            },
                            {
                                "type": "emoji",
                                "name": "grin"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606436775.277500",
        "parent_user_id": "U018HK8QM2R",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    }
]