[
    {
        "client_msg_id": "2d504811-182a-4b23-8be5-351758bf3274",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=TkPy7aLTtAw|Paradigms Without Progress: Kuhnian Reflections on Programming Practice>\n\nBorrowing from Thomas Kuhn, Robert Floyd introduced the notion of a programming paradigm. Today, paradigms are constantly debated. What might Kuhn tell us about this sad state of affairs? What can Programming learn from Philosophy?\n\nPresented at REBASE, part of SPLASH 2020 By Jimmy Miller",
        "user": "UBN9AFS0N",
        "ts": "1605873680.264700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Paradigms Without Progress: Kuhnian Reflections on Programming Practice",
                "title_link": "https://www.youtube.com/watch?v=TkPy7aLTtAw",
                "author_name": "ACM SIGPLAN",
                "author_link": "https://www.youtube.com/channel/UCwG9512Wm7jSS6Iqshz4Dpg",
                "thumb_url": "https://i.ytimg.com/vi/TkPy7aLTtAw/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Paradigms Without Progress: Kuhnian Reflections on Programming Practice",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/TkPy7aLTtAw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=TkPy7aLTtAw",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=TkPy7aLTtAw"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AdT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=TkPy7aLTtAw",
                                "text": "Paradigms Without Progress: Kuhnian Reflections on Programming Practice"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBorrowing from Thomas Kuhn, Robert Floyd introduced the notion of a programming paradigm. Today, paradigms are constantly debated. What might Kuhn tell us about this sad state of affairs? What can Programming learn from Philosophy?\n\nPresented at REBASE, part of SPLASH 2020 By Jimmy Miller"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605873680.264700",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1605901450.268500",
        "reply_users": [
            "UK3LH8CF5",
            "UBN9AFS0N",
            "UHWC9PXBL"
        ],
        "subscribed": true,
        "last_read": "1605901450.268500"
    },
    {
        "client_msg_id": "7526f83e-d060-4c76-aeed-6be63000b683",
        "type": "message",
        "text": "Thanks for posting. Was glad to be able to give this talk.",
        "user": "UK3LH8CF5",
        "ts": "1605879606.264900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7uq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for posting. Was glad to be able to give this talk."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605873680.264700",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "clap::skin-tone-4",
                "users": [
                    "UBN9AFS0N",
                    "UAZT04VT4"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "7c5da127-0d59-443c-831d-130201763976",
        "type": "message",
        "text": "Thanks for giving it! :slightly_smiling_face:",
        "user": "UBN9AFS0N",
        "ts": "1605880589.265200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xEm9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for giving it! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605873680.264700",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0966BBBC-CD75-44A8-BD1E-3269CA786367",
        "type": "message",
        "text": "<https://twitter.com/assaf/status/1329833651463475202|https://twitter.com/assaf/status/1329833651463475202>",
        "user": "USH01JEDQ",
        "ts": "1605894660.265600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/assaf|@assaf>: How to Recalculate a Spreadsheet <https://lord.io/blog/2020/spreadsheets/> if you're curious about dependency graphs like spreadsheets and build systems <https://pbs.twimg.com/media/EnSEqKkWMAI19lM.jpg>",
                "ts": 1605892024,
                "author_name": "Assaf \ud83d\ude37 Mask up!",
                "author_link": "https://twitter.com/assaf/status/1329833651463475202",
                "author_icon": "https://pbs.twimg.com/profile_images/1248030964468420608/yLWOoJvU_normal.jpg",
                "author_subname": "@assaf",
                "text": "How to Recalculate a Spreadsheet <https://lord.io/blog/2020/spreadsheets/> if you're curious about dependency graphs like spreadsheets and build systems <https://pbs.twimg.com/media/EnSEqKkWMAI19lM.jpg>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/assaf/status/1329833651463475202",
                "image_url": "https://pbs.twimg.com/media/EnSEqKkWMAI19lM.jpg",
                "image_width": 1200,
                "image_height": 327,
                "image_bytes": 22865,
                "id": 1,
                "original_url": "https://twitter.com/assaf/status/1329833651463475202",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fvys",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/assaf/status/1329833651463475202",
                                "text": "https://twitter.com/assaf/status/1329833651463475202"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605894660.265600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1605901639.269300",
        "reply_users": [
            "UHWC9PXBL"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "U015V233CFL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "73B2B89D-FCEA-4C55-B616-F4D339E5F931",
        "type": "message",
        "text": "oh man that\u2019s cool!",
        "user": "UHWC9PXBL",
        "ts": "1605901109.266400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yey3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh man that\u2019s cool!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605766855.258100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "E0F9E2D2-F8EB-49EB-9E60-98080DFB7041",
        "type": "message",
        "text": "i would love to be able to do hydralike stuff in text mode if i could still see every intermediate step",
        "user": "UHWC9PXBL",
        "ts": "1605901148.267600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wuEPn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i would love to be able to do hydralike stuff in text mode if i could still see every intermediate step"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605766855.258100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "0eafdeff-ad4e-4ee5-980e-0d1cad5ded02",
        "type": "message",
        "text": "That's an interesting problem. How to visualize partial results within a high-cardinality loop.",
        "user": "UCUSW7WVD",
        "ts": "1605901267.267800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/I8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's an interesting problem. How to visualize partial results within a high-cardinality loop."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605766855.258100",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "6BC8A329-B2DE-4304-A572-D0F83159927D",
        "type": "message",
        "text": "<@UK3LH8CF5> didn\u2019t realize you were in the slack! i love meander!",
        "user": "UHWC9PXBL",
        "ts": "1605901450.268500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r4Ad=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " didn\u2019t realize you were in the slack! i love meander!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605873680.264700",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UK3LH8CF5"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "DA02E3EB-0DD6-4D2D-BF82-E55C0E579C72",
        "type": "message",
        "text": "great explanation of topological sorting (among other things)! thanks for sharing!",
        "user": "UHWC9PXBL",
        "ts": "1605901639.269300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1y=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "great explanation of topological sorting (among other things)! thanks for sharing!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605894660.265600",
        "parent_user_id": "USH01JEDQ",
        "reactions": [
            {
                "name": "beer",
                "users": [
                    "USH01JEDQ"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2ec7d205-e7fe-4907-b37f-be1b562237cc",
        "type": "message",
        "text": "Indeed, I recall some of the computational biology problems were solvable using search algorithms that Google had worked on.  I suspect the amount of work that isn't duplicated makes up for that which is :wink:",
        "user": "UUQ2EQW21",
        "ts": "1605902375.270300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9a9Od",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed, I recall some of the computational biology problems were solvable using search algorithms that Google had worked on.  I suspect the amount of work that isn't duplicated makes up for that which is "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605764661.257300",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f99ebeb9-4ed2-4bd8-bfe0-8cbb6fbfd6ad",
        "type": "message",
        "text": "The book \"Future of Text\" is out, with contributions from Alan Kay, Ted Nelson, and many others <https://futuretextpublishing.com/future-of-text-2020-download/>",
        "user": "UAHHWT22U",
        "ts": "1605905343.271500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7lc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The book \"Future of Text\" is out, with contributions from Alan Kay, Ted Nelson, and many others "
                            },
                            {
                                "type": "link",
                                "url": "https://futuretextpublishing.com/future-of-text-2020-download/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605905343.271500",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1606082016.277400",
        "reply_users": [
            "UBM0S2AN4",
            "UAHHWT22U",
            "U01AD80KMLK"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U01DUNFS2N4",
                    "USH01JEDQ",
                    "UFB8STN7K",
                    "U015V233CFL"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "414728c4-8a83-4dc4-b2ed-2c5f8536ddd6",
        "type": "message",
        "text": "Region based memory management <https://vale.dev/|https://vale.dev/>",
        "user": "U019CPED6T1",
        "ts": "1605908441.272200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dL9pk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Region based memory management "
                            },
                            {
                                "type": "link",
                                "url": "https://vale.dev/",
                                "text": "https://vale.dev/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605908441.272200",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1605978507.276300",
        "reply_users": [
            "U01661S9F34",
            "U019CPED6T1"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "1cc5548b-4849-495e-b184-b2b46e8f2e62",
        "type": "message",
        "text": "Nim tried this, the feature still exists, but ended up considering it a dead end: <https://forum.nim-lang.org/t/6930>\n\nNot to say anything one way or the other about Vale's implementation of the feature, just pointing out some previous efforts in this space for context.",
        "user": "U01661S9F34",
        "ts": "1605910198.272400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nvJhI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nim tried this, the feature still exists, but ended up considering it a dead end: "
                            },
                            {
                                "type": "link",
                                "url": "https://forum.nim-lang.org/t/6930"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNot to say anything one way or the other about Vale's implementation of the feature, just pointing out some previous efforts in this space for context."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605908441.272200",
        "parent_user_id": "U019CPED6T1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UDQBTJ211",
                    "U019CPED6T1",
                    "U01EKU0UM24"
                ],
                "count": 4
            }
        ]
    }
]