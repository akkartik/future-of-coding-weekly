[
    {
        "client_msg_id": "95a014cf-6c04-42f5-8c1e-6447cbe2273f",
        "type": "message",
        "text": "\"France income tax is computed ... through a legacy custom language and compiler originally designed in 1990, which unlike French wine, did not age well with time.\"",
        "user": "UN9SCH5RD",
        "ts": "1606356146.286900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UN9SCH5RD",
            "ts": "1606356176.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+byQT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"France income tax is computed ... through a legacy custom language and compiler originally designed in 1990, which unlike French wine, did not age well with time.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606319173.284100",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "8a8b2dd2-9733-433c-a91c-8ca0a4081d38",
        "type": "message",
        "text": "seems like a DSL compiler for a rules engine",
        "user": "UN9SCH5RD",
        "ts": "1606356252.287200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x4Mm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "seems like a DSL compiler for a rules engine"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606319173.284100",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "4d5481bb-9172-4313-8d94-bf6e8e1223f7",
        "type": "message",
        "text": "This seems related: <http://grammarware.net/text/2020/dsl-adoption.pdf>\n&gt; *Abstract*. Given all the different benefits that domain specific languages are reported to produce, why are they not a widely adopted practice? In this report, we try to condense [... some possible reasons voiced and possibly related concerns expressed ...] in a short coherent text.\n",
        "user": "UN9SCH5RD",
        "ts": "1606357917.287400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "92N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This seems related: "
                            },
                            {
                                "type": "link",
                                "url": "http://grammarware.net/text/2020/dsl-adoption.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Abstract",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Given all the different benefits that domain specific languages are reported to produce, why are they not a widely adopted practice? In this report, we try to condense [... some possible reasons voiced and possibly related concerns expressed ...] in a short coherent text."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "thread_ts": "1606319173.284100",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f63fdf11-3f3c-4a20-8dc9-53ba10f247c2",
        "type": "message",
        "text": "I'm surprised they don't talk about lack of composability: the simple fact that coming up with a good DSL is trickier than coming up with a good API, which is tricky enough.",
        "user": "UA14TGLTC",
        "ts": "1606358563.287700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U9Jqq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm surprised they don't talk about lack of composability: the simple fact that coming up with a good DSL is trickier than coming up with a good API, which is tricky enough."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606319173.284100",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "9c753658-bef0-41ed-992c-cd9acdc575ef",
        "type": "message",
        "text": "that's a fair point, composability is hard to achieve. I think of SQL though, it is extremely popular DSL even though it is not highly composable. I remember one of the \"killer features\" of ActiveRecord on rails was the \"relational algebra library\", which allowed to pick an existing query and add one more constraint in a single line of code, which is not easy with plain-text SQL",
        "user": "UN9SCH5RD",
        "ts": "1606358985.287900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pAOE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's a fair point, composability is hard to achieve. I think of SQL though, it is extremely popular DSL even though it is not highly composable. I remember one of the \"killer features\" of ActiveRecord on rails was the \"relational algebra library\", which allowed to pick an existing query and add one more constraint in a single line of code, which is not easy with plain-text SQL"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606319173.284100",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c59ad8ef-e0fd-4f31-b950-2bb889f82ced",
        "type": "message",
        "text": "I'm thinking for something like Tax rules having some redundancy because of lack of composability maybe is not a great deal, perhaps it is even a feature. Instead of saying \"Tax rule #77 is like Tax rule #23 but with XYZ\", you may need to copy and modify the old rule ... there would be no risk one rule changing modifying the other.\n---\nin any case for me the takeaway is that lack of composability can be alleviated with great tooling if the DSL provides enough advantages.",
        "user": "UN9SCH5RD",
        "ts": "1606359284.288100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RJLrx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm thinking for something like Tax rules having some redundancy because of lack of composability maybe is not a great deal, perhaps it is even a feature. Instead of saying \"Tax rule #77 is like Tax rule #23 but with XYZ\", you may need to copy and modify the old rule ... there would be no risk one rule changing modifying the other.\n---\nin any case for me the takeaway is that lack of composability can be alleviated with great tooling if the DSL provides enough advantages."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606319173.284100",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "b2fb855e-c03e-4399-bc66-bc3acc2af6e1",
        "type": "message",
        "text": "the future of text is PDF :stuck_out_tongue:",
        "user": "UN9SCH5RD",
        "ts": "1606359339.288300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dn8Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the future of text is PDF "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605905343.271500",
        "parent_user_id": "UAHHWT22U"
    },
    {
        "client_msg_id": "d024e5a9-9794-4862-9074-c51a9922973e",
        "type": "message",
        "text": "Thought I would bring up this recherch\u00e9 design/code tool called DeepUI that didn\u2019t see development after initial announcement in 2017. Is the maker present here or do anyone know of their future work? <https://www.youtube.com/watch?v=Gy5m091fOTU>",
        "user": "UDKTZSD6H",
        "ts": "1606374792.290500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "DeepUI 1",
                "title_link": "https://www.youtube.com/watch?v=Gy5m091fOTU",
                "author_name": "DeepUI",
                "author_link": "https://www.youtube.com/channel/UCJibE5grhEmq3d0VggnTnwg",
                "thumb_url": "https://i.ytimg.com/vi/Gy5m091fOTU/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: DeepUI 1",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/Gy5m091fOTU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=Gy5m091fOTU",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=Gy5m091fOTU"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x9k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thought I would bring up this r"
                            },
                            {
                                "type": "text",
                                "text": "echerch\u00e9 ",
                                "style": {
                                    "unlink": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "design/code tool called DeepUI that didn\u2019t see development after initial announcement in 2017. Is the maker present here or do anyone know of their future work? "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=Gy5m091fOTU"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606374792.290500",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1606450305.297000",
        "reply_users": [
            "UJ6LDMMN0",
            "UDKTZSD6H",
            "UC2A2ARPT"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "49feb4ab-7217-4247-803f-9b23690df5d3",
        "type": "message",
        "text": "It is interesting how they try to make the logic \"tangible\". Like the pad can move if the arrow key is pressed and the pad is not touching the border, and displaying the \"state\" of this logic: i.e. key press or not, touching or not, and moving condition met or not.",
        "user": "UJ6LDMMN0",
        "ts": "1606381497.290800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LId",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is interesting how they try to make the logic \"tangible\". Like the pad can move if the arrow key is pressed and the pad is not touching the border, and displaying the \"state\" of this logic: i.e. key press or not, touching or not, and moving condition met or not."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606374792.290500",
        "parent_user_id": "UDKTZSD6H"
    },
    {
        "client_msg_id": "f2ba9591-e540-41b0-8e95-f9925dc64401",
        "type": "message",
        "text": "<@UJ6LDMMN0> Yup, this sort of logic as creating a picture world of facts is a realm easily accessible with the power of computers, but we somehow choose to tread the path of linguistic symbols (possibly because it is well treaded and mapped out for its pros and cons).",
        "user": "UDKTZSD6H",
        "ts": "1606381855.291000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1606381891.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EY8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " Yup, this sort of logic as creating a picture world of facts is a realm easily accessible with the power of computers, but we somehow choose to tread the path of linguistic symbols (possibly because it is well treaded and mapped out for its pros and cons)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606374792.290500",
        "parent_user_id": "UDKTZSD6H",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "feaa4779-137f-4022-9aa5-66320875fca1",
        "type": "message",
        "text": "I guess linguistic symbols are kind of easier to manipulate when things become complicated. It is hard to have an expressive visual representation of what is going for complicated logic (i.e. the need for composition/hierarchy comes quickly and this is hard to design well). Here, the logic is very very basic so the visual expressiveness is still here.",
        "user": "UJ6LDMMN0",
        "ts": "1606382413.291500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rM/T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess linguistic symbols are kind of easier to manipulate when things become complicated. It is hard to have an expressive visual representation of what is going for complicated logic (i.e. the need for composition/hierarchy comes quickly and this is hard to design well). Here, the logic is very very basic so the visual expressiveness is still here."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606374792.290500",
        "parent_user_id": "UDKTZSD6H"
    },
    {
        "client_msg_id": "2f5bc15d-941c-4e92-8589-9dcdd20b2ee4",
        "type": "message",
        "text": "I think that might be exactly what we do when we manipulate objects in our environment: <https://twitter.com/prathyvsh/status/1323954600060231680> I think there\u2019s a case to be made here that learning linguistic abstractions is the harder choice to learn with a steep learning curve. But it does provides beautiful insights into ideas like compositionality/algebraic manipulations. It helps map the world to an alphabetic discrete thinking and enables exploring an entirely different realm than we are accustomed to visuo-spatially. So the alphabet is indeed a super power but not when it comes at the cost of our other capabilities I think.",
        "user": "UDKTZSD6H",
        "ts": "1606383515.291700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1606386818.000000"
        },
        "attachments": [
            {
                "fallback": "<https://twitter.com/prathyvsh|@prathyvsh>: This has been something brewing in the back of my mind, but great that it has got explicit expression here. Programs have a counterfactual-supporting causal structure and can provide a causal model of the external world: <https://onlinelibrary.wiley.com/doi/epdf/10.1111/cogs.12062> <https://pbs.twimg.com/media/El-hll6VkAAHQkK.jpg>",
                "ts": 1604490349,
                "author_name": "Prathyush",
                "author_link": "https://twitter.com/prathyvsh/status/1323954600060231680",
                "author_icon": "https://pbs.twimg.com/profile_images/1157092207075061760/v_xB---l_normal.jpg",
                "author_subname": "@prathyvsh",
                "text": "This has been something brewing in the back of my mind, but great that it has got explicit expression here. Programs have a counterfactual-supporting causal structure and can provide a causal model of the external world: <https://onlinelibrary.wiley.com/doi/epdf/10.1111/cogs.12062> <https://pbs.twimg.com/media/El-hll6VkAAHQkK.jpg>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/prathyvsh/status/1323954600060231680",
                "image_url": "https://pbs.twimg.com/media/El-hll6VkAAHQkK.jpg",
                "image_width": 910,
                "image_height": 536,
                "image_bytes": 180043,
                "id": 1,
                "original_url": "https://twitter.com/prathyvsh/status/1323954600060231680",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "thread_ts": "1606374792.290500",
        "parent_user_id": "UDKTZSD6H",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "bbdb2c12-f5e9-434f-80fb-7d49723365f4",
        "type": "message",
        "text": "I've had contact with the fellow who created this demo. Story here: <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1595434370130900?thread_ts=1595419573.125100&amp;cid=C5T9GPWFL>",
        "user": "UC2A2ARPT",
        "ts": "1606431427.292900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1606431431.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "csax",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've had contact with the fellow who created this demo. Story here: "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1595434370130900?thread_ts=1595419573.125100&cid=C5T9GPWFL"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606374792.290500",
        "parent_user_id": "UDKTZSD6H",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    }
]