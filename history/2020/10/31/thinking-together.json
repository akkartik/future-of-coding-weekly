[
    {
        "client_msg_id": "8515abdb-7667-45ff-95cb-e7eb0237c8ca",
        "type": "message",
        "text": "<@UAVCC2X70> and <@UJ6LDMMN0> these both sound very similar to what I\u2019m working on. A visual/notebook based purely functional programming development environment with live data and time traveling for both previous inputs and each step of a run that uses CRDTs for collaboration.\n\nSeeing it on this thread has me worried that this may be pushing the limits too much for what\u2019s currently feasible?\nI\u2019m using Rust targeting wasm in browser. Is this possible now? Do I need this beast machine to make that happen?",
        "user": "U01BAS8GU86",
        "ts": "1604153038.323800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OoB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " these both sound very similar to what I\u2019m working on. A visual/notebook based purely functional programming development environment with live data and time traveling for both previous inputs and each step of a run that uses CRDTs for collaboration.\n\nSeeing it on this thread has me worried that this may be pushing the limits too much for what\u2019s currently feasible?\nI\u2019m using Rust targeting wasm in browser. Is this possible now? Do I need this beast machine to make that happen?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1603907731.306100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "7a7d20e9-3578-43a9-b094-c2d559c8ac67",
        "type": "message",
        "text": "From my understanding, one pain point with CRDT is rebuilding state from a very huge history logs. With a beast machine the problem will arise later.\n\nBut depending on your real use case, I guess it can work right know. And there are some strategy to mitigate this.\n\nMaybe you already know his work, but here is a video by Martin Kleppman talking about the \"hard parts\": <https://www.youtube.com/watch?v=PMVBuMK_pJY>",
        "user": "UJ6LDMMN0",
        "ts": "1604155084.324000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1604155090.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m/c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From my understanding, one pain point with CRDT is rebuilding state from a very huge history logs. With a beast machine the problem will arise later.\n\nBut depending on your real use case, I guess it can work right know. And there are some strategy to mitigate this.\n\nMaybe you already know his work, but here is a video by Martin Kleppman talking about the \"hard parts\": "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=PMVBuMK_pJY"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1603907731.306100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01BAS8GU86"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0b0daa1e-7842-42a3-a6b0-0807a99a200d",
        "type": "message",
        "text": "Yeah, <@UJ6LDMMN0> scaling over time/a large history is definitely a challenge in CRDTs from what I\u2019ve gathered, both on playing catchup if you\u2019re say a year behind and for just loading all of that into working memory even if have an up to date local copy.\n\nI really appreciate you pointing me towards Martin Kleppman! I\u2019ve been looking into his work, and I\u2019m on the Automerge slack channel and I may get involved in their Rust port implementation.\nI\u2019ll have to check this video of his out :smile:",
        "user": "U01BAS8GU86",
        "ts": "1604159711.324500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01BAS8GU86",
            "ts": "1604159813.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WZ4tA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, "
                            },
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " scaling over time/a large history is definitely a challenge in CRDTs from what I\u2019ve gathered, both on playing catchup if you\u2019re say a year behind and for just loading all of that into working memory even if have an up to date local copy.\n\nI really appreciate you pointing me towards Martin Kleppman! I\u2019ve been looking into his work, and I\u2019m on the Automerge slack channel and I may get involved in their Rust port implementation.\nI\u2019ll have to check this video of his out "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1603907731.306100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    }
]