[
    {
        "client_msg_id": "1E116E7D-A708-4CF2-98BD-6EC29B1E2B95",
        "type": "message",
        "text": "<@UJN1TAYEQ> I\u2019ll first mention (as I do often) that I consider Prolog to be a horrible exemplar for logic programming because whilst it features deduction, it is also steeped in imperative concepts (side effects) and functional concepts (some relations have \u201cinput\u201d and \u201coutput\u201d parameters). It\u2019s a big mix of several paradigms.\n\nMy own plan for I/O: the state of the program is just a set of deductions. Rules can only make deductions: they have no additional effects. Relations do not have \u201cinputs\u201d and \u201coutputs\u201d: they are just a set of deductions. How does a program interact with the external world? External agents just look at the program state and execute actions accordingly. If the program wants to flip on a light switch, then it just puts a tuple into its state (\u201clight switch\u201d, \u201con\u201d) and an external \u201cswitch-flipper agent\u201d  (pre-configured with permission to view a portion of the program state) does the flipping. These agents are managed by the operating system: they aren\u2019t part of the programming language or its libraries.\n\nExternal agents can also *write* tuples to the program\u2019s state, of course.\n\nI plan to use a model of time that accommodates such interactions and allows a distinction to be made between \u201cevents\u201d (momentary tuples) and \u201cstate\u201d (persistent tuples). All I/O must be asynchronous in order to have a clean way to define state transitions (observe event -&gt; deduce new state).",
        "user": "UCGAK10LS",
        "ts": "1601593895.135000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "134Rc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " I\u2019ll first mention (as I do often) that I consider Prolog to be a horrible exemplar for logic programming because whilst it features deduction, it is also steeped in imperative concepts (side effects) and functional concepts (some relations have \u201cinput\u201d and \u201coutput\u201d parameters). It\u2019s a big mix of several paradigms.\n\nMy own plan for I/O: the state of the program is just a set of deductions. Rules can only make deductions: they have no additional effects. Relations do not have \u201cinputs\u201d and \u201coutputs\u201d: they are just a set of deductions. How does a program interact with the external world? External agents just look at the program state and execute actions accordingly. If the program wants to flip on a light switch, then it just puts a tuple into its state (\u201clight switch\u201d, \u201con\u201d) and an external \u201cswitch-flipper agent\u201d  (pre-configured with permission to view a portion of the program state) does the flipping. These agents are managed by the operating system: they aren\u2019t part of the programming language or its libraries.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "External agents can also "
                            },
                            {
                                "type": "text",
                                "text": "write",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " tuples to the program\u2019s state, of course.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nI plan to use a model of time that accommodates such interactions and allows a distinction to be made between \u201cevents\u201d (momentary tuples) and \u201cstate\u201d (persistent tuples). All I/O must be asynchronous in order to have a clean way to define state transitions (observe event -> deduce new state)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601468992.070500",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "grinning",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "070d8c98-6960-43d6-a856-cb8066333edb",
        "type": "message",
        "text": "Ok, I looked at the tasks page and I think I got a better idea of what you\u2019re building and why.\nYou want to be able to translate natural language into code. This would allow you to generate natural language in a different language from the code.\nAnother benefit would be that since this is executable, you could theoretically build a program from something that looks like natural language.\n\nDid I get it right?\n\nIn any case, I want to read the paper to get a better idea of your plan",
        "user": "UDQKHNP51",
        "ts": "1601623999.135600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DaH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok, I looked at the tasks page and I think I got a better idea of what you\u2019re building and why.\nYou want to be able to translate natural language into code. This would allow you to generate natural language in a different language from the code.\nAnother benefit would be that since this is executable, you could theoretically build a program from something that looks like natural language.\n\nDid I get it right?\n\nIn any case, I want to read the paper to get a better idea of your plan"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601330319.057300",
        "parent_user_id": "U01AD80KMLK"
    },
    {
        "client_msg_id": "5e1f2f7f-5015-47e4-83a1-be93ae0d204e",
        "type": "message",
        "text": "<@UDQKHNP51> yes on the first paragraph, no on the second. We would not be building executable programs from natural language. The executables would still be written in code. But close!",
        "user": "U01AD80KMLK",
        "ts": "1601655054.136200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gyJ65",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQKHNP51"
                            },
                            {
                                "type": "text",
                                "text": " yes on the first paragraph, no on the second. We would not be building executable programs from natural language. The executables would still be written in code. But close!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601330319.057300",
        "parent_user_id": "U01AD80KMLK"
    },
    {
        "client_msg_id": "002c8d6e-6fa1-441f-b6b7-343412a973a3",
        "type": "message",
        "text": "Do you know of any resources that attempts to outline the various things a developer holds in their head while working on task x?",
        "user": "UPZLYD3GB",
        "ts": "1601672311.138500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aBvb1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you know of any resources that attempts to outline the various things a developer holds in their head while working on task x?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "reply_count": 12,
        "reply_users_count": 3,
        "latest_reply": "1601716487.141500",
        "reply_users": [
            "UFB8STN7K",
            "UPZLYD3GB",
            "UDQKHNP51"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "536d3a13-1564-4d9c-ba4f-a09bc190b8b2",
        "type": "message",
        "text": "Give me a value of `x` and I can provide some pointers!",
        "user": "UFB8STN7K",
        "ts": "1601673699.138600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YC5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Give me a value of "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and I can provide some pointers!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "parent_user_id": "UPZLYD3GB"
    },
    {
        "client_msg_id": "47109988-0afc-4599-8745-84c8baf9ba2a",
        "type": "message",
        "text": "Ideallly `x` would be highly specific, like adding a feature to these classes in this precise situation. If it's more vague, that'd be helpful too: `x` might be \"Editing a function\", \"Adding a class\", \"Refactoring between these two design patterns\", \"Making sense of how this method is used\"",
        "user": "UPZLYD3GB",
        "ts": "1601674288.138800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zaM3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ideallly "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " would be highly specific, like adding a feature to these classes in this precise situation. If it's more vague, that'd be helpful too: "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " might be \"Editing a function\", \"Adding a class\", \"Refactoring between these two design patterns\", \"Making sense of how this method is used\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "parent_user_id": "UPZLYD3GB"
    },
    {
        "client_msg_id": "6a35db91-8797-4952-acfa-339033107acc",
        "type": "message",
        "text": "It might help to share where I'm going with all this... When looking at the same code, we internally ask different questions depending on what we're trying to accomplish. I want to explore and curate this information to apply it to a better coding editor/viewer.",
        "user": "UPZLYD3GB",
        "ts": "1601674545.139000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hDWY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It might help to share where I'm going with all this... When looking at the same code, we internally ask different questions depending on what we're trying to accomplish. I want to explore and curate this information to apply it to a better coding editor/viewer."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "parent_user_id": "UPZLYD3GB"
    },
    {
        "client_msg_id": "07806562-902e-41b6-954b-aa5a08656554",
        "type": "message",
        "text": "This is a good resource for overview of specific questions that developers ask during maintenance: <https://faculty.washington.edu/ajko/books/cooperative-software-development/#/comprehension>",
        "user": "UFB8STN7K",
        "ts": "1601674690.139200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/FYT6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a good resource for overview of specific questions that developers ask during maintenance: "
                            },
                            {
                                "type": "link",
                                "url": "https://faculty.washington.edu/ajko/books/cooperative-software-development/#/comprehension"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "parent_user_id": "UPZLYD3GB"
    },
    {
        "client_msg_id": "7a7402bb-9bf0-40b0-bc92-599e97b81359",
        "type": "message",
        "text": "This is a good study of how developers pull together different information sources while debugging a complex system: <https://ieeexplore.ieee.org/abstract/document/4016573>",
        "user": "UFB8STN7K",
        "ts": "1601674739.139400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sSH7T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a good study of how developers pull together different information sources while debugging a complex system: "
                            },
                            {
                                "type": "link",
                                "url": "https://ieeexplore.ieee.org/abstract/document/4016573"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "parent_user_id": "UPZLYD3GB"
    },
    {
        "client_msg_id": "fd0e32c8-538a-4c1f-91e6-24cd2cc92250",
        "type": "message",
        "text": "This is a good example of how to design a programming UI to better match a programmer\u2019s mental model of debugging: <https://dl.acm.org/doi/abs/10.1145/985692.985712>",
        "user": "UFB8STN7K",
        "ts": "1601674779.139600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/SW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a good example of how to design a programming UI to better match a programmer\u2019s mental model of debugging: "
                            },
                            {
                                "type": "link",
                                "url": "https://dl.acm.org/doi/abs/10.1145/985692.985712"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "parent_user_id": "UPZLYD3GB"
    },
    {
        "client_msg_id": "bcf0e797-160f-4f9c-aed8-ad993ed6b12a",
        "type": "message",
        "text": "This is a great overview of models of cognition in programming, which more directly answers your question of \u201cthings a developer holds in their head\u201d: <https://ieeexplore.ieee.org/abstract/document/402076>",
        "user": "UFB8STN7K",
        "ts": "1601674859.139800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KGn7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a great overview of models of cognition in programming, which more directly answers your question of \u201cthings a developer holds in their head\u201d: "
                            },
                            {
                                "type": "link",
                                "url": "https://ieeexplore.ieee.org/abstract/document/402076"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "parent_user_id": "UPZLYD3GB"
    },
    {
        "client_msg_id": "15f48ab9-33a0-477b-a296-5ca6652053f8",
        "type": "message",
        "text": "More broadly, I don\u2019t think there\u2019s a comprehensive model of cognition in arbitrary software maintenance tasks, particularly for software in 2020. So if your goal is to design an IDE for improving code comprehension, you\u2019ll want to get as specific as possible to find related work.",
        "user": "UFB8STN7K",
        "ts": "1601675174.140000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8r/z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More broadly, I don\u2019t think there\u2019s a comprehensive model of cognition in arbitrary software maintenance tasks, particularly for software in 2020. So if your goal is to design an IDE for improving code comprehension, you\u2019ll want to get as specific as possible to find related work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1601672311.138500",
        "parent_user_id": "UPZLYD3GB",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UKP3B2J5D"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]