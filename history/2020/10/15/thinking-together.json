[
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "^ an interesting thing about superhuman is the culture and aesthetic they\u2019ve fostered around keyboard shortcuts. I feel like they\u2019ve made keyboard shortcuts cool and sexy, this desirable skill to master, and kinda turned it into a fun game of mastery.(tho I\u2019m not the target audience, being someone that writes at most a couple emails a week)\n\nThe VIM community also has a culture of respect for high keyboard usage but... well VIM isn\u2019t _quite as_ cool(I say this as a long time user)",
        "user": "UMWF81HTP",
        "ts": "1602731851.215300",
        "thread_ts": "1602079126.163600",
        "root": {
            "client_msg_id": "805c4a18-b8f5-4172-9b7a-127610fdc908",
            "type": "message",
            "text": "Has anyone seen any paradigms they really like for keyboard-navigating big, abstract mediums that aren't text? i really like how text can be keyboard navigated easily. Where your cursor + attention is about to go is always clear and we've invented lots of ways to accelerate getting your cursor to where you want it to go. How does that play out in things that aren't text though, like all the flow based languages we're seeing, or tools like Webflow that are trying to make it fast to create trees of stuff? Are we destined for slower mouse based interfaces that don't leverage muscle memory as much?",
            "user": "U016LEA3J1H",
            "ts": "1602079126.163600",
            "team": "T5TCAFTA9",
            "edited": {
                "user": "U016LEA3J1H",
                "ts": "1602079666.000000"
            },
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "y+1",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Has anyone seen any paradigms they really like for keyboard-navigating big, abstract mediums that aren't text? i really like how text can be keyboard navigated easily. Where your cursor + attention is about to go is always clear and we've invented lots of ways to accelerate getting your cursor to where you want it to go. How does that play out in things that aren't text though, like all the flow based languages we're seeing, or tools like Webflow that are trying to make it fast to create trees of stuff? Are we destined for slower mouse based interfaces that don't leverage muscle memory as much?"
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1602079126.163600",
            "reply_count": 29,
            "reply_users_count": 10,
            "latest_reply": "1602826560.240200",
            "reply_users": [
                "U016LEA3J1H",
                "UA14TGLTC",
                "UDKTZSD6H",
                "UMWF81HTP",
                "USJ899UUD",
                "UBJGA440K",
                "UPZLYD3GB",
                "UUQ2EQW21",
                "U013ZLJARC7",
                "UBM0S2AN4"
            ],
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q+u2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "^ an interesting thing about superhuman is the culture and aesthetic they\u2019ve fostered around keyboard shortcuts. I feel like they\u2019ve made keyboard shortcuts cool and sexy, this desirable skill to master, and kinda turned it into a fun game of mastery.(tho I\u2019m not the target audience, being someone that writes at most a couple emails a week)\n\nThe VIM community also has a culture of respect for high keyboard usage but... well VIM isn\u2019t "
                            },
                            {
                                "type": "text",
                                "text": "quite as",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " cool(I say this as a long time user)"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "9893C854-6075-4A3F-B288-4CAABBF73273",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1602731882.000000"
        }
    },
    {
        "client_msg_id": "603bc08d-c90e-4a8d-b756-e74b237382ce",
        "type": "message",
        "text": "Negative points for the rather invasive on-boarding of superhuman.  They want loads of personal details before you get anywhere.  I was put off by the 'fill in a load of details and a questionnaire, and then later we'll let you in for 30$ approach....'",
        "user": "UUQ2EQW21",
        "ts": "1602748517.215700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gov",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Negative points for the rather invasive on-boarding of superhuman.  They want loads of personal details before you get anywhere.  I was put off by the 'fill in a load of details and a questionnaire, and then later we'll let you in for 30$ approach....'"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1602079126.163600",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "714daa29-b7c6-4aa4-801c-dc3fdf51785c",
        "type": "message",
        "text": "<@UMWF81HTP> Keyboard shortcuts are like learning a musical instrument: there are pluses and minuses.  Is this particular instrument worth mastering?",
        "user": "UA14TGLTC",
        "ts": "1602753581.215900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "icz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": " Keyboard shortcuts are like learning a musical instrument: there are pluses and minuses.  Is this particular instrument worth mastering?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1602079126.163600",
        "parent_user_id": "U016LEA3J1H",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "eb75dafe-e993-48f6-9822-b164ef5471f6",
        "type": "message",
        "text": "<@UMWF81HTP> a nice example of that sort of \"jump to it\" keyboard interface (that I use all the time) is `ace-jump-mode`:\n<https://www.youtube.com/watch?v=UZkpmegySnc>",
        "user": "U013ZLJARC7",
        "ts": "1602753749.216400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Emacs Rocks! Episode 10: Jumping around",
                "title_link": "https://www.youtube.com/watch?v=UZkpmegySnc",
                "author_name": "emacsrocks",
                "author_link": "https://www.youtube.com/user/emacsrocks",
                "thumb_url": "https://i.ytimg.com/vi/UZkpmegySnc/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Emacs Rocks! Episode 10: Jumping around",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/UZkpmegySnc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=UZkpmegySnc",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=UZkpmegySnc"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FZOts",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": " a nice example of that sort of \"jump to it\" keyboard interface (that I use all the time) is "
                            },
                            {
                                "type": "text",
                                "text": "ace-jump-mode",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=UZkpmegySnc"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1602079126.163600",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "3edda24f-885c-47ea-99e5-fa8cb08998c5",
        "type": "message",
        "text": "FWIW, I use <https://github.com/easymotion/vim-easymotion> for the same thing in Vim.",
        "user": "UUQ2EQW21",
        "ts": "1602754573.216700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v6I/g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW, I use "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/easymotion/vim-easymotion"
                            },
                            {
                                "type": "text",
                                "text": " for the same thing in Vim."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1602079126.163600",
        "parent_user_id": "U016LEA3J1H",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "f0172b36-2658-4412-86bf-61c7db837897",
        "type": "message",
        "text": "i was reading about Kakoune the other day (<https://cosine.blue/2019-09-06-kakoune.html>) and they made a really interesting insight into the vim motion commands that i really like\n&gt;  Whereas vi\u2019s keystroke language follows\u00a0*verb-object*\u00a0order, Kakoune inverts that by following\u00a0*object-verb*\u00a0order. In real terms, that means you make a selection (object) before deciding what to do (verb) with it. The object might be a character, word, sentence, paragraph, parenthetical, regular expression, you name it; the verb might be\u00a0*delete*,\u00a0*yank*\u00a0(copy),\u00a0*change*,\u00a0*indent*, or even transformative operations like\u00a0*lint*,\u00a0*format*,\u00a0*uppercase*, etc. In Kakoune, it is with this reversed grammar, this postfix notation, that you interactively sweep up a group or groups of characters before acting on them. That way if your object isn\u2019t quite right, you can immediately correct it without having to undo and redo your verb.",
        "user": "U016LEA3J1H",
        "ts": "1602780943.217000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AUtS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i was reading about Kakoune the other day ("
                            },
                            {
                                "type": "link",
                                "url": "https://cosine.blue/2019-09-06-kakoune.html"
                            },
                            {
                                "type": "text",
                                "text": ") and they made a really interesting insight into the vim motion commands that i really like\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Whereas vi\u2019s keystroke language follows\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "verb-object",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0order, Kakoune inverts that by following\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "object-verb",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0order. In real terms, that means you make a selection (object) before deciding what to do (verb) with it. The object might be a character, word, sentence, paragraph, parenthetical, regular expression, you name it; the verb might be\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "delete",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ",\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "yank",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0(copy),\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "change",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ",\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "indent",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", or even transformative operations like\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "lint",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ",\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "format",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ",\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "uppercase",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", etc. In Kakoune, it is with this reversed grammar, this postfix notation, that you interactively sweep up a group or groups of characters before acting on them. That way if your object isn\u2019t quite right, you can immediately correct it without having to undo and redo your verb."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1602079126.163600",
        "parent_user_id": "U016LEA3J1H"
    },
    {
        "client_msg_id": "134f8092-4a42-4635-bc85-da3906f45771",
        "type": "message",
        "text": "it makes a lot of sense that the selecting and operating-on processes are two different ones where the second is a lot more likely to fail than the first, so better to latch progress and have the user's selection remain so they can try a failed operation again",
        "user": "U016LEA3J1H",
        "ts": "1602780985.217200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Km3vq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it makes a lot of sense that the selecting and operating-on processes are two different ones where the second is a lot more likely to fail than the first, so better to latch progress and have the user's selection remain so they can try a failed operation again"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1602079126.163600",
        "parent_user_id": "U016LEA3J1H"
    }
]