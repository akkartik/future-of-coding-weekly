[
    {
        "client_msg_id": "7a1633cd-fdcd-4122-85a7-c38f2310c834",
        "type": "message",
        "text": "This is a prototype I\u2019ve been working on for browsing and reading code. The main ideas I\u2019m exploring are spatial organization, abstracting away files, and path-aware browsing. It\u2019s currently setup with the react-reconciler codebase and the linked canvas does a tiny tour of React hooks.\n\nI'd love any questions/feedback. Would you use something like this? <https://code-explorer.bypaulshen.com/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b>",
        "user": "U019PRL1BNU",
        "ts": "1604079401.115400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U019PRL1BNU",
            "ts": "1604079437.000000"
        },
        "attachments": [
            {
                "title": "Code explorer prototype",
                "title_link": "https://code-explorer.bypaulshen.com/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b",
                "text": "an exploration in reading and understanding code",
                "fallback": "Code explorer prototype",
                "image_url": "https://code-explorer.bypaulshen.com/twitter.png",
                "from_url": "https://code-explorer.bypaulshen.com/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 168689,
                "service_name": "code-explorer.bypaulshen.com",
                "id": 1,
                "original_url": "https://code-explorer.bypaulshen.com/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3zG69",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a prototype I\u2019ve been working on for browsing and reading code. The main ideas I\u2019m exploring are spatial organization, abstracting away files, and path-aware browsing. It\u2019s currently setup with the react-reconciler codebase and the linked canvas does a tiny tour of React hooks.\n\nI'd love any questions/feedback. Would you use something like this? "
                            },
                            {
                                "type": "link",
                                "url": "https://code-explorer.bypaulshen.com/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "reply_count": 19,
        "reply_users_count": 8,
        "latest_reply": "1604272639.132500",
        "reply_users": [
            "UCUSW7WVD",
            "U019PRL1BNU",
            "UUQ2EQW21",
            "U8A5MS6R1",
            "UEBG0NPDK",
            "UG0EL18H3",
            "UHWC9PXBL",
            "U013ZLJARC7"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "USH01JEDQ",
                    "UUQ2EQW21",
                    "U0123H7JRDM",
                    "UBSMEUXAA",
                    "UHWC9PXBL",
                    "UMYKGHYBA",
                    "UA14TGLTC",
                    "US6TKS2HW",
                    "UF6RLAL7J"
                ],
                "count": 9
            },
            {
                "name": "star",
                "users": [
                    "USH01JEDQ"
                ],
                "count": 1
            },
            {
                "name": "heart_eyes",
                "users": [
                    "U8A5MS6R1",
                    "ULK0Z4MPV",
                    "UJ6LDMMN0",
                    "US6TKS2HW"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "fire",
                "users": [
                    "UG0EL18H3"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2d93a4f4-54e6-4b99-b3d4-e3d57f289ad7",
        "type": "message",
        "text": "I've been thinking along similar lines.\n\nWhat do the lines between some of the boxes mean?\n\nAre the line numbers useful in this organization?",
        "user": "UCUSW7WVD",
        "ts": "1604080138.115700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w+vJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking along similar lines.\n\nWhat do the lines between some of the boxes mean?\n\nAre the line numbers useful in this organization?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU"
    },
    {
        "client_msg_id": "182ff0c3-48a4-461b-a29e-78f18e9b6417",
        "type": "message",
        "text": "the lines are part of the path-aware browsing. when you go to definition or drag a symbol to open a new pane, it\u2019ll draw a line from parent -&gt; child. By default, closing a pane will close all its children recursively.\n\nThat\u2019s a good question about line numbers. One thing it tells you is that there\u2019s more content above if it doesn\u2019t start at 0 but that can be conveyed in a different way. Thanks!",
        "user": "U019PRL1BNU",
        "ts": "1604080277.115900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t1IW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the lines are part of the path-aware browsing. when you go to definition or drag a symbol to open a new pane, it\u2019ll draw a line from parent -> child. By default, closing a pane will close all its children recursively.\n\nThat\u2019s a good question about line numbers. One thing it tells you is that there\u2019s more content above if it doesn\u2019t start at 0 but that can be conveyed in a different way. Thanks!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU"
    },
    {
        "client_msg_id": "ccec622c-6810-4efd-b7d1-fea9ec076ba3",
        "type": "message",
        "text": "I see, so by 'path' you mean just the path of a specific browser session. Makes sense!",
        "user": "UCUSW7WVD",
        "ts": "1604080339.116100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/k1qG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see, so by 'path' you mean just the path of a specific browser session. Makes sense!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU"
    },
    {
        "client_msg_id": "b94f73f8-1033-48cc-bec0-3834e804cf3b",
        "type": "message",
        "text": "I've spent the last few weeks trying to clean up and refactor a hugely complex collection of code.  Tools like this are what I'm missing.  An easy way to make a pin board of the fragments I need to hold in my head, and the relations between them.  It's 2020 and tools still don't have good ways to do this!  I applaud your efforts!  Perhaps a usage video in <#C0120A3L30R|two-minute-week> ?",
        "user": "UUQ2EQW21",
        "ts": "1604081765.116500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B+i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've spent the last few weeks trying to clean up and refactor a hugely complex collection of code.  Tools like this are what I'm missing.  An easy way to make a pin board of the fragments I need to hold in my head, and the relations between them.  It's 2020 and tools still don't have good ways to do this!  I applaud your efforts!  Perhaps a usage video in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C0120A3L30R"
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d391d030-b59b-4613-bd79-bba70b44de0f",
        "type": "message",
        "text": "<@UUQ2EQW21> thanks! i totally agree with your sentiment\n\nand i\u2019ll try to make a video soon :slightly_smiling_face:",
        "user": "U019PRL1BNU",
        "ts": "1604083954.117200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fH7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " thanks! i totally agree with your sentiment\n\nand i\u2019ll try to make a video soon "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU"
    },
    {
        "client_msg_id": "5e46ebd9-c775-4a9b-bea7-22b58bd61dd3",
        "type": "message",
        "text": "This looks great! I really like these customizable 'slice viewers'. One suggestion I'd have is to connect the line to source window at the the corresponding location in the scroll bar, rather than the top title bar.\n\nBTW, have you seen <http://sourcetrail.com|sourcetrail.com>?",
        "user": "U8A5MS6R1",
        "ts": "1604089668.117600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5xl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks great! I really like these customizable 'slice viewers'. One suggestion I'd have is to connect the line to source window at the the corresponding location in the scroll bar, rather than the top title bar.\n\nBTW, have you seen "
                            },
                            {
                                "type": "link",
                                "url": "http://sourcetrail.com",
                                "text": "sourcetrail.com"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU"
    },
    {
        "client_msg_id": "4f7924c2-46b4-47a1-bd17-0cc4d3a114c7",
        "type": "message",
        "text": "Historical references that might be of interest down this vein:\n1. <http://cs.brown.edu/~spr/codebubbles/|CodeBubbles> (here\u2019s a good <https://www.youtube.com/watch?v=PsPX0nElJ0k|video>)\n2. <https://www.youtube.com/watch?v=3p9XUwIlhJg|Visual Studio Debugger Canvas>\n3. The original <https://vimeo.com/40281991|Light Table concept> explored alternative layouts\nMe and a couple of other folks were behind 2 and 3, though for 2 they removed a lot of the coolest stuff for whatever reason. It\u2019s really cool and a really neat way to debug, though when we tested it internally, people didn\u2019t like it for writing. This introduced a hard divide between read time and write time and not being able to fluidly transition between the two caused people to rate their qualitative experience with the system fairly low.",
        "user": "UEBG0NPDK",
        "ts": "1604095244.117900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1604095259.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QZJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Historical references that might be of interest down this vein:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "http://cs.brown.edu/~spr/codebubbles/",
                                        "text": "CodeBubbles"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (here\u2019s a good "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://www.youtube.com/watch?v=PsPX0nElJ0k",
                                        "text": "video"
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://www.youtube.com/watch?v=3p9XUwIlhJg",
                                        "text": "Visual Studio Debugger Canvas"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The original "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://vimeo.com/40281991",
                                        "text": "Light Table concept"
                                    },
                                    {
                                        "type": "text",
                                        "text": " explored alternative layouts"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nMe and a couple of other folks were behind 2 and 3, though for 2 they removed a lot of the coolest stuff for whatever reason. It\u2019s really cool and a really neat way to debug, though when we tested it internally, people didn\u2019t like it for writing. This introduced a hard divide between read time and write time and not being able to fluidly transition between the two caused people to rate their qualitative experience with the system fairly low."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6d5ee93b-c48c-4613-85b6-0ce31b512c92",
        "type": "message",
        "text": "Another thing we ran into is that it ended up requiring a fair amount of manual gardening to make it useful and over time people seemed to spend _more_ of their effort on laying things out rather than getting better at it like we thought they would.\n\nThis is a beautiful looking implementation :slightly_smiling_face: To take it all the way, it\u2019s worth thinking about how you\u2019ll tackle the tragedy of the commons and fluidity problems. Find reasonable answers to those and you\u2019ll have something really special!",
        "user": "UEBG0NPDK",
        "ts": "1604095311.118500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1604095705.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2kNOk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another thing we ran into is that it ended up requiring a fair amount of manual gardening to make it useful and over time people seemed to spend "
                            },
                            {
                                "type": "text",
                                "text": "more",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of their effort on laying things out rather than getting better at it like we thought they would.\n\nThis is a beautiful looking implementation "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " To take it all the way, it\u2019s worth thinking about how you\u2019ll tackle the tragedy of the commons and fluidity problems. Find reasonable answers to those and you\u2019ll have something really special!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "Super job, Paul! This made me really think that the abstraction level at which we usually think about \u201cnode-and-wire\u201d programming (typically the AST level) might not be optimal for exploring codebases. Just sort of spewing my thoughts here, but perhaps it would be better to expose different representations at different \u201czoom levels\u201d: for instance, if I zoomed into a file inside the code browser, it would turn into a graphical editor, but if I zoom out, I get a text representation. Or maybe it would be more reasonable to give the user a choice of which representation they wanted to see at a particular level of abstraction. It just seems like there is no \u201cone size fits all\u201d representation that can encompass all levels of abstraction.\n\nIt also made me think deeper about the notion of \u201cincrementalism\u201d, and how we might do well to embrace some of those ideas as a community: don\u2019t get me wrong, there are some things that you can only do by taking a \u201cgreenfield\u201d approach to development, but I think there is so much room for improving the status quo, that even \u201csmall\u201d changes in representation with existing languages/tools (in this case, JavaScript and the Monaco editor from VS Code) could have on the \u201cnear-term future of coding\u201d.\n\nI think it would be really neat to explore breaking out the \u201cshow references\u201d functionality into separate editor windows (or \u201cblocks\u201d) as well, something along the lines of what Dark has done in their editor  (image below).\n\nMaybe the \u201cfind references\u201d command could draw temporary arrows to the files in the file explorer window, or highlight open windows that contain references to the item in question.\n\nFinally, I think this would be absolutely killer for doing collaborative code reviews/pair programming. Stellar work!",
        "files": [
            {
                "id": "F01EF00GSBS",
                "created": 1604095595,
                "timestamp": 1604095595,
                "name": "Screen Shot 2020-10-30 at 15.47.09.png",
                "title": "Screen Shot 2020-10-30 at 15.47.09.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UG0EL18H3",
                "editable": false,
                "size": 39797,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01EF00GSBS/screen_shot_2020-10-30_at_15.47.09.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01EF00GSBS/download/screen_shot_2020-10-30_at_15.47.09.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01EF00GSBS-b7aec8f9f2/screen_shot_2020-10-30_at_15.47.09_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01EF00GSBS-b7aec8f9f2/screen_shot_2020-10-30_at_15.47.09_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01EF00GSBS-b7aec8f9f2/screen_shot_2020-10-30_at_15.47.09_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 136,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01EF00GSBS-b7aec8f9f2/screen_shot_2020-10-30_at_15.47.09_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 181,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01EF00GSBS-b7aec8f9f2/screen_shot_2020-10-30_at_15.47.09_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F01EF00GSBS-b7aec8f9f2/screen_shot_2020-10-30_at_15.47.09_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 272,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F01EF00GSBS-b7aec8f9f2/screen_shot_2020-10-30_at_15.47.09_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 302,
                "original_w": 932,
                "original_h": 352,
                "thumb_tiny": "AwASADCoxOaTcacVBNGwUAIpJNOpAuKKADJpRSUooAWiiigApKWigBKKWigD/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UG0EL18H3/F01EF00GSBS/screen_shot_2020-10-30_at_15.47.09.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01EF00GSBS-46b1dc1bf5",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PfflR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Super job, Paul! This made me really think that the abstraction level at which we usually think about \u201cnode-and-wire\u201d programming (typically the AST level) might not be optimal for exploring codebases. Just sort of spewing my thoughts here, but perhaps it would be better to expose different representations at different \u201czoom levels\u201d: for instance, if I zoomed into a file inside the code browser, it would turn into a graphical editor, but if I zoom out, I get a text representation. Or maybe it would be more reasonable to give the user a choice of which representation they wanted to see at a particular level of abstraction. It just seems like there is no \u201cone size fits all\u201d representation that can encompass all levels of abstraction.\n\nIt also made me think deeper about the notion of \u201cincrementalism\u201d, and how we might do well to embrace some of those ideas as a community: don\u2019t get me wrong, there are some things that you can only do by taking a \u201cgreenfield\u201d approach to development, but I think there is so much room for improving the status quo, that even \u201csmall\u201d changes in representation with existing languages/tools (in this case, JavaScript and the Monaco editor from VS Code) could have on the \u201cnear-term future of coding\u201d.\n\nI think it would be really neat to explore breaking out the \u201cshow references\u201d functionality into separate editor windows (or \u201cblocks\u201d) as well, something along the lines of what Dark has done in their editor  (image below).\n\nMaybe the \u201cfind references\u201d command could draw temporary arrows to the files in the file explorer window, or highlight open windows that contain references to the item in question.\n\nFinally, I think this would be absolutely killer for doing collaborative code reviews/pair programming. Stellar work!"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UG0EL18H3",
        "display_as_bot": false,
        "ts": "1604095598.118700",
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU"
    }
]