[
    {
        "client_msg_id": "9d2b3caa-5122-47de-9eb7-c631953ff59a",
        "type": "message",
        "text": "I want to make a list of open source programming languages with a projectional editor, that supports mixed text and graphical notation. Not node and wire syntax like Pure Data. Instead, code is organized in a syntax tree where tree nodes can either have a conventional text syntax, or use graphical notation. Please reply if you know a project like this, and post a link.",
        "user": "UJN1TAYEQ",
        "ts": "1594950008.415300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zKnkF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to make a list of open source programming languages with a projectional editor, that supports mixed text and graphical notation. Not node and wire syntax like Pure Data. Instead, code is organized in a syntax tree where tree nodes can either have a conventional text syntax, or use graphical notation. Please reply if you know a project like this, and post a link."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "reply_count": 13,
        "reply_users_count": 6,
        "latest_reply": "1595062535.443200",
        "reply_users": [
            "UJN1TAYEQ",
            "UC2A2ARPT",
            "UHDQ62M4P",
            "UHWC9PXBL",
            "U01448TH3PG",
            "UMWF81HTP"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "star",
                "users": [
                    "USH01JEDQ",
                    "U013ZLJARC7",
                    "UKP3B2J5D"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UML4ZEKDK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "d95d0eb2-6a31-4457-957a-fe9db39e3c4c",
        "type": "message",
        "text": "<http://hazel.org|hazel.org> is a text based language with a projectional editor. There is a branch of the github repo called \"livelits\" which supports embedded graphical notations. The UI is written in Reason and runs in a web browser.",
        "user": "UJN1TAYEQ",
        "ts": "1594950579.415500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RVnB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http://hazel.org",
                                "text": "hazel.org"
                            },
                            {
                                "type": "text",
                                "text": " is a text based language with a projectional editor. There is a branch of the github repo called \"livelits\" which supports embedded graphical notations. The UI is written in Reason and runs in a web browser."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "406461ed-706b-4975-be7d-d28225e18eac",
        "type": "message",
        "text": "<https://www.jetbrains.com/mps/> is a Java framework for building languages with projectional editors. <http://mbeddr.com/|mbeddr.com/> is a C-like language built on the MPS framework.",
        "user": "UJN1TAYEQ",
        "ts": "1594951538.415700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1594951919.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UcqS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.jetbrains.com/mps/"
                            },
                            {
                                "type": "text",
                                "text": " is a Java framework for building languages with projectional editors. "
                            },
                            {
                                "type": "link",
                                "url": "http://mbeddr.com/",
                                "text": "mbeddr.com/"
                            },
                            {
                                "type": "text",
                                "text": " is a C-like language built on the MPS framework."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "type": "message",
        "text": "Is this even close to what you have in mind?\n\n<https://github.com/nicolas-p/skov|https://github.com/nicolas-p/skov>\n\n",
        "files": [
            {
                "id": "F017MFK0D3K",
                "created": 1594953270,
                "timestamp": 1594953270,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "UC2A2ARPT",
                "editable": false,
                "size": 139189,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F017MFK0D3K/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F017MFK0D3K/download/image_from_ios.jpg",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_360.jpg",
                "thumb_360_w": 344,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_480.jpg",
                "thumb_480_w": 459,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_720.jpg",
                "thumb_720_w": 688,
                "thumb_720_h": 720,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 837,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_960.jpg",
                "thumb_960_w": 917,
                "thumb_960_h": 960,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F017MFK0D3K-896b3554ad/image_from_ios_1024.jpg",
                "thumb_1024_w": 978,
                "thumb_1024_h": 1024,
                "original_w": 1624,
                "original_h": 1700,
                "thumb_tiny": "AwAwAC2W8u5IJgqYxjPNQf2jN6L+VGp/8fI/3ap0yWy5/aM3on5Uf2jN6J+VVVLdAQKQkk88mnYV2W/7Rm9F/Kr9rK00Cu2Mn0rE/CtjT/8Aj0T8f50mNFPUji5H+7VTd7Crep/8fI/3agSISJlT83pRewnuMDAH2+lC8tjHXpgVKsagsrA5GQGwcGntIkWB1ZRjApOfRBYrtlTgrj6itaw/49E/H+dZMjmRskD8K1tP/wCPRPx/nT6DRT1P/j5H+7VMZByDg1rXVp58gfdjjFQ/2b/tGgGinvJGN70xsdQST71f/s3/AGjR/Zv+0aNAszPxWxp//Hon4/zqv/Zv+0au28XkwhM5xQxpH//Z",
                "permalink": "https://futureofcoding.slack.com/files/UC2A2ARPT/F017MFK0D3K/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F017MFK0D3K-e5e0ee9298",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ylj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this even close to what you have in mind?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/nicolas-p/skov",
                                "text": "https://github.com/nicolas-p/skov"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UC2A2ARPT",
        "display_as_bot": false,
        "ts": "1594953273.416900",
        "client_msg_id": "D9FB0478-119B-42BF-9DF1-BF6DB6D351A3",
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "3e925bfb-5e1f-40c5-aaca-c55148c74cf9",
        "type": "message",
        "text": "Can I download future of Coding podcasts for offline listening? I used to do it but can't remember how.",
        "user": "U010328JA1E",
        "ts": "1594955308.418500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2D6D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can I download future of Coding podcasts for offline listening? I used to do it but can't remember how."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594955308.418500",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1594957035.421300",
        "reply_users": [
            "UC2A2ARPT",
            "U010328JA1E"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "9D35C9A0-FA6B-4AB3-9548-E2C7D2D8A96E",
        "type": "message",
        "text": "Yes, of course! That'll be a feature of most podcast apps. Doesn't look like you can do it via the web player, though.",
        "user": "UC2A2ARPT",
        "ts": "1594955734.419600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "08O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, of course! That'll be a feature of most podcast apps. Doesn't look like you can do it via the web player, though."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594955308.418500",
        "parent_user_id": "U010328JA1E"
    },
    {
        "client_msg_id": "71E200F1-3878-4AB6-8C7B-63877269EBC7",
        "type": "message",
        "text": "I use Overcast on iPhone, and that works very well with offline playback.",
        "user": "UC2A2ARPT",
        "ts": "1594955757.420400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1594955760.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "28y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I use Overcast on iPhone, and that works very well with offline playback."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594955308.418500",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "U010328JA1E",
                    "U01554W5BS5"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "fd3b49eb-6b2d-4fdd-89dd-b3e921e4e8a8",
        "type": "message",
        "text": "Thanks! I *think* the player widget on the website used to have a more info/share/download option but now it doesn't :(",
        "user": "U010328JA1E",
        "ts": "1594956086.421100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "47zdT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! I "
                            },
                            {
                                "type": "text",
                                "text": "think",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the player widget on the website used to have a more info/share/download option but now it doesn't :("
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594955308.418500",
        "parent_user_id": "U010328JA1E"
    },
    {
        "client_msg_id": "308f320d-b545-4fed-8d6b-d4381555125c",
        "type": "message",
        "text": "Figured it out. You can download from web if you go to the episode's page in <http://omny.fm|omny.fm>",
        "user": "U010328JA1E",
        "ts": "1594957035.421300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2OW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Figured it out. You can download from web if you go to the episode's page in "
                            },
                            {
                                "type": "link",
                                "url": "http://omny.fm",
                                "text": "omny.fm"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594955308.418500",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "432f1b0d-d395-4464-9882-0301660a0130",
        "type": "message",
        "text": "This fits the bill: structural editor, stored on disk as conventional code: <http://strlen.com/restructor/>",
        "user": "UHDQ62M4P",
        "ts": "1594961958.421800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6f5ON",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This fits the bill: structural editor, stored on disk as conventional code: "
                            },
                            {
                                "type": "link",
                                "url": "http://strlen.com/restructor/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "b043f8aa-9ac8-44f7-b514-34413091a9bd",
        "type": "message",
        "text": "is also \"mixed\" in the sense that you can edit a subexpression as text before it gets converted back into a tree",
        "user": "UHDQ62M4P",
        "ts": "1594962022.422000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sb9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is also \"mixed\" in the sense that you can edit a subexpression as text before it gets converted back into a tree"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "42168acf-0275-4196-a9b4-6d37d213edaf",
        "type": "message",
        "text": "Let me explain what I want. My Curv programming language is a DSL for making graphical objects. Currently, Curv is a purely text based language. I would like to extend Curv so that subexpressions can have graphical syntax. A colour literal should display a colour swatch, and be editable using a colour picker. An image literal should display the actual image. I should be able to paste an image into source code from the clipboard. I need the ability to extend the syntax with new graphical notations. How does the UI work? How do I implement this? It would be good to look at existing projects that have solved the problem.",
        "user": "UJN1TAYEQ",
        "ts": "1594982501.423100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1594982845.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F/o5b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let me explain what I want. My Curv programming language is a DSL for making graphical objects. Currently, Curv is a purely text based language. I would like to extend Curv so that subexpressions can have graphical syntax. A colour literal should display a colour swatch, and be editable using a colour picker. An image literal should display the actual image. I should be able to paste an image into source code from the clipboard. I need the ability to extend the syntax with new graphical notations. How does the UI work? How do I implement this? It would be good to look at existing projects that have solved the problem."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMWF81HTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3cdfd427-e2f1-4164-8293-adfbfdc7b2ca",
        "type": "message",
        "text": "<@UC2A2ARPT> Scov has a purely text based syntax, but I can see how you would extend it to support subexpressions with graphical syntax.",
        "user": "UJN1TAYEQ",
        "ts": "1594982855.423500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pg0I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " Scov has a purely text based syntax, but I can see how you would extend it to support subexpressions with graphical syntax."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "F3E8C275-2224-4FFD-8C1E-B7529AE769A3",
        "type": "message",
        "text": "fructure and isomorf both fit the bill i think",
        "user": "UHWC9PXBL",
        "ts": "1594990627.424700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kdpg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "fructure and isomorf both fit the bill i think"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "d57134f2-687d-40b2-8d7d-a2d3d5beaa88",
        "type": "message",
        "text": "I don't know of any good implementations of this in the wild, but you're basically describing my current hobby project.\n\nTo add to your list of example use cases - an equation editor would be interesting. Instead of having operators (+, -, /, etc) in the base language, you could have a dedicated equation editor that looks more like a wysiwig latex.",
        "user": "U01448TH3PG",
        "ts": "1594996345.425000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jJPp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know of any good implementations of this in the wild, but you're basically describing my current hobby project.\n\nTo add to your list of example use cases - an equation editor would be interesting. Instead of having operators (+, -, /, etc) in the base language, you could have a dedicated equation editor that looks more like a wysiwig latex."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "af4991bd-efe0-4744-90bd-5e738d43023d",
        "type": "message",
        "text": "I was contemplating if this is something for <#C5T9GPWFL|general> or if it should go into <#CEXED56UR|meta>, but the more I think about it, the more I believe this is as much about the future of coding as it gets; at least about the future of coding that I want to see.\n\nHere's the always well-read and deeply investigative Dan Luu about discrimination in tech:\n <https://danluu.com/tech-discrimination/>",
        "user": "U5STGTB3J",
        "ts": "1595002821.428200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b7z96",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was contemplating if this is something for "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " or if it should go into "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CEXED56UR"
                            },
                            {
                                "type": "text",
                                "text": ", but the more I think about it, the more I believe this is as much about the future of coding as it gets; at least about the future of coding that I want to see.\n\nHere's the always well-read and deeply investigative Dan Luu about discrimination in tech:\n "
                            },
                            {
                                "type": "link",
                                "url": "https://danluu.com/tech-discrimination/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595002821.428200",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1595054871.442500",
        "reply_users": [
            "U5STGTB3J",
            "U013ZLJARC7"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UL3EE9WR1",
                    "UC2A2ARPT",
                    "UKP3B2J5D",
                    "UCXR52MU2",
                    "UCUSW7WVD"
                ],
                "count": 5
            },
            {
                "name": "100",
                "users": [
                    "ULK0Z4MPV",
                    "UBSMEUXAA",
                    "UHWC9PXBL"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b416b072-d038-4746-9a45-542918c060ed",
        "type": "message",
        "text": "From the appendix:\n&gt; Also, note that although this post was originally published in 2014, it was updated in 2020 with links to some more recent comments and a bit of re-organization.",
        "user": "U5STGTB3J",
        "ts": "1595003859.428300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WBX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From the appendix:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, note that although this post was originally published in 2014, it was updated in 2020 with links to some more recent comments and a bit of re-organization."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595002821.428200",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "02ed7f93-1828-4ef3-9ac3-c0da88ae59da",
        "type": "message",
        "text": "<@UJN1TAYEQ> If you're ever looking for someone to bounce implementation ideas off of, I'm always interested in this sort of editor in particular.",
        "user": "U01448TH3PG",
        "ts": "1595005470.428500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cq8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " If you're ever looking for someone to bounce implementation ideas off of, I'm always interested in this sort of editor in particular."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "383fdd7a-a7b7-4054-b10c-1e47816f8af3",
        "type": "message",
        "text": "<@U01448TH3PG> That's great. I'd love to chat in more detail. Are the design goals for your project online yet? Or any code?\n\n<http://mbeddr.com|mbeddr.com> has a wysiwyg equation editor plugin already. It seems like the most mature of the projects I've looked at so far.",
        "user": "UJN1TAYEQ",
        "ts": "1595008287.428800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5BDX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01448TH3PG"
                            },
                            {
                                "type": "text",
                                "text": " That's great. I'd love to chat in more detail. Are the design goals for your project online yet? Or any code?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http://mbeddr.com",
                                "text": "mbeddr.com"
                            },
                            {
                                "type": "text",
                                "text": " has a wysiwyg equation editor plugin already. It seems like the most mature of the projects I've looked at so far."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "fee4b265-df44-4bb6-8d94-3343606825d1",
        "type": "message",
        "text": "<@UCUSW7WVD> I was reading through the <https://palladiummag.com/2020/07/10/how-late-zhou-china-reverse-engineered-a-civilization/|civilization article you posted>. And this stuck out to me: \"The longer social technologies exist, the more varied the understanding of them becomes. The original contexts for their existence can change, or translation errors can occur in their reproduction.\" Viewing coding as an essentially a <https://en.wikipedia.org/wiki/Social_technology|social technology> (what is code used for other than to try to influence social processes) might be a way to look back and look at the fundamentals of what makes a civilization work. Indeed, there is a possibility that any group of people contemplating the future of code might do very well to spend as much time looking backward and attempting to understand as looking forward and seeing what might be.",
        "user": "U015902ESJC",
        "ts": "1595017818.433700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U015902ESJC",
            "ts": "1595019027.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oe0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I was reading through the "
                            },
                            {
                                "type": "link",
                                "url": "https://palladiummag.com/2020/07/10/how-late-zhou-china-reverse-engineered-a-civilization/",
                                "text": "civilization article you posted"
                            },
                            {
                                "type": "text",
                                "text": ". And this stuck out to me: \"The longer social technologies exist, the more varied the understanding of them becomes. The original contexts for their existence can change, or translation errors can occur in their reproduction.\" Viewing coding as an essentially a "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Social_technology",
                                "text": "social technology"
                            },
                            {
                                "type": "text",
                                "text": " (what is code used for other than to try to influence social processes) might be a way to look back and look at the fundamentals of what makes a civilization work. Indeed, there is a possibility that any group of people contemplating the future of code might do very well to spend as much time looking backward and attempting to understand as looking forward and seeing what might be."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595017818.433700",
        "reply_count": 31,
        "reply_users_count": 8,
        "latest_reply": "1595183667.497200",
        "reply_users": [
            "UCUSW7WVD",
            "U015902ESJC",
            "U01448TH3PG",
            "UT60XSVCN",
            "U013KEPEJ2H",
            "UJBAJNFLK",
            "U013ZLJARC7",
            "UHWC9PXBL"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "29307fb7-ff8c-47ab-ace9-5cda7c44d595",
        "type": "message",
        "text": "Yeah, this has been a long-time interest of mine: <https://news.ycombinator.com/item?id=4359257#4361596>",
        "user": "UCUSW7WVD",
        "ts": "1595018250.433900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mKKu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, this has been a long-time interest of mine: "
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=4359257#4361596"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595017818.433700",
        "parent_user_id": "U015902ESJC"
    },
    {
        "client_msg_id": "26a864bd-62ca-4a69-b9f0-1ff2a3a46f19",
        "type": "message",
        "text": "Here's one of my all-time favorite quotes, from _Red Plenty_ by Francis Spufford:\n\n&gt; The Soviet experiment had run into exactly the difficulty that Plato's admirers encountered, back in the fifth century BC. The recipe called for rule by heavily-armed virtue -- or in the Leninist case, not exactly virtue, but a sort of intentionally post-ethical counterpart to it, self-righteously brutal. Wisdom was to be set where it could be ruthless. Once such a system existed, though, the qualities required to rise in it had much more to do with ruthlessness than with wisdom. Lenin's core of original Bolsheviks, and the socialists like Trotsky who joined them, were many of them highly educated people, literate in multiple European languages, learned in the scholastic traditions of Marxism; and they preserved these attributes even as they murdered and lied and tortured and terrorised. They were social scientists who thought principle required them to behave like gangsters. But their successors -- the _vydvizhentsy_ who refilled the Central Committee in the thirties -- were not the most selfless people in Soviet society, or the most principled, or the most scrupulous. They were the most ambitious, the most domineering, the most manipulative, the most greedy, the most sycophantic. Gradually their loyalty to the ideas became more and more instrumental, more and more a matter of what the ideas would let them grip with their two hands.\n&gt; \n&gt; In a way, the surprise is that Bolshevik idealism lasted as long as it did. Stalin took his philosophical obligations entirely seriously. The time he spent in his Kremlin library was time spent reading. He held forth on linguistics, and genetics, and economics, and the proper writing of history, because he believed that intellectual decision-making was the duty of power. His associates, too, tended to possess treasured collections of Marxist literature. It was one of Molotov's complaints, after Stalin's death, that by sending him off to be ambassador of Outer Mongolia, Khrushchev had parted him from his books. And Khrushchev, in his turn, tried his best to talk like the great theoretician one magically became by elbowing and conniving one's way to the First Secretaryship. It came even less easily to him, but the transition to utopia by 1980 was all his own work. He was not a cynic. The idea that he might be committing an imposture bothered him deeply.\n&gt; \n&gt; Stalin had been a gangster who really believed he was a social scientist. Khrushchev was a gangster who hoped he was a social scientist. But the moment was drawing closer when the idealism would rot away by one more degree, and the Soviet Union would be governed by gangsters who were only pretending to be social scientists.",
        "user": "UCUSW7WVD",
        "ts": "1595018843.434100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1595018856.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kvR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's one of my all-time favorite quotes, from "
                            },
                            {
                                "type": "text",
                                "text": "Red Plenty",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " by Francis Spufford:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Soviet experiment had run into exactly the difficulty that Plato's admirers encountered, back in the fifth century BC. The recipe called for rule by heavily-armed virtue -- or in the Leninist case, not exactly virtue, but a sort of intentionally post-ethical counterpart to it, self-righteously brutal. Wisdom was to be set where it could be ruthless. Once such a system existed, though, the qualities required to rise in it had much more to do with ruthlessness than with wisdom. Lenin's core of original Bolsheviks, and the socialists like Trotsky who joined them, were many of them highly educated people, literate in multiple European languages, learned in the scholastic traditions of Marxism; and they preserved these attributes even as they murdered and lied and tortured and terrorised. They were social scientists who thought principle required them to behave like gangsters. But their successors -- the "
                            },
                            {
                                "type": "text",
                                "text": "vydvizhentsy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " who refilled the Central Committee in the thirties -- were not the most selfless people in Soviet society, or the most principled, or the most scrupulous. They were the most ambitious, the most domineering, the most manipulative, the most greedy, the most sycophantic. Gradually their loyalty to the ideas became more and more instrumental, more and more a matter of what the ideas would let them grip with their two hands.\n\nIn a way, the surprise is that Bolshevik idealism lasted as long as it did. Stalin took his philosophical obligations entirely seriously. The time he spent in his Kremlin library was time spent reading. He held forth on linguistics, and genetics, and economics, and the proper writing of history, because he believed that intellectual decision-making was the duty of power. His associates, too, tended to possess treasured collections of Marxist literature. It was one of Molotov's complaints, after Stalin's death, that by sending him off to be ambassador of Outer Mongolia, Khrushchev had parted him from his books. And Khrushchev, in his turn, tried his best to talk like the great theoretician one magically became by elbowing and conniving one's way to the First Secretaryship. It came even less easily to him, but the transition to utopia by 1980 was all his own work. He was not a cynic. The idea that he might be committing an imposture bothered him deeply.\n\nStalin had been a gangster who really believed he was a social scientist. Khrushchev was a gangster who hoped he was a social scientist. But the moment was drawing closer when the idealism would rot away by one more degree, and the Soviet Union would be governed by gangsters who were only pretending to be social scientists."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595017818.433700",
        "parent_user_id": "U015902ESJC",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "42fa1187-0923-41cf-ae38-233f4e9054a5",
        "type": "message",
        "text": "A few years ago I came up with a highly speculative thought experiment to try to combine the accountability of democratic systems with the coherence of a single 'designer'. See the bottom of <https://www.ribbonfarm.com/2014/04/09/the-legibility-tradeoff>, _The utopian participatory panopticon_.",
        "user": "UCUSW7WVD",
        "ts": "1595019130.434600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1595019499.000000"
        },
        "attachments": [
            {
                "service_name": "ribbonfarm",
                "title": "The Legibility Tradeoff",
                "title_link": "https://www.ribbonfarm.com/2014/04/09/the-legibility-tradeoff",
                "text": "Kartik is a 2014 blogging resident visiting us from his home turf at akkartik.name. I am fascinated by organizations as a technology for agency transfer \u2014 getting people to follow some plan o\u2026",
                "fallback": "ribbonfarm: The Legibility Tradeoff",
                "thumb_url": "https://206hwf3fj4w52u3br03fi242-wpengine.netdna-ssl.com/wp-content/uploads/2014/04/hypercube.png",
                "ts": 1397084745,
                "from_url": "https://www.ribbonfarm.com/2014/04/09/the-legibility-tradeoff",
                "thumb_width": 357,
                "thumb_height": 306,
                "service_icon": "https://206hwf3fj4w52u3br03fi242-wpengine.netdna-ssl.com/wp-content/uploads/2019/03/cropped-rfnewlogo-180x180.png",
                "id": 1,
                "original_url": "https://www.ribbonfarm.com/2014/04/09/the-legibility-tradeoff"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CTpH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A few years ago I came up with a highly speculative thought experiment to try to combine the accountability of democratic systems with the coherence of a single 'designer'. See the bottom of "
                            },
                            {
                                "type": "link",
                                "url": "https://www.ribbonfarm.com/2014/04/09/the-legibility-tradeoff"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "The utopian participatory panopticon",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595017818.433700",
        "parent_user_id": "U015902ESJC"
    },
    {
        "client_msg_id": "4a30abaa-7ab5-40d0-8c1b-eacce2ceb5ca",
        "type": "message",
        "text": "I feel very strongly that software has some critical tools for thought to contribute in evolving to a better society. But I'm also extremely sensitive to the dangers of modernist thinking, the temptation to think a single field has all the answers. This is really why I think end-user computing is so important. If we spread the bottom-up knowledge of design principles that are the fundamental boons of programming thinking, then these ideas have greater chance to cross-pollinate with what historians know and economists know and political scientists know, and so on.",
        "user": "UCUSW7WVD",
        "ts": "1595019304.434900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1595019573.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+wG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel very strongly that software has some critical tools for thought to contribute in evolving to a better society. But I'm also extremely sensitive to the dangers of modernist thinking, the temptation to think a single field has all the answers. This is really why I think end-user computing is so important. If we spread the bottom-up knowledge of design principles that are the fundamental boons of programming thinking, then these ideas have greater chance to cross-pollinate with what historians know and economists know and political scientists know, and so on."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595017818.433700",
        "parent_user_id": "U015902ESJC",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMWF81HTP",
                    "U013KEPEJ2H",
                    "U5STGTB3J",
                    "UU45NNMHT"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "6df845b6-66b7-401e-8b8e-d67383059db7",
        "type": "message",
        "text": "Some initial reactions from your comments on hacker news: \"Imagine a world where code sharing took place but with no guarantees for the future. This version here makes certain guarantees, but if you upgrade or do a git pull, all bets are off. It might delete a function you rely heavily on. Or it may make it work differently one time in a thousand[8] and cause subtle, insidious bugs.\" - I would argue that this is already true. I have been DevOps and Uptime lead at my current company 90%+ of the time I have been there. Top 3 things that caused me nightmares were upgrading library dependencies and deploying to production. That s*** goes south in subtle ways you don't catch until users hit it. I've actively campaigned for more automated testing and fewer dependencies for a significant chunk of time.\n\nSo, your argument to embrace testing resonates with me. I suppose I would say, we should just embrace the facts on the ground and assume everything will break and plan accordingly.",
        "user": "U015902ESJC",
        "ts": "1595022040.435600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vioA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some initial reactions from your comments on hacker news: \"Imagine a world where code sharing took place but with no guarantees for the future. This version here makes certain guarantees, but if you upgrade or do a git pull, all bets are off. It might delete a function you rely heavily on. Or it may make it work differently one time in a thousand[8] and cause subtle, insidious bugs.\" - I would argue that this is already true. I have been DevOps and Uptime lead at my current company 90%+ of the time I have been there. Top 3 things that caused me nightmares were upgrading library dependencies and deploying to production. That s*** goes south in subtle ways you don't catch until users hit it. I've actively campaigned for more automated testing and fewer dependencies for a significant chunk of time.\n\nSo, your argument to embrace testing resonates with me. I suppose I would say, we should just embrace the facts on the ground and assume everything will break and plan accordingly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595017818.433700",
        "parent_user_id": "U015902ESJC",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "49ac8c73-4b9f-4839-b83f-8e90f5cd3b6c",
        "type": "message",
        "text": "No and no :disappointed:.\n\nI wrote roughly 30 pages exploring visual programming and describing the project... and then discovered this community. Looking back at it, it reads like somebody trying to map an alien landscape only to discover the landscape is both inhabited and well mapped. I should really go back and turn the project outline bits into a blog post.\n\nThere's also no code online yet. I want to have a working compiler and editor before I publish a first draft. So far, I've got an on-disk format and a read-only visualizer. I'll be working on a little interpreter for the next few weeks, then I'm going to go back and make the visualizer interactive. Its very much a 'when I have free time' sort of project.",
        "user": "U01448TH3PG",
        "ts": "1595022652.435800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lEe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No and no "
                            },
                            {
                                "type": "emoji",
                                "name": "disappointed"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nI wrote roughly 30 pages exploring visual programming and describing the project... and then discovered this community. Looking back at it, it reads like somebody trying to map an alien landscape only to discover the landscape is both inhabited and well mapped. I should really go back and turn the project outline bits into a blog post.\n\nThere's also no code online yet. I want to have a working compiler and editor before I publish a first draft. So far, I've got an on-disk format and a read-only visualizer. I'll be working on a little interpreter for the next few weeks, then I'm going to go back and make the visualizer interactive. Its very much a 'when I have free time' sort of project."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594950008.415300",
        "parent_user_id": "UJN1TAYEQ"
    }
]