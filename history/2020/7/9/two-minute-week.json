[
    {
        "client_msg_id": "d619da63-f1f0-4c50-ac34-9249863baa00",
        "type": "message",
        "text": "Well, this is only part of the puzzle; the Visual stuff is part of the app, and I\u2019m actively working on integrating the two (while realising all the work that is left to do!). My loose deadline is Christmas for shipping \u2018something\u2019 :wink:.",
        "user": "UUQ2EQW21",
        "ts": "1594281906.086200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2/B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, this is only part of the puzzle; the Visual stuff is part of the app, and I\u2019m actively working on integrating the two (while realising all the work that is left to do!). My loose deadline is Christmas for shipping \u2018something\u2019 "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593975507.068300",
        "parent_user_id": "UUQ2EQW21"
    },
    {
        "client_msg_id": "a5e04b2e-659e-4669-93ef-453181fdc195",
        "type": "message",
        "text": "Great demo. The glamour here is the \"IDE\" and UX, but I think the value is the big library of \"pre-chewed\" APIs behind the scenes.\n\nI am interested why you didn't choose to have something like string literals for \"Who is online?\". To me this phrase could be interpreted like the second half of the program - as a command to fetch online users.\n\nHow do I write the program where I shout out usernames, and Alexa responds with either  \"online\" or \"offline\"?",
        "user": "UDQBTJ211",
        "ts": "1594294701.086800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1594294741.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "esN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great demo. The glamour here is the \"IDE\" and UX, but I think the value is the big library of \"pre-chewed\" APIs behind the scenes.\n\nI am interested why you didn't choose to have something like string literals for \"Who is online?\". To me this phrase could be interpreted like the second half of the program - as a command to fetch online users.\n\nHow do I write the program where I shout out usernames, and Alexa responds with either  \"online\" or \"offline\"?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "254efedc-807e-4dcc-b705-bd3fd4002c20",
        "type": "message",
        "text": "<@UDQBTJ211> Thank you for your comment. It\u2019s very important to keep in mind that it\u2019s not a programming language; we are not constrained or bound to parsing plain-text with a compiler \u2014 We can represent the resulting application in many ways. The adding quotations arounds a string is something we will user test after more of the product is complete as we have complete free reign over experimenting with the way the program is represented.\n\nYour question about how to write an alexa skill for \u201cIs {person} online?\u201d would be something along the lines of\n\n```when Alexa hears \"Is {name} online?\"\n     Slack lookup user by name\n     if user is online\n         reply with \"Yes\"\n     else\n         reply wit \"No\"```\n*Note* that I adding string laterals here to demonstrate that we can, at any point. It\u2019s only a css decoration.\n*Note* there are no variables; we keep things in scope and the user can reference traits of things in scope without directly linking them. This may sound odd; it\u2019s a novel approach \u2014 during the dialog-driven interaction the user will confirm trait relationships therefore not requiring: `user = \u2026 user.is_active`",
        "user": "UJKKBAMLL",
        "ts": "1594301780.087100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TkrHp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " Thank you for your comment. It\u2019s very important to keep in mind that it\u2019s not a programming language; we are not constrained or bound to parsing plain-text with a compiler \u2014 We can represent the resulting application in many ways. The adding quotations arounds a string is something we will user test after more of the product is complete as we have complete free reign over experimenting with the way the program is represented.\n\nYour question about how to write an alexa skill for \u201cIs {person} online?\u201d would be something along the lines of\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "when Alexa hears \"Is {name} online?\"\n     Slack lookup user by name\n     if user is online\n         reply with \"Yes\"\n     else\n         reply wit \"No\""
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Note",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that I adding string laterals here to demonstrate that we can, at any point. It\u2019s only a css decoration.\n"
                            },
                            {
                                "type": "text",
                                "text": "Note",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " there are no variables; we keep things in scope and the user can reference traits of things in scope without directly linking them. This may sound odd; it\u2019s a novel approach \u2014 during the dialog-driven interaction the user will confirm trait relationships therefore not requiring: "
                            },
                            {
                                "type": "text",
                                "text": "user = \u2026 user.is_active",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "20c0c17d-b2cd-4e06-861d-8b3b3916511f",
        "type": "message",
        "text": "In full transparency, developers tend to find the product confusing because it does not fit into their word very well \u2014 they tend to question how things are possible or try to change the design to match their trained knowledge. When you present this to non-developers they have a stronger relationship and understanding to it due to their lack of knowledge of other traditional PLs. But really\u2026 how different is that statement to visual programming :shrug: which also changes the paradigm but a lot more where the \u201clanguage knowledge\u201d is almost entirely unnecessary.",
        "user": "UJKKBAMLL",
        "ts": "1594301941.087300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pGN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In full transparency, developers tend to find the product confusing because it does not fit into their word very well \u2014 they tend to question how things are possible or try to change the design to match their trained knowledge. When you present this to non-developers they have a stronger relationship and understanding to it due to their lack of knowledge of other traditional PLs. But really\u2026 how different is that statement to visual programming "
                            },
                            {
                                "type": "emoji",
                                "name": "shrug"
                            },
                            {
                                "type": "text",
                                "text": " which also changes the paradigm but a lot more where the \u201clanguage knowledge\u201d is almost entirely unnecessary."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "02CB2F1A-8AC5-42A0-9B1C-4EB49D43424E",
        "type": "message",
        "text": "\n&gt; *Note* there are no variables; we keep things in scope and the user can reference traits of things in scope without directly linking them. This may sound odd; it\u2019s a novel approach \u2014 during the dialog-driven interaction the user will confirm trait relationships therefore not requiring: `user = \u2026 user.is_active`\n&gt; \ni\u2019ve said this before and i\u2019ll say it again: this is the coolest part about storyscript to me: an enormous part of the cognitive load of programming is tracing dependencies back up the chain via identifiers. how much of the \u201ccompiler in your head\u201d is devoted to a vtable lookup?",
        "user": "UHWC9PXBL",
        "ts": "1594305993.090300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eP1MK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Note",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " there are no variables; we keep things in scope and the user can reference traits of things in scope without directly linking them. This may sound odd; it\u2019s a novel approach \u2014 during the dialog-driven interaction the user will confirm trait relationships therefore not requiring: "
                            },
                            {
                                "type": "text",
                                "text": "user = \u2026 user.is_active",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i\u2019ve said this before and i\u2019ll say it again: this is the coolest part about storyscript to me: an enormous part of the cognitive load of programming is tracing dependencies back up the chain via identifiers. how much of the \u201ccompiler in your head\u201d is devoted to a vtable lookup?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJKKBAMLL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "A9A35EC3-E5CF-46AB-9826-DA06D9E44135",
        "type": "message",
        "text": "incidentally, IMO: node-and-wire visual programming simply turns this lookup into a visual artifact: a big squiggly line. what if we just eliminated that whole line?",
        "user": "UHWC9PXBL",
        "ts": "1594306055.092000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1594306066.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LOj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "incidentally, IMO: node-and-wire visual programming simply turns this lookup into a visual artifact: a big squiggly line. what if we just eliminated that whole line?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "expressionless",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "FA630AD0-8F39-4F29-96B3-3D1A3165081A",
        "type": "message",
        "text": "a lot of the abstraction or functional programming is eliminating mutation by making that line longer\u2014what would be \u201cmutate the object but keep the reference name the same\u201d becomes `x''''` over the course of your program\n\nwhich is why pipelining and currying/point-free feels so nice.\n\nbut what if that\u2019s just sublimating the change-over-time issue?",
        "user": "UHWC9PXBL",
        "ts": "1594306268.095400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1594319042.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=yJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a lot of the abstraction or functional programming is eliminating mutation by making that line longer\u2014what would be \u201cmutate the object but keep the reference name the same\u201d becomes "
                            },
                            {
                                "type": "text",
                                "text": "x''''",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " over the course of your program\n\nwhich is why pipelining and currying/point-free feels so nice.\n\nbut what if that\u2019s just sublimating the change-over-time issue?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "87473075-0949-457a-b7e3-00a657e76a2b",
        "type": "message",
        "text": "Thank you <@UHWC9PXBL>! Well stated observations. We are excited to share more concepts of how we manage scope, references, and traits of outputs. It\u2019s novel, no doubt, and it\u2019s our job to convey this in the UX in the most easy way possible.",
        "user": "UJKKBAMLL",
        "ts": "1594307040.095800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=WZ=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you "
                            },
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": "! Well stated observations. We are excited to share more concepts of how we manage scope, references, and traits of outputs. It\u2019s novel, no doubt, and it\u2019s our job to convey this in the UX in the most easy way possible."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "<@UDQBTJ211> This screenshot shows another theme that is more for our internal engineering purposes. As you can see, the concepts at play are not plain-text but <html> blocks that are decorated with text and design.",
        "files": [
            {
                "id": "F016T06BGH3",
                "created": 1594313086,
                "timestamp": 1594313086,
                "name": "Screen Shot 2020-07-09 at 9.33.42 AM.png",
                "title": "Screen Shot 2020-07-09 at 9.33.42 AM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UJKKBAMLL",
                "editable": false,
                "size": 24087,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F016T06BGH3/screen_shot_2020-07-09_at_9.33.42_am.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F016T06BGH3/download/screen_shot_2020-07-09_at_9.33.42_am.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F016T06BGH3-c5d3d40d90/screen_shot_2020-07-09_at_9.33.42_am_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F016T06BGH3-c5d3d40d90/screen_shot_2020-07-09_at_9.33.42_am_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F016T06BGH3-c5d3d40d90/screen_shot_2020-07-09_at_9.33.42_am_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 59,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F016T06BGH3-c5d3d40d90/screen_shot_2020-07-09_at_9.33.42_am_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 79,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F016T06BGH3-c5d3d40d90/screen_shot_2020-07-09_at_9.33.42_am_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F016T06BGH3-c5d3d40d90/screen_shot_2020-07-09_at_9.33.42_am_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 118,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F016T06BGH3-c5d3d40d90/screen_shot_2020-07-09_at_9.33.42_am_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 131,
                "original_w": 920,
                "original_h": 151,
                "thumb_tiny": "AwAHADDR2fNnc3503aSedy/RqkooAaUz/Ew+hpPL/wBtvzp9FADQmP4mP1pcH1paKAP/2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UJKKBAMLL/F016T06BGH3/screen_shot_2020-07-09_at_9.33.42_am.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F016T06BGH3-7c8300e6ba",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k5KGN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " This screenshot shows another theme that is more for our internal engineering purposes. As you can see, the concepts at play are not plain-text but <html> blocks that are decorated with text and design."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UJKKBAMLL",
        "display_as_bot": false,
        "ts": "1594313152.096100",
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "b7e7715b-8de8-4698-83f0-464abedee8f9",
        "type": "message",
        "text": "Yes, I see. Is this taxonomy (ActivatorStart, Service etc) going to be known to the users or just an implementation detail?",
        "user": "UDQBTJ211",
        "ts": "1594313282.096500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1FE5u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, I see. Is this taxonomy (ActivatorStart, Service etc) going to be known to the users or just an implementation detail?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "59f821b7-8931-4c00-8485-77e48b72bb2c",
        "type": "message",
        "text": "No, the taxonomy is internal only",
        "user": "UJKKBAMLL",
        "ts": "1594313305.096700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=0oh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, the taxonomy is internal only"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1594231720.083400",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDQBTJ211"
                ],
                "count": 1
            }
        ]
    }
]