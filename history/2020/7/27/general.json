[
    {
        "client_msg_id": "318e2108-06bc-44eb-8589-7ec7bb678cf9",
        "type": "message",
        "text": "What I find most shocking about Excel is how often you conceptually have regions with the \"same\" formula (just references varying) with very little help from the tool to maintain the integrity of this \"formula.\"",
        "user": "UA14TGLTC",
        "ts": "1595818616.126400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wGU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What I find most shocking about Excel is how often you conceptually have regions with the \"same\" formula (just references varying) with very little help from the tool to maintain the integrity of this \"formula.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595687145.037700",
        "parent_user_id": "USH01JEDQ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e69d14a8-eb20-4c23-9a6a-30849d3156c9",
        "type": "message",
        "text": "Disregarding performance or implementation concerns, is *self-describing* data the way to go? Is there a conceptually \"nice\" approach to encoding the meaning of data other than composing it from well-defined attributes? Do schemas have any purpose beyond acting as a \"type system\" and a data compression technique? Should every piece of data in a programming system be self-describing? We can compress away the redundant descriptions within collections.",
        "user": "UCGAK10LS",
        "ts": "1595835444.131100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595835776.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xSOoX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Disregarding performance or implementation concerns, is "
                            },
                            {
                                "type": "text",
                                "text": "self-describing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " data the way to go? Is there a conceptually \"nice\" approach to encoding the meaning of data other than composing it from well-defined attributes? Do schemas have any purpose beyond acting as a \"type system\" and a data compression technique? Should every piece of data in a programming system be self-describing? We can compress away the redundant descriptions within collections."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "reply_count": 13,
        "reply_users_count": 4,
        "latest_reply": "1596293555.050800",
        "reply_users": [
            "UC6997THT",
            "UCGAK10LS",
            "UJN1TAYEQ",
            "U5STGTB3J"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "5e4adebc-33ba-4110-be28-67c475f3a8b5",
        "type": "message",
        "text": "There\u2019s this very intriguing bijection happening between maps and Lambda Calculus. Linking to my tweet as I have collected some relevant stuff connected with Lambda Calculus and Graph theory there: <https://twitter.com/prathyvsh/status/1284124568831975425>",
        "user": "UDKTZSD6H",
        "ts": "1595842508.131500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/prathyvsh|@prathyvsh>: Serendipitous discovery of the day. Connection between Lambda Calculus and the 4-Color Problem from graph theory!\n\nSlides here: <https://www.cs.bham.ac.uk/~zeilbern/talks/lam4ct.pdf> <https://pbs.twimg.com/media/EdIgU0oUMAAcc7u.png>",
                "ts": 1594994129,
                "author_name": "Prathyush",
                "author_link": "https://twitter.com/prathyvsh/status/1284124568831975425",
                "author_icon": "https://pbs.twimg.com/profile_images/1157092207075061760/v_xB---l_normal.jpg",
                "author_subname": "@prathyvsh",
                "text": "Serendipitous discovery of the day. Connection between Lambda Calculus and the 4-Color Problem from graph theory!\n\nSlides here: <https://www.cs.bham.ac.uk/~zeilbern/talks/lam4ct.pdf> <https://pbs.twimg.com/media/EdIgU0oUMAAcc7u.png>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/prathyvsh/status/1284124568831975425",
                "image_url": "https://pbs.twimg.com/media/EdIgU0oUMAAcc7u.png",
                "image_width": 1200,
                "image_height": 782,
                "image_bytes": 214873,
                "id": 1,
                "original_url": "https://twitter.com/prathyvsh/status/1284124568831975425",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fyz+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There\u2019s this very intriguing bijection happening between maps and Lambda Calculus. Linking to my tweet as I have collected some relevant stuff connected with Lambda Calculus and Graph theory there: "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/prathyvsh/status/1284124568831975425"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595773345.109000",
        "parent_user_id": "UT60XSVCN"
    },
    {
        "client_msg_id": "b3569990-bc16-48d7-8ff9-d06cf281b127",
        "type": "message",
        "text": "What does \"self-describing\" mean? Are you going to label every number what it is? A price? A price in dollars? A price of a TV in dollars? A price of a Sony TV in dollars? A price of a Sony TV model KHL123456 in dollars? etc...\n\nHow about this other number. It's an area of a house floor plan in square meters. Will it be labeled how accurate it is? Is it rounded to the nearest square meter? Is all area inside the outside edges of the walls (so it includes the walls?) or is the space between walls? Does unusable space like a staircase get included?\n\nJust trying to clarify what \"self-describing\" means\n\nDo you need a giant taxonomy of categories?",
        "user": "UC6997THT",
        "ts": "1595844669.131800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC6997THT",
            "ts": "1595844995.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K/Cg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What does \"self-describing\" mean? Are you going to label every number what it is? A price? A price in dollars? A price of a TV in dollars? A price of a Sony TV in dollars? A price of a Sony TV model KHL123456 in dollars? etc...\n\nHow about this other number. It's an area of a house floor plan in square meters. Will it be labeled how accurate it is? Is it rounded to the nearest square meter? Is all area inside the outside edges of the walls (so it includes the walls?) or is the space between walls? Does unusable space like a staircase get included?\n\nJust trying to clarify what \"self-describing\" means\n\nDo you need a giant taxonomy of categories?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "F0A721B4-C147-492F-8D81-E7B3A0EDCC87",
        "type": "message",
        "text": "Taxonomies are an orthogonal issue. A self-describing data object is (according to me) just one that contains all the metadata (e.g. references to standardised attribute definitions) needed to determine the information it contains. The actual amount of information stored in the object (level of detail) is also an orthogonal issue.",
        "user": "UCGAK10LS",
        "ts": "1595855835.137500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595861103.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VX86z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Taxonomies are an orthogonal issue. A self-describing data object is (according to me) just one that contains all the metadata (e.g. references to standardised attribute definitions) needed to determine the information it contains. The actual amount of information stored in the object (level of detail) is also an orthogonal issue."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595835444.131100",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "3c6e4a2b-0073-4e1a-8228-9c086db71639",
        "type": "message",
        "text": "With regards to how one might have the benefits of market societies without the inhumanity of them, I rather like <https://www.globalutmaning.se/wp-content/uploads/sites/8/2011/01/Davos-The-nordic-way-final.pdf|the Nordic model> as a starting point:\n&gt; [O]ne can discern over the course of the twentieth century an overarching ambition in the Nordic countries not to socialize the economy but to\u00a0*liberate the individual citizen from all forms of subordination and dependency*\u00a0within the family and in civil society:\u00a0*the poor from charity, the workers from their employers, wives from their husbands, children from parents \u2013 and vice versa when the parents become elderly*\u00a0[\u2026] legislation has made the Nordic countries into the least family-dependent and most individualized societies on the face of the earth. To be sure, the family remains a central social institution in the Nordic countries, but it too is infused with the same moral logic stressing autonomy and equality. The ideal family is made up of adults who work and are not financially dependent on the other, and children who are encouraged to be as independent as early as possible.\n&gt; [... and particularly this statement about love ...]\n&gt; [A]uthentic relationships of love and friendship are only possible between individuals who do not depend on each other or stand in unequal power relations. Thus autonomy, equality and (statist) individualism are inextricably linked to each other.\nThat said, I also have sympathy for Freinacht's concerns about personal freedoms within these sorts of structures.",
        "user": "U013ZLJARC7",
        "ts": "1595857668.137800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qWl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "With regards to how one might have the benefits of market societies without the inhumanity of them, I rather like "
                            },
                            {
                                "type": "link",
                                "url": "https://www.globalutmaning.se/wp-content/uploads/sites/8/2011/01/Davos-The-nordic-way-final.pdf",
                                "text": "the Nordic model"
                            },
                            {
                                "type": "text",
                                "text": " as a starting point:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[O]ne can discern over the course of the twentieth century an overarching ambition in the Nordic countries not to socialize the economy but to\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "liberate the individual citizen from all forms of subordination and dependency",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0within the family and in civil society:\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "the poor from charity, the workers from their employers, wives from their husbands, children from parents \u2013 and vice versa when the parents become elderly",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0[\u2026] legislation has made the Nordic countries into the least family-dependent and most individualized societies on the face of the earth. To be sure, the family remains a central social institution in the Nordic countries, but it too is infused with the same moral logic stressing autonomy and equality. The ideal family is made up of adults who work and are not financially dependent on the other, and children who are encouraged to be as independent as early as possible.\n[... and particularly this statement about love ...]\n[A]uthentic relationships of love and friendship are only possible between individuals who do not depend on each other or stand in unequal power relations. Thus autonomy, equality and (statist) individualism are inextricably linked to each other."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That said, I also have sympathy for Freinacht's concerns about personal freedoms within these sorts of structures."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595686084.036400",
        "parent_user_id": "U014WA16VNJ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "451727b0-a73b-46fa-ae5a-6fdb0e78ce19",
        "type": "message",
        "text": "is there anyone familiar enough with OpenAI\u2019s GPT-3 to tell me if you can use it in this way:\nYou feed it a text and then ask it questions about the text in the form:\n\u2022 How do I do X?\n\u2022 What are the main concepts present in the text?\nI\u2019m thinking of something like Progressive Summarization: <https://fortelabs.co/blog/progressive-summarization-a-practical-technique-for-designing-discoverable-notes>\n\nI hope my question makes sense",
        "user": "UDQKHNP51",
        "ts": "1595860544.141000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDQKHNP51",
            "ts": "1595862907.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ciUXK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is there anyone familiar enough with OpenAI\u2019s GPT-3 to tell me if you can use it in this way:\nYou feed it a text and then ask it questions about the text in the form:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "How do I do X?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What are the main concepts present in the text?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI\u2019m thinking of something like Progressive Summarization: "
                            },
                            {
                                "type": "link",
                                "url": "https://fortelabs.co/blog/progressive-summarization-a-practical-technique-for-designing-discoverable-notes"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI hope my question makes sense"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "71fd4bea-ffa2-4827-a63d-ff3557c56cec",
        "type": "message",
        "text": "What are good related podcasts you've listened to? (aside the FoC one, of course) I can recommend Meta Muse. <https://twitter.com/MuseAppHQ>",
        "user": "U010328JA1E",
        "ts": "1595869042.144000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Muse (@MuseAppHQ) | Twitter",
                "title_link": "https://twitter.com/MuseAppHQ",
                "text": "The latest Tweets from Muse (@MuseAppHQ). Muse is a fluid workspace for iPad+Pencil",
                "fallback": "Muse (@MuseAppHQ) | Twitter",
                "from_url": "https://twitter.com/MuseAppHQ",
                "service_icon": "https://abs.twimg.com/icons/apple-touch-icon-192x192.png",
                "service_name": "twitter.com",
                "id": 1,
                "original_url": "https://twitter.com/MuseAppHQ"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HQW9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are good related podcasts you've listened to? (aside the FoC one, of course) I can recommend Meta Muse. "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/MuseAppHQ"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595869042.144000",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1595877698.148500",
        "reply_users": [
            "U01661S9F34",
            "ULK0Z4MPV",
            "U010328JA1E",
            "U5STGTB3J"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a127cfb5-2621-48e6-a9a0-8431f356798b",
        "type": "message",
        "text": "I'm a huge podcast fan. Here is comes the deluge :slightly_smiling_face:\n\n\"<https://corecursive.com/|CoRecursive with Adam Gordon Bell>\" is a good overview of a wide range of \"survey of different programming languages\" type topics.\n\n\"<https://oxide.computer/podcast/|On the Metal>\" by Oxide computer company is amazing if you are interested in hardware at all. Even if you aren't, it's worth listening to for the history. They interview some real giants from the early days of Silicon Valley. Jeff Rothschild for example, as well as Jonathan Blow.\n\n\"<https://artmusictech.libsyn.com/|Art + Music + Technology with Darwin Grosse>\" - I found out about this podcast from the Miller Puckette episode of FOC. It's centered around an electronic music niche, but there are some fascinating nuggets there.\n\n\"<https://brainsciencepodcast.com/|Brain Science with Ginger Campbell>\" - not directly CS or Code related, but if you are interested in AI or Philosophy of Mind, or anything related to how the brain works, this podcast is highly underrated. Dr. Campbell is a medical doctor, and she interviews many top neuroscience researchers. It can get a bit technical with some neuro-science specific jargon, but she always makes an effort to make it understandable to wider audience.\n\nThe latest I have tried is, \"<https://generativeartistry.com/episodes/|Generative Art - The Podcast>\". I just started this one. It is interesting, but I'm not sure of the substantive content yet.",
        "user": "U01661S9F34",
        "ts": "1595870845.144300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1595870861.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VF7K+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm a huge podcast fan. Here is comes the deluge "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "\n\n\""
                            },
                            {
                                "type": "link",
                                "url": "https://corecursive.com/",
                                "text": "CoRecursive with Adam Gordon Bell"
                            },
                            {
                                "type": "text",
                                "text": "\" is a good overview of a wide range of \"survey of different programming languages\" type topics.\n\n\""
                            },
                            {
                                "type": "link",
                                "url": "https://oxide.computer/podcast/",
                                "text": "On the Metal"
                            },
                            {
                                "type": "text",
                                "text": "\" by Oxide computer company is amazing if you are interested in hardware at all. Even if you aren't, it's worth listening to for the history. They interview some real giants from the early days of Silicon Valley. Jeff Rothschild for example, as well as Jonathan Blow.\n\n\""
                            },
                            {
                                "type": "link",
                                "url": "https://artmusictech.libsyn.com/",
                                "text": "Art + Music + Technology with Darwin Grosse"
                            },
                            {
                                "type": "text",
                                "text": "\" - I found out about this podcast from the Miller Puckette episode of FOC. It's centered around an electronic music niche, but there are some fascinating nuggets there.\n\n\""
                            },
                            {
                                "type": "link",
                                "url": "https://brainsciencepodcast.com/",
                                "text": "Brain Science with Ginger Campbell"
                            },
                            {
                                "type": "text",
                                "text": "\" - not directly CS or Code related, but if you are interested in AI or Philosophy of Mind, or anything related to how the brain works, this podcast is highly underrated. Dr. Campbell is a medical doctor, and she interviews many top neuroscience researchers. It can get a bit technical with some neuro-science specific jargon, but she always makes an effort to make it understandable to wider audience.\n\nThe latest I have tried is, \""
                            },
                            {
                                "type": "link",
                                "url": "https://generativeartistry.com/episodes/",
                                "text": "Generative Art - The Podcast"
                            },
                            {
                                "type": "text",
                                "text": "\". I just started this one. It is interesting, but I'm not sure of the substantive content yet."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595869042.144000",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U010328JA1E",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "cake",
                "users": [
                    "ULK0Z4MPV",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "d0c92a3b-c38e-476d-838d-d3bb6827ffca",
        "type": "message",
        "text": "This episode of 99 Percent Invisible is one of my favourites. It's on the invention of the computer mouse and ideas around simplicity / ease of learning vs. complexity / longer term productivity\n<https://99percentinvisible.org/episode/of-mice-and-men/>",
        "user": "ULK0Z4MPV",
        "ts": "1595873635.145300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "ULK0Z4MPV",
            "ts": "1595873645.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eE+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This episode of 99 Percent Invisible is one of my favourites. It's on the invention of the computer mouse and ideas around simplicity / ease of learning vs. complexity / longer term productivity\n"
                            },
                            {
                                "type": "link",
                                "url": "https://99percentinvisible.org/episode/of-mice-and-men/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595869042.144000",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U010328JA1E",
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "0f44cf6c-a2c8-442e-88ce-368f21e91975",
        "type": "message",
        "text": "more recommendations (in youtube format): Jonathan Blow's channel and Tools and Craft (<https://www.youtube.com/watch?v=3HPriE2a5yc&amp;list=PLzaYMdbJMZW1KYU52yJvYVo-DStoY7UMH>)",
        "user": "U010328JA1E",
        "ts": "1595875049.146200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Tools &amp; Craft: Louis Pouzin",
                "title_link": "https://www.youtube.com/watch?v=3HPriE2a5yc",
                "author_name": "Notion",
                "author_link": "https://www.youtube.com/channel/UCoSvlWS5XcwaSzIcbuJ-Ysg",
                "thumb_url": "https://i.ytimg.com/vi/3HPriE2a5yc/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Tools & Craft: Louis Pouzin",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/3HPriE2a5yc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=3HPriE2a5yc",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=3HPriE2a5yc&amp;list=PLzaYMdbJMZW1KYU52yJvYVo-DStoY7UMH"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HXC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "more recommendations (in youtube format): Jonathan Blow's channel and Tools and Craft ("
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=3HPriE2a5yc&list=PLzaYMdbJMZW1KYU52yJvYVo-DStoY7UMH"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595869042.144000",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "88599784-E52B-422C-88DF-4FE7FCE59136",
        "type": "message",
        "text": "More about systems design, but definitely related (adding a reference here so it\u2019s all in one place): <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1595578576302300|https://futureofcoding.slack.com/archives/C5T9GPWFL/p1595578576302300>",
        "user": "U5STGTB3J",
        "ts": "1595877698.148500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1595578576302300",
                "fallback": "[July 24th, 2020 1:16 AM] stefanlesser: I think some of you here will enjoy this podcast by Ryan Singer of Basecamp, author of _Shape Up_:\n<https://synthetic.transistor.fm/|https://synthetic.transistor.fm/>",
                "ts": "1595578576.302300",
                "author_id": "U5STGTB3J",
                "author_subname": "Stefan Lesser",
                "channel_id": "C5T9GPWFL",
                "channel_name": "general",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "I think some of you here will enjoy this podcast by Ryan Singer of Basecamp, author of _Shape Up_:\n<https://synthetic.transistor.fm/|https://synthetic.transistor.fm/>",
                "author_name": "Stefan Lesser",
                "author_link": "https://futureofcoding.slack.com/team/U5STGTB3J",
                "author_icon": "https://avatars.slack-edge.com/2017-08-20/228447816352_649181907e06ec450c64_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1595578576302300",
                "footer": "Thread in #general"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xu3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More about systems design, but definitely related (adding a reference here so it\u2019s all in one place): "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1595578576302300",
                                "text": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1595578576302300"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595869042.144000",
        "parent_user_id": "U010328JA1E",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULK0Z4MPV",
                    "UMWF81HTP",
                    "U010328JA1E"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "32372FE3-DBDB-486B-B929-8E1B4C6822B9",
        "type": "message",
        "text": "An earlier thread I started asked why people thought so little progress has been made in \u201cfuture of coding\u201d style dev tools. After seeing how spreadsheets are being used, I\u2019m starting to think the answer is that spreadsheets have been a good enough solution to saturate this part of the dev ecosystem and that\u2019s made for relatively few opportunities in the space.",
        "user": "ULM3U6275",
        "ts": "1595879578.155200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1595960498.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pTGwc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An earlier thread I started asked why people thought so little progress has been made in \u201cfuture of coding\u201d style dev tools. After seeing how spreadsheets are being used, I\u2019m starting to think the answer is that spreadsheets have been a good enough solution to saturate this part of the dev ecosystem and that\u2019s made for relatively few opportunities in the space."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595687145.037700",
        "parent_user_id": "USH01JEDQ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "9b5b7cac-b850-432f-b2ca-124af4d6b0e8",
        "type": "message",
        "text": "that's a great example <@UCUSW7WVD>. Saving that info in a comment looks like a great hack, but also makes me sad not having a nicer way to do it :cry:\nYour example also made me think of having benchmarks against \"branches\", as performance could change with upgrades of packages/language or rewrites of other parts of the codebase :thinking_face:",
        "user": "U85HCL7JP",
        "ts": "1595880854.155600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OSF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's a great example "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": ". Saving that info in a comment looks like a great hack, but also makes me sad not having a nicer way to do it "
                            },
                            {
                                "type": "emoji",
                                "name": "cry"
                            },
                            {
                                "type": "text",
                                "text": "\nYour example also made me think of having benchmarks against \"branches\", as performance could change with upgrades of packages/language or rewrites of other parts of the codebase "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595618648.446000",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "cc70af62-5a2b-4a78-8dfd-2c23dbc9d96a",
        "type": "message",
        "text": "I'm not sure how big a \"part of the dev ecosystem\" that spreadsheets consume... A lot of the \"run your business\" cases, definitely, but not that much in terms of how humans can use computers.",
        "user": "USH01JEDQ",
        "ts": "1595884489.156200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/hi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure how big a \"part of the dev ecosystem\" that spreadsheets consume... A lot of the \"run your business\" cases, definitely, but not that much in terms of how humans can use computers."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595687145.037700",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "69f1dc6f-560f-475f-82be-49c7935bafde",
        "type": "message",
        "text": "Yeah, performance is a common scenario here, or to be precise how performance interacts with complexity. On many occasions I've seen someone introduce a lot of complexity for performance, but the measurements that drove it are never revisited. Eventually we find that the performance benefits no longer accrue, while the complexity cost continues to be paid.\n\nIdeally we'd be able to constantly track performance benefits of the trunk over alternatives. Using our existing CI system.",
        "user": "UCUSW7WVD",
        "ts": "1595884803.156500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qnFw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, performance is a common scenario here, or to be precise how performance interacts with complexity. On many occasions I've seen someone introduce a lot of complexity for performance, but the measurements that drove it are never revisited. Eventually we find that the performance benefits no longer accrue, while the complexity cost continues to be paid.\n\nIdeally we'd be able to constantly track performance benefits of the trunk over alternatives. Using our existing CI system."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595618648.446000",
        "parent_user_id": "U85HCL7JP"
    }
]