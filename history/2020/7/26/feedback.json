[
    {
        "client_msg_id": "84900067-7CB5-4CDD-BD22-9D56016EE633",
        "type": "message",
        "text": "1. you should have line numbers printed next to the code if you\u2019re going to reference code by line number\u2014there\u2019s some ambiguity in the motivating example as to whether \u201cline 1\u201d means `let mut v =` or `let x =`.\n2. i\u2019m kind of a dumbass about rust, so more code comments would be helpful for people who (like me) haven\u2019t bothered to learn the syntax (depends on your intended audience)\n3. it might be helpful to reference some of the literature on programming education specifically dealing with (i think they\u2019re referred to as) cognitive schemas (sorry i can\u2019t find the paper i\u2019m thinking of atm)\n4. this seems like the type of thing language designers should absolutely be thinking about. i don\u2019t know much about rust and haven\u2019t learned about the borrow checker but this seems like a pretty solid intro ",
        "user": "UHWC9PXBL",
        "ts": "1595725094.420600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1595763878.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oWr",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "you should have line numbers printed next to the code if you\u2019re going to reference code by line number\u2014there\u2019s some ambiguity in the motivating example as to whether \u201cline 1\u201d means "
                                    },
                                    {
                                        "type": "text",
                                        "text": "let mut v =",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " or "
                                    },
                                    {
                                        "type": "text",
                                        "text": "let x =",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "i\u2019m kind of a dumbass about rust, so more code comments would be helpful for people who (like me) haven\u2019t bothered to learn the syntax (depends on your intended audience)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "it might be helpful to reference some of the literature on programming education specifically dealing with (i think they\u2019re referred to as) cognitive schemas (sorry i can\u2019t find the paper i\u2019m thinking of atm)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "this seems like the type of thing language designers should absolutely be thinking about. i don\u2019t know much about rust and haven\u2019t learned about the borrow checker but this seems like a pretty solid intro "
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "42e8958a-cf23-46d6-8944-7b29ba734afa",
        "type": "message",
        "text": "<@UJN1TAYEQ> Excellent use case!\n\nFirst, about supporting other languages (or combination of languages). Indeed, that is exactly what GT is primarily conceived for. If you have a grammar, adopting it in an editor is straightforward. Connecting to the runtime will take a bit more work, but it is certainly possible already.\n\nSecond, related to rendering. Indeed, we moved the rendering to be based on compositing render layers which allows us to split the scene and send it to either CPUs or GPUs. The goal here is indeed to host other renderings. The underlying rendering is based on Skia. We already use this mechanism to have parts of the drawing do not even get into the Pharo image. For example, a picture goes directly through Skia and get composed into the larger scene.\n\nSo, the plumbing should be in place.",
        "user": "UE1JQM9HQ",
        "ts": "1595763777.420900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uzp1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Excellent use case!\n\nFirst, about supporting other languages (or combination of languages). Indeed, that is exactly what GT is primarily conceived for. If you have a grammar, adopting it in an editor is straightforward. Connecting to the runtime will take a bit more work, but it is certainly possible already.\n\nSecond, related to rendering. Indeed, we moved the rendering to be based on compositing render layers which allows us to split the scene and send it to either CPUs or GPUs. The goal here is indeed to host other renderings. The underlying rendering is based on Skia. We already use this mechanism to have parts of the drawing do not even get into the Pharo image. For example, a picture goes directly through Skia and get composed into the larger scene.\n\nSo, the plumbing should be in place."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595571873.400800",
        "parent_user_id": "UE1JQM9HQ"
    },
    {
        "client_msg_id": "03028d2a-a645-45c6-a567-d5ffe0886709",
        "type": "message",
        "text": "<@UCUSW7WVD> we addressed the slideshows button highlight issue: <https://github.com/feenkcom/gtoolkit/issues/1373>",
        "user": "UE1JQM9HQ",
        "ts": "1595764624.421300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Make slideshows next/previous buttons react on hover \u00b7 Issue #1373 \u00b7 feenkcom/gtoolkit",
                "title_link": "https://github.com/feenkcom/gtoolkit/issues/1373",
                "fallback": "GitHub: Make slideshows next/previous buttons react on hover \u00b7 Issue #1373 \u00b7 feenkcom/gtoolkit",
                "from_url": "https://github.com/feenkcom/gtoolkit/issues/1373",
                "thumb_url": "https://repository-images.githubusercontent.com/100369621/ec735600-500d-11ea-9a26-73e8d72b4d8d",
                "thumb_width": 500,
                "thumb_height": 250,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/feenkcom/gtoolkit/issues/1373"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a2e6G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " we addressed the slideshows button highlight issue: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/feenkcom/gtoolkit/issues/1373"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595571873.400800",
        "parent_user_id": "UE1JQM9HQ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "819c35ca-fda4-456f-bb96-81d5a7c137b6",
        "type": "message",
        "text": "<@UE1JQM9HQ> I want to understand how rendering works in GT.\n\nCurrently, I use OpenGL. I obtain an OpenGL context from the operating system's window manager (Linux, MacOS, Windows), and render my scene to the GPU frame buffer associated with that context. All desktop operating systems now use compositing window managers that allow clients to render graphics into GPU framebuffers. These buffers are then composited within the GPU by the window manager. Crucially, it is not necessary to copy the contents of a Curv GPU framebuffer into CPU memory and then back into the GPU on every frame. All pixel data stays in the GPU.\n\nSo, I hope that GT has or will have the same architecture. I can ask GT for an OpenGL context, then render animated graphics into that context in a loop that runs 60 times per second within my code, and my GPU framebuffer is composited with other framebuffers within the GPU to construct the image that appears in a Pharo window. There is also a queue of input events (mouse, keyboard) that my render loop (written in C++) can read while animating some interactive graphics.",
        "user": "UJN1TAYEQ",
        "ts": "1595770098.421600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MzmPU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " I want to understand how rendering works in GT.\n\nCurrently, I use OpenGL. I obtain an OpenGL context from the operating system's window manager (Linux, MacOS, Windows), and render my scene to the GPU frame buffer associated with that context. All desktop operating systems now use compositing window managers that allow clients to render graphics into GPU framebuffers. These buffers are then composited within the GPU by the window manager. Crucially, it is not necessary to copy the contents of a Curv GPU framebuffer into CPU memory and then back into the GPU on every frame. All pixel data stays in the GPU.\n\nSo, I hope that GT has or will have the same architecture. I can ask GT for an OpenGL context, then render animated graphics into that context in a loop that runs 60 times per second within my code, and my GPU framebuffer is composited with other framebuffers within the GPU to construct the image that appears in a Pharo window. There is also a queue of input events (mouse, keyboard) that my render loop (written in C++) can read while animating some interactive graphics."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595571873.400800",
        "parent_user_id": "UE1JQM9HQ"
    },
    {
        "client_msg_id": "670f10de-c603-41e2-9462-20d6747f4cf8",
        "type": "message",
        "text": "That\u2019s exactly what I wanted to describe above. This is already the architecture of GT.",
        "user": "UE1JQM9HQ",
        "ts": "1595770395.421800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sgv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That\u2019s exactly what I wanted to describe above. This is already the architecture of GT."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595571873.400800",
        "parent_user_id": "UE1JQM9HQ"
    },
    {
        "client_msg_id": "4fb68c3c-badb-44e2-b99b-17d81a82c40e",
        "type": "message",
        "text": "Thanks, that sounds promising. Apple will probably drop support for OpenGL next year and force people to use Metal. I am thinking about migrating from OpenGL to Google's Dawn library, which implements the WebGPU API on many platforms. This would mean that I would be using Metal on MacOS, DX12 on Windows and probably Vulkan or maybe OpenGL on Linux. And that means I would need the ability to ask GT for Metal, DX12 and Vulkan rendering contexts. Is that a problem? Are you limited by the GPU API support in Skia?",
        "user": "UJN1TAYEQ",
        "ts": "1595791554.422100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PS+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, that sounds promising. Apple will probably drop support for OpenGL next year and force people to use Metal. I am thinking about migrating from OpenGL to Google's Dawn library, which implements the WebGPU API on many platforms. This would mean that I would be using Metal on MacOS, DX12 on Windows and probably Vulkan or maybe OpenGL on Linux. And that means I would need the ability to ask GT for Metal, DX12 and Vulkan rendering contexts. Is that a problem? Are you limited by the GPU API support in Skia?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595571873.400800",
        "parent_user_id": "UE1JQM9HQ"
    },
    {
        "client_msg_id": "16781dbb-c100-48c8-a10b-14fce56878a0",
        "type": "message",
        "text": "Thanks <@UHWC9PXBL>! That\u2019s all super helpful feedback.",
        "user": "UFB8STN7K",
        "ts": "1595793509.422300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iFm6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": "! That\u2019s all super helpful feedback."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K",
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c0676c78-cd79-4e18-9801-73c63ba2f5fd",
        "type": "message",
        "text": "4 pages in, and I've already had half a dozen \"aha\"s. :+1: :+1:",
        "user": "UCUSW7WVD",
        "ts": "1595795522.422600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ptb+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "4 pages in, and I've already had half a dozen \"aha\"s. "
                            },
                            {
                                "type": "emoji",
                                "name": "+1"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "+1"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "52639863-9514-4ecc-8554-409d3c2ae00e",
        "type": "message",
        "text": "Great demo video!",
        "user": "UCUSW7WVD",
        "ts": "1595797141.422800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lwmIH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great demo video!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595031472.394700",
        "parent_user_id": "UFXFB1RK8"
    }
]