[
    {
        "client_msg_id": "b45121a3-65f2-4543-a062-15f1d5712037",
        "type": "message",
        "text": "<@UJ6LDMMN0>'s demo today[1] and Avi Bryant's demo a couple of weeks ago[2] has me thinking of this post <@UBN9AFS0N> shared a couple of months ago[3]:\n\n<https://billwadge.wordpress.com/2020/04/20/the-intensional-spreadsheet>\n\n[1] <https://futureofcoding.slack.com/archives/C0120A3L30R/p1593813312058700>\n[2] <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1592347969348200>\n[3] <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1587457167095700>",
        "user": "UCUSW7WVD",
        "ts": "1593821658.282200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1593821687.000000"
        },
        "attachments": [
            {
                "service_name": "Bill Wadge's Blog",
                "service_url": "http://billwadge.wordpress.com",
                "title": "The Intensional Spreadsheet",
                "title_link": "https://billwadge.wordpress.com/2020/04/20/the-intensional-spreadsheet/",
                "author_name": "Bill Wadge",
                "author_link": "https://billwadge.wordpress.com/author/billwadge/",
                "text": "A while back Weichang Du and I designed a spreadsheet based on intensional logic, the&nbsp; logic of values that vary over a coordinate space.\nSpreadsheets are a natural fit for &lsquo;intensifying&rsquo; because a sheet is already a two-dimensional intension, varying over the horizontal (A, B, C, &hellip;) and vertical (1, 2, 3, &hellip;) dimensions. But we can do better than just redo Excel with intensional semantics. Intensionality opens up some interesting possibilities; like user-defined operators, time varying sheets, or nested sheets.\n\nThis post is based on the IEEE Software article Du and I wrote, A Three Dimensional Spreadsheet,&nbsp;but with a different notation (to simplify the presentation).\nThe Fibonacci Numbers\nLet&rsquo;s start with a simple example &ndash; the Fibonacci numbers. Suppose we want to compute them and display them in row 1. In Excel it&rsquo;s easy peasy, we put 0 in cell A1 and 1 in cell B1; then A1+B1 in cell C1, B1+C1 in cell D1, C1+D1 in cell E1, etc. The formulas in the cells are\nA   B     C       D       E      F\n-----------------------------------\n0 | 1 | A1+B1 | B1+C1 | C1+D1 | ...\n\nand the values displayed are\nA   B   C   D   E    F\n-----------------------------------\n0 | 1 | 2 | 3 | 5 | ...\n\nNotice that the formulas in the cells are all different; although if you know Excel, you know that they are all &lsquo;copies&rsquo; of the formula in C2. Not literally copies, but functional copies. The value in cell E1 bears the same relationship to the two values on the left as C1 does to the two values on its left.\nConfused? Never mind, it all works out more simply with the intensional spreadsheet.\nThe basic idea is that we define a sheet (which needs a name, say F) by putting expressions in cells. The difference is that they are in the language of two dimensional intensions. Let&rsquo;s call the horizontal dimension h and the vertical dimension v. We need space versions of the traditional Lucid temporal operators first,&nbsp;next, and fby. (Plus prev).\nLet&rsquo;s call next.h right and prev.h left (for obvious reasons). Then we put the following formulas in the cells A1, B1, C1, &hellip;\nA   B          C                      D                       E                \n------------------------------------------------------------------------------\n0 | 1 | left F + left left F | left F + left left F  | left F + left left F  | ...\n\nThe first thing to notice is that apart from the first two, the formulas are exactly the same. Copying in the intensional spreadsheet is just that.\nAlso evaluation is just that. To get (for example) the numerical value of the cell D1, we evaluate the formula stored in D1. This evaluation will entail evaluating the formulas in C1 and eventually in A1 and B1, the base cases of the recursion. Note that this is eduction (more below).\n[It&rsquo;s been pointed out that you can get something close to this with R1C1 notation. R[-2]C is the cell two columns to the left on the same row. This notation is not as general; for example we can write left(F+left F).]\nAbsolute References\nIt should be clear that most spread sheets are easily formulated in the new notation. The only question is how to do what are known as &lsquo;absolute&nbsp; references&rsquo;, that are not altered by traditional copying. One approach is to use expressions like A2 as absolute coordinates; so that e.g. F.A2 is the contents of exactly the A2 cell of F (in the above, 1) and it gets copied as exactly F.A2.\nAs a special case, we have operators side and top that take us to the side and top of the sheet, respectively. So side F is F.A and top F is F.0.\nDefault Formulas\nThe fact that all but the first two formulas in the Fibonacci sheet are the same suggests some shortcuts. The user interface could allow us to select a set of cells and put a single formula into each of them.\nAnother idea is to allow us to give a default formula for an entire row (or column), with the understanding that putting formulas in individual cells overrides the default.\nAs another example we could define a sheet P by putting 1 in every cell in row 1, 1 in every cell in column A, and the default formula\nleft P + up P\nin all the other cells of P. The result is to make every column a running total of the column to the left. The result is Pascal&rsquo;s triangle (tilted to the left)\n---------------------\n| 1 | 1 | 1 | 1 | 1 ...\n---------------------\n| 1 | 2 | 3 | 4 | 5 \n---------------------\n| 1 | 3 | 6 |10 |15 \n---------------------\n| 1 | 4 |10 |20 |35 \n---------------------\n| 1 | 5 |15 |35 |70\n--------------------- \n\nGlobal Definitions\nOur spreadsheet design allows for definitions that apply globally. For example, if we add the global definition\nF2 = left F + left left F\nthen we can put F2 in cells C1, D1, E1 etc. We can have global user defined functions like\nleft2(X) = left left X\nand define F2 as\nleft F + left2(F)\nFunctions can of course be defined recursively; for example\nleftsum(X,i) = if i eq 0 then 0 else left X + leftsum(left X,i-1) fi\ndefines e.g. leftsum(F,10) to be the sum of the 10 values to the left. If we want to sum all the values to the left we can add the global definition\nleftsumall(X) = leftsum(X,index.h)\nwhere index.d is the coordinate in the d dimension.\nSpreadstreams\nSince we already have dimensions h and v it&rsquo;s no technical problem to allow the traditional Lucid time dimension t. The result is a three-dimensional spreadsheet which could be understood as a time varying two dimensional spreadsheet. For example, a traditional spreadsheet might display sales (S) of car models by salesman. With the time dimension we can do this for every month, starting with (say) January as month 0.\nThen we can have extra cells (along the side and the bottom) which display totals for model and salesman (for the current month). But with the time dimension we can also display percentage change over the&nbsp; last month. For example of D10 displays Bob&rsquo;s total month sales, we can put the formula\n100*(S &ndash; prev S)/(prev S)\nin D11 which will now display the percentage change in Bob&rsquo;s sales.\nAnother example of a time varying spreadsheet is that for the relaxation method. It is used to give approximate solutions to the Poisson equation &nabla;2 P = 0. It is an iterative process where each (interior) cell value is repeatedly replaced by the average of the values above and below and on either side; for example, the value of F8 is replace by the average of the values of F7, F9, E8 and G8.\nWe can program this by placing the formula\nprev (left P + right P + up P + down P)/4\nin all the interior cells.\nNested spreadsheets\nThe intensional approach allows another generalization: nested spreadsheets. By this we mean that any cell of the main sheet can (but not necessarily does) contain a whole sub-spreadsheet. And that any cell of the sub-spreadsheet might contain a sub-sub-spreadsheet, and so on.\nIndexing makes this simple: any cell of the sub-spreadsheet is indexed by two letter-number combinations. For example, if F8 has a sub-sheet, its cells have coordinates&nbsp; like F8.C10 or F8.H7. In the same way a cell in a sub-sub-sheet might have an index F8.H7.K21.\nNested sheets would allow a very natural way of representing hierarchical data. The top row of the main sheet could hold sales per year and month (two dimensions) and each cell could hold data of sales per month/salesperson (two more dimensions).\nWe would need extra intensional operators which take us down one level or across to neighbouring sheets. We haven&rsquo;t worked out the details.\nDemand-driven evaluation\nThis all sounds extremely ambitious and even impractical; and would be if we tried to implement it with conventional techniques. For example, if the user can open sub-sheets on the fly,&nbsp; how do we know how many cells to allocate?\nIt is all made possible by a simple technique for evaluation of intensional systems, namely demand driven (lazy) evaluation; also called eduction.\nBriefly, it \u2026",
                "fallback": "Bill Wadge's Blog Link: The Intensional Spreadsheet",
                "from_url": "https://billwadge.wordpress.com/2020/04/20/the-intensional-spreadsheet/",
                "service_icon": "https://s0.wp.com/i/webclip.png",
                "id": 4,
                "original_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1587457167095700"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yg9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": "'s demo today[1] and Avi Bryant's demo a couple of weeks ago[2] has me thinking of this post "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " shared a couple of months ago[3]:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://billwadge.wordpress.com/2020/04/20/the-intensional-spreadsheet"
                            },
                            {
                                "type": "text",
                                "text": "\n\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C0120A3L30R/p1593813312058700"
                            },
                            {
                                "type": "text",
                                "text": "\n[2] "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1592347969348200"
                            },
                            {
                                "type": "text",
                                "text": "\n[3] "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1587457167095700"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593821658.282200",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1593897362.325600",
        "reply_users": [
            "UCUSW7WVD",
            "UEQ6M68H0",
            "UJ6LDMMN0",
            "UMH5FAW2Y"
        ],
        "subscribed": true,
        "last_read": "1593897362.325600",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b736f7b3-9e9b-4bb4-bd55-8454a8ead594",
        "type": "message",
        "text": "Another old favorite I'm thinking about: <https://web.archive.org/web/20150905171238/http://www.soe.berkeley.edu/boxer/20reasons.pdf>",
        "user": "UCUSW7WVD",
        "ts": "1593822325.282700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vX1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another old favorite I'm thinking about: "
                            },
                            {
                                "type": "link",
                                "url": "https://web.archive.org/web/20150905171238/http://www.soe.berkeley.edu/boxer/20reasons.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593821658.282200",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "c4526968-09c9-4280-984a-0075578197f6",
        "type": "message",
        "text": "(Be careful, though, of taking claims of pegagogical efficacy at face value: <https://dl.acm.org/doi/pdf/10.1145/3274287> via <@UFB8STN7K>'s <https://futureofcoding.slack.com/archives/C5T9GPWFL/p1591498636036100>)",
        "user": "UCUSW7WVD",
        "ts": "1593822577.282900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1593822599.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i7q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Be careful, though, of taking claims of pegagogical efficacy at face value: "
                            },
                            {
                                "type": "link",
                                "url": "https://dl.acm.org/doi/pdf/10.1145/3274287"
                            },
                            {
                                "type": "text",
                                "text": " via "
                            },
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": "'s "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1591498636036100"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593821658.282200",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "db47c1c9-49d4-4df5-876d-326d421d2611",
        "type": "message",
        "text": "Just saw this. <@UFLN9JFRT> yes they are. We also removed the vesting \u201ccliff\u201d for people who had not been here a year (so eg they\u2019d get 7 months of options if they\u2019d been there 7 months, as opposed to nothing)",
        "user": "U6BRN7A0Y",
        "ts": "1593832130.283600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OFv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just saw this. "
                            },
                            {
                                "type": "user",
                                "user_id": "UFLN9JFRT"
                            },
                            {
                                "type": "text",
                                "text": " yes they are. We also removed the vesting \u201ccliff\u201d for people who had not been here a year (so eg they\u2019d get 7 months of options if they\u2019d been there 7 months, as opposed to nothing)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592922339.405900",
        "parent_user_id": "UGLSY9X3J",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1994d3b9-a0f8-416a-8bad-54a4d25f950d",
        "type": "message",
        "text": "<@UHWC9PXBL> what's super interesting about both Minecraft and Hypercard are the strong and unique cultures of amateur remixing that sprung up around them. I don't think this happens just by accident, nor entirely by the creator's intent(Notch was not very supportive of Minecraft mods at first), I think a lot about what conditions foster it.",
        "user": "UMWF81HTP",
        "ts": "1593835948.284300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sN/+M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " what's super interesting about both Minecraft and Hypercard are the strong and unique cultures of amateur remixing that sprung up around them. I don't think this happens just by accident, nor entirely by the creator's intent(Notch was not very supportive of Minecraft mods at first), I think a lot about what conditions foster it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593659834.110700",
        "parent_user_id": "UMWF81HTP",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "UML4ZEKDK"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "6EFEF1C9-AF0D-48EC-A9EE-CA2514EE0D1D",
        "type": "message",
        "text": "definitely! both seem to have been limited in scope enough to both require customization/creativity and also limited enough to make that feasible for hobbyists. another thing is that those mods or hypercard stacks ended up being likewise limited enough that they were amenable to further remixing by other hobbyists for like refinements on refinements",
        "user": "UHWC9PXBL",
        "ts": "1593836436.287200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zNH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "definitely! both seem to have been limited in scope enough to both require customization/creativity and also limited enough to make that feasible for hobbyists. another thing is that those mods or hypercard stacks ended up being likewise limited enough that they were amenable to further remixing by other hobbyists for like refinements on refinements"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593659834.110700",
        "parent_user_id": "UMWF81HTP",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "235a1c55-7d6a-49cd-8069-7d6fea1acd83",
        "type": "message",
        "text": "<@UKDM3GLAJ> you make a good point.  Far better than help with syntax, a better programming language/tool/environment would help you see the consequences and inconsistencies of your logic.\n\nOn the other hand, it's easy to forget how much basic syntax holds up beginners.  Semantics probably holds them up more, but they don't get that far.",
        "user": "UA14TGLTC",
        "ts": "1593843391.287700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dcx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKDM3GLAJ"
                            },
                            {
                                "type": "text",
                                "text": " you make a good point.  Far better than help with syntax, a better programming language/tool/environment would help you see the consequences and inconsistencies of your logic.\n\nOn the other hand, it's easy to forget how much basic syntax holds up beginners.  Semantics probably holds them up more, but they don't get that far."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UPVBV34EL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6b61101c-0d7d-4b85-84ed-3a0150ab61b3",
        "type": "message",
        "text": "<@U01661S9F34> TabNine is a delightful little assistant for its occasional strokes of genius.  I have a collection of these, all Ruby...\n\nTyping `{\"B1\" =&gt; \"X\", \"B2\" =&gt; \"Y\", \"` gave me the suggested completion `B3\" =&gt; \"Z\"}`.\n\nStarting with `product_demands.map{|` TabNine recommended `|k, v|` then after adding  `\"` it went on with `#{k}=#{v}\"}`.\n\nOr there was the time I got to `bidding_credit_discounted(bidder, [gross - incentive_payment, 0].max)` from typing `b\\t\\t g\\t \\t`.",
        "user": "UA14TGLTC",
        "ts": "1593843974.287900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fOm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " TabNine is a delightful little assistant for its occasional strokes of genius.  I have a collection of these, all Ruby...\n\nTyping "
                            },
                            {
                                "type": "text",
                                "text": "{\"B1\" => \"X\", \"B2\" => \"Y\", \"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " gave me the suggested completion "
                            },
                            {
                                "type": "text",
                                "text": "B3\" => \"Z\"}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nStarting with "
                            },
                            {
                                "type": "text",
                                "text": "product_demands.map{|",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " TabNine recommended "
                            },
                            {
                                "type": "text",
                                "text": "|k, v|",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " then after adding "
                            },
                            {
                                "type": "text",
                                "text": " \"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it went on with "
                            },
                            {
                                "type": "text",
                                "text": "#{k}=#{v}\"}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nOr there was the time I got to "
                            },
                            {
                                "type": "text",
                                "text": "bidding_credit_discounted(bidder, [gross - incentive_payment, 0].max)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " from typing "
                            },
                            {
                                "type": "text",
                                "text": "b\\t\\t g\\t \\t",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01661S9F34",
                    "UKP3B2J5D",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "363B6BBB-194B-4EA4-AF8F-8BC25AF17796",
        "type": "message",
        "text": "<@UHWC9PXBL> I made some cool designs for saving web history that I think you\u2019d like. I\u2019ll have to dig them up later. ",
        "user": "UT9TWSZB5",
        "ts": "1593848992.289500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QK0tY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " I made some cool designs for saving web history that I think you\u2019d like. I\u2019ll have to dig them up later. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV",
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            },
            {
                "name": "muscle",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9F0229F2-A8B5-46EC-A420-25534B76D237",
        "type": "message",
        "text": "I\u2019m also learning some cool stuff about datalog and want to build a personal database for all this kind of stuff",
        "user": "UT9TWSZB5",
        "ts": "1593849048.290700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mUB6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m also learning some cool stuff about datalog and want to build a personal database for all this kind of stuff"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "d56f50af-4d3d-4a66-8448-14a709409da4",
        "type": "message",
        "text": "Lotus made a spreadsheet called Improv for the NextStep OS that was to my thinking the next evolution of the spreadsheet. Unfortunately when Jobs got rehired by Apple, the Next computer was tossed aside, as he had bigger fish to fry, and the tiny installed base of NextStep programmers were left adrift, teams disbanded, etc.  Then Lotus was sold to IBM which was the final blow because new products have great difficulty escaping the mediocrity machine that is the current IBM. I was around when IBM was the greatest company in the world, with constant breakthroughs of fundamental technologies. As others have pointed out Apple was a harvester of existing technology, but IBM invented things.  They had virtual machines in the 60's (CP/CMS), 30 years before VMware. Too bad they didn't push CP/CMS more, it was better than their lousy TSO time sharing system.",
        "user": "UEQ6M68H0",
        "ts": "1593849148.290900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mu72",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lotus made a spreadsheet called Improv for the NextStep OS that was to my thinking the next evolution of the spreadsheet. Unfortunately when Jobs got rehired by Apple, the Next computer was tossed aside, as he had bigger fish to fry, and the tiny installed base of NextStep programmers were left adrift, teams disbanded, etc.  Then Lotus was sold to IBM which was the final blow because new products have great difficulty escaping the mediocrity machine that is the current IBM. I was around when IBM was the greatest company in the world, with constant breakthroughs of fundamental technologies. As others have pointed out Apple was a harvester of existing technology, but IBM invented things.  They had virtual machines in the 60's (CP/CMS), 30 years before VMware. Too bad they didn't push CP/CMS more, it was better than their lousy TSO time sharing system."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593821658.282200",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "91ce4b0f-fc6d-42fa-80e9-a2d29c7a82b9",
        "type": "message",
        "text": "Most interesting: <https://en.wikipedia.org/wiki/Lotus_Improv|https://en.wikipedia.org/wiki/Lotus_Improv>",
        "user": "UCUSW7WVD",
        "ts": "1593850059.291100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MISjv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Most interesting: "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Lotus_Improv",
                                "text": "https://en.wikipedia.org/wiki/Lotus_Improv"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593821658.282200",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "7a918660-c11b-4da0-b8bd-250c13b0f1e7",
        "type": "message",
        "text": "I cannot understand why someone doesn't copy Improv. There is a spreadsheet for Windows from a small firm that does very similar things; can't remember the name. It's a very expensive enterprise type of pricing product.  I know Mitch got rich from the sale to IBM, but I wish he hadn't because Lotus was a real high quality software company, and merging them with IBM was like what Vivendi did to Broderbund and the dozens of other educational software companies, destroy them in the end. Mergers among software companies have a nasty habit of destroying the teams that made the firm great in the first place.",
        "user": "UEQ6M68H0",
        "ts": "1593850887.291300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1593850969.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dMm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I cannot understand why someone doesn't copy Improv. There is a spreadsheet for Windows from a small firm that does very similar things; can't remember the name. It's a very expensive enterprise type of pricing product.  I know Mitch got rich from the sale to IBM, but I wish he hadn't because Lotus was a real high quality software company, and merging them with IBM was like what Vivendi did to Broderbund and the dozens of other educational software companies, destroy them in the end. Mergers among software companies have a nasty habit of destroying the teams that made the firm great in the first place."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593821658.282200",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "a18a516f-6ab8-4bc5-81d8-74b5f032c085",
        "type": "message",
        "text": "<@UKP3B2J5D> Thanks for nice piece by Dijkstra. Now, I agree with that of course. A formal system and rules to manipulate symbols are the ONLY way you can probably express a concept beyond any doubt and universally. So, as I mentioned, I do not think just naturalness and optimising a particular function is the ultimate answer. We may need to wait for the genius of  someone to come up with a solution to this problem. But the way I see it, this is the only way forward. A little write up by Gary Marcus in this context - <https://arxiv.org/ftp/arxiv/papers/2002/2002.06177.pdf>",
        "user": "UPVBV34EL",
        "ts": "1593857720.291800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "juTC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKP3B2J5D"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for nice piece by Dijkstra. Now, I agree with that of course. A formal system and rules to manipulate symbols are the ONLY way you can probably express a concept beyond any doubt and universally. So, as I mentioned, I do not think just naturalness and optimising a particular function is the ultimate answer. We may need to wait for the genius of  someone to come up with a solution to this problem. But the way I see it, this is the only way forward. A little write up by Gary Marcus in this context - "
                            },
                            {
                                "type": "link",
                                "url": "https://arxiv.org/ftp/arxiv/papers/2002/2002.06177.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG"
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "Long read so I just skimmed the first 10 pages. What he said about it being reliable reminds me of a talk Gery Sussman gave once. Actually this talk would be relevant to the group - <https://youtu.be/O3tVctB_VSU|https://youtu.be/O3tVctB_VSU> - one of the things he talks about that is important is that these programs should behave reasonably even if they aren\u2019t programmed in detail. ",
        "user": "UKP3B2J5D",
        "ts": "1593860246.294900",
        "thread_ts": "1593794600.262800",
        "root": {
            "client_msg_id": "38784faf-80e6-4df4-8ea9-38091c104b04",
            "type": "message",
            "text": "I don't necessarily agree with all the claims, but that's a cool demo: <https://twitter.com/Altimor/status/1278736953836400640?s=19|https://twitter.com/Altimor/status/1278736953836400640?s=19>",
            "user": "U0136G8R8KG",
            "ts": "1593794600.262800",
            "team": "T5TCAFTA9",
            "attachments": [
                {
                    "fallback": "<https://twitter.com/Altimor|@Altimor>: GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                    "ts": 1593709622,
                    "author_name": "Flo Crivello",
                    "author_link": "https://twitter.com/Altimor/status/1278736953836400640",
                    "author_icon": "https://pbs.twimg.com/profile_images/1014358626973069313/kuasBCIY_normal.jpg",
                    "author_subname": "@Altimor",
                    "text": "GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                    "service_name": "twitter",
                    "service_url": "https://twitter.com/",
                    "from_url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                    "image_url": "https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png",
                    "image_width": 874,
                    "image_height": 394,
                    "image_bytes": 145239,
                    "id": 1,
                    "original_url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                    "footer": "Twitter",
                    "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
                }
            ],
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "4J02w",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "I don't necessarily agree with all the claims, but that's a cool demo: "
                                },
                                {
                                    "type": "link",
                                    "url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                                    "text": "https://twitter.com/Altimor/status/1278736953836400640?s=19"
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1593794600.262800",
            "reply_count": 23,
            "reply_users_count": 9,
            "latest_reply": "1594888636.407800",
            "reply_users": [
                "UKP3B2J5D",
                "U01661S9F34",
                "UKDM3GLAJ",
                "UPVBV34EL",
                "UA14TGLTC",
                "U0136G8R8KG",
                "UE1JQM9HQ",
                "UP28ETUSE",
                "UHWC9PXBL"
            ],
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LVIy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Long read so I just skimmed the first 10 pages. What he said about it being reliable reminds me of a talk Gery Sussman gave once. Actually this talk would be relevant to the group - "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/O3tVctB_VSU",
                                "text": "https://youtu.be/O3tVctB_VSU"
                            },
                            {
                                "type": "text",
                                "text": " - one of the things he talks about that is important is that these programs should behave reasonably even if they aren\u2019t programmed in detail. "
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "9098DE62-D66F-4E37-973F-75B185B6CD58",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPVBV34EL",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "Also there is this also this - <https://youtu.be/fAY0_pesZ6s|https://youtu.be/fAY0_pesZ6s> . We should probably be moving towards being as precise as we have to be with computers with our language too. In this video, Sussman talks about how Maths notation is horrible - and that's maths. Natural language is worse. He argues that the legacy of programming is teaching us how to think precisely. ",
        "user": "UKP3B2J5D",
        "ts": "1593862391.299700",
        "thread_ts": "1593794600.262800",
        "root": {
            "client_msg_id": "38784faf-80e6-4df4-8ea9-38091c104b04",
            "type": "message",
            "text": "I don't necessarily agree with all the claims, but that's a cool demo: <https://twitter.com/Altimor/status/1278736953836400640?s=19|https://twitter.com/Altimor/status/1278736953836400640?s=19>",
            "user": "U0136G8R8KG",
            "ts": "1593794600.262800",
            "team": "T5TCAFTA9",
            "attachments": [
                {
                    "fallback": "<https://twitter.com/Altimor|@Altimor>: GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                    "ts": 1593709622,
                    "author_name": "Flo Crivello",
                    "author_link": "https://twitter.com/Altimor/status/1278736953836400640",
                    "author_icon": "https://pbs.twimg.com/profile_images/1014358626973069313/kuasBCIY_normal.jpg",
                    "author_subname": "@Altimor",
                    "text": "GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                    "service_name": "twitter",
                    "service_url": "https://twitter.com/",
                    "from_url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                    "image_url": "https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png",
                    "image_width": 874,
                    "image_height": 394,
                    "image_bytes": 145239,
                    "id": 1,
                    "original_url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                    "footer": "Twitter",
                    "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
                }
            ],
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "4J02w",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "I don't necessarily agree with all the claims, but that's a cool demo: "
                                },
                                {
                                    "type": "link",
                                    "url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                                    "text": "https://twitter.com/Altimor/status/1278736953836400640?s=19"
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1593794600.262800",
            "reply_count": 23,
            "reply_users_count": 9,
            "latest_reply": "1594888636.407800",
            "reply_users": [
                "UKP3B2J5D",
                "U01661S9F34",
                "UKDM3GLAJ",
                "UPVBV34EL",
                "UA14TGLTC",
                "U0136G8R8KG",
                "UE1JQM9HQ",
                "UP28ETUSE",
                "UHWC9PXBL"
            ],
            "subscribed": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Legacy of Computers, Gerry Sussman | Lecture 1 of 1",
                "title_link": "https://youtu.be/fAY0_pesZ6s",
                "author_name": "aoflex",
                "author_link": "https://www.youtube.com/user/aoflex",
                "thumb_url": "https://i.ytimg.com/vi/fAY0_pesZ6s/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Legacy of Computers, Gerry Sussman | Lecture 1 of 1",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/fAY0_pesZ6s?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://youtu.be/fAY0_pesZ6s",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/fAY0_pesZ6s"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ib=j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also there is this also this - "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/fAY0_pesZ6s",
                                "text": "https://youtu.be/fAY0_pesZ6s"
                            },
                            {
                                "type": "text",
                                "text": " . We should probably be moving towards being as precise as we have to be with computers with our language too. In this video, Sussman talks about how Maths notation is horrible - and that's maths. Natural language is worse. He argues that the legacy of programming is teaching us how to think precisely. "
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "111C1A0A-B189-4E7A-902C-4C326329C510",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJN1TAYEQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "61014cea-1f5c-4c1d-acd6-e7aaa38858cf",
        "type": "message",
        "text": "Just found out about <https://calebporzio.com/sponsorware|Sponsorware>. It\u2019s sort of like MassDrop or Kickstarter but perhaps works better with software. Probably wouldn\u2019t work for every project, but seems like a good balance between openness and value capture",
        "user": "UUK6Y29R8",
        "ts": "1593865032.300600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UUK6Y29R8",
            "ts": "1593865055.000000"
        },
        "attachments": [
            {
                "title": "Introducing Sponsorware: How A Small Open Source Package Increased My Salary By $11k in Two Days | Caleb Porzio",
                "title_link": "https://calebporzio.com/sponsorware",
                "text": "Caleb Porzio is a web developer.",
                "fallback": "Introducing Sponsorware: How A Small Open Source Package Increased My Salary By $11k in Two Days | Caleb Porzio",
                "from_url": "https://calebporzio.com/sponsorware",
                "service_icon": "https://calebporzio.com/favicon-32x32.png",
                "service_name": "calebporzio.com",
                "id": 1,
                "original_url": "https://calebporzio.com/sponsorware"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5XRK/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just found out about "
                            },
                            {
                                "type": "link",
                                "url": "https://calebporzio.com/sponsorware",
                                "text": "Sponsorware"
                            },
                            {
                                "type": "text",
                                "text": ". It\u2019s sort of like MassDrop or Kickstarter but perhaps works better with software. Probably wouldn\u2019t work for every project, but seems like a good balance between openness and value capture"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593692019.136100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "type": "message",
        "text": "If this could have been like the following (suggesting the string \"__main__\" from the usage pattern of this expression over a large corpora of code) then it would have saved me 10 keystrokes!",
        "files": [
            {
                "id": "F0163PE1T55",
                "created": 1593865736,
                "timestamp": 1593865736,
                "name": "Screenshot 2020-07-04 at 13.14.14.png",
                "title": "Screenshot 2020-07-04 at 13.14.14.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UPVBV34EL",
                "editable": false,
                "size": 17686,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F0163PE1T55/screenshot_2020-07-04_at_13.14.14.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0163PE1T55/download/screenshot_2020-07-04_at_13.14.14.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PE1T55-878cf822ed/screenshot_2020-07-04_at_13.14.14_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PE1T55-878cf822ed/screenshot_2020-07-04_at_13.14.14_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PE1T55-878cf822ed/screenshot_2020-07-04_at_13.14.14_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 160,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PE1T55-878cf822ed/screenshot_2020-07-04_at_13.14.14_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 213,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PE1T55-878cf822ed/screenshot_2020-07-04_at_13.14.14_160.png",
                "original_w": 608,
                "original_h": 270,
                "thumb_tiny": "AwAVADCiB7ilK+4NIOORRuPqaAEopcn1NJQAUUUUALmlLEjBOabRQApJPWkoooAKKKKAP//Z",
                "permalink": "https://futureofcoding.slack.com/files/UPVBV34EL/F0163PE1T55/screenshot_2020-07-04_at_13.14.14.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0163PE1T55-2ba533b054",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GLKQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If this could have been like the following (suggesting the string \"_"
                            },
                            {
                                "type": "text",
                                "text": "main",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "_\" from the usage pattern of this expression over a large corpora of code) then it would have saved me 10 keystrokes!"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UPVBV34EL",
        "display_as_bot": false,
        "ts": "1593865854.301000",
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG"
    },
    {
        "type": "message",
        "text": "",
        "files": [
            {
                "id": "F0163PF5CT1",
                "created": 1593865863,
                "timestamp": 1593865863,
                "name": "Screenshot 2020-07-04 at 14.28.19.png",
                "title": "Screenshot 2020-07-04 at 14.28.19.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UPVBV34EL",
                "editable": false,
                "size": 54312,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F0163PF5CT1/screenshot_2020-07-04_at_14.28.19.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0163PF5CT1/download/screenshot_2020-07-04_at_14.28.19.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 142,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 189,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 284,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 316,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 379,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163PF5CT1-efa4db8cd3/screenshot_2020-07-04_at_14.28.19_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 404,
                "original_w": 1454,
                "original_h": 574,
                "thumb_tiny": "AwASADCkMkdjSUqkDrSEjNABg0YozSUALijFJRQAUUUUAFFFFABRRRQB/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UPVBV34EL/F0163PF5CT1/screenshot_2020-07-04_at_14.28.19.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0163PF5CT1-0c0bfcbb59",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "UPVBV34EL",
        "display_as_bot": false,
        "ts": "1593865865.301400",
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG"
    },
    {
        "client_msg_id": "16db5041-5229-4fab-8d27-aa09c760f8fc",
        "type": "message",
        "text": "awesome! datalog rules\u2014and i think it\u2019s super amenable to graphical user interfaces",
        "user": "UHWC9PXBL",
        "ts": "1593869769.302000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n0Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "awesome! datalog rules\u2014and i think it\u2019s super amenable to graphical user interfaces"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "1D2AC6D0-08E2-452C-B9E5-8E572C7FFA84",
        "type": "message",
        "text": "Yeah. Also seems like a lot of people are fans of tabNine so I\u2019m going to try it out. Advanced autocomplete is pretty cool.",
        "user": "UKP3B2J5D",
        "ts": "1593872496.303700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8qR6L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah. Also seems like a lot of people are fans of tabNine so I\u2019m going to try it out. Advanced autocomplete is pretty cool."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG"
    },
    {
        "client_msg_id": "40ac0fa9-3861-4ffe-a07c-b69658ef0355",
        "type": "message",
        "text": "Thanks <@UCUSW7WVD> for reposting this article. I didn't have time to read it when <@UBN9AFS0N> first shared it, and it is very interesting.\nIn fact at leats I learned \"intensional\" and even if it the advanced spreadsheet presented here seems powerful, I don't see very well how it is really useful to solve real problems. But I must confess that the spreadsheet is a programming tool that I am less incline to use...",
        "user": "UJ6LDMMN0",
        "ts": "1593873937.309500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1593873968.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ewYQL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " for reposting this article. I didn't have time to read it when "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " first shared it, and it is very interesting.\nIn fact at leats I learned \"intensional\" and even if it the advanced spreadsheet presented here seems powerful, I don't see very well how it is really useful to solve real problems. But I must confess that the spreadsheet is a programming tool that I am less incline to use..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593821658.282200",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2420b5ee-7b87-44c2-b8f6-4f7aaedfd1d9",
        "type": "message",
        "text": "<https://twitter.com/KevlinHenney/status/1279368060336553985?s=19|https://twitter.com/KevlinHenney/status/1279368060336553985?s=19>",
        "user": "U0136G8R8KG",
        "ts": "1593879041.310200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/KevlinHenney|@KevlinHenney>: This is neat. But people don't understand: this really doesn't change much at all. <https://twitter.com/Altimor/status/1278736953836400640>",
                "ts": 1593860089,
                "author_name": "Kevlin Henney",
                "author_link": "https://twitter.com/KevlinHenney/status/1279368060336553985",
                "author_icon": "https://pbs.twimg.com/profile_images/1452748283/DSC_0065__Reduced__Cropped__normal.jpg",
                "author_subname": "@KevlinHenney",
                "text": "This is neat. But people don't understand: this really doesn't change much at all. <https://twitter.com/Altimor/status/1278736953836400640>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/KevlinHenney/status/1279368060336553985?s=19",
                "id": 1,
                "original_url": "https://twitter.com/KevlinHenney/status/1279368060336553985?s=19",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https://twitter.com/Altimor|@Altimor>: GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                "ts": 1593709622,
                "author_name": "Flo Crivello",
                "author_link": "https://twitter.com/Altimor/status/1278736953836400640",
                "author_icon": "https://pbs.twimg.com/profile_images/1014358626973069313/kuasBCIY_normal.jpg",
                "author_subname": "@Altimor",
                "text": "GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/Altimor/status/1278736953836400640",
                "image_url": "https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png",
                "image_width": 874,
                "image_height": 394,
                "image_bytes": 145239,
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Ifv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/KevlinHenney/status/1279368060336553985?s=19",
                                "text": "https://twitter.com/KevlinHenney/status/1279368060336553985?s=19"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "18AFB8D2-858D-4504-BDC2-A2D4E39023B4",
        "type": "message",
        "text": "Agreed! ",
        "user": "UT9TWSZB5",
        "ts": "1593880779.310600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Baiu0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Agreed! "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "560FDE2A-BA86-43B2-801F-5D912A380924",
        "type": "message",
        "text": "Are you a clojure person?",
        "user": "UT9TWSZB5",
        "ts": "1593880788.311000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t5Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you a clojure person?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "3296509f-30d2-46d6-b7aa-d2c7be267794",
        "type": "message",
        "text": "I\u2019ve played with clojure but not deployed to production",
        "user": "UHWC9PXBL",
        "ts": "1593880826.311200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OM=VM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve played with clojure but not deployed to production"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "fa1b2d3a-a926-4ce9-b256-0849e05148c8",
        "type": "message",
        "text": "I like any programming language with a strong point of view",
        "user": "UHWC9PXBL",
        "ts": "1593880843.311400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HjyGv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like any programming language with a strong point of view"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "F6C17070-4846-4309-9FE6-FECBCDE69348",
        "type": "message",
        "text": "Yeah, I\u2019ve struggle to get into it. I love rich hickey and his talks though. But getting a full stack dev environment and dealing with the JVM has been a hurdle. Plus I\u2019ve become a TypeScript wizard so it\u2019s hard to walk away from the type system.  ",
        "user": "UT9TWSZB5",
        "ts": "1593881096.313800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P6+Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I\u2019ve struggle to get into it. I love rich hickey and his talks though. But getting a full stack dev environment and dealing with the JVM has been a hurdle. Plus I\u2019ve become a TypeScript wizard so it\u2019s hard to walk away from the type system.  "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "52276701-85ad-4574-bb20-0acf5cbc3bda",
        "type": "message",
        "text": "if you know of any good introductions to typescript i\u2019d love to get into it",
        "user": "UHWC9PXBL",
        "ts": "1593881826.314100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r07I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you know of any good introductions to typescript i\u2019d love to get into it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "4564E18C-0209-4DB5-9E5D-17F3ABD869D5",
        "type": "message",
        "text": "Oh it\u2019s amazing. Honestly, just read the documentation on the website and start off with all strictness off. Then eventually turn strict null check on and you can learn all the ins and outs at your own pace without holding you back. ",
        "user": "UT9TWSZB5",
        "ts": "1593882114.315800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ijj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh it\u2019s amazing. Honestly, just read the documentation on the website and start off with all strictness off. Then eventually turn strict null check on and you can learn all the ins and outs at your own pace without holding you back. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "C9856BEE-9AF2-410D-9C9F-C7AF3C1F4BA3",
        "type": "message",
        "text": "Also, feel free to DM me with any typescript issues! When learning generic types, there can be some tricky parts. ",
        "user": "UT9TWSZB5",
        "ts": "1593882146.316000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pw4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, feel free to DM me with any typescript issues! When learning generic types, there can be some tricky parts. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "c2528389-67d4-4e41-9683-75c7ecffb7e3",
        "type": "message",
        "text": "ah thank you! my biggest hurdle has been tooling\u2026 I\u2019ve recently become addicted to writing all of my code interactively in the js console lol",
        "user": "UHWC9PXBL",
        "ts": "1593882751.316200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nhhR=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ah thank you! my biggest hurdle has been tooling\u2026 I\u2019ve recently become addicted to writing all of my code interactively in the js console lol"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "5AD1D895-8657-4E4F-AD42-CE3D01AB14DC",
        "type": "message",
        "text": "Haha wow. Well with incremental webpack builds, you can do this in your code editor just by refreshing the browser whenever you want to rerun",
        "user": "UT9TWSZB5",
        "ts": "1593882808.317400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZckOy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haha wow. Well with incremental webpack builds, you can do this in your code editor just by refreshing the browser whenever you want to rerun"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "F5ED1210-83BD-431C-8AE8-730B87C48570",
        "type": "message",
        "text": "Here\u2019s the starter I use: <https://github.com/ccorcos/typescript-boilerplate|https://github.com/ccorcos/typescript-boilerplate>",
        "user": "UT9TWSZB5",
        "ts": "1593882858.317900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "ccorcos/typescript-boilerplate",
                "title": "ccorcos/typescript-boilerplate",
                "footer": "<https://github.com/ccorcos/typescript-boilerplate|ccorcos/typescript-boilerplate>",
                "id": 1,
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "ts": 1488265596,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "1",
                        "short": true
                    },
                    {
                        "title": "Language",
                        "value": "TypeScript",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https://github.com/ccorcos/typescript-boilerplate",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KylY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here\u2019s the starter I use: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/ccorcos/typescript-boilerplate",
                                "text": "https://github.com/ccorcos/typescript-boilerplate"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV",
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "A8A20995-4931-48FC-BAA0-EE6740110623",
        "type": "message",
        "text": "It\u2019s pretty simple. No backend. I would open up the tsconfig file and turn off any of the strict flags. And also check if any packages could be upgraded. ",
        "user": "UT9TWSZB5",
        "ts": "1593882898.319300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C3uw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s pretty simple. No backend. I would open up the tsconfig file and turn off any of the strict flags. And also check if any packages could be upgraded. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "904177d5-6e50-4422-bf81-3a09cfbb4256",
        "type": "message",
        "text": "can someone explain to me what pragmas are in smalltalk in very concrete terms? I\u2019m trying out gtoolkit",
        "user": "UHWC9PXBL",
        "ts": "1593885095.320000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KVmkZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "can someone explain to me what pragmas are in smalltalk in very concrete terms? I\u2019m trying out gtoolkit"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "reply_count": 16,
        "reply_users_count": 2,
        "latest_reply": "1593886977.324500",
        "reply_users": [
            "UHWC9PXBL",
            "UE1JQM9HQ"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "0666c650-ddc0-4f5f-8d09-61445da93360",
        "type": "message",
        "text": "also, <@UE1JQM9HQ> i\u2019d be stoked if you could add control of the slideshow with left and right arrows instead of just mouse. if you wanted, I\u2019d even love to walk through implementing it in a recording for gtoolkit intro materials",
        "user": "UHWC9PXBL",
        "ts": "1593885203.320100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yx+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also, "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " i\u2019d be stoked if you could add control of the slideshow with left and right arrows instead of just mouse. if you wanted, I\u2019d even love to walk through implementing it in a recording for gtoolkit intro materials"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "3720c56b-5a21-4fea-9354-f7959885a625",
        "type": "message",
        "text": "<@UHWC9PXBL> pragmas are called annotations in other languages. In Pharo, pragmas can be attached to methods. This paper describes the mechanism in a little more details: <https://hal.inria.fr/hal-01353592/document>.",
        "user": "UE1JQM9HQ",
        "ts": "1593885331.320300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mkJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " pragmas are called annotations in other languages. In Pharo, pragmas can be attached to methods. This paper describes the mechanism in a little more details: "
                            },
                            {
                                "type": "link",
                                "url": "https://hal.inria.fr/hal-01353592/document"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "8230a5bd-15fa-4131-8057-036fc628d418",
        "type": "message",
        "text": "Here is my take on it:\n<https://twitter.com/girba/status/1279298566981378048>",
        "user": "UE1JQM9HQ",
        "ts": "1593885384.320500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/girba|@girba>: This is one impressive demo.\n\nIt should not be judged by the utility of what it can do now, but by how seamless it appears to be already.\n\n1/ <https://twitter.com/Altimor/status/1278736953836400640>",
                "ts": 1593843521,
                "author_name": "Tudor Girba",
                "author_link": "https://twitter.com/girba/status/1279298566981378048",
                "author_icon": "https://pbs.twimg.com/profile_images/1370148445/me-closeup-square_normal.jpg",
                "author_subname": "@girba",
                "text": "This is one impressive demo.\n\nIt should not be judged by the utility of what it can do now, but by how seamless it appears to be already.\n\n1/ <https://twitter.com/Altimor/status/1278736953836400640>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/girba/status/1279298566981378048",
                "id": 1,
                "original_url": "https://twitter.com/girba/status/1279298566981378048",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https://twitter.com/Altimor|@Altimor>: GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                "ts": 1593709622,
                "author_name": "Flo Crivello",
                "author_link": "https://twitter.com/Altimor/status/1278736953836400640",
                "author_icon": "https://pbs.twimg.com/profile_images/1014358626973069313/kuasBCIY_normal.jpg",
                "author_subname": "@Altimor",
                "text": "GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/Altimor/status/1278736953836400640",
                "image_url": "https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png",
                "image_width": 874,
                "image_height": 394,
                "image_bytes": 145239,
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4TX3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here is my take on it:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/girba/status/1279298566981378048"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPVBV34EL"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "025491b8-b8b5-4502-b18e-9192ded220d6",
        "type": "message",
        "text": "I waas trying to understand that paper\u2014are they intended purely for smalltalky reflection, eg \u201clist all the methods in the image with the &lt;3d-viewable&gt; pragma\u201d? or does it do other stuff? Do they get evaluated? I understand that they involve message sends, but I\u2019m having trouble wrapping my head around how/why they\u2019re dynamic",
        "user": "UHWC9PXBL",
        "ts": "1593885443.320800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B=Af",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I waas trying to understand that paper\u2014are they intended purely for smalltalky reflection, eg \u201clist all the methods in the image with the <3d-viewable> pragma\u201d? or does it do other stuff? Do they get evaluated? I understand that they involve message sends, but I\u2019m having trouble wrapping my head around how/why they\u2019re dynamic"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "6b1b310c-75e0-4284-b2a8-f3f8882f1236",
        "type": "message",
        "text": "they do not get evaluated. yes, they are intended for discovery.",
        "user": "UE1JQM9HQ",
        "ts": "1593885517.321000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w7e4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "they do not get evaluated. yes, they are intended for discovery."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "99a42be9-a60a-4da4-9bed-36c8942b0ec2",
        "type": "message",
        "text": "eg \u201cit may be queried for senders, executed, etc\u201d\u2014does that mean objects who use the pragmas to query objects in the image, or the objects with the pragmas themselves?",
        "user": "UHWC9PXBL",
        "ts": "1593885567.321200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CT9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "eg \u201cit may be queried for senders, executed, etc\u201d\u2014does that mean objects who use the pragmas to query objects in the image, or the objects with the pragmas themselves?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "3cb73067-4900-49cb-b0fb-d93bec9bc063",
        "type": "message",
        "text": "```LargeInteger &gt;&gt; // anInteger\n\n\"Primitive. Divide the receiver by the argument and return the result. Round the result down towards negative infinity to make it a whole integer. Fail if the argument is 0. Fail if either the argument or the result is not a SmallInteger or a LargePositiveInteger less than 2-to-the-30th (1073741824).\"\n\n&lt;primitive: 32&gt;\n^ super // anInteger```\nso\u2026 i get that you\u2019re sending `32` to the object `primitive` \u2026 when does that message send get executed? on instance creation? or just during queries?",
        "user": "UHWC9PXBL",
        "ts": "1593885638.321400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1593885659.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wr8mU",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "LargeInteger >> // anInteger\n\n\"Primitive. Divide the receiver by the argument and return the result. Round the result down towards negative infinity to make it a whole integer. Fail if the argument is 0. Fail if either the argument or the result is not a SmallInteger or a LargePositiveInteger less than 2-to-the-30th (1073741824).\"\n\n<primitive: 32>\n^ super // anInteger"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so\u2026 i get that you\u2019re sending "
                            },
                            {
                                "type": "text",
                                "text": "32",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to the object "
                            },
                            {
                                "type": "text",
                                "text": "primitive",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " \u2026 when does that message send get executed? on instance creation? or just during queries?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "93da12a0-bd62-4752-a427-2f40e03eaffc",
        "type": "message",
        "text": "no. `primitive:` is a message. `32` is an argument.",
        "user": "UE1JQM9HQ",
        "ts": "1593885673.321700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C6Ndf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "no. "
                            },
                            {
                                "type": "text",
                                "text": "primitive:",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is a message. "
                            },
                            {
                                "type": "text",
                                "text": "32",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is an argument."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "8bc9cf6d-6bbd-44bd-afe7-2836fa19cdb2",
        "type": "message",
        "text": "hooo boy i\u2019m very turned around",
        "user": "UHWC9PXBL",
        "ts": "1593885685.321900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hw+LM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hooo boy i\u2019m very turned around"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "98556686-c4a2-47f5-93a9-ca4a7a9d9464",
        "type": "message",
        "text": "ok im going to read more stuff thanks for your help",
        "user": "UHWC9PXBL",
        "ts": "1593885703.322100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3wdvm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ok im going to read more stuff thanks for your help"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "70a29573-7e48-4278-b142-8f3ae33d0be9",
        "type": "message",
        "text": "if you look for the senders of `primitive:` you will get the locations in code that are using this message as pragma.",
        "user": "UE1JQM9HQ",
        "ts": "1593885706.322300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yfjVs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you look for the senders of "
                            },
                            {
                                "type": "text",
                                "text": "primitive:",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you will get the locations in code that are using this message as pragma."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "326054d6-05b9-4503-acbc-3a9cc3f3d285",
        "type": "message",
        "text": "`&lt;primitive: 32&gt;`  would be equivalent to `@primitive(32)` in Java.",
        "user": "UE1JQM9HQ",
        "ts": "1593885742.322600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+EFO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "<primitive: 32>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  would be equivalent to "
                            },
                            {
                                "type": "text",
                                "text": "@primitive(32)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in Java."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "type": "message",
        "text": "if you are playing with Glamorous Toolkit, you can also query for it explicitly. For example, inspect `#primitive: gtPragmas` in a Playground",
        "files": [
            {
                "id": "F0178FSNFNC",
                "created": 1593885854,
                "timestamp": 1593885854,
                "name": "Screen Shot 2020-07-04 at 8.03.53 PM.png",
                "title": "Screen Shot 2020-07-04 at 8.03.53 PM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UE1JQM9HQ",
                "editable": false,
                "size": 792482,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F0178FSNFNC/screen_shot_2020-07-04_at_8.03.53_pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0178FSNFNC/download/screen_shot_2020-07-04_at_8.03.53_pm.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 242,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 322,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 483,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 537,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 644,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F0178FSNFNC-51843ade58/screen_shot_2020-07-04_at_8.03.53_pm_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 687,
                "original_w": 2784,
                "original_h": 1868,
                "thumb_tiny": "AwAgADCSytoZLVGdFLHOSR71P9ig/wCea/lSad/x4x/j/OrNAFf7FB/zzX8qb9kg/wCeI/IVapo4oAg+yQf88h+VQXttFHaOyxgEY5x71fqvqP8Ax4yfh/OgA07/AI8Y/wAf51ZrNs76GG2SNy24Zzge9Tf2nb+rf980AXKbn2qr/adv6t/3zSDUrf1b/vmgC7VXUf8Ajyk/D+dN/tO39W/KoLu+hmtnRC244xke9AH/2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UE1JQM9HQ/F0178FSNFNC/screen_shot_2020-07-04_at_8.03.53_pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0178FSNFNC-e8028e03fa",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bnu0E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you are playing with Glamorous Toolkit, you can also query for it explicitly. For example, inspect "
                            },
                            {
                                "type": "text",
                                "text": "#primitive: gtPragmas",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in a Playground"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UE1JQM9HQ",
        "display_as_bot": false,
        "ts": "1593885858.322800",
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "6e52049d-e474-4b8b-8c2f-111aced697e4",
        "type": "message",
        "text": "so in that example, you\u2019re sending the symbol `primitive` the argument `gtPragmas`  and getting a list of all the methods that use primitives?",
        "user": "UHWC9PXBL",
        "ts": "1593886078.323300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M=VO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so in that example, you\u2019re sending the symbol "
                            },
                            {
                                "type": "text",
                                "text": "primitive",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the argument "
                            },
                            {
                                "type": "text",
                                "text": "gtPragmas",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  and getting a list of all the methods that use primitives?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "e299d666-203d-44d4-abd3-a7161895edbd",
        "type": "message",
        "text": "sorry, I need to break stuff down a whole lot in order to make sure i\u2019m not using the wrong schema when i\u2019m trying to learn something at first",
        "user": "UHWC9PXBL",
        "ts": "1593886097.323500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9OqBY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sorry, I need to break stuff down a whole lot in order to make sure i\u2019m not using the wrong schema when i\u2019m trying to learn something at first"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "type": "message",
        "text": "yes. this is a fluent API. In this case, it\u2019s implemented like this:",
        "files": [
            {
                "id": "F0163UEHJ3Z",
                "created": 1593886934,
                "timestamp": 1593886934,
                "name": "Screen Shot 2020-07-04 at 8.22.05 PM.png",
                "title": "Screen Shot 2020-07-04 at 8.22.05 PM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UE1JQM9HQ",
                "editable": false,
                "size": 823944,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F0163UEHJ3Z/screen_shot_2020-07-04_at_8.22.05_pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0163UEHJ3Z/download/screen_shot_2020-07-04_at_8.22.05_pm.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 242,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 322,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 483,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 537,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 644,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F0163UEHJ3Z-d91c98217a/screen_shot_2020-07-04_at_8.22.05_pm_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 687,
                "original_w": 2784,
                "original_h": 1868,
                "thumb_tiny": "AwAgADB9lbQyWqM8YLHPJHvVj7FB/wA81/KmWGfscePf+dWu1AEH2KD/AJ5r+VJ9kg/55D8qsc0gzk96AIfsUH/PNfyqC9tYo7R2VFBGOce9Xh9Krah/x5S8+n86AEsP+PSLHv8Azq3WZaX0MNuiOWyM5wPep/7Tt/Vv++aALXelAxmqf9pW+erf980v9p2/q3/fNAFyquoDFlJ+H86b/adv6t/3zUN5fQzWzxoW3HGMj3oA/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UE1JQM9HQ/F0163UEHJ3Z/screen_shot_2020-07-04_at_8.22.05_pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0163UEHJ3Z-7c95d25a9b",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wmzo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yes. this is a fluent API. In this case, it\u2019s implemented like this:"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UE1JQM9HQ",
        "display_as_bot": false,
        "ts": "1593886943.324100",
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "81815d8f-f75a-4a07-ae6a-71e4b5b6815b",
        "type": "message",
        "text": "You can learn about this querying API through the slideshow from the home tab entitled `Querying Code`",
        "user": "UE1JQM9HQ",
        "ts": "1593886977.324500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fsvb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can learn about this querying API through the slideshow from the home tab entitled "
                            },
                            {
                                "type": "text",
                                "text": "Querying Code",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593885095.320000",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "71e034aa-c466-4892-851c-c5158dfe0403",
        "type": "message",
        "text": "A possible issue with such a list is that different people can interpret these items in opposing ways. For example, \u201ccatching problems early\u201d to one person might mean catching *typing* bugs, to which they might propose a strict type system, while to another it might mean catching *design* flaws, which might lead them to favor a more flexible type (dynamic or optional) system.",
        "user": "ULM3U6275",
        "ts": "1593897137.325300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1593897367.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VuX=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A possible issue with such a list is that different people can interpret these items in opposing ways. For example, \u201ccatching problems early\u201d to one person might mean catching "
                            },
                            {
                                "type": "text",
                                "text": "typing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " bugs, to which they might propose a strict type system, while to another it might mean catching "
                            },
                            {
                                "type": "text",
                                "text": "design",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " flaws, which might lead them to favor a more flexible type (dynamic or optional) system."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593722002.162200",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UN57U8V53",
                    "UU45NNMHT"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "9e8dee4b-a0ba-45aa-91a2-248c48a097ff",
        "type": "message",
        "text": "\"intensional logic, the\u00a0logic of values that vary over a coordinate space.\" Maybe a nitpick, but this feels like a weird definition of intensional logic (here's a <https://plato.stanford.edu/entries/logic-intensional/|better explanation>: intensional logic has to do with words having more meaning than mere reference). I don't think I want actual intensional logic in my sheets; I want referential transparency. I want 1+1 to always equal 2.\n\nBeyond that, I think there are some interesting ideas in the there although it feels like someone who doesn't use spreadsheets trying to fix them: excel has some tools like pivot tables, what-if analysis, and table objects that accomplish a lot some of what the author is asserting spreadsheets can't do...in addition to RC notation, that he admitted not knowing about.",
        "user": "UMH5FAW2Y",
        "ts": "1593897362.325600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HKs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"intensional logic, the\u00a0logic of values that vary over a coordinate space.\" Maybe a nitpick, but this feels like a weird definition of intensional logic (here's a "
                            },
                            {
                                "type": "link",
                                "url": "https://plato.stanford.edu/entries/logic-intensional/",
                                "text": "better explanation"
                            },
                            {
                                "type": "text",
                                "text": ": intensional logic has to do with words having more meaning than mere reference). I don't think I want actual intensional logic in my sheets; I want referential transparency. I want 1+1 to always equal 2.\n\nBeyond that, I think there are some interesting ideas in the there although it feels like someone who doesn't use spreadsheets trying to fix them: excel has some tools like pivot tables, what-if analysis, and table objects that accomplish a lot some of what the author is asserting spreadsheets can't do...in addition to RC notation, that he admitted not knowing about."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593821658.282200",
        "parent_user_id": "UCUSW7WVD"
    }
]