[
    {
        "client_msg_id": "99174414-1f0d-451d-91a5-24daabd14970",
        "type": "message",
        "text": "It would be great all those github compendiums people have been making easily extendible and in on one place",
        "user": "ULK0Z4MPV",
        "ts": "1593727422.183600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XCifo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It would be great all those github compendiums people have been making easily extendible and in on one place"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "B953C519-C951-4E7D-A794-2E429F80FA4B",
        "type": "message",
        "text": "Yeah, definitely not just tech but tech can help with gathering data figuring out what\u2019s effective etc. Also reminds me of this - <https://youtu.be/uEFrE6cgVNY?t=1229|https://youtu.be/uEFrE6cgVNY?t=1229> . Perhaps more gathering of evidence of what works for learning to code and perhaps systems that are personalised and know about you in particular etc and perhaps even the design of languages in the first place to make them easier to learn ",
        "user": "UKP3B2J5D",
        "ts": "1593727542.186200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "\"Evidence-Oriented Programming\" by Andreas Stefik",
                "title_link": "https://youtu.be/uEFrE6cgVNY?t=1229",
                "author_name": "Strange Loop",
                "author_link": "https://www.youtube.com/channel/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https://i.ytimg.com/vi/uEFrE6cgVNY/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"Evidence-Oriented Programming\" by Andreas Stefik",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/uEFrE6cgVNY?start=1229&feature=oembed&start=1229&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/uEFrE6cgVNY?t=1229",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/uEFrE6cgVNY?t=1229"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pma",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, definitely not just tech but tech can help with gathering data figuring out what\u2019s effective etc. Also reminds me of this - "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/uEFrE6cgVNY?t=1229",
                                "text": "https://youtu.be/uEFrE6cgVNY?t=1229"
                            },
                            {
                                "type": "text",
                                "text": " . Perhaps more gathering of evidence of what works for learning to code and perhaps systems that are personalised and know about you in particular etc and perhaps even the design of languages in the first place to make them easier to learn "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U010RH58PL7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8d6e470f-5b7e-437b-877d-137a473d73c0",
        "type": "message",
        "text": "<@UJKKBAMLL> has told me in the past that <@UT9TWSZB5> and <@UA8HY8R7B> are both interested in collaboration and aggregating persona data \u2014 any interest?",
        "user": "UHWC9PXBL",
        "ts": "1593727799.187100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YPNZo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": " has told me in the past that "
                            },
                            {
                                "type": "user",
                                "user_id": "UT9TWSZB5"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UA8HY8R7B"
                            },
                            {
                                "type": "text",
                                "text": " are both interested in collaboration and aggregating persona data \u2014 any interest?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "b6fc26d1-6bef-4689-973d-43e25d4df0fe",
        "type": "message",
        "text": "I can do full stack and light devops",
        "user": "UHWC9PXBL",
        "ts": "1593727809.187600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3TtpV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can do full stack and light devops"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "30ce3a3d-0537-4856-8f66-e527392d9cd6",
        "type": "message",
        "text": "\"design of languages in the first place to make them easier to learn\" is the crux of it. Forgetting that leads us to the false dichotomy of \"making tools\" vs \"making users of tools\". There's no such dichotomy, because there are no tools without users. What we have today are tools that everybody uses that are unnecessarily hard to learn, tools that are easy to learn but less powerful (dumbed down), and tools that try to be easy to learn but nobody uses.\n\nAs a learner, it's sometimes worth learning a tool that's easy to learn even if nobody uses it. Because it can give you something more timeless than just the incantation needed to perform some task. Some concept or some way of thinking. I tried to list a few important ones above (<https://futureofcoding.slack.com/archives/C5T9GPWFL/p1593722002162200>)",
        "user": "UCUSW7WVD",
        "ts": "1593727846.188200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1593727903.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gx6iX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"design of languages in the first place to make them easier to learn\" is the crux of it. Forgetting that leads us to the false dichotomy of \"making tools\" vs \"making users of tools\". There's no such dichotomy, because there are no tools without users. What we have today are tools that everybody uses that are unnecessarily hard to learn, tools that are easy to learn but less powerful (dumbed down), and tools that try to be easy to learn but nobody uses.\n\nAs a learner, it's sometimes worth learning a tool that's easy to learn even if nobody uses it. Because it can give you something more timeless than just the incantation needed to perform some task. Some concept or some way of thinking. I tried to list a few important ones above ("
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1593722002162200"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3211539A-0C9A-466B-9A82-54384BFF5E9A",
        "type": "message",
        "text": "AFAIK it\u2019s more a deployment solution / the interactive apps bit ",
        "user": "UGLSY9X3J",
        "ts": "1593728138.191700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F=L1V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "AFAIK it\u2019s more a deployment solution / the interactive apps bit "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593536410.064400",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "type": "message",
        "text": "Reminds me of this I found yesterday. So much easier to read even though it\u2019s verbose. That\u2019s a design thing - shouldn\u2019t just be optimising for brevity or shortcuts when it makes things harder to learn and grasp - <https://tonsky.me/blog/dsl/|https://tonsky.me/blog/dsl/>",
        "files": [
            {
                "id": "F016F2DET61",
                "created": 1593727996,
                "timestamp": 1593727996,
                "name": "Image from iOS.png",
                "title": "Image from iOS",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UKP3B2J5D",
                "editable": false,
                "size": 337337,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F016F2DET61/image_from_ios.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F016F2DET61/download/image_from_ios.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_360.png",
                "thumb_360_w": 166,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_480.png",
                "thumb_480_w": 222,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_720.png",
                "thumb_720_w": 333,
                "thumb_720_h": 720,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 1731,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_960.png",
                "thumb_960_w": 444,
                "thumb_960_h": 960,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F2DET61-4270a20934/image_from_ios_1024.png",
                "thumb_1024_w": 473,
                "thumb_1024_h": 1024,
                "image_exif_rotation": 1,
                "original_w": 828,
                "original_h": 1792,
                "thumb_tiny": "AwAwABa4XYE8/pR5jev6U1hzSDPSufmfcuxIrk80u800DHWlpcz7hYY3WlHSkOM85pRj6UAKKWkFLSAYetHFB6npRkf7NMBy9KWkFLSA/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UKP3B2J5D/F016F2DET61/image_from_ios.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F016F2DET61-5c44be7a1e",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zvaau",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me of this I found yesterday. So much easier to read even though it\u2019s verbose. That\u2019s a design thing - shouldn\u2019t just be optimising for brevity or shortcuts when it makes things harder to learn and grasp - "
                            },
                            {
                                "type": "link",
                                "url": "https://tonsky.me/blog/dsl/",
                                "text": "https://tonsky.me/blog/dsl/"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UKP3B2J5D",
        "display_as_bot": false,
        "ts": "1593728152.192300",
        "client_msg_id": "BAE1CE0D-85B3-492D-AD15-BE3323C43D21",
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "C833D317-F357-4BA4-B831-776DEBAD7C86",
        "type": "message",
        "text": "I\u2019m many orgs, the people doing the data science aren\u2019t in the eng org / have the knowledge of dealing with all the BS needed to deploy something to the cloud ",
        "user": "UGLSY9X3J",
        "ts": "1593728170.193200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a2=2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m many orgs, the people doing the data science aren\u2019t in the eng org / have the knowledge of dealing with all the BS needed to deploy something to the cloud "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593536410.064400",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "ACF106E4-AAD5-4A7D-BBB8-942AF1E573AB",
        "type": "message",
        "text": "People have been trying this ML as a Service, model as a service etc play for a while. \n\n<http://Pachyderm.io|Pachyderm.io> is also here, but it\u2019s way way heavier. You have to dockerize stuff and they have a complex \u201cgit for data\u201d file system etc. it\u2019s for more eng savvy data scientists ",
        "user": "UGLSY9X3J",
        "ts": "1593728260.197200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Gl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "People have been trying this ML as a Service, model as a service etc play for a while. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http://Pachyderm.io",
                                "text": "Pachyderm.io"
                            },
                            {
                                "type": "text",
                                "text": " is also here, but it\u2019s way way heavier. You have to dockerize stuff and they have a complex \u201cgit for data\u201d file system etc. it\u2019s for more eng savvy data scientists "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593536410.064400",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "de6f590e-e1e6-44af-a120-46b2d47c9370",
        "type": "message",
        "text": "Indeed. I get polarizing comments on the names I choose in Mu. For example, see <http://akkartik.github.io/mu/html/apps/tile.mu.html>. Some people say the commands are too long to type. Others love that they can tell what the commands do without having to spend a lot of time with my project.",
        "user": "UCUSW7WVD",
        "ts": "1593728285.197900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1593728298.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SSmQ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed. I get polarizing comments on the names I choose in Mu. For example, see "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.github.io/mu/html/apps/tile.mu.html"
                            },
                            {
                                "type": "text",
                                "text": ". Some people say the commands are too long to type. Others love that they can tell what the commands do without having to spend a lot of time with my project."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "82B8E33F-8203-49A7-96BE-64E05E900C35",
        "type": "message",
        "text": "Looking back on when I used to code for fun vs. Professionally the biggest one is definitely evolution over time. I certainly wasn\u2019t thinking about if a thing was easy to read, modify or understand. The task was just make it work. I think that\u2019s the central difference.",
        "user": "UKP3B2J5D",
        "ts": "1593728453.199300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UKP3B2J5D",
            "ts": "1593728487.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7b6UT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looking back on when I used to code for fun vs. Professionally the biggest one is definitely evolution over time. I certainly wasn\u2019t thinking about if a thing was easy to read, modify or understand. The task was just make it work. I think that\u2019s the central difference."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593722002.162200",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c092fb04-91b1-4e2b-8e0a-d434a501e8e8",
        "type": "message",
        "text": "That'd be awesome! We would need all the hands we could get! I think we'd have enough skills to execute between us otherwise (I can also do basic backend / devops)",
        "user": "ULK0Z4MPV",
        "ts": "1593728692.201600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "ULK0Z4MPV",
            "ts": "1593729080.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FXNA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That'd be awesome! We would need all the hands we could get! I think we'd have enough skills to execute between us otherwise (I can also do basic backend / devops)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "4D9E3ACE-87DD-4ADC-9038-1595030232BC",
        "type": "message",
        "text": "It\u2019s also the same thing with stuff like operators in Haskell - how do you pronounce this \u2018@&amp;\u00a3\u2019 operator (I made it up btw)? Sure it is brief but it\u2019s three characters in my head and doesn\u2019t have a real name(I am convinced with Haskell it should be possible to give operators aliases, funny thing is \u2018&gt;&gt;=\u2018 is \u2018bind\u2019. Being able to pronounce things is vital for chunking I think. Again, wish we had a more data driven approach to these questions.",
        "user": "UKP3B2J5D",
        "ts": "1593728981.205800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C5Wsh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s also the same thing with stuff like operators in Haskell - how do you pronounce this \u2018@&\u00a3\u2019 operator (I made it up btw)? Sure it is brief but it\u2019s three characters in my head and doesn\u2019t have a real name(I am convinced with Haskell it should be possible to give operators aliases, funny thing is \u2018>>=\u2018 is \u2018bind\u2019. Being able to pronounce things is vital for chunking I think. Again, wish we had a more data driven approach to these questions."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "U010RH58PL7",
                    "UBN9AFS0N"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UDQBTJ211"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "301fed2f-cb93-4f0d-a122-e312265ffa55",
        "type": "message",
        "text": "Indeed! Pronunciation is key, and picking up how to say something often requires being inside a community. That's one reason I tend to be skeptical of visual programming. We all use language to reason, and if it's not obvious how a construct translates to language, that can be accidentally excluding.",
        "user": "UCUSW7WVD",
        "ts": "1593729264.206300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nkSdF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed! Pronunciation is key, and picking up how to say something often requires being inside a community. That's one reason I tend to be skeptical of visual programming. We all use language to reason, and if it's not obvious how a construct translates to language, that can be accidentally excluding."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D",
                    "UHWC9PXBL",
                    "U01661S9F34",
                    "UJBAJNFLK"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "94967B2C-8D8C-4ED5-AE14-047F9A841668",
        "type": "message",
        "text": "Tbh, skeptical too for that reason. Visual programming seems ideal for figuring out stuff in the large (so visual documentation perhaps?) even then probably doesn\u2019t help if you have a huge ball of spaghetti. ",
        "user": "UKP3B2J5D",
        "ts": "1593729764.211700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mKm7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tbh, skeptical too for that reason. Visual programming seems ideal for figuring out stuff in the large (so visual documentation perhaps?) even then probably doesn\u2019t help if you have a huge ball of spaghetti. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b04c289c-86f4-4aab-b287-16471c1db8ce",
        "type": "message",
        "text": ":slightly_smiling_face:",
        "user": "UT9TWSZB5",
        "ts": "1593729811.211900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6prhI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "D5F88527-8270-4BC6-A0DF-443967106CB1",
        "type": "message",
        "text": "i think an analogy might be that visual programming systems ought be very legible in gif form or similar\u2014there are a few indie games that have gotten really big just because the developers were able to make really compelling gifs that went viral. communicability is really important but i\u2019m not sure spoken language is the only route (although the haskell situation seems like the worst of both worlds)",
        "user": "UHWC9PXBL",
        "ts": "1593730778.215500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GFCt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think an analogy might be that visual programming systems ought be very legible in gif form or similar\u2014there are a few indie games that have gotten really big just because the developers were able to make really compelling gifs that went viral. communicability is really important but i\u2019m not sure spoken language is the only route (although the haskell situation seems like the worst of both worlds)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UKP3B2J5D",
                    "UJ6LDMMN0"
                ],
                "count": 3
            },
            {
                "name": "beers",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "32a81ab3-484f-4d7e-bfd8-b096510b01ea",
        "type": "message",
        "text": "I\u2019ve been particularly focused on the \u201cinbox\u201d layer of systems like this\u2014information coming in from the outside world, like with browsers. I\u2019d like to preserve references and collect components of things rather than, eg, entire websites. demo:",
        "user": "UHWC9PXBL",
        "ts": "1593730855.215700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZdQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve been particularly focused on the \u201cinbox\u201d layer of systems like this\u2014information coming in from the outside world, like with browsers. I\u2019d like to preserve references and collect components of things rather than, eg, entire websites. demo:"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "",
        "files": [
            {
                "id": "F016F401529",
                "created": 1593730869,
                "timestamp": 1593730869,
                "name": "Screen Recording 2020-06-08 at 11.56.34 AM.mov",
                "title": "Screen Recording 2020-06-08 at 11.56.34 AM.mov",
                "mimetype": "video/quicktime",
                "filetype": "mov",
                "pretty_type": "QuickTime Movie",
                "user": "UHWC9PXBL",
                "editable": false,
                "size": 7934545,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F016F401529/screen_recording_2020-06-08_at_11.56.34_am.mov",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F016F401529/download/screen_recording_2020-06-08_at_11.56.34_am.mov",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F401529-57c985e90a/screen_recording_2020-06-08_at_11.56.34_am_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/UHWC9PXBL/F016F401529/screen_recording_2020-06-08_at_11.56.34_am.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F016F401529-5f38ded006",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "ts": "1593730887.215900",
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "type": "message",
        "text": "demo with wacky debug colors",
        "files": [
            {
                "id": "F016GMBKZ8B",
                "created": 1593731022,
                "timestamp": 1593731022,
                "name": "Screen Recording 2020-05-13 at 5.31.44 PM.mov",
                "title": "Screen Recording 2020-05-13 at 5.31.44 PM.mov",
                "mimetype": "video/quicktime",
                "filetype": "mov",
                "pretty_type": "QuickTime Movie",
                "user": "UHWC9PXBL",
                "editable": false,
                "size": 33699968,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F016GMBKZ8B/screen_recording_2020-05-13_at_5.31.44_pm.mov",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F016GMBKZ8B/download/screen_recording_2020-05-13_at_5.31.44_pm.mov",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F016GMBKZ8B-eb4f5c2443/screen_recording_2020-05-13_at_5.31.44_pm_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/UHWC9PXBL/F016GMBKZ8B/screen_recording_2020-05-13_at_5.31.44_pm.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F016GMBKZ8B-0cfcdaee06",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6OieH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "demo with wacky debug colors"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "ts": "1593731073.216500",
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "525CAC8E-3399-48F2-B030-D0646F8936F4",
        "type": "message",
        "text": "Definitely don\u2019t think text is sufficient or good enough on its own. Just that it can be the foundation and other mediums augment it - when I hear Visual Programming sounds like the visuals are the main thing",
        "user": "UKP3B2J5D",
        "ts": "1593731787.219300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "llJd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Definitely don\u2019t think text is sufficient or good enough on its own. Just that it can be the foundation and other mediums augment it - when I hear Visual Programming sounds like the visuals are the main thing"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "9111aded-eadb-4f9f-a5e2-ae9ea01578fc",
        "type": "message",
        "text": "That's awesome! Easy web-clipping is a big reason I haven't adopted a Zettelkasten system yet. You're already solving the hard stuff!",
        "user": "ULK0Z4MPV",
        "ts": "1593731806.219500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HHsJM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's awesome! Easy web-clipping is a big reason I haven't adopted a Zettelkasten system yet. You're already solving the hard stuff!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "oh and the clips are pretty easy to parse structurally",
        "files": [
            {
                "id": "F016GHCE3HQ",
                "created": 1593735346,
                "timestamp": 1593735346,
                "name": "Screen Recording 2020-05-29 at 12.45.49 PM.mov",
                "title": "Screen Recording 2020-05-29 at 12.45.49 PM.mov",
                "mimetype": "video/quicktime",
                "filetype": "mov",
                "pretty_type": "QuickTime Movie",
                "user": "UHWC9PXBL",
                "editable": false,
                "size": 2003277,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F016GHCE3HQ/screen_recording_2020-05-29_at_12.45.49_pm.mov",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F016GHCE3HQ/download/screen_recording_2020-05-29_at_12.45.49_pm.mov",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F016GHCE3HQ-ab787e3f40/screen_recording_2020-05-29_at_12.45.49_pm_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/UHWC9PXBL/F016GHCE3HQ/screen_recording_2020-05-29_at_12.45.49_pm.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F016GHCE3HQ-dc4072cb4a",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DWF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh and the clips are pretty easy to parse structurally"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "ts": "1593735353.219900",
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "type": "message",
        "text": "",
        "files": [
            {
                "id": "F016F68GYE9",
                "created": 1593735366,
                "timestamp": 1593735366,
                "name": "Screen Recording 2020-05-29 at 12.36.40 PM.mov",
                "title": "Screen Recording 2020-05-29 at 12.36.40 PM.mov",
                "mimetype": "video/quicktime",
                "filetype": "mov",
                "pretty_type": "QuickTime Movie",
                "user": "UHWC9PXBL",
                "editable": false,
                "size": 13719600,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F016F68GYE9/screen_recording_2020-05-29_at_12.36.40_pm.mov",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F016F68GYE9/download/screen_recording_2020-05-29_at_12.36.40_pm.mov",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F016F68GYE9-9bfefe0b36/screen_recording_2020-05-29_at_12.36.40_pm_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/UHWC9PXBL/F016F68GYE9/screen_recording_2020-05-29_at_12.36.40_pm.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F016F68GYE9-86d65139e5",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "ts": "1593735387.220300",
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "type": "message",
        "text": "end of videos",
        "files": [
            {
                "id": "F0161QYM4H5",
                "created": 1593735401,
                "timestamp": 1593735401,
                "name": "Screen Recording 2020-06-07 at 2.41.28 PM.mov",
                "title": "Screen Recording 2020-06-07 at 2.41.28 PM.mov",
                "mimetype": "video/quicktime",
                "filetype": "mov",
                "pretty_type": "QuickTime Movie",
                "user": "UHWC9PXBL",
                "editable": false,
                "size": 6380354,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F0161QYM4H5/screen_recording_2020-06-07_at_2.41.28_pm.mov",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0161QYM4H5/download/screen_recording_2020-06-07_at_2.41.28_pm.mov",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F0161QYM4H5-214d0af923/screen_recording_2020-06-07_at_2.41.28_pm_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/UHWC9PXBL/F0161QYM4H5/screen_recording_2020-06-07_at_2.41.28_pm.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0161QYM4H5-83f9223612",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "57iQU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "end of videos"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "ts": "1593735411.220800",
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "bba1f88d-e81b-43c8-b187-787a7d7d77b4",
        "type": "message",
        "text": "at the moment i\u2019m a bit stuck on the interface for saving clips/organizing them\u2014i think that kind of \u201cpiling them\u201d like you might do for \u201cread &amp; reply later\u201d in in the hey email app might be a good start, provided that you can kind of stack them in different places. but how that then forms into like useful aggregates (eg here\u2019s a list of links on visual programming environments that run on the web) is where im struggling a bit",
        "user": "UHWC9PXBL",
        "ts": "1593735488.221300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1593747917.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VSB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "at the moment i\u2019m a bit stuck on the interface for saving clips/organizing them\u2014i think that kind of \u201cpiling them\u201d like you might do for \u201cread & reply later\u201d in in the hey email app might be a good start, provided that you can kind of stack them in different places. but how that then forms into like useful aggregates (eg here\u2019s a list of links on visual programming environments that run on the web) is where im struggling a bit"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "de4f66e2-4cb1-488d-9a72-e90e62101e01",
        "type": "message",
        "text": "Something I think about a *lot* is how we can increase software literacy, and I don't know if \"learning how to code\" is actually what we mostly want.  Both my parents and my grandmother learned to code in the 80s, but only one of them is even approaching software literate.  People need to be given an understanding of what computers *are* and what they are capable of, probably through integrating some automation or similar into their ordinary workflows.  Advanced spreadsheets you use every day will inform your ability to understand that software exists and can be built and combined and changed a lot more than knowing how to write basic code that you never actually do in real life.  I fear that far from building the LOGO or etoys-inspired \"computer culture\" of Mindstorms we are instead teaching elementary students JS in the same way that the 80s taught highschool students BASIC -- and then none of them actually got any use out of it in their real lives",
        "user": "U014Y19RYA3",
        "ts": "1593736340.221700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N8K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something I think about a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is how we can increase software literacy, and I don't know if \"learning how to code\" is actually what we mostly want.  Both my parents and my grandmother learned to code in the 80s, but only one of them is even approaching software literate.  People need to be given an understanding of what computers "
                            },
                            {
                                "type": "text",
                                "text": "are",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and what they are capable of, probably through integrating some automation or similar into their ordinary workflows.  Advanced spreadsheets you use every day will inform your ability to understand that software exists and can be built and combined and changed a lot more than knowing how to write basic code that you never actually do in real life.  I fear that far from building the LOGO or etoys-inspired \"computer culture\" of Mindstorms we are instead teaching elementary students JS in the same way that the 80s taught highschool students BASIC -- and then none of them actually got any use out of it in their real lives"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "a8fa54c2-c854-4eaa-b4ff-4b1d63aa3af0",
        "type": "message",
        "text": "Love the idea of a PL where the basic types are variable sized (and/or small scalar vectors), and made a few designs in that direction.. the hard part (for me) is always making it fast. My last attempts try to solve that by putting such values on a stack (as opposed to dynamic allocation fallback). Something similar to \"small object optimization\" of e.g. Clang's std::string implementation is also a good direction.",
        "user": "UHDQ62M4P",
        "ts": "1593738544.222000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0GP4v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Love the idea of a PL where the basic types are variable sized (and/or small scalar vectors), and made a few designs in that direction.. the hard part (for me) is always making it fast. My last attempts try to solve that by putting such values on a stack (as opposed to dynamic allocation fallback). Something similar to \"small object optimization\" of e.g. Clang's std::string implementation is also a good direction."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590977348.305600",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "59edff04-b993-4b62-9209-e29f4acfeff0",
        "type": "message",
        "text": "and that all is to say absolutely nothing about the social/collaborative aspect of it",
        "user": "UHWC9PXBL",
        "ts": "1593738747.222300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8=7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and that all is to say absolutely nothing about the social/collaborative aspect of it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "b832a216-6e53-48f1-9b7e-544031f83185",
        "type": "message",
        "text": "<@U6FKVSVCK> looks like my comment was too ambiguous :slightly_smiling_face:  ...  donotpay solves the ambiguously problem by having a conversation. It asks you questions to resolve ambiguously. ... I am not sure how else you could do it, because, as you say, many English statements are ambiguous. donotpay uses the IBM Watson software - there are quite a few podcasts about it <https://www.listennotes.com/podcasts/415-stories/e7-joshua-browder-of-DL2dXgmfvPr/>",
        "user": "UP6G25H35",
        "ts": "1593739141.222500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Listen Notes",
                "title": "E7 - Joshua Browder of DoNotPay on a new perspective to consumer rights and building a multi-horizontal app",
                "title_link": "https://www.listennotes.com/podcasts/415-stories/e7-joshua-browder-of-DL2dXgmfvPr/",
                "text": "00:13:24 - Joshua from DoNotPay has a different perspective about consumer rights with creating a multi-horizontal consumer app, the World's first robot lawyer\u2026",
                "fallback": "Listen Notes: E7 - Joshua Browder of DoNotPay on a new perspective to consumer rights and building a multi-horizontal app",
                "thumb_url": "https://cdn-images-1.listennotes.com/podcasts/415-stories/7-joshua-browder-of-donotpay-GVM_g7e4IEB-DL2dXgmfvPr.1400x1400.jpg",
                "fields": [
                    {
                        "title": "Podcast",
                        "value": "415 Stories",
                        "short": true
                    },
                    {
                        "title": "Length",
                        "value": "00:13:24",
                        "short": true
                    }
                ],
                "from_url": "https://www.listennotes.com/podcasts/415-stories/e7-joshua-browder-of-DL2dXgmfvPr/",
                "thumb_width": 1400,
                "thumb_height": 1400,
                "service_icon": "https://www.listennotes.com/static/v3/img/logo/apple-touch-icon.png?v3=1",
                "id": 1,
                "original_url": "https://www.listennotes.com/podcasts/415-stories/e7-joshua-browder-of-DL2dXgmfvPr/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5XY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6FKVSVCK"
                            },
                            {
                                "type": "text",
                                "text": " looks like my comment was too ambiguous "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "  ...  donotpay solves the ambiguously problem by having a conversation. It asks you questions to resolve ambiguously. ... I am not sure how else you could do it, because, as you say, many English statements are ambiguous. donotpay uses the IBM Watson software - there are quite a few podcasts about it "
                            },
                            {
                                "type": "link",
                                "url": "https://www.listennotes.com/podcasts/415-stories/e7-joshua-browder-of-DL2dXgmfvPr/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1590075796.025100",
        "parent_user_id": "UEBG0NPDK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U6FKVSVCK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "27993414-2e22-4f87-8a5c-1b6760cfad72",
        "type": "message",
        "text": "That's a high bar. I think _nobody_ is software literate today. Someone literate in english can read any individual paragraph in english and answer some simple comprehension questions about it. And students learn to read two books and compare and contrast features of their prose. Most people don't write novels, but many people can _read_ novels and talk about them with each other.\n\nCan anybody do that today with software they didn't write? Even software they wrote a year or two ago? Substitute 'software' with 'spreadsheet' to taste. I sure can't claim anything like it. Any time I try to read somebody else's novel-length code I have to spend weeks to understand what it does. I imagine people from a thousand years ago may have felt the same way, laboriously reading a tablet character by character, tongue sticking out, trying to figure out where the word boundaries are, reading a line over and over again until the meaning sinks in.",
        "user": "UCUSW7WVD",
        "ts": "1593740189.222800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1593740362.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sFd2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's a high bar. I think "
                            },
                            {
                                "type": "text",
                                "text": "nobody",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is software literate today. Someone literate in english can read any individual paragraph in english and answer some simple comprehension questions about it. And students learn to read two books and compare and contrast features of their prose. Most people don't write novels, but many people can "
                            },
                            {
                                "type": "text",
                                "text": "read",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " novels and talk about them with each other.\n\nCan anybody do that today with software they didn't write? Even software they wrote a year or two ago? Substitute 'software' with 'spreadsheet' to taste. I sure can't claim anything like it. Any time I try to read somebody else's novel-length code I have to spend weeks to understand what it does. I imagine people from a thousand years ago may have felt the same way, laboriously reading a tablet character by character, tongue sticking out, trying to figure out where the word boundaries are, reading a line over and over again until the meaning sinks in."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "UKP3B2J5D",
                    "UHWC9PXBL",
                    "U8A5MS6R1",
                    "UKDM3GLAJ"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "3bb5cf88-a1bd-4872-93cc-f69ee93f5723",
        "type": "message",
        "text": "<@UHWC9PXBL> \"i think an analogy might be that visual programming systems ought be very legible in gif form or similar\u2014there are a few indie games that have gotten really big just because the developers were able to make really compelling gifs that went viral.\"\n\nForgive me if I'm reading too much into your response.\nI don't love this analogy. I think it misses a lot of the subtle issues here. It's important to realize that different methods of communication have a \"knowledge bandwidth\". Those viral gifs all communicated ideas that \"could fit in a gif\" so to speak. Your comment implies that we just need to find some better way of making an image that communicates the ideas better, but I suspect representing code might fundamentally be an idea that doesn't \"fit on a gif\". And that's not necessarily a bad thing! It just means we have to find other ways to communicate those ideas.\n\nFor the same reason, we didn't just stop writing books after we invented cinema. Different ideas work better in different mediums.",
        "user": "U01661S9F34",
        "ts": "1593745672.223400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bMWMA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " \"i think an analogy might be that visual programming systems ought be very legible in gif form or similar\u2014there are a few indie games that have gotten really big just because the developers were able to make really compelling gifs that went viral.\"\n\nForgive me if I'm reading too much into your response.\nI don't love this analogy. I think it misses a lot of the subtle issues here. It's important to realize that different methods of communication have a \"knowledge bandwidth\". Those viral gifs all communicated ideas that \"could fit in a gif\" so to speak. Your comment implies that we just need to find some better way of making an image that communicates the ideas better, but I suspect representing code might fundamentally be an idea that doesn't \"fit on a gif\". And that's not necessarily a bad thing! It just means we have to find other ways to communicate those ideas.\n\nFor the same reason, we didn't just stop writing books after we invented cinema. Different ideas work better in different mediums."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "1f24585f-6d76-439d-8400-108a640834b8",
        "type": "message",
        "text": "damn <@UCUSW7WVD> that really hits home. remembering a few historical figures now who were renowned for their ability to read without speaking\u2014and also that multiplication and division were basically magic or rocket science before arabic numerals.",
        "user": "UHWC9PXBL",
        "ts": "1593745712.223600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1593794197.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k=vg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "damn "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " that really hits home. remembering a few historical figures now who were renowned for their ability to read without speaking\u2014and also that multiplication and division were basically magic or rocket science before arabic numerals."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "472da6bc-519d-4d10-b4e0-1f17dd986946",
        "type": "message",
        "text": "<@U01661S9F34> no disagreement there\u2014I don\u2019t think the gif is the universal form of visual communication or anything (just an example)\u2014but I do think that it\u2019s not surprising that some ideas fit differently in different media. I don\u2019t think I\u2019d be super successful at learning to throw a ball by reading a textbook. I\u2019m just suspicious that \u201cstuff that\u2019s hard to describe with speech\u201d means non-transmissible, unlearnable, simple, or unsophisticated",
        "user": "UHWC9PXBL",
        "ts": "1593745859.223800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KA73P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " no disagreement there\u2014I don\u2019t think the gif is the universal form of visual communication or anything (just an example)\u2014but I do think that it\u2019s not surprising that some ideas fit differently in different media. I don\u2019t think I\u2019d be super successful at learning to throw a ball by reading a textbook. I\u2019m just suspicious that \u201cstuff that\u2019s hard to describe with speech\u201d means non-transmissible, unlearnable, simple, or unsophisticated"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b091ceec-ff6a-446f-af53-0967f46ec3ba",
        "type": "message",
        "text": "I really like these.\n\nI might add:\n* Understand the bug before you fix it.",
        "user": "UK3LH8CF5",
        "ts": "1593746235.224000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wl2I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like these.\n\nI might add:\n* Understand the bug before you fix it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593722002.162200",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "UN57U8V53"
                ],
                "count": 3
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6a2c5588-e5b1-4428-87ed-084c08adb1e0",
        "type": "message",
        "text": "I do like the collect now, tag later approach. It allows you to save data when you're interested in finding it and organise when you have a spare moment. I imagine you could just tag it with \"vis prog\" unless I'm missing something?\n\nSocial/collab will be an interesting problem to solve and I imagine will take a bit of trial and error to get right. Especially considering moderation, ownership, longform vs chat.\n\nPerhaps we can see who else is interested and set up a doc / arrange a call to discuss details.",
        "user": "ULK0Z4MPV",
        "ts": "1593747228.224300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "ULK0Z4MPV",
            "ts": "1593747407.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CwBY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do like the collect now, tag later approach. It allows you to save data when you're interested in finding it and organise when you have a spare moment. I imagine you could just tag it with \"vis prog\" unless I'm missing something?\n\nSocial/collab will be an interesting problem to solve and I imagine will take a bit of trial and error to get right. Especially considering moderation, ownership, longform vs chat.\n\nPerhaps we can see who else is interested and set up a doc / arrange a call to discuss details."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "e727c51e-3e76-454a-b62b-89da5c1b286e",
        "type": "message",
        "text": "I have a lot of feelings about tags\u2014would love to discuss more on a call with anyone interested",
        "user": "UHWC9PXBL",
        "ts": "1593747863.224700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jx0a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a lot of feelings about tags\u2014would love to discuss more on a call with anyone interested"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593723588.167900",
        "parent_user_id": "ULK0Z4MPV"
    },
    {
        "client_msg_id": "0188213d-a523-41c7-ac6b-208e96e97247",
        "type": "message",
        "text": "<@UHWC9PXBL> Definitely. I believe the future is a hybrid. Text is an important part, but with lots of visual aids (or audio or tactile aids even).\n\"Stuff that's hard to describe with speech\" reminds me of the concept of \"tacit knowledge\": <https://commoncog.com/blog/tacit-knowledge-is-a-real-thing/>",
        "user": "U01661S9F34",
        "ts": "1593748363.225000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1593748456.000000"
        },
        "attachments": [
            {
                "service_name": "Commonplace - The Commoncog Blog",
                "title": "Why Tacit Knowledge is More Important Than Deliberate Practice",
                "title_link": "https://commoncog.com/blog/tacit-knowledge-is-a-real-thing/",
                "text": "What tacit knowledge is, and why it is the most interesting topic in the study of expertise today.",
                "fallback": "Commonplace - The Commoncog Blog: Why Tacit Knowledge is More Important Than Deliberate Practice",
                "image_url": "https://commoncog.com/blog/content/images/2020/06/tacit_knowledge.jpg",
                "image_width": 375,
                "image_height": 250,
                "fields": [
                    {
                        "title": "Written by",
                        "value": "Cedric Chin",
                        "short": true
                    },
                    {
                        "title": "Filed under",
                        "value": "Learning Techniques",
                        "short": true
                    }
                ],
                "ts": 1591699790,
                "from_url": "https://commoncog.com/blog/tacit-knowledge-is-a-real-thing/",
                "image_bytes": 60014,
                "service_icon": "https://commoncog.com/blog/favicon.png",
                "id": 1,
                "original_url": "https://commoncog.com/blog/tacit-knowledge-is-a-real-thing/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RaoUk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Definitely. I believe the future is a hybrid. Text is an important part, but with lots of visual aids (or audio or tactile aids even).\n\"Stuff that's hard to describe with speech\" reminds me of the concept of \"tacit knowledge\": "
                            },
                            {
                                "type": "link",
                                "url": "https://commoncog.com/blog/tacit-knowledge-is-a-real-thing/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UJ6LDMMN0",
                    "U010RH58PL7"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "D47E5957-A652-40F0-B210-A45D7763DD8A",
        "type": "message",
        "text": "<@U01661S9F34> thanks for that article!",
        "user": "UKP3B2J5D",
        "ts": "1593752076.225900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HAd/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " thanks for that article!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b1d67c16-f8c6-4aae-b8ff-6008690159cd",
        "type": "message",
        "text": "Duolingo for programming languages: <https://getmimo.com/>\n\nMy wife told me about this (she choose to start with Python).\n\nIt's an interesting approach. Some people really do well with Duolingo (e.g. my wife has a 1000+ day streak).\n\nI was watching her do a lesson and it was quite well structured. The questions were set up to test common beginner mistakes.\n\nWhat I thought was nice about that is that if you get it wrong, the app can tell you exactly _why_ you got it wrong (since they know exactly what bit of understanding they were testing, and control the answer space).\n\nIf you made the same mistake in e.g. a REPL, the error message might not be as informative.",
        "user": "U0136G8R8KG",
        "ts": "1593756144.226300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "Mimo: Learn to Code",
                "title_link": "https://getmimo.com/",
                "text": "Mimo is a platform that teaches programming, HTML, CSS, JavaScript, Swift, and more through gamified and interactive lessons on the go.",
                "fallback": "Mimo: Learn to Code",
                "image_url": "https://getmimo.com/assets/link_image_twitter.png",
                "from_url": "https://getmimo.com/",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 32800,
                "service_icon": "https://getmimo.com/icons/icon-72x72.png?v=381263bed474a7903df957eb3078360b",
                "service_name": "getmimo.com",
                "id": 1,
                "original_url": "https://getmimo.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j3i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Duolingo for programming languages: "
                            },
                            {
                                "type": "link",
                                "url": "https://getmimo.com/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMy wife told me about this (she choose to start with Python).\n\nIt's an interesting approach. Some people really do well with Duolingo (e.g. my wife has a 1000+ day streak).\n\nI was watching her do a lesson and it was quite well structured. The questions were set up to test common beginner mistakes.\n\nWhat I thought was nice about that is that if you get it wrong, the app can tell you exactly "
                            },
                            {
                                "type": "text",
                                "text": "why",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you got it wrong (since they know exactly what bit of understanding they were testing, and control the answer space).\n\nIf you made the same mistake in e.g. a REPL, the error message might not be as informative."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a2024c3e-ffe4-4971-80ea-3ee0d2d9bf5a",
        "type": "message",
        "text": "In the same idea than <@UKP3B2J5D>, one that comes to my mind: good naming is important but hard.",
        "user": "UJ6LDMMN0",
        "ts": "1593756444.227000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VyC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the same idea than "
                            },
                            {
                                "type": "user",
                                "user_id": "UKP3B2J5D"
                            },
                            {
                                "type": "text",
                                "text": ", one that comes to my mind: good naming is important but hard."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593722002.162200",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "c66699c7-bd14-470d-9341-83913d1fe474",
        "type": "message",
        "text": "I don't know there is an easy answer. Coming from the perspective of games would I rather have 1000 systems from which I must choose 50-150 and then manually \"mix them\" (probably man years of work to really understand all the ins and outs of each system). Or do I just want Unreal/Unity which already made the choices and I can start immediately on the core of the experience I'm trying to provide instead of man years of engineering prep first. I'm not saying one is good and one is bad. Only that reasonable people can choose choose either the large system or the individual systems. Individual small flexible systems are not unambiguously better.\n\nSo, that to me is a counterexample to small mixable pieces.\n\nOn the other hand, it's rare to find good libraries that don't try to do too much or are flexible and off the top of my head I see at least 2 common reasons. Reason 1, the writer of the library is not experienced enough to write a simple, flexible library. Reason 2, the less experience you have the more you like handrails so there is both the incentive from yourself since you lack experience you think handrails are good and the incentive from the millions of inexperienced developers who will judge your library poorly if they need any coding experience to use it.\n\nTo give an example of this second issue, imagine any library that processes data. I think the experienced programmer (maybe you'll disagree) might prefer that the only input to this system is a an abstract \"Reader\" (or a function to read if you want to think in functional terms). The user can then provide a \"reader\" to read a file, read from memory, read from the network, and probably do that in as little as a 1-3 lines of code. This means the library is easily remixed in any environment.\n\nBut the inexperienced programmer doesn't know how to write that line of code to provide the reader so they'll hate on your library and prefer the one that takes a filename, or a network address or a binary array, or a websocket, and because of that the library will need to pull in 100k lines of support code for file i/o and networking etc... and therefore tying it to specific implementations of those features and then when someone suggests they need it to work with different implementations they'll hack in some afterthought of a configuration option instead of realizing they shouldn't have tied things together in the first place.",
        "user": "UC6997THT",
        "ts": "1593758326.227600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dEv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know there is an easy answer. Coming from the perspective of games would I rather have 1000 systems from which I must choose 50-150 and then manually \"mix them\" (probably man years of work to really understand all the ins and outs of each system). Or do I just want Unreal/Unity which already made the choices and I can start immediately on the core of the experience I'm trying to provide instead of man years of engineering prep first. I'm not saying one is good and one is bad. Only that reasonable people can choose choose either the large system or the individual systems. Individual small flexible systems are not unambiguously better.\n\nSo, that to me is a counterexample to small mixable pieces.\n\nOn the other hand, it's rare to find good libraries that don't try to do too much or are flexible and off the top of my head I see at least 2 common reasons. Reason 1, the writer of the library is not experienced enough to write a simple, flexible library. Reason 2, the less experience you have the more you like handrails so there is both the incentive from yourself since you lack experience you think handrails are good and the incentive from the millions of inexperienced developers who will judge your library poorly if they need any coding experience to use it.\n\nTo give an example of this second issue, imagine any library that processes data. I think the experienced programmer (maybe you'll disagree) might prefer that the only input to this system is a an abstract \"Reader\" (or a function to read if you want to think in functional terms). The user can then provide a \"reader\" to read a file, read from memory, read from the network, and probably do that in as little as a 1-3 lines of code. This means the library is easily remixed in any environment.\n\nBut the inexperienced programmer doesn't know how to write that line of code to provide the reader so they'll hate on your library and prefer the one that takes a filename, or a network address or a binary array, or a websocket, and because of that the library will need to pull in 100k lines of support code for file i/o and networking etc... and therefore tying it to specific implementations of those features and then when someone suggests they need it to work with different implementations they'll hack in some afterthought of a configuration option instead of realizing they shouldn't have tied things together in the first place."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593659834.110700",
        "parent_user_id": "UMWF81HTP"
    },
    {
        "client_msg_id": "9270aa12-ca7c-41d0-931b-af3038f0d5a8",
        "type": "message",
        "text": "Very interesting discussions and links (thanks <@U01661S9F34> for the Tacit Knowledge article)! :slightly_smiling_face:",
        "user": "UJ6LDMMN0",
        "ts": "1593759681.228000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1593759694.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JY1v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting discussions and links (thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " for the Tacit Knowledge article)! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "1c06bcad-898e-4d3e-9ee6-0edfedecce68",
        "type": "message",
        "text": "I agree part the future of coding should think about making learning easier. That is why I like Vue.js and the way this framework is designed with an objective to be easy to learn. The features are very focused, you don't have to use all of them to start being efficient and the documentation is of very high quality (with some decent effort to translate it), one that you can read like a novel (which I did before writing a line of code).",
        "user": "UJ6LDMMN0",
        "ts": "1593760220.228300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XxCd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree part the future of coding should think about making learning easier. That is why I like Vue.js and the way this framework is designed with an objective to be easy to learn. The features are very focused, you don't have to use all of them to start being efficient and the documentation is of very high quality (with some decent effort to translate it), one that you can read like a novel (which I did before writing a line of code)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2402c5fd-b84b-43af-aea5-d9e373cf86a5",
        "type": "message",
        "text": "Is it possible we're just done with standards because it's too easy to switch?\n\nWe needed a standard for phones because everyone needed to be able to call everyone else. Now I can talk to people for free on 1000 different apps, emphasis on free. Someone tells me contact me on \"Kik\" (never heard of it) and I install \"Kik\" and start talking to them. As a geek I hate installing stuff and signing up for new services to be tracked but I'm going to guess most people don't think twice about it.\n\nStandards can also stifle innovation because instead of just adding the feature you want you have to argue about it for years in standards committees. Sure maybe you can come up with some extension mechanism but then you're kind of back to the same thing, only people with your app can use your special extension.\n\nOTOH I'm happy HTML exists and is a standard. It enables all kinds of things because it's in a standard format used in a standard environment. All the browser extensions like Rikaikun (japanese to english helper) and even Ublock Origin (the element zapper) and I'm guessing the password managers only work because everything is running in a standard environment with a standard data representation. If everything was native apps that ability disappears.",
        "user": "UC6997THT",
        "ts": "1593761206.228500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZTPF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it possible we're just done with standards because it's too easy to switch?\n\nWe needed a standard for phones because everyone needed to be able to call everyone else. Now I can talk to people for free on 1000 different apps, emphasis on free. Someone tells me contact me on \"Kik\" (never heard of it) and I install \"Kik\" and start talking to them. As a geek I hate installing stuff and signing up for new services to be tracked but I'm going to guess most people don't think twice about it.\n\nStandards can also stifle innovation because instead of just adding the feature you want you have to argue about it for years in standards committees. Sure maybe you can come up with some extension mechanism but then you're kind of back to the same thing, only people with your app can use your special extension.\n\nOTOH I'm happy HTML exists and is a standard. It enables all kinds of things because it's in a standard format used in a standard environment. All the browser extensions like Rikaikun (japanese to english helper) and even Ublock Origin (the element zapper) and I'm guessing the password managers only work because everything is running in a standard environment with a standard data representation. If everything was native apps that ability disappears."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593692019.136100",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4f0d07ab-4952-4744-9a6f-e7ede701a582",
        "type": "message",
        "text": "I'd say a newbie by definition does not know which way is up.  Cannot tell good practice from bad.  At least that was my path.  :wink:",
        "user": "UA14TGLTC",
        "ts": "1593763914.229100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hywt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd say a newbie by definition does not know which way is up.  Cannot tell good practice from bad.  At least that was my path.  "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593722002.162200",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "f60f77fa-bdf5-4ecf-aab1-27fe42c8c43e",
        "type": "message",
        "text": "<@UHWC9PXBL> RoR was \"extracted\" from the work 37 signals (now basecamp) did while developing basecamp, so it's similar to the model I mentioned about developing open source while doing your day job at a company. Or do you refer to something else?",
        "user": "UBN9AFS0N",
        "ts": "1593764039.229300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EY39",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " RoR was \"extracted\" from the work 37 signals (now basecamp) did while developing basecamp, so it's similar to the model I mentioned about developing open source while doing your day job at a company. Or do you refer to something else?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593692019.136100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "CB130583-94E3-4733-BCD3-06A28906147F",
        "type": "message",
        "text": "\u201cBig\u201d standards like TCP/IP, HTTP, HTML, etc. seem to be the infrastructure that was built in the past that everything today still mostly depends on. We wouldn\u2019t have been able to get to today without them. But there seems to be a pattern where the heavy lifting is done by visionaries motivated by ideals (and backed by governments and/or large corporations\u2019 R&amp;D budget) and then capitalism swooping in, taking over, and making their foundational work look like it\u2019s no longer necessary (and perhaps it is no longer necessary?).",
        "user": "U5STGTB3J",
        "ts": "1593766780.244700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/7d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\u201cBig\u201d standards like TCP/IP, HTTP, HTML, etc. seem to be the infrastructure that was built in the past that everything today still mostly depends on. We wouldn\u2019t have been able to get to today without them. But there seems to be a pattern where the heavy lifting is done by visionaries motivated by ideals (and backed by governments and/or large corporations\u2019 R&D budget) and then capitalism swooping in, taking over, and making their foundational work look like it\u2019s no longer necessary (and perhaps it is no longer necessary?)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593692019.136100",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0556c8f1-3ac1-41b4-a760-90d7fa59236d",
        "type": "message",
        "text": "Maybe a good strategy would be to listen to people like Mariana Mazzucato <https://marianamazzucato.com/> and people researching how to manage \"the commons\" more :slightly_smiling_face:",
        "user": "UBN9AFS0N",
        "ts": "1593767371.244900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s/3W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe a good strategy would be to listen to people like Mariana Mazzucato "
                            },
                            {
                                "type": "link",
                                "url": "https://marianamazzucato.com/"
                            },
                            {
                                "type": "text",
                                "text": " and people researching how to manage \"the commons\" more "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593692019.136100",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J",
                    "UHWC9PXBL",
                    "U71PMQ1V0",
                    "UJ6LDMMN0"
                ],
                "count": 4
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "33B222D4-29FC-4264-8DEC-9F044E6B9A69",
        "type": "message",
        "text": "<@U0136G8R8KG> thanks for that link! It\u2019s precisely the direction we should heading towards. \nImagine, if the results from a large number of students also fed back to language designers so they could make better decisions up front + perhaps trial new features and figure out if they were easy to learn - need to be careful - something might be hard to learn because it\u2019s not taught properly too but sometimes the construct is complicated and perhaps there is a less complicated alternative",
        "user": "UKP3B2J5D",
        "ts": "1593775230.251500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TB0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0136G8R8KG"
                            },
                            {
                                "type": "text",
                                "text": " thanks for that link! It\u2019s precisely the direction we should heading towards. \nImagine, if the results from a large number of students also fed back to language designers so they could make better decisions up front + perhaps trial new features and figure out if they were easy to learn - need to be careful - something might be hard to learn because it\u2019s not taught properly too but sometimes the construct is complicated and perhaps there is a less complicated alternative"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U010RH58PL7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "B95D639D-FA19-4746-8CEF-1B743DF94430",
        "type": "message",
        "text": "<@UBN9AFS0N> the weird part about it is that 1. a ton of their money comes from the original product (basecamp) rather than rails itself 2. both the product and the open source stuff did really well and 3. they built the product and the open source platform at pretty much the same time",
        "user": "UHWC9PXBL",
        "ts": "1593784140.254500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X93a7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " the weird part about it is that 1. a ton of their money comes from the original product (basecamp) rather than rails itself 2. both the product and the open source stuff did really well and 3. they built the product and the open source platform at pretty much the same time"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593692019.136100",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "799BC7DA-74EF-4EEE-B7C9-6F0F7A035047",
        "type": "message",
        "text": "i have such a strong wish that documentation had built-in annotations and questions for that exact reason <@UKP3B2J5D> so that students could put their confusion in the docs directly ",
        "user": "UHWC9PXBL",
        "ts": "1593784670.256400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fYh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i have such a strong wish that documentation had built-in annotations and questions for that exact reason "
                            },
                            {
                                "type": "user",
                                "user_id": "UKP3B2J5D"
                            },
                            {
                                "type": "text",
                                "text": " so that students could put their confusion in the docs directly "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593726809.181800",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f3d2b190-4a10-45ec-9566-879c4ef03f07",
        "type": "message",
        "text": "<@UFEQUBNNT> and others: I work on Wasm tooling (LLVM) at Google, so let me know if you have any specific questions",
        "user": "UHDQ62M4P",
        "ts": "1593791347.257000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ThpUN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": " and others: I work on Wasm tooling (LLVM) at Google, so let me know if you have any specific questions"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b22bd524-33c1-4592-928a-47799c018c84",
        "type": "message",
        "text": "most Wasm VMs that are mature and fast are also large complex beasts, so integration isn't easy.. though that is something we're working on making easier (in V8)",
        "user": "UHDQ62M4P",
        "ts": "1593791390.257200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=th",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "most Wasm VMs that are mature and fast are also large complex beasts, so integration isn't easy.. though that is something we're working on making easier (in V8)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "d52c1847-49e5-4cf5-9b40-24ba4ea99776",
        "type": "message",
        "text": "there are interepreter options that would be easier to integrate, but Wasm really takes a huge performance hit when interpreted",
        "user": "UHDQ62M4P",
        "ts": "1593791424.257400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NHh2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there are interepreter options that would be easier to integrate, but Wasm really takes a huge performance hit when interpreted"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "3490f14b-de9d-45ae-99ef-c667930c7ed9",
        "type": "message",
        "text": "<@UEQ6M68H0> Wasm runs on the same thread as JS, and can interleave calls and integrate tightly with JS",
        "user": "UHDQ62M4P",
        "ts": "1593791465.257600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LwOZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " Wasm runs on the same thread as JS, and can interleave calls and integrate tightly with JS"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e4141a83-3053-45d7-83ef-7e7bb4b9f482",
        "type": "message",
        "text": "What you see as \"braindead\" is actually Wasms greatest feature: secure by design. it has NO API surface, thus can actually pretty easily be shown to be secure, unlike other VMs (like e.g. the JVM) that can never be fully declared secure because of its endless API surface",
        "user": "UHDQ62M4P",
        "ts": "1593791546.258000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4ox",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What you see as \"braindead\" is actually Wasms greatest feature: secure by design. it has NO API surface, thus can actually pretty easily be shown to be secure, unlike other VMs (like e.g. the JVM) that can never be fully declared secure because of its endless API surface"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "3b3304b7-4379-40a0-bb52-4fd247bd0a8f",
        "type": "message",
        "text": "that currently means to access the DOM you need to go thru JS, but more direct access (thru \"interface types\") is coming, all while keeping that rock solid sandbox you think is braindead",
        "user": "UHDQ62M4P",
        "ts": "1593791595.258200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+LR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that currently means to access the DOM you need to go thru JS, but more direct access (thru \"interface types\") is coming, all while keeping that rock solid sandbox you think is braindead"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "9abaddd6-5c66-49fa-b7f1-0da848fbdfb7",
        "type": "message",
        "text": "and yes, it is intended to let all languages play",
        "user": "UHDQ62M4P",
        "ts": "1593791617.258400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n1C85",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and yes, it is intended to let all languages play"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "a1d16330-9db7-4945-9faa-236976f490d3",
        "type": "message",
        "text": "What stack would you start with if you suspected that interpretation overhead wouldn't be overwhelming?",
        "user": "UFEQUBNNT",
        "ts": "1593791629.258600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wd6Gt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What stack would you start with if you suspected that interpretation overhead wouldn't be overwhelming?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "a2746398-d847-427f-8a63-99a064059698",
        "type": "message",
        "text": "contrary to your belief, the DOM is not the only thing you might want to access.. for example apps built on top of OpenGL port pretty nicely to Wasm already thru emscripten",
        "user": "UHDQ62M4P",
        "ts": "1593791660.258800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yS1WL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "contrary to your belief, the DOM is not the only thing you might want to access.. for example apps built on top of OpenGL port pretty nicely to Wasm already thru emscripten"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "672e2643-5328-438b-a2cc-4170e969d2b2",
        "type": "message",
        "text": "and of course it was intended to run outside the browser, in any environment",
        "user": "UHDQ62M4P",
        "ts": "1593791683.259000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2kH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and of course it was intended to run outside the browser, in any environment"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "0bbf0dfb-ffa1-41ed-b047-b71bb10616d4",
        "type": "message",
        "text": "<@UFEQUBNNT> if you were ok with an interpreter, I would either integrate the one in WABT <https://github.com/WebAssembly/wabt> which I would have the most faith in being \"correct\" w.r.t. the spec. but is definitely not fast, or wasm3 <https://github.com/wasm3/wasm3> which seems to be the current king of speed in interpreterland",
        "user": "UHDQ62M4P",
        "ts": "1593791869.259200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "wasm3/wasm3",
                "title": "wasm3/wasm3",
                "footer": "<https://github.com/wasm3/wasm3|wasm3/wasm3>",
                "id": 1,
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "ts": 1569949563,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "2266",
                        "short": true
                    },
                    {
                        "title": "Language",
                        "value": "C",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https://github.com/wasm3/wasm3",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eVV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": " if you were ok with an interpreter, I would either integrate the one in WABT "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/WebAssembly/wabt"
                            },
                            {
                                "type": "text",
                                "text": " which I would have the most faith in being \"correct\" w.r.t. the spec. but is definitely not fast, or wasm3 "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/wasm3/wasm3"
                            },
                            {
                                "type": "text",
                                "text": " which seems to be the current king of speed in interpreterland"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "pray::skin-tone-3",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b4d81ff8-0661-4005-b257-860e4d302596",
        "type": "message",
        "text": "what is the language you're integrating into?",
        "user": "UHDQ62M4P",
        "ts": "1593791933.259600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bRF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what is the language you're integrating into?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "16f694b4-b7be-4367-9857-3524fb55492a",
        "type": "message",
        "text": "In general, it helps to see Wasm as a \"secure virtual CPU\", not as a \"batteries included VM\" like JVM or even JS. I guess that is where a lot of confusion comes from.",
        "user": "UHDQ62M4P",
        "ts": "1593792263.259800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1rVAV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In general, it helps to see Wasm as a \"secure virtual CPU\", not as a \"batteries included VM\" like JVM or even JS. I guess that is where a lot of confusion comes from."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UAL7940NM"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "80f4b04c-e846-44ed-bc06-cf1af928e67f",
        "type": "message",
        "text": "\u2022 controlling invariants",
        "user": "UHDQ62M4P",
        "ts": "1593793140.260000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bVdf",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "controlling invariants"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1593722002.162200",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "996b3e11-e71c-46dc-ae63-d463f2ff7704",
        "type": "message",
        "text": "\u2022 maintaining performance",
        "user": "UHDQ62M4P",
        "ts": "1593793160.260200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0415",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "maintaining performance"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "thread_ts": "1593722002.162200",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "26f2e47f-b07c-4476-a7a8-d23ff07a9436",
        "type": "message",
        "text": "<@UHDQ62M4P> Go, ideally, but I'm flexible because I just want to prototype. :slightly_smiling_face:",
        "user": "UFEQUBNNT",
        "ts": "1593793336.260500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iVJc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHDQ62M4P"
                            },
                            {
                                "type": "text",
                                "text": " Go, ideally, but I'm flexible because I just want to prototype. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "ff0b0af4-ba82-4846-b72a-c80a2a899b61",
        "type": "message",
        "text": "<https://cloud.google.com/blog/products/g-suite/connected-sheets-is-generally-available>",
        "user": "UBN9AFS0N",
        "ts": "1593793356.260800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Google Cloud Blog",
                "title": "Connected Sheets is generally available | Google Cloud Blog",
                "title_link": "https://cloud.google.com/blog/products/g-suite/connected-sheets-is-generally-available",
                "text": "Announcing the general availability of Connected Sheets, which provides the power and scale of BigQuery in the familiar context of Sheets.",
                "fallback": "Google Cloud Blog: Connected Sheets is generally available | Google Cloud Blog",
                "image_url": "https://storage.googleapis.com/gweb-cloudblog-publish/images/PivotToTheCloud-01_wxZgkbl.max-1000x1000.png",
                "from_url": "https://cloud.google.com/blog/products/g-suite/connected-sheets-is-generally-available",
                "image_width": 450,
                "image_height": 250,
                "image_bytes": 16610,
                "service_icon": "https://cloud.google.com/blog/static/assets/apple-icon.png",
                "id": 1,
                "original_url": "https://cloud.google.com/blog/products/g-suite/connected-sheets-is-generally-available"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xHDJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://cloud.google.com/blog/products/g-suite/connected-sheets-is-generally-available"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UP7N4QVK2"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e79e60d0-a04d-44e2-8cf3-8b2c47e14307",
        "type": "message",
        "text": "well there's <https://github.com/go-interpreter/wagon>, but hard to tell how robust it is.. when evaluating runtimes, you generally want to check how many of the \"spec tests\" it is able to pass.",
        "user": "UHDQ62M4P",
        "ts": "1593793458.261000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "go-interpreter/wagon",
                "text": "wagon, a WebAssembly-based Go interpreter, for Go.",
                "title": "go-interpreter/wagon",
                "footer": "<https://github.com/go-interpreter/wagon|go-interpreter/wagon>",
                "id": 1,
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "ts": 1486133192,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "871",
                        "short": true
                    },
                    {
                        "title": "Language",
                        "value": "Go",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https://github.com/go-interpreter/wagon",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZEai",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "well there's "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/go-interpreter/wagon"
                            },
                            {
                                "type": "text",
                                "text": ", but hard to tell how robust it is.. when evaluating runtimes, you generally want to check how many of the \"spec tests\" it is able to pass."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "7d5ca6a6-e8c1-4214-8186-531143d7541f",
        "type": "message",
        "text": "is it easy to link in C/C++ libs in Go?",
        "user": "UHDQ62M4P",
        "ts": "1593793480.261300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9aFjG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is it easy to link in C/C++ libs in Go?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "18432f8c-199e-42cc-9625-ea3631b87191",
        "type": "message",
        "text": "Wasmtime seems a pretty well designed runtime that is also fast, if Rust is an option",
        "user": "UHDQ62M4P",
        "ts": "1593793535.261500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GNYlo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wasmtime seems a pretty well designed runtime that is also fast, if Rust is an option"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "38784faf-80e6-4df4-8ea9-38091c104b04",
        "type": "message",
        "text": "I don't necessarily agree with all the claims, but that's a cool demo: <https://twitter.com/Altimor/status/1278736953836400640?s=19|https://twitter.com/Altimor/status/1278736953836400640?s=19>",
        "user": "U0136G8R8KG",
        "ts": "1593794600.262800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/Altimor|@Altimor>: GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                "ts": 1593709622,
                "author_name": "Flo Crivello",
                "author_link": "https://twitter.com/Altimor/status/1278736953836400640",
                "author_icon": "https://pbs.twimg.com/profile_images/1014358626973069313/kuasBCIY_normal.jpg",
                "author_subname": "@Altimor",
                "text": "GPT3 writing code. A compiler from natural language to code.\nPeople don't understand \u2014 this will change absolutely everything. We're decoupling human horsepower from code production. The intellectual equivalent of the discovery of the engine. <https://player.vimeo.com/video/426819809> <https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                "image_url": "https://pbs.twimg.com/media/Eb78a5IUYAAKXMn.png",
                "image_width": 874,
                "image_height": 394,
                "image_bytes": 145239,
                "id": 1,
                "original_url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4J02w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't necessarily agree with all the claims, but that's a cool demo: "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/Altimor/status/1278736953836400640?s=19",
                                "text": "https://twitter.com/Altimor/status/1278736953836400640?s=19"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "reply_count": 17,
        "reply_users_count": 7,
        "latest_reply": "1593885384.320500",
        "reply_users": [
            "UKP3B2J5D",
            "U01661S9F34",
            "UKDM3GLAJ",
            "UPVBV34EL",
            "UA14TGLTC",
            "U0136G8R8KG",
            "UE1JQM9HQ"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "6814AC71-227E-4222-A7B4-2852C01D252A",
        "type": "message",
        "text": "I struggle with this because at least with the examples in the demo - with haskell I could have produced the code for the same effort it took to write the comment. Plus English is ambiguous and not precise enough. What I want stuff like to be applied to is generating more efficient versions of the same code or efficient code from a specification or from a test. Like you shouldn\u2019t really have to write the tail recursive version of a function if there are tools can help you do that.",
        "user": "UKP3B2J5D",
        "ts": "1593795713.269400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mukv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I struggle with this because at least with the examples in the demo - with haskell I could have produced the code for the same effort it took to write the comment. Plus English is ambiguous and not precise enough. What I want stuff like to be applied to is generating more efficient versions of the same code or efficient code from a specification or from a test. Like you shouldn\u2019t really have to write the tail recursive version of a function if there are tools can help you do that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b92223a9-3b68-4bf1-a7fa-a076985a6eec",
        "type": "message",
        "text": "Cool demo, but I think it's another example of too much AI/ML hype.\n\nThe most telling example for me was the part where the model made an error in the demo on the \"compute_total_price\" function.\n\nFirst, note that it's guided by doc string comments. This very quickly devolves into a classic black box optimization problem.\n\nI can easily imagine someone spending hours tweaking the wording in their comment to try and get the model to generate the right code. How is that better than what we do today where we tweak code or add annotations to try and get the compiler to produce more optimal code? This is worse because natural language is not nearly as structured (The search space is much larger) and the ML model is much more stochastic than an optimizing compiler.\n\nSecond, think about when, even after the presenter \"fixed\" the comment, the model produced code that was *almost* right, but had a bug. The 80% off instead of 20% off.\n\nThe presenter writes that off as no big deal, and in a small toy example like this it is easy to find and correct the error. But can you imagine that situation in a much larger code base? Or even a single moderately complex function? It's well known that reading code (and understanding it) is much harder than writing it. Anybody who has had to fix a bug in a dense legacy code base will tell you, it's way harder to find the bug than it is to fix it. Often, even if you were the original author!\n\nThis feels less like \"pair programming\" from the future, and more like \"instant legacy code generation\". :cry:\n\nI think ML is good in general, but I personally feel like this is a case where more black box magic makes things worse.",
        "user": "U01661S9F34",
        "ts": "1593796059.269700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uIhX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool demo, but I think it's another example of too much AI/ML hype.\n\nThe most telling example for me was the part where the model made an error in the demo on the \"compute_total_price\" function.\n\nFirst, note that it's guided by doc string comments. This very quickly devolves into a classic black box optimization problem.\n\nI can easily imagine someone spending hours tweaking the wording in their comment to try and get the model to generate the right code. How is that better than what we do today where we tweak code or add annotations to try and get the compiler to produce more optimal code? This is worse because natural language is not nearly as structured (The search space is much larger) and the ML model is much more stochastic than an optimizing compiler.\n\nSecond, think about when, even after the presenter \"fixed\" the comment, the model produced code that was "
                            },
                            {
                                "type": "text",
                                "text": "almost",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " right, but had a bug. The 80% off instead of 20% off.\n\nThe presenter writes that off as no big deal, and in a small toy example like this it is easy to find and correct the error. But can you imagine that situation in a much larger code base? Or even a single moderately complex function? It's well known that reading code (and understanding it) is much harder than writing it. Anybody who has had to fix a bug in a dense legacy code base will tell you, it's way harder to find the bug than it is to fix it. Often, even if you were the original author!\n\nThis feels less like \"pair programming\" from the future, and more like \"instant legacy code generation\". "
                            },
                            {
                                "type": "emoji",
                                "name": "cry"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI think ML is good in general, but I personally feel like this is a case where more black box magic makes things worse."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            },
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD",
                    "UPU0YJ1CM"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "text": "This seems like the fallacy that programming is hard because you need to master the syntax of your language. But programming is actually hard because it\u2019s hard to express things precisely. Like, stop hiring senior developers to write your code because look, a junior developer can also write that code. Sure, it has a few errors \u00af\\_(\u30c4)_/\u00af",
        "user": "UKDM3GLAJ",
        "ts": "1593796252.270000",
        "team": "T5TCAFTA9",
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U01661S9F34",
                    "UKP3B2J5D",
                    "UHWC9PXBL",
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "U013ZLJARC7"
                ],
                "count": 6
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "EBECADF3-1788-4E54-8B4A-308AB531A61B",
        "type": "message",
        "text": "I\u2019m not dead set against learning Rust. :sweat_smile: C is pretty easy to use in Go.\n\nWagon is one of the ones that felt half-finished. I have a test program that just tries to initialize and invoke various wasm VMs in Go and the lack of documentation / examples tripped me up in every single one.",
        "user": "UFEQUBNNT",
        "ts": "1593796607.273000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J5n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m not dead set against learning Rust. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile"
                            },
                            {
                                "type": "text",
                                "text": " C is pretty easy to use in Go.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Wagon is one of the ones that felt half-finished. I have a test program that just tries to initialize and invoke various wasm VMs in Go and the lack of documentation / examples tripped me up in every single one."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "31AAC9AF-EA9D-469E-AAD3-33A8FC519609",
        "type": "message",
        "text": "I haven\u2019t tried a few of your recommendations, so I\u2019ll give those a shot!",
        "user": "UFEQUBNNT",
        "ts": "1593796642.273800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y5Ntw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven\u2019t tried a few of your recommendations, so I\u2019ll give those a shot!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1592023914.244600",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHDQ62M4P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f76f2136-318f-4b29-a366-95453b315112",
        "type": "message",
        "text": "I agree with you guys, however, I still find this demo impressive and although it does promote some kind of hype over ML/DL I do believe some parts of developer experience should be automated. May be one day in the future that will happen. However, I do not believe that it can be achieved via just a Deep Learning model (however big the parameter space can be). I believe, we will need to mix Symbolic Reasoning in this somehow.",
        "user": "UPVBV34EL",
        "ts": "1593797992.274500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e7NlL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree with you guys, however, I still find this demo impressive and although it does promote some kind of hype over ML/DL I do believe some parts of developer experience should be automated. May be one day in the future that will happen. However, I do not believe that it can be achieved via just a Deep Learning model (however big the parameter space can be). I believe, we will need to mix Symbolic Reasoning in this somehow."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U8A5MS6R1"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "d0202b72-14f3-40b7-b10d-0dcc36b63ead",
        "type": "message",
        "text": "I think a better application of this kind of technique is <https://www.tabnine.com/|tabNine>\nIt is a more fine grained ML based autocomplete plugin.",
        "user": "U01661S9F34",
        "ts": "1593804407.275600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "AI Code Completions for All Languages and IDEs",
                "title_link": "https://www.tabnine.com/",
                "text": "TabNine is the all-language autocompleter. We use deep learning to help you write code faster.",
                "fallback": "AI Code Completions for All Languages and IDEs",
                "thumb_url": "https://www.tabnine.com/static/meta.png",
                "from_url": "https://www.tabnine.com/",
                "thumb_width": 805,
                "thumb_height": 805,
                "service_icon": "https://www.tabnine.com/icons/icon-48x48.png?v=72fb9fafaecc159d816e9d0c2d22067d",
                "service_name": "tabnine.com",
                "id": 1,
                "original_url": "https://www.tabnine.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wwj5O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think a better application of this kind of technique is "
                            },
                            {
                                "type": "link",
                                "url": "https://www.tabnine.com/",
                                "text": "tabNine"
                            },
                            {
                                "type": "text",
                                "text": "\nIt is a more fine grained ML based autocomplete plugin."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UA14TGLTC",
                    "UPU0YJ1CM"
                ],
                "count": 3
            },
            {
                "name": "100",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "A81FD86E-6A80-4E18-AAF9-F657CA2CE2D9",
        "type": "message",
        "text": "I think kite does this for python and intellicode was supposed to do it. In practise, I believe I tried them out and they were buggy and I never looked back. Perhaps they are better now. ",
        "user": "UKP3B2J5D",
        "ts": "1593806496.277800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4g4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think kite does this for python and intellicode was supposed to do it. In practise, I believe I tried them out and they were buggy and I never looked back. Perhaps they are better now. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG"
    },
    {
        "client_msg_id": "0868AD29-6F23-4EFF-9B9C-634BFA55991A",
        "type": "message",
        "text": "<http://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html|http://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html> \n\n\n\u201cA short look at the history of mathematics shows how justified this challenge is. Greek mathematics got stuck because it remained a verbal, pictorial activity, Moslem \"algebra\", after a timid attempt at symbolism, died when it returned to the rhetoric style, and the modern civilized world could only emerge \u2014for better or for worse\u2014 when Western Europe could free itself from the fetters of medieval scholasticism \u2014a vain attempt at verbal precision!\u2014 thanks to the carefully, or at least consciously designed formal symbolisms that we owe to people like Vieta, Descartes, Leibniz, and (later) Boole.\u201d\n\n\u201cInstead of regarding the obligation to use formal symbols as a burden, we should regard the convenience of using them as a privilege: thanks to them, school children can learn to do what in earlier days only genius could achieve. \u201c\n\n\u201cWhen all is said and told, the \"naturalness\" with which we use our native tongues boils down to the ease with which we can use them for making statements the nonsense of which is not obvious.\u201d\n\n",
        "user": "UKP3B2J5D",
        "ts": "1593812059.279100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+yKw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html",
                                "text": "http://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html"
                            },
                            {
                                "type": "text",
                                "text": " \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\u201cA short look at the history of mathematics shows how justified this challenge is. Greek mathematics got stuck because it remained a verbal, pictorial activity, Moslem \"algebra\", after a timid attempt at symbolism, died when it returned to the rhetoric style, and the modern civilized world could only emerge \u2014for better or for worse\u2014 when Western Europe could free itself from the fetters of medieval scholasticism \u2014a vain attempt at verbal precision!\u2014 thanks to the carefully, or at least consciously designed formal symbolisms that we owe to people like Vieta, Descartes, Leibniz, and (later) Boole.\u201d\n\n"
                            },
                            {
                                "type": "text",
                                "text": "\u201cInstead of regarding the obligation to use formal symbols as a burden, we should regard the convenience of using them as a privilege: thanks to them, school children can learn to do what in earlier days only genius could achieve. \u201c\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\u201cWhen all is said and told, the \"naturalness\" with which we use our native tongues boils down to the ease with which we can use them for making statements the nonsense of which is not obvious.\u201d\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1593794600.262800",
        "parent_user_id": "U0136G8R8KG",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01661S9F34",
                    "UJN1TAYEQ",
                    "U013KEPEJ2H",
                    "U013ZLJARC7"
                ],
                "count": 4
            }
        ]
    }
]