[
    {
        "client_msg_id": "57bc79dd-2090-4dc2-9220-19e44f24f1a2",
        "type": "message",
        "text": "<@U01661S9F34> Yeah, you're right \u2014 Unreal/Epic is a bad example. <@UC6997THT> isn't talking about distribution in the sense of \"a store\", he's talking about the file format. Flash had to create its own file format and player because there was no built-in functionality for multimedia on the web. There wasn't even audio \u2014 remember RealPlayer? There were other plugins they could have hooked into (Java Applets, say) but those sucked.\n\nWhat we _can_ have now (though nobody has done a good job of it) is an authoring tool that can spit out self-contained files that work anywhere (on the web), thanks to HTML and the web platform. So as long as your authoring tool produces nicely self-contained single HTML files, you're a lot closer to having that particular question answered, without needing a boil the ocean \"our plugin is on 97% of PCs\" solution.\n\nSo the distribution is \"tied\" to the editor only insofar as the editor needs to do just that \u2014 spit out files that people can actually use.",
        "user": "UC2A2ARPT",
        "ts": "1595455503.185100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1595455563.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iK6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " Yeah, you're right \u2014 Unreal/Epic is a bad example. "
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": " isn't talking about distribution in the sense of \"a store\", he's talking about the file format. Flash had to create its own file format and player because there was no built-in functionality for multimedia on the web. There wasn't even audio \u2014 remember RealPlayer? There were other plugins they could have hooked into (Java Applets, say) but those sucked.\n\nWhat we "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " have now (though nobody has done a good job of it) is an authoring tool that can spit out self-contained files that work anywhere (on the web), thanks to HTML and the web platform. So as long as your authoring tool produces nicely self-contained single HTML files, you're a lot closer to having that particular question answered, without needing a boil the ocean \"our plugin is on 97% of PCs\" solution.\n\nSo the distribution is \"tied\" to the editor only insofar as the editor needs to do just that \u2014 spit out files that people can actually use."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5a103622-8493-4fd4-ab8a-8a99d268ccb8",
        "type": "message",
        "text": "&gt; So the distribution is \"tied\" to the editor only insofar as the editor needs to do just that \u2014 spit out files that people can actually use\n<@UC2A2ARPT> I agree. Exactly. I basically agree with everything you said.\n\nI think my problem with <@UC6997THT>'s original argument was that he was looking at it backwards from my view point.\n\nThe problem has nothing to do with the distribution format as a technology... It's not a technology problem, it's a social / market problem.\n\nIt's not that there is no market, it's like you said, there is a market on the consumer side. The problem is that there is no incentive on the business side to build it.\n\nIn that way, Flash was a product of it's time. Unfortunately the world is a different place now.\n\nMaybe the modern web will produce a modern successor. All the parts are there... :smile:",
        "user": "U01661S9F34",
        "ts": "1595455925.185700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1595455994.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vQAFj",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So the distribution is \"tied\" to the editor only insofar as the editor needs to do just that \u2014 spit out files that people can actually use"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I agree. Exactly. I basically agree with everything you said.\n\nI think my problem with "
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": "'s original argument was that he was looking at it backwards from my view point.\n\nThe problem has nothing to do with the distribution format as a technology... It's not a technology problem, it's a social / market problem.\n\nIt's not that there is no market, it's like you said, there is a market on the consumer side. The problem is that there is no incentive on the business side to build it.\n\nIn that way, Flash was a product of it's time. Unfortunately the world is a different place now.\n\nMaybe the modern web will produce a modern successor. All the parts are there... "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "f34444a7-427b-49c4-b133-4052773709d3",
        "type": "message",
        "text": "I hope _this community_ will produce a modern successor. All the parts are here...",
        "user": "UC2A2ARPT",
        "ts": "1595456172.186000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NpV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hope "
                            },
                            {
                                "type": "text",
                                "text": "this community",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " will produce a modern successor. All the parts are here..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U01661S9F34",
                    "ULK0Z4MPV",
                    "UBSMEUXAA"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "8f5cedce-ebfd-4769-9225-a2b2ee851872",
        "type": "message",
        "text": "This linked article is also quite thought-provoking with its radical new visualization of a city's usage and distribution patterns.\n\n<https://www.theguardian.com/world/2020/apr/08/amsterdam-doughnut-model-mend-post-coronavirus-economy|https://www.theguardian.com/world/2020/apr/08/amsterdam-doughnut-model-mend-post-coronavirus-economy>",
        "user": "UCUSW7WVD",
        "ts": "1595456799.186300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "the Guardian",
                "title": "Amsterdam to embrace 'doughnut' model to mend post-coronavirus economy",
                "title_link": "https://www.theguardian.com/world/2020/apr/08/amsterdam-doughnut-model-mend-post-coronavirus-economy",
                "text": "Dutch officials and British economist to use guide to help city thrive in balance with planet",
                "fallback": "the Guardian: Amsterdam to embrace 'doughnut' model to mend post-coronavirus economy",
                "image_url": "https://i.guim.co.uk/img/media/2d739bbf7f21e310c569c303c32774f63c8992a9/0_182_5472_3283/master/5472..jpg?width=1200&height=630&quality=85&auto=format&fit=crop&overlay-align=bottom%2Cleft&overlay-width=100p&overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdGctZGVmYXVsdC5wbmc&enable=upscale&s=c65450bf71ee82b48062324cacdfb97c",
                "image_width": 476,
                "image_height": 250,
                "ts": 1586325609,
                "from_url": "https://www.theguardian.com/world/2020/apr/08/amsterdam-doughnut-model-mend-post-coronavirus-economy",
                "image_bytes": 130278,
                "service_icon": "https://assets.guim.co.uk/images/favicons/fee5e2d638d1c35f6d501fa397e53329/152x152.png",
                "id": 1,
                "original_url": "https://www.theguardian.com/world/2020/apr/08/amsterdam-doughnut-model-mend-post-coronavirus-economy"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nNn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This linked article is also quite thought-provoking with its radical new visualization of a city's usage and distribution patterns.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.theguardian.com/world/2020/apr/08/amsterdam-doughnut-model-mend-post-coronavirus-economy",
                                "text": "https://www.theguardian.com/world/2020/apr/08/amsterdam-doughnut-model-mend-post-coronavirus-economy"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595260067.054200",
        "parent_user_id": "UL3EE9WR1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d14229f3-629e-4ffc-9f2a-0e3b367c00d0",
        "type": "message",
        "text": "People have tried to recreate the magic of Flash (and are still trying.) There are a huge amount of JS engines out there both 2D and 3D. Most are engines only, they don't have any art tools (which goes back to my point about not conflating things together, at least being clear about the parts.)\n\nUnity has a \"web\" option but it's a proprietary plugin. Basically everything bad about Flash, so I'm not going to count that.\nGodot has an export to HTML5/JS option. IDK how good it is though (I assume it's probably not much better than Adobe Animate honestly...)\nThere are a few other less known engines that are trying:\n<https://gdevelop-app.com/>\n<https://playcanvas.com/>\n\nNothing has really taken off though.\nThere is some magic combination of features and social effects that made Flash so successful. What is the magic formula? :stuck_out_tongue:",
        "user": "U01661S9F34",
        "ts": "1595458322.186800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1595458495.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SE6GI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "People have tried to recreate the magic of Flash (and are still trying.) There are a huge amount of JS engines out there both 2D and 3D. Most are engines only, they don't have any art tools (which goes back to my point about not conflating things together, at least being clear about the parts.)\n\nUnity has a \"web\" option but it's a proprietary plugin. Basically everything bad about Flash, so I'm not going to count that.\nGodot has an export to HTML5/JS option. IDK how good it is though (I assume it's probably not much better than Adobe Animate honestly...)\nThere are a few other less known engines that are trying:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://gdevelop-app.com/"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://playcanvas.com/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNothing has really taken off though.\nThere is some magic combination of features and social effects that made Flash so successful. What is the magic formula? "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "8ac3c522-6c3e-4a17-b7c7-3bc24b1ec85d",
        "type": "message",
        "text": "Thank you for that Ivan, that is interesting!",
        "user": "U017GNJM021",
        "ts": "1595458843.187400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "76xd/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thank you for that Ivan, that is interesting!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595419573.125100",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "73f6757d-f0b0-4dae-a0fa-db205b313043",
        "type": "message",
        "text": "I agree that DeepUI is more interesting than Luna, but I'm not surprised they couldn't figure out how to make it scale.\n\nSo far apart from Bret's work I am most impressed by Chalktalk, which I'm sure you know about. It has problems scaling too.\n\nOne of the reasons I was asking about DeepUI (and why I joined this slack) is that I am going to make a presentation on, surprise surprise, my own visual programming IDE ideas :sweat_smile: I hope to make it a bit more scalable... although I realize the odds are stacked against it",
        "user": "U017GNJM021",
        "ts": "1595459178.187600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YyxS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree that DeepUI is more interesting than Luna, but I'm not surprised they couldn't figure out how to make it scale.\n\nSo far apart from Bret's work I am most impressed by Chalktalk, which I'm sure you know about. It has problems scaling too.\n\nOne of the reasons I was asking about DeepUI (and why I joined this slack) is that I am going to make a presentation on, surprise surprise, my own visual programming IDE ideas "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile"
                            },
                            {
                                "type": "text",
                                "text": " I hope to make it a bit more scalable... although I realize the odds are stacked against it"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595419573.125100",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "25DA2732-119F-4A19-BC46-ABC9258C6E4C",
        "type": "message",
        "text": "This was not as spicy as I expected when I opened the thread :joy:",
        "user": "U0165TZ39GV",
        "ts": "1595459643.188300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dMq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was not as spicy as I expected when I opened the thread "
                            },
                            {
                                "type": "emoji",
                                "name": "joy"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595437506.134800",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4DD4FD46-1950-4C5B-AD8D-D0476F4C2D19",
        "type": "message",
        "text": "Thanks for the takes <@UC2A2ARPT>, appreciate your thoughts and insight! Some of these I can get you more info on tomorrow (it\u2019s late here) - the error stuff for example, the visual part of that is just straight up not implemented at the moment, but there\u2019s a vision for what that should look like. ",
        "user": "U0165TZ39GV",
        "ts": "1595459719.190700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/Qxf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the takes "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": ", appreciate your thoughts and insight! Some of these I can get you more info on tomorrow (it\u2019s late here) - the error stuff for example, the visual part of that is just straight up not implemented at the moment, but there\u2019s a vision for what that should look like. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595437506.134800",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ac98b94a-615e-4a03-b2ba-e842f979a5c5",
        "type": "message",
        "text": "Trying to strike the balance between being _spicy,_ while still being constructive and not being mean :)",
        "user": "UC2A2ARPT",
        "ts": "1595459871.193300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ss2E4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Trying to strike the balance between being "
                            },
                            {
                                "type": "text",
                                "text": "spicy, ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "while still being constructive and not being mean :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595437506.134800",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "sparkling_heart",
                "users": [
                    "U0165TZ39GV"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8ECD2BAA-BBA9-4815-8075-CCA3ECE0580E",
        "type": "message",
        "text": "&gt; Those kinds of sentences pretty much only open you up to being wrong, while providing no real value.\n\nHahaha yes I totally agree, something we have to work on - after a certain amount of time talking to investors and funding bodies, I think it\u2019s hard to turn off. I\u2019ll try to be a better hype-net :joy: ",
        "user": "U0165TZ39GV",
        "ts": "1595459921.194700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0165TZ39GV",
            "ts": "1595459941.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bizpP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> Those kinds of sentences pretty much only open you up to being wrong, while providing no real value.\n\nHahaha yes I totally agree, something we have to work on - after a certain amount of time talking to investors and funding bodies, I think it\u2019s hard to turn off. I\u2019ll try to be a better hype-net "
                            },
                            {
                                "type": "emoji",
                                "name": "joy"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595437506.134800",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UEBG0NPDK"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "92542b8e-eb03-4cc5-b131-51fbda6def96",
        "type": "message",
        "text": "Cool! I hope you'll share some of your work in <#CCL5VVBAN|feedback>, or in <#C0120A3L30R|two-minute-week> if you want to make short (2 minute) weekly updates as you go.",
        "user": "UC2A2ARPT",
        "ts": "1595459972.195100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uQsji",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool! I hope you'll share some of your work in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": ", or in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C0120A3L30R"
                            },
                            {
                                "type": "text",
                                "text": " if you want to make short (2 minute) weekly updates as you go."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595419573.125100",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "9ec4815c-a227-4201-bf2a-a1f0a34a8dda",
        "type": "message",
        "text": "I'm aware of Chalktalk, but I haven't actually _seen_ it. Do you have a good link?",
        "user": "UC2A2ARPT",
        "ts": "1595460099.195400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7cPbb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm aware of Chalktalk, but I haven't actually "
                            },
                            {
                                "type": "text",
                                "text": "seen",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it. Do you have a good link?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595419573.125100",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "1519C413-324C-4A43-9760-5DF13F632ACC",
        "type": "message",
        "text": "Ahh I\u2019m so glad you found the project <@U017GNJM021>! (I was the guy who replied to you from the enso twitter, spent a good while being like \u201cwait did I miss someone making pong in Luna?!? and hunting around the interwebs!)",
        "user": "U0165TZ39GV",
        "ts": "1595460180.197300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UENH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ahh I\u2019m so glad you found the project "
                            },
                            {
                                "type": "user",
                                "user_id": "U017GNJM021"
                            },
                            {
                                "type": "text",
                                "text": "! (I was the guy who replied to you from the enso twitter, spent a good while being like \u201cwait did I miss someone making pong in Luna?!? and hunting around the interwebs!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595419573.125100",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "03ca5051-154d-4e17-85fb-15a8ac552a96",
        "type": "message",
        "text": "Heh thanks Joe. To be clear I think Luna is more scalable than DeepUI too :smile:",
        "user": "U017GNJM021",
        "ts": "1595461894.197600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s13A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Heh thanks Joe. To be clear I think Luna is more scalable than DeepUI too "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595419573.125100",
        "parent_user_id": "U017GNJM021"
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "Corporate hackathons are more about benefiting the corporation with publicity and hype, which can only be created by the labor of a critical mass of entrants. But despite the incredible value of this publicity - and the allure of glamorous prizes- virtually none of the entrants get compensated.\n\nIn fact, it is an equation sorely in the corporations favor: the more entrants, the more hype, but since the prize pool is fixed, the cost never goes up.\n\nI would recommend anyone considering joining *any* hackathon to think hard about the power dynamics at play, and the material value of your time spent participating, *especially* when a hackathon requires you to use the corporation's products(consider particularly that for a public publishing platform, the more usage a product gets the larger its user conversion pipeline becomes). This isn't a novel observation - much has been written about concerning the exploitative nature of hackathons.\n\nAnd if as a potential participant you want the good-natured competition and dedicated time for hacking on a cool idea that a hackathon affords, it's always possible to organize your own jam, centered around and for the community, without any ulterior motives at play(EDIT: look at game jams like <https://ldjam.com/|ludum dare> for a very successful model of how this can be done).\n\n(And also, I think the word \"grant\" should be reserved for actual grants- not marketing contests. I like the idea of grants, and if a company wants to give grants, it should do so in a way that requires minimal effort by the participants, and focus on underrepresented people that badly need them)",
        "user": "UMWF81HTP",
        "ts": "1595462241.197800",
        "thread_ts": "1595355834.085400",
        "root": {
            "client_msg_id": "2FC96813-3452-444B-8530-7AF44C2C28D7",
            "type": "message",
            "text": "<https://blog.repl.it/langjam|https://blog.repl.it/langjam>",
            "user": "UKP3B2J5D",
            "ts": "1595355834.085400",
            "team": "T5TCAFTA9",
            "attachments": [
                {
                    "service_name": "repl.it",
                    "title": "The Programming Language Jam &amp; Grant",
                    "title_link": "https://blog.repl.it/langjam",
                    "text": "We built <http://Repl.it|Repl.it> to make it easy to explore and learn languages and programming paradigms. We\u2019ve grown a community that, like us, is excited\u2026",
                    "fallback": "repl.it: The Programming Language Jam &amp; Grant",
                    "image_url": "https://blog.repl.it/images/jam.png",
                    "from_url": "https://blog.repl.it/langjam",
                    "image_width": 328,
                    "image_height": 250,
                    "image_bytes": 240431,
                    "service_icon": "https://repl.it/public/images/favicon.ico",
                    "id": 1,
                    "original_url": "https://blog.repl.it/langjam"
                }
            ],
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "XVj",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "link",
                                    "url": "https://blog.repl.it/langjam",
                                    "text": "https://blog.repl.it/langjam"
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1595355834.085400",
            "reply_count": 28,
            "reply_users_count": 10,
            "latest_reply": "1595539274.275300",
            "reply_users": [
                "UC2A2ARPT",
                "U017AAMDG3B",
                "UKP3B2J5D",
                "U8A5MS6R1",
                "ULM3U6275",
                "U01661S9F34",
                "UMWF81HTP",
                "UCUSW7WVD",
                "UC6997THT",
                "UJ6LDMMN0"
            ],
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xc1kg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Corporate hackathons are more about benefiting the corporation with publicity and hype, which can only be created by the labor of a critical mass of entrants. But despite the incredible value of this publicity - and the allure of glamorous prizes- virtually none of the entrants get compensated.\n\nIn fact, it is an equation sorely in the corporations favor: the more entrants, the more hype, but since the prize pool is fixed, the cost never goes up.\n\nI would recommend anyone considering joining "
                            },
                            {
                                "type": "text",
                                "text": "any",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " hackathon to think hard about the power dynamics at play, and the material value of your time spent participating, "
                            },
                            {
                                "type": "text",
                                "text": "especially",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " when a hackathon requires you to use the corporation's products(consider particularly that for a public publishing platform, the more usage a product gets the larger its user conversion pipeline becomes). This isn't a novel observation - much has been written about concerning the exploitative nature of hackathons.\n\nAnd if as a potential participant you want the good-natured competition and dedicated time for hacking on a cool idea that a hackathon affords, it's always possible to organize your own jam, centered around and for the community, without any ulterior motives at play(EDIT: look at game jams like "
                            },
                            {
                                "type": "link",
                                "url": "https://ldjam.com/",
                                "text": "ludum dare"
                            },
                            {
                                "type": "text",
                                "text": " for a very successful model of how this can be done).\n\n(And also, I think the word \"grant\" should be reserved for actual grants- not marketing contests. I like the idea of grants, and if a company wants to give grants, it should do so in a way that requires minimal effort by the participants, and focus on underrepresented people that badly need them)"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "d31d1120-7e60-4c18-9f85-5378e1e43c05",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1595464556.000000"
        },
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "UFZFETUH1",
                    "UKP3B2J5D",
                    "U015V233CFL",
                    "UAJ9DV971",
                    "U013ZLJARC7",
                    "UE6EFEPTQ",
                    "UJ6LDMMN0",
                    "U8A5MS6R1",
                    "UCGAK10LS"
                ],
                "count": 12
            },
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e1bc3441-47ed-402b-ab8c-1cd42877e6d7",
        "type": "message",
        "text": "Chalktalk: so the deal is that Ken Perlin has given the same presentation using chalktalk about 6 different times on youtube. He is a deep thinker on the philosophy of all this, almost as much as Bret and Alan, and his thinking around chalktalk is worth listening to; this 2017 presentation is as good as any <https://www.youtube.com/watch?v=xuzrF_82z7U> and this (timestamped) link shows you where it was in 2011 <https://youtu.be/O9b-rtrcPEA?t=2707> showing a nice AR approach",
        "user": "U017GNJM021",
        "ts": "1595462482.198100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Ken Perlin on the mind field of virtual and future reality @ Gamelier",
                "title_link": "https://www.youtube.com/watch?v=xuzrF_82z7U",
                "author_name": "Gamelier",
                "author_link": "https://www.youtube.com/channel/UCeh5IuUNLG7o0Uy2G6P6P7w",
                "thumb_url": "https://i.ytimg.com/vi/xuzrF_82z7U/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Ken Perlin on the mind field of virtual and future reality @ Gamelier",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/xuzrF_82z7U?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=xuzrF_82z7U",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=xuzrF_82z7U"
            },
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Math Encounters -- Beyond Animation -- Ken Perlin (Presentation)",
                "title_link": "https://youtu.be/O9b-rtrcPEA?t=2707",
                "author_name": "National Museum of Mathematics",
                "author_link": "https://www.youtube.com/user/MuseumOfMathematics",
                "thumb_url": "https://i.ytimg.com/vi/O9b-rtrcPEA/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Math Encounters -- Beyond Animation -- Ken Perlin (Presentation)",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/O9b-rtrcPEA?start=2707&feature=oembed&start=2707&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/O9b-rtrcPEA?t=2707",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 2,
                "original_url": "https://youtu.be/O9b-rtrcPEA?t=2707"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zRxn5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Chalktalk: so the deal is that Ken Perlin has given the same presentation using chalktalk about 6 different times on youtube. He is a deep thinker on the philosophy of all this, almost as much as Bret and Alan, and his thinking around chalktalk is worth listening to; this 2017 presentation is as good as any "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=xuzrF_82z7U"
                            },
                            {
                                "type": "text",
                                "text": " and this (timestamped) link shows you where it was in 2011 "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/O9b-rtrcPEA?t=2707"
                            },
                            {
                                "type": "text",
                                "text": " showing a nice AR approach"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595419573.125100",
        "parent_user_id": "U017GNJM021"
    },
    {
        "client_msg_id": "ff8f2440-15fd-4342-b3b3-5e01970b1987",
        "type": "message",
        "text": "I had similar thoughts but censored myself. Perhaps I shouldn't have.",
        "user": "UCUSW7WVD",
        "ts": "1595463164.198800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F/xX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had similar thoughts but censored myself. Perhaps I shouldn't have."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "a124cdc0-37c9-4fa9-b853-1417a3c2d0e8",
        "type": "message",
        "text": "<@UCUSW7WVD> thanks for expressing that. I really like what replit does,  the sponsorship(esp. of the foc podcast) and community work they do, and they seem to have a lot of great people there, so I also felt pressure to hold my tongue*. But after thinking about this since when the announcement was posted, I decided I don't like seeing the community being exploited more than I don't like rustling feathers.\n\n**to clarify: I meant this as in, I felt bad about criticizing an organization that I believe is doing quite a lot of good.*",
        "user": "UMWF81HTP",
        "ts": "1595463476.199100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1595471270.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KQrfj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " thanks for expressing that. I really like what replit does,  the sponsorship(esp. of the foc podcast) and community work they do, and they seem to have a lot of great people there, so I also felt pressure to hold my tongue*. But after thinking about this since when the announcement was posted, I decided I don't like seeing the community being exploited more than I don't like rustling feathers.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "*to clarify: I meant this as in, I felt bad about criticizing an organization that I believe is doing quite a lot of good.",
                                "style": {
                                    "bold": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "UHWC9PXBL",
                    "U013ZLJARC7"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "134a9e90-2679-4900-981a-fb9cafea221f",
        "type": "message",
        "text": "I think this contest is best for (eg) highschoolers, who don't yet have the network to throw their own jam, who (in theory) have a lot of free time, and who might need something to motivate them to take on a new challenge that'd be good for their portfolio even if they don't win. For folks in this community, we might stand to gain more from being a judge than being an entrant \u2014\u00a0maybe. And yeah, totally agree, some details of how Replit are structuring and promoting this contest are gross. But I think that's just capitalism \u2014 we here have the option to not participate in it, and I don't think that they do (what with investors to satisfy, etc.)\n\nLove that you shared these thoughts, Yoshiki. Even though Replit are a benefactor of this community, their support should not shield them from criticism, especially criticism that we could all learn from that will help us do better if/when some of our projects are turned into businesses and we're faced with marketing challenges and the pressures of capitalism ourselves.\n\n(And if Replit decide that they don't want to fund a community that reflects honestly and critically on what they do \u2014\u00a0though I expect Amjad et al would be fine with it \u2014 then there will be other ways to pay for the podcast, fear not)",
        "user": "UC2A2ARPT",
        "ts": "1595465787.199900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QDn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this contest is best for (eg) highschoolers, who don't yet have the network to throw their own jam, who (in theory) have a lot of free time, and who might need something to motivate them to take on a new challenge that'd be good for their portfolio even if they don't win. For folks in this community, we might stand to gain more from being a judge than being an entrant \u2014\u00a0maybe. And yeah, totally agree, some details of how Replit are structuring and promoting this contest are gross. But I think that's just capitalism \u2014 we here have the option to not participate in it, and I don't think that they do (what with investors to satisfy, etc.)\n\nLove that you shared these thoughts, Yoshiki. Even though Replit are a benefactor of this community, their support should not shield them from criticism, especially criticism that we could all learn from that will help us do better if/when some of our projects are turned into businesses and we're faced with marketing challenges and the pressures of capitalism ourselves.\n\n(And if Replit decide that they don't want to fund a community that reflects honestly and critically on what they do \u2014\u00a0though I expect Amjad et al would be fine with it \u2014 then there will be other ways to pay for the podcast, fear not)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMWF81HTP",
                    "UKP3B2J5D",
                    "U013ZLJARC7",
                    "U01661S9F34"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "c9bbca76-9fe2-436c-84b4-9948d2329bea",
        "type": "message",
        "text": "Yeah, and to be clear, I think they're good people who can accept criticism.",
        "user": "UMWF81HTP",
        "ts": "1595467662.200900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8tl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, and to be clear, I think they're good people who can accept criticism."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "84d4e95d-e9fa-41b5-a30b-630913ccfdbe",
        "type": "message",
        "text": "Fwiw, Amjad has heard and responded to my criticism(albeit a version I shared that was much more concise to fit into a tweet):\n<https://twitter.com/amasad/status/1286092042179813376>",
        "user": "UMWF81HTP",
        "ts": "1595468696.201200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/amasad|@amasad>: <https://twitter.com/yoshikischmitz|@yoshikischmitz> <https://twitter.com/replit|@replit> Hey Yoshiki -- I'm a fan of your work. \n\nWe tried to do something different targeted mostly at younger audience who are excited by jams &amp; fun events.\n\nI certainly see your point. In future installments we'll decouple the grant from the jam.\n\nThanks for your feedback.",
                "ts": 1595463211,
                "author_name": "Amjad Masad",
                "author_link": "https://twitter.com/amasad/status/1286092042179813376",
                "author_icon": "https://pbs.twimg.com/profile_images/1278007106331762691/04mh4qPo_normal.jpg",
                "author_subname": "@amasad",
                "text": "<https://twitter.com/yoshikischmitz|@yoshikischmitz> <https://twitter.com/replit|@replit> Hey Yoshiki -- I'm a fan of your work. \n\nWe tried to do something different targeted mostly at younger audience who are excited by jams &amp; fun events.\n\nI certainly see your point. In future installments we'll decouple the grant from the jam.\n\nThanks for your feedback.",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/amasad/status/1286092042179813376",
                "id": 1,
                "original_url": "https://twitter.com/amasad/status/1286092042179813376",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5TC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fwiw, Amjad has heard and responded to my criticism(albeit a version I shared that was much more concise to fit into a tweet):\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/amasad/status/1286092042179813376"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "UFZFETUH1",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "bc25c8a0-2c3c-491b-ab48-4a2c47cf5131",
        "type": "message",
        "text": "I want to say all the parts are not there. You can't currently make a small single file embeddable multi-media experience with a single HTML file. You could encode your video/audio as dataURLs but the file will be HUGE. You could maybe generate some vector graphics animations in a single HTML file but not your average flash game. Further, flash's format was compat, arguably more than you'll get from HTML without some kind of player (so bloating your page). Other functionally you can't get from HTML in a single file is streaming. Flash could have a 2meg file but after download 50k it was running and downloading the rest in the background. Again to that in HTML requires a player and at least 2-3 files. The HTML itself, the player, either embedded or referenced, and then the data and the data has to be separate else you can't stream\n\nWhether a single file format is important or not is debatable but it's certainly helps things go viral if they can easily be put anywhere by anyone? I suppose hosting your multi-file creation somewhere and letting people embed it would work that costs $$$. Maybe something like <http://youflashtube.com|youflashtube.com> and have the editor either online or export directly. I can imagine in some alternate reality that might be successful but it wouldn't be remotely the same as flash was if only because a hosted experience will be censored in various ways\n\nAs for unity, unity's web player has been long dead. Unity exports to HTML5/WASM for years now but the minimum size for hello world is 4meg which is basically Unity's engine so effectively it's as if every app is downloading the flash player. I know they are working on shrinking that significantly but I don't know how far along they are.\n\nIt's also not mobile friendly which which may or may not matter. If you're trying to make a profit by selling an app/game then you're happy with exporting a native app. If you're trying to make some viral experience that people share with just a link like they did with flash then not being mobile browser friendly is a non-starter\n\nAs for three.js, once you gzip it it's only 150k at the moment so barely a single image worth of data on most pages. It doesn't \"tree shake\" at all at the moment because if legacy code design but they are working on it. But three.js is not even a small amount of flash's functionality. It's just a 3d engine not an app/game engine.",
        "user": "UC6997THT",
        "ts": "1595472382.202000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yP1l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to say all the parts are not there. You can't currently make a small single file embeddable multi-media experience with a single HTML file. You could encode your video/audio as dataURLs but the file will be HUGE. You could maybe generate some vector graphics animations in a single HTML file but not your average flash game. Further, flash's format was compat, arguably more than you'll get from HTML without some kind of player (so bloating your page). Other functionally you can't get from HTML in a single file is streaming. Flash could have a 2meg file but after download 50k it was running and downloading the rest in the background. Again to that in HTML requires a player and at least 2-3 files. The HTML itself, the player, either embedded or referenced, and then the data and the data has to be separate else you can't stream\n\nWhether a single file format is important or not is debatable but it's certainly helps things go viral if they can easily be put anywhere by anyone? I suppose hosting your multi-file creation somewhere and letting people embed it would work that costs $$$. Maybe something like "
                            },
                            {
                                "type": "link",
                                "url": "http://youflashtube.com",
                                "text": "youflashtube.com"
                            },
                            {
                                "type": "text",
                                "text": " and have the editor either online or export directly. I can imagine in some alternate reality that might be successful but it wouldn't be remotely the same as flash was if only because a hosted experience will be censored in various ways\n\nAs for unity, unity's web player has been long dead. Unity exports to HTML5/WASM for years now but the minimum size for hello world is 4meg which is basically Unity's engine so effectively it's as if every app is downloading the flash player. I know they are working on shrinking that significantly but I don't know how far along they are.\n\nIt's also not mobile friendly which which may or may not matter. If you're trying to make a profit by selling an app/game then you're happy with exporting a native app. If you're trying to make some viral experience that people share with just a link like they did with flash then not being mobile browser friendly is a non-starter\n\nAs for three.js, once you gzip it it's only 150k at the moment so barely a single image worth of data on most pages. It doesn't \"tree shake\" at all at the moment because if legacy code design but they are working on it. But three.js is not even a small amount of flash's functionality. It's just a 3d engine not an app/game engine."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "44333f49-21bb-496b-9bd0-a8b5be7e252f",
        "type": "message",
        "text": "Here is unity's plan for being able to export smaller HTML apps from Unity\n\n<https://unity.com/solutions/instant-games>\n\nAnd a live example\n\n<https://tiny.vision/demos/TinyRacing/Wasm/TinyRacing.html>\n\nIt's still 4meg until the page shows anything at the moment.",
        "user": "UC6997THT",
        "ts": "1595472687.202200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Unity",
                "title": "Instant Games | Unity",
                "title_link": "https://unity.com/solutions/instant-games",
                "text": "With Unity, build instant games that are smaller, lighter and faster than ever before.",
                "fallback": "Unity: Instant Games | Unity",
                "image_url": "https://unity.com/sites/default/files/styles/social_media_sharing_twitter/public/2019-12/instant-games-unity-teaser-768x381%401x.jpg?itok=OgZFejgb",
                "image_width": 500,
                "image_height": 250,
                "from_url": "https://unity.com/solutions/instant-games",
                "image_bytes": 53854,
                "service_icon": "https://unity.com/themes/contrib/unity_base/images/favicons/apple-touch-icon-152x152.png",
                "id": 1,
                "original_url": "https://unity.com/solutions/instant-games"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+L+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here is unity's plan for being able to export smaller HTML apps from Unity\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://unity.com/solutions/instant-games"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAnd a live example\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://tiny.vision/demos/TinyRacing/Wasm/TinyRacing.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt's still 4meg until the page shows anything at the moment."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "143bfab4-8f18-42d2-bc46-abbde2493ece",
        "type": "message",
        "text": "Has anyone been searching for an \"ideal\" model for information? By this I mean an _abstract_ model (not a DRAM/disk representation) with a vocabulary that allows a *human* to read, specify, and understand information with ease. We have existing models like RDF (\"Semantic web\") and property graphs (e.g. Neo4j), and in programming languages we have object graphs (OO languages), trees (functional languages), and tables (relational DBs). None of these models seem to have arisen as \"the one true answer\", partially because they are all difficult to reason about when operated on programmatically (or so I claim). I want a model for information that allows us to easily understand both *static* information structures (snapshots) and *programmatically-maintained* information structures (an evolving, stateful system).\n\nThe ideal model for information might define concepts like \"pointing\" (edges) or \"nesting\" (groups), and each concept will have a clear meaning. The ideal model will also have a semantics for *mutation*, e.g. you will know when you define a relationship like `A points to B` whether `B` can be deleted or modified in some way, and how this affects the `points to` connection. The model will also have a notion of *stewardship* of information, i.e. it should be easy to observe the *source* of a piece of information, and to know whether it is mutable or just a snapshot. (Yes, I believe the ideal model for information should have a vocabulary to describe distribution and trust).\n\nHas anyone here thought hard about this? I've been churning on it for a month or two recently, and for many months over the last few years; I can't proceed with my own PL project until I get fundamentals like this right, since the model that I develop will fundamentally determine what a \"program\" even is. I think a key reason why discovering \"the future of programming\" is so hard is that we think too much about code and not enough about information. *Code exists purely to transform information*, and if you don't make strides on models for information then I don't think you can make strides on programming languages.\n\nI have some ideas about a model, but I have no insights from others to validate it against. My conception is a very specific hybrid of mutable *graphs* and immutable ~trees~ *nested sets* that distinguishes between *descriptions* and *references*, and it seems very amenable to compact 2D representations, unlike most graphs. I won't describe it further just yet, since I don't want to skew anyone's responses.\n\nAnyway, I'd love to hear from other people who have been thinking about this kind of stuff.",
        "user": "UCGAK10LS",
        "ts": "1595489301.204200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595492915.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "glFDu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone been searching for an \"ideal\" model for information? By this I mean an "
                            },
                            {
                                "type": "text",
                                "text": "abstract",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " model (not a DRAM/disk representation) with a vocabulary that allows a "
                            },
                            {
                                "type": "text",
                                "text": "human",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to read, specify, and understand information with ease. We have existing models like RDF (\"Semantic web\") and property graphs (e.g. Neo4j), and in programming languages we have object graphs (OO languages), trees (functional languages), and tables (relational DBs). None of these models seem to have arisen as \"the one true answer\", partially because they are all difficult to reason about when operated on programmatically (or so I claim). I want a model for information that allows us to easily understand both "
                            },
                            {
                                "type": "text",
                                "text": "static",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information structures (snapshots) and "
                            },
                            {
                                "type": "text",
                                "text": "programmatically-maintained",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information structures (an evolving, stateful system).\n\nThe ideal model for information might define concepts like \"pointing\" (edges) or \"nesting\" (groups), and each concept will have a clear meaning. The ideal model will also have a semantics for "
                            },
                            {
                                "type": "text",
                                "text": "mutation",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", e.g. you will know when you define a relationship like "
                            },
                            {
                                "type": "text",
                                "text": "A points to B",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " whether "
                            },
                            {
                                "type": "text",
                                "text": "B",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " can be deleted or modified in some way, and how this affects the "
                            },
                            {
                                "type": "text",
                                "text": "points to",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " connection. The model will also have a notion of "
                            },
                            {
                                "type": "text",
                                "text": "stewardship",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of information, i.e. it should be easy to observe the "
                            },
                            {
                                "type": "text",
                                "text": "source",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of a piece of information, and to know whether it is mutable or just a snapshot. (Yes, I believe the ideal model for information should have a vocabulary to describe distribution and trust).\n\nHas anyone here thought hard about this? I've been churning on it for a month or two recently, and for many months over the last few years; I can't proceed with my own PL project until I get fundamentals like this right, since the model that I develop will fundamentally determine what a \"program\" even is. I think a key reason why discovering \"the future of programming\" is so hard is that we think too much about code and not enough about information. "
                            },
                            {
                                "type": "text",
                                "text": "Code exists purely to transform information",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and if you don't make strides on models for information then I don't think you can make strides on programming languages.\n\nI have some ideas about a model, but I have no insights from others to validate it against. My conception is a very specific hybrid of mutable "
                            },
                            {
                                "type": "text",
                                "text": "graphs",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and immutable "
                            },
                            {
                                "type": "text",
                                "text": "trees",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "nested sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that distinguishes between "
                            },
                            {
                                "type": "text",
                                "text": "descriptions",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "references",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and it seems very amenable to compact 2D representations, unlike most graphs. I won't describe it further just yet, since I don't want to skew anyone's responses.\n\nAnyway, I'd love to hear from other people who have been thinking about this kind of stuff."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "reply_count": 88,
        "reply_users_count": 13,
        "latest_reply": "1595723862.046800",
        "reply_users": [
            "UCGAK10LS",
            "UNBPP291C",
            "UT60XSVCN",
            "U013ZLJARC7",
            "UE6EFEPTQ",
            "UDQBTJ211",
            "UA14TGLTC",
            "U014WA16VNJ",
            "UEBG0NPDK",
            "U016VUZGUUQ",
            "U8A5MS6R1",
            "UL3CJ7YKC",
            "UHWC9PXBL"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D",
                    "UA14TGLTC",
                    "U016LEA3J1H",
                    "U014WA16VNJ",
                    "U016VUZGUUQ",
                    "UJ6LDMMN0",
                    "UHWC9PXBL",
                    "ULK0Z4MPV"
                ],
                "count": 8
            },
            {
                "name": "thinking_face",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5a7f5114-e561-4ffe-ac70-891f4a33e69d",
        "type": "message",
        "text": "<@U013ZLJARC7> From your recent posts, perhaps you have some insight? :slightly_smiling_face:",
        "user": "UCGAK10LS",
        "ts": "1595489342.204400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xNKrk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " From your recent posts, perhaps you have some insight? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "09d77489-afd4-4ef2-aae0-a6070403cac9",
        "type": "message",
        "text": "The ideal model is a user defined n-ary tree\u2026 or well, a list :slightly_smiling_face:\n\nMy long-term project is a tree editor that does exactly that - purely transforms the data.\n\nYou have a tree T, you write a transform function f(t)-&gt;g, you got a projected tree of G now, but inside I keep them connected via references - the model isn\u2019t \u201cG\u201d, the model is \u201cf(t)-&gt;G\u201d. This way, you grow your codebase from the model outwards, expanding it into each category you need (sql schema, model, viewmodel) via transformations, or by creating new trees that reference stuff from any of the existing trees. That way, you mutate your original model and all the references get the mutation transformed to their own projection.\nI keep it all inside a large model called Lattice, that is a basically a huge graph that connects over multiple dimensions (each transformation adds a new dimension to the graph)\n\nDidn\u2019t yet come to edges as mutation permissions, since I feel that isn\u2019t a part of the pure model, but of a \u201cprojection\u201d.",
        "user": "UNBPP291C",
        "ts": "1595491014.205200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UNBPP291C",
            "ts": "1595491029.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PfQ/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The ideal model is a user defined n-ary tree\u2026 or well, a list "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMy long-term project is a tree editor that does exactly that - purely transforms the data.\n\nYou have a tree T, you write a transform function f(t)->g, you got a projected tree of G now, but inside I keep them connected via references - the model isn\u2019t \u201cG\u201d, the model is \u201cf(t)->G\u201d. This way, you grow your codebase from the model outwards, expanding it into each category you need (sql schema, model, viewmodel) via transformations, or by creating new trees that reference stuff from any of the existing trees. That way, you mutate your original model and all the references get the mutation transformed to their own projection.\nI keep it all inside a large model called Lattice, that is a basically a huge graph that connects over multiple dimensions (each transformation adds a new dimension to the graph)\n\nDidn\u2019t yet come to edges as mutation permissions, since I feel that isn\u2019t a part of the pure model, but of a \u201cprojection\u201d."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3d02daed-0841-4622-8b6c-9735fcecf04d",
        "type": "message",
        "text": "Your \"transform function\" is the same as \"derived state\", a database \"view\", and a \"projection\", right? We have a lot of names for it. That's an example of a *programmatically-maintained* information structure as I called it earlier. What about *static* structures? How would you encode a text document, or a (static) spreadsheet, and how do you derive meaning from the encoding? Spreadsheets in particular do not have a clean representation as a list or a tree. You'd have to do some shoehorning.",
        "user": "UCGAK10LS",
        "ts": "1595492207.205600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595492286.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O334E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Your \"transform function\" is the same as \"derived state\", a database \"view\", and a \"projection\", right? We have a lot of names for it. That's an example of a "
                            },
                            {
                                "type": "text",
                                "text": "programmatically-maintained",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information structure as I called it earlier. What about "
                            },
                            {
                                "type": "text",
                                "text": "static",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " structures? How would you encode a text document, or a (static) spreadsheet, and how do you derive meaning from the encoding? Spreadsheets in particular do not have a clean representation as a list or a tree. You'd have to do some shoehorning."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "3c22b5c0-4b44-4946-94b0-7a966c3e8ba4",
        "type": "message",
        "text": "Somewhat off-topic reply to <@ULK0Z4MPV>: if you enjoy ClojureScript, the Geom library has a much nicer API than ThreeJS. Here's a small example I build some years ago:\n<http://proscenium.rusher.com/geometer/>\nSource code:\n<https://github.com/jackrusher/geometer>",
        "user": "U013ZLJARC7",
        "ts": "1595494358.206200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "jackrusher/geometer",
                "text": "An interactive playground for experiments with th.ing's geom libraries.",
                "title": "jackrusher/geometer",
                "footer": "<https://github.com/jackrusher/geometer|jackrusher/geometer>",
                "id": 1,
                "footer_icon": "https://github.githubassets.com/favicon.ico",
                "ts": 1448216523,
                "color": "24292f",
                "fields": [
                    {
                        "title": "Stars",
                        "value": "62",
                        "short": true
                    },
                    {
                        "title": "Language",
                        "value": "Clojure",
                        "short": true
                    }
                ],
                "mrkdwn_in": [
                    "text",
                    "fields"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https://github.com/jackrusher/geometer",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KEB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Somewhat off-topic reply to "
                            },
                            {
                                "type": "user",
                                "user_id": "ULK0Z4MPV"
                            },
                            {
                                "type": "text",
                                "text": ": if you enjoy ClojureScript, the Geom library has a much nicer API than ThreeJS. Here's a small example I build some years ago:\n"
                            },
                            {
                                "type": "link",
                                "url": "http://proscenium.rusher.com/geometer/"
                            },
                            {
                                "type": "text",
                                "text": "\nSource code:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/jackrusher/geometer"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c511ae97-f082-4d85-a9b0-dbf40447128d",
        "type": "message",
        "text": "What do you mean by \"information\"?\n\nIn the most general form, this is the core question of ontology, which philosophers have been wrestling with for millenia. Slightly more restricted, you can look at GOFAI approaches to this problem, like cyc, which have largely failed to bear the kind of revolutionary fruit promised.\n\nHow general are you trying to be? What are you trying to achieve?",
        "user": "UT60XSVCN",
        "ts": "1595496823.206900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uEfTE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do you mean by \"information\"?\n\nIn the most general form, this is the core question of ontology, which philosophers have been wrestling with for millenia. Slightly more restricted, you can look at GOFAI approaches to this problem, like cyc, which have largely failed to bear the kind of revolutionary fruit promised.\n\nHow general are you trying to be? What are you trying to achieve?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "62fbbb42-cbed-4d13-a6c1-f51f9b78c83d",
        "type": "message",
        "text": "This is a fairly deep topic for which a simple answer is impossible. A few fingers pointing toward the moon:\n\n\u2022 It would be best for such a system to store the data in a structure that \"changes\" through accretion rather than mutation (<http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.102.8253&amp;rep=rep1&amp;type=pdf|practical example>, much emulated since). If every modification point is essentially a snapshot, you get time travel and other useful semantics for free (Datomic is a recent database that uses this approach).\n\u2022 Up-front schemas are brittle over time. The less you can get away with saying about structure, the better off you will be. (A special case of the more general advice to \"design for change\").\n\u2022 The approach whereby everything is a logical assertion (i.e. triples, sometimes called \"Subject/Predicate/Object\", sometimes \"Entity/Attribute/Value\", depending on the culture of the speaker) is the most flexible I've been able to come up with yet. This underlies RDF (and TripleStores generally), and is currently in vogue among those who have encountered datalog, mostly via Datomic.\n\u2022 It's very useful to be able to specify additional automatic behavior over triples via some kind of metadata, in the best case also specified in triples. (RDF via OWL, not Datamic.)\nI have many differences of taste with the place where RDF ultimately went, but there's loads of good stuff in there too. You can find out more about the history of the \"data as assertions\" approach by reading up on <https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning|Knowledge Representation> (as distinct from data representation), <https://en.wikipedia.org/wiki/Frame_(artificial_intelligence)#Frame_language|Frame-based Reasoning>, and so on. This stuff is one of the threads that leads to object orientation, though much less emphasized in a modern context than the strand motivated by simulation.\n\nThe \"immutable tree on disk\" stuff comes from generalizing database journals, which for me starts in the 80s with <https://en.wikipedia.org/wiki/Log-structured_file_system|Log Structured File Systems>. Today there's loads of work on immutable logs for all sorts of applications, especially with the recent popularity of cryptocurrencies.",
        "user": "U013ZLJARC7",
        "ts": "1595496893.207100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jwM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a fairly deep topic for which a simple answer is impossible. A few fingers pointing toward the moon:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "It would be best for such a system to store the data in a structure that \"changes\" through accretion rather than mutation ("
                                    },
                                    {
                                        "type": "link",
                                        "url": "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.102.8253&rep=rep1&type=pdf",
                                        "text": "practical example"
                                    },
                                    {
                                        "type": "text",
                                        "text": ", much emulated since). If every modification point is essentially a snapshot, you get time travel and other useful semantics for free (Datomic is a recent database that uses this approach)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Up-front schemas are brittle over time. The less you can get away with saying about structure, the better off you will be. (A special case of the more general advice to \"design for change\")."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The approach whereby everything is a logical assertion (i.e. triples, sometimes called \"Subject/Predicate/Object\", sometimes \"Entity/Attribute/Value\", depending on the culture of the speaker) is the most flexible I've been able to come up with yet. This underlies RDF (and TripleStores generally), and is currently in vogue among those who have encountered datalog, mostly via Datomic."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "It's very useful to be able to specify additional automatic behavior over triples via some kind of metadata, in the best case also specified in triples. (RDF via OWL, not Datamic.)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI have many differences of taste with the place where RDF ultimately went, but there's loads of good stuff in there too. You can find out more about the history of the \"data as assertions\" approach by reading up on "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Knowledge_representation_and_reasoning",
                                "text": "Knowledge Representation"
                            },
                            {
                                "type": "text",
                                "text": " (as distinct from data representation), "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Frame_(artificial_intelligence)#Frame_language",
                                "text": "Frame-based Reasoning"
                            },
                            {
                                "type": "text",
                                "text": ", and so on. This stuff is one of the threads that leads to object orientation, though much less emphasized in a modern context than the strand motivated by simulation.\n\nThe \"immutable tree on disk\" stuff comes from generalizing database journals, which for me starts in the 80s with "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Log-structured_file_system",
                                "text": "Log Structured File Systems"
                            },
                            {
                                "type": "text",
                                "text": ". Today there's loads of work on immutable logs for all sorts of applications, especially with the recent popularity of cryptocurrencies."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "0a2ca44f-4bfe-4a96-ace9-e6df9e127417",
        "type": "message",
        "text": "Wow this thread has already brought out so many fellow travellers who I didn't know were exploring the same terrain as I am! The history of my own project over decades is intimately tied to my search for the \"perfect\" data and data transformation approach, in search of the \"purest\" model of programming - which is one that is most cognitively aligned. Aligned to the cognition of a .. ahem .. \"average human\", so probably less to that of the \"average programmer\"!\n\nSo for me it is important to step back and look at common patterns of cognition - how we organise our perception of reality. One approach is to read Roget's Thesaurus! All the important cognitive concepts are there, organised in a specific idiosyncratic way. There are many other \"meta-ontology\" approaches, as have already been listed here.",
        "user": "UE6EFEPTQ",
        "ts": "1595498962.207400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Hw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow this thread has already brought out so many fellow travellers who I didn't know were exploring the same terrain as I am! The history of my own project over decades is intimately tied to my search for the \"perfect\" data and data transformation approach, in search of the \"purest\" model of programming - which is one that is most cognitively aligned. Aligned to the cognition of a .. ahem .. \"average human\", so probably less to that of the \"average programmer\"!\n\nSo for me it is important to step back and look at common patterns of cognition - how we organise our perception of reality. One approach is to read Roget's Thesaurus! All the important cognitive concepts are there, organised in a specific idiosyncratic way. There are many other \"meta-ontology\" approaches, as have already been listed here."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "eec43d67-ac77-4c1d-8907-b9f35560c9fa",
        "type": "message",
        "text": "I could start listing out what I believe are essential \"reality modelling primitives\" as you already have done yourself. For me, where I am right now in my journey, that is basically: identity of things, properties of things, relations between things.",
        "user": "UE6EFEPTQ",
        "ts": "1595499136.207600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=0F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I could start listing out what I believe are essential \"reality modelling primitives\" as you already have done yourself. For me, where I am right now in my journey, that is basically: identity of things, properties of things, relations between things."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "f6ffee2e-a8ca-479d-98b9-4a378b6e3c21",
        "type": "message",
        "text": "At a more abstract level, you have symbols of value, order of those symbols and their aggregations, bags/sets of symbols. You have named properties that can have values.",
        "user": "UE6EFEPTQ",
        "ts": "1595499223.207800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595499234.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wu7x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At a more abstract level, you have symbols of value, order of those symbols and their aggregations, bags/sets of symbols. You have named properties that can have values."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "4268cbcd-58fc-4f02-b6f5-c219d3db8255",
        "type": "message",
        "text": "It's easier to show up at some corporate jam and meet new people than to organize one yourself. You don't have to find the space, get the food, clean the place after, etc etc etc. Plus you'll likely meet people you don't know.\n\nThat said I don't personally get the idea of jams/hackathons that take place online. I can make something on my own at home. Saying \"this weekend is abc jam! just upload your submission online!\" doesn't motivate me all. All I want out of a jam is to spend time with actual people, make some new friends, see a new venue, that kind thing.",
        "user": "UC6997THT",
        "ts": "1595499279.208100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cw7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's easier to show up at some corporate jam and meet new people than to organize one yourself. You don't have to find the space, get the food, clean the place after, etc etc etc. Plus you'll likely meet people you don't know.\n\nThat said I don't personally get the idea of jams/hackathons that take place online. I can make something on my own at home. Saying \"this weekend is abc jam! just upload your submission online!\" doesn't motivate me all. All I want out of a jam is to spend time with actual people, make some new friends, see a new venue, that kind thing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMWF81HTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "cf12eb27-04b4-4179-9c13-36eb0e7674a5",
        "type": "message",
        "text": "So, as you can probably deduce, I've settled on something that looks like objects that have unique identity, which are bags of properties in the form \"property name: property value\". Property values are just symbols (text really) or ordered lists of symbols but can also be links to other objects by identity - relations between objects.",
        "user": "UE6EFEPTQ",
        "ts": "1595499346.208300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595499568.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YR7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, as you can probably deduce, I've settled on something that looks like objects that have unique identity, which are bags of properties in the form \"property name: property value\". Property values are just symbols (text really) or ordered lists of symbols but can also be links to other objects by identity - relations between objects."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4d30d42f-40bc-4c51-b9d0-bc53a4d2f3ca",
        "type": "message",
        "text": "One issue that really bugs me is that I can't extract a single representation of order! There is order in my properties (I don't need that but I want it). There is order in my lists of property values, and there is order in the direction of the link pointers.",
        "user": "UE6EFEPTQ",
        "ts": "1595499417.208600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595499490.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KhBgi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One issue that really bugs me is that I can't extract a single representation of order! There is order in my properties (I don't need that but I want it). There is order in my lists of property values, and there is order in the direction of the link pointers."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UDQBTJ211"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d69b1f16-565b-4c8a-be5d-dfd41a94ebb4",
        "type": "message",
        "text": "If you want to make it attractive to humans it needs to be built out of concepts that humans have \"hardware support\" for.\n\nSometimes there's a tendency to seek \"elegant\" solutions which use the minimum possible number of concepts, whereas I think it's often more natural to expand the number of concepts, even if introduces \"redundancy\".\n\nFor example, you can describe a bijection between XML and JSON, that would involve translating JSON lists into a something you can describe in XML such as [\"one\", \"two\", \"three\"] becomes &lt;list-item index=\"0\"&gt;one&lt;/list-item&gt;&lt;list-item index=\"1\"&gt;two&lt;/list-item&gt;... or something.\n\nYou could say that XML is a more elegant way to represent information, because it is based basically only on the concepts of Containment, Naming and Properties. But because I believe that humans have \"hardware support\" for many more concepts, such as Sequences, I think that JSON is actually easier and more natural (for humans).\n\nSo basically my only input would be to be sceptical of mathematical beauty if the format is intended to store information relating to the human world.",
        "user": "UDQBTJ211",
        "ts": "1595499495.208900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fQ=w1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you want to make it attractive to humans it needs to be built out of concepts that humans have \"hardware support\" for.\n\nSometimes there's a tendency to seek \"elegant\" solutions which use the minimum possible number of concepts, whereas I think it's often more natural to expand the number of concepts, even if introduces \"redundancy\".\n\nFor example, you can describe a bijection between XML and JSON, that would involve translating JSON lists into a something you can describe in XML such as [\"one\", \"two\", \"three\"] becomes <list-item index=\"0\">one</list-item><list-item index=\"1\">two</list-item>... or something.\n\nYou could say that XML is a more elegant way to represent information, because it is based basically only on the concepts of Containment, Naming and Properties. But because I believe that humans have \"hardware support\" for many more concepts, such as Sequences, I think that JSON is actually easier and more natural (for humans).\n\nSo basically my only input would be to be sceptical of mathematical beauty if the format is intended to store information relating to the human world."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "95ea8ca2-2f10-4353-b0f2-ee23d2722a26",
        "type": "message",
        "text": "There is a list of things that have been observed in *every* human culture (Donald Brown's Human Universals) and it is surprisingly long. Unfortunately it doesn't have much on the way of numbers (only the numbers 1 and 2) as some cultures are almost completely innumerate. It does have quite a few logical operations like Not, Or etc",
        "user": "UDQBTJ211",
        "ts": "1595499638.209400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1595499700.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=xB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is a list of things that have been observed in "
                            },
                            {
                                "type": "text",
                                "text": "every",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " human culture (Donald Brown's Human Universals) and it is surprisingly long. Unfortunately it doesn't have much on the way of numbers (only the numbers 1 and 2) as some cultures are almost completely innumerate. It does have quite a few logical operations like Not, Or etc"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6b0232da-2803-4f28-ab05-c198f13ba12b",
        "type": "message",
        "text": "<@UT60XSVCN> By \"information\" I just mean data with associated meaning. I refrained from using the word \"data\" because it's a machine-oriented word and I don't want people to start talking about conventional data structures and pointers. I want to focus on the human interface, not the machine representation.\n\nI'm not too concerned with standardizing ontologies or AI right now. I'm more concerned with allowing humans to group a bunch of symbols together by hand or programmatically in a way that makes sense for their own understanding. I'm designing a programming language, but unlike almost everyone in the last few decades, I'm not taking \"arrays\" or \"objects\" or \"algebraic data types\" or \"databases\" or \"relations\" for granted: I'm trying to figure out, from complete scratch, what information structures are easiest for people to *think with* when they are integrated into a complex system (e.g. a distributed app). I'm trying to be as general as I can, but my domain is \"programming\", taken broadly.\n\nI want a model for information that allows users to encode information like \"Bob has a car with 4 wheels\" in the form that is most useful to their specific application. In a company database the car might be an immutable fact with an associated *date* and *source*. You might then tell me that the right model for encoding information about cars is *the relational model*. However, in a video game the car might be an entity with a *position* that changes over time, and so we need to be able to talk about the idea of *change* and the distinction between *descriptions* (where the description itself doesn't \"change\" as time passes) and *references* (where the entities referred to can change).\n\nThe question of \"how do I model information\" may seem trivial (or \"solved\") at first glance, but the moment I ask that you don't treat conventional data structures as *axioms* (\"we already figured it out, just mix these existing things together and follow best practices\"), it becomes incredibly deep.",
        "user": "UCGAK10LS",
        "ts": "1595500028.209700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qLb0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UT60XSVCN"
                            },
                            {
                                "type": "text",
                                "text": " By \"information\" I just mean data with associated meaning. I refrained from using the word \"data\" because it's a machine-oriented word and I don't want people to start talking about conventional data structures and pointers. I want to focus on the human interface, not the machine representation.\n\nI'm not too concerned with standardizing ontologies or AI right now. I'm more concerned with allowing humans to group a bunch of symbols together by hand or programmatically in a way that makes sense for their own understanding. I'm designing a programming language, but unlike almost everyone in the last few decades, I'm not taking \"arrays\" or \"objects\" or \"algebraic data types\" or \"databases\" or \"relations\" for granted: I'm trying to figure out, from complete scratch, what information structures are easiest for people to "
                            },
                            {
                                "type": "text",
                                "text": "think with ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "when they are integrated into a complex system (e.g. a distributed app). I'm trying to be as general as I can, but my domain is \"programming\", taken broadly.\n\nI want a model for information that allows users to encode information like \"Bob has a car with 4 wheels\" in the form that is most useful to their specific application. In a company database the car might be an immutable fact with an associated "
                            },
                            {
                                "type": "text",
                                "text": "date",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "source",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". You might then tell me that the right model for encoding information about cars is "
                            },
                            {
                                "type": "text",
                                "text": "the relational model",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". However, in a video game the car might be an entity with a "
                            },
                            {
                                "type": "text",
                                "text": "position ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "that changes over time, and so we need to be able to talk about the idea of "
                            },
                            {
                                "type": "text",
                                "text": "change",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and the distinction between"
                            },
                            {
                                "type": "text",
                                "text": " descriptions",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (where the description itself doesn't \"change\" as time passes) and "
                            },
                            {
                                "type": "text",
                                "text": "references",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (where the entities referred to can change).\n\nThe question of \"how do I model information\" may seem trivial (or \"solved\") at first glance, but the moment I ask that you don't treat conventional data structures as "
                            },
                            {
                                "type": "text",
                                "text": "axioms ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "(\"we already figured it out, just mix these existing things together and follow best practices\"), it becomes incredibly deep."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "DF43239F-CFCD-471D-8075-B272B2FB8D1E",
        "type": "message",
        "text": "When I was a teenager, these sorts of contest-jams were fun as I learned 3D modelling. A good way to get some audience (and thus feedback) that my work wasn't yet good enough to earn on its own.",
        "user": "UC2A2ARPT",
        "ts": "1595500457.212100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1595500472.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rm+s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I was a teenager, these sorts of contest-jams were fun as I learned 3D modelling. A good way to get some audience (and thus feedback) that my work wasn't yet good enough to earn on its own."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "87c4e4bd-1da4-403b-ab53-132d4aa0f28e",
        "type": "message",
        "text": "<@U013ZLJARC7> I've liked the idea of \"accretion, not mutation\" in the past. But I'm worried that making it a requirement in a programming system is going to lead to space consumption problems for certain use cases. How do you get around that, if you aren't restricting your application domain and user base?\n\nI agree that it's wise to limit unnecessary structure: scenarios where a relationship is specified with some kind of directionality/asymmetry that isn't inherent. I've been calling this \"incidental order\", and it's one of my biggest concerns. I've been inspired by Datalog, though I've come to a conclusion that mere relations (including as triples) aren't expressive/intuitive/\"easy\" enough as the *sole* information structure for for general-purpose programming*. I think it's _part_ of the answer though. Do you believe otherwise?\n\n* I probably wasn't explicit that I want a model for information that can be used ubiquitously throughout a computation, not just as a \"final output\".",
        "user": "UCGAK10LS",
        "ts": "1595500993.212400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595501090.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iRa3G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I've liked the idea of \"accretion, not mutation\" in the past. But I'm worried that making it a requirement in a programming system is going to lead to space consumption problems for certain use cases. How do you get around that, if you aren't restricting your application domain and user base?\n\nI agree that it's wise to limit unnecessary structure: scenarios where a relationship is specified with some kind of directionality/asymmetry that isn't inherent. I've been calling this \"incidental order\", and it's one of my biggest concerns. I've been inspired by Datalog, though I've come to a conclusion that mere relations (including as triples) aren't expressive/intuitive/\"easy\" enough as the "
                            },
                            {
                                "type": "text",
                                "text": "sole",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information structure for for general-purpose programming*. I think it's "
                            },
                            {
                                "type": "text",
                                "text": "part",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of the answer though. Do you believe otherwise?\n\n* I probably wasn't explicit that I want a model for information that can be used ubiquitously throughout a computation, not just as a \"final output\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "9dc725cf-f124-47a2-9408-acd4682a95a5",
        "type": "message",
        "text": "And thank you for the links! I'm going to chase them up later.",
        "user": "UCGAK10LS",
        "ts": "1595501060.212600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RhtO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And thank you for the links! I'm going to chase them up later."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "57ddd140-2e4b-46e1-9e34-d4e7331f1890",
        "type": "message",
        "text": "<@UE6EFEPTQ> Careful! :slightly_smiling_face: The age old practice of modeling human mental processes with first order logics has not gone very well. Even something as seemingly straightforward as object identity is quite fraught in practice: <https://en.wikipedia.org/wiki/Ship_of_Theseus>",
        "user": "U013ZLJARC7",
        "ts": "1595502489.212900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WhIR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " Careful! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " The age old practice of modeling human mental processes with first order logics has not gone very well. Even something as seemingly straightforward as object identity is quite fraught in practice: "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Ship_of_Theseus"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UE6EFEPTQ",
                    "ULM3U6275"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "cbf4afd8-93bc-4d4f-8ac0-6a266c1effe6",
        "type": "message",
        "text": "<@UE6EFEPTQ>\n&gt; where I am right now in my journey, that is basically: identity of things, properties of things, relations between things.\nHow do you distinguish between properties and relations? Is the fact that I'm \"holding my tea cup\" a property of myself, or am I just in a relationship with my tea cup?\n\n&gt; At a more abstract level, you have symbols of value, order of those symbols and their aggregations, bags/sets of symbols.\nWhat is a \"symbol of value\"? I don't quite understand that term. And you seem to recognise both *sets* and *bags*? I've always found those to be in contention with one another, and so I've (for the meantime) concluded that if a user is in a scenario where they want a bag (which should be rare), they can simulate it with a set quite easily. The converse is not possible, though.\n\n&gt; So, as you can probably deduce, I've settled on something that looks like objects that have unique identity, which are bags of properties\nI've currently settled on two notions that together can act like a conventional object. The first is something I'm tentatively calling a *picture*, which is a *set* with an exterior label (I call it the *topic*) that contains *symbols* and/or further pictures (these are called *subtopics*). These can be used to form the \"descriptions\" I was hinting at earlier; they are immutable value types. If you want a picture to be mutable (and thus behave like an object), you can stick it in a *workspace*, which is the unit of mutability. Workspaces are identified (and thus referenced, and queried) by the aforementioned symbols. A workspace's state evolves by a *rulebook* (a set of *rules*), which updates a workspace's picture in response to *events*. I plan to base the semantics of rules on logic programming. The end result will be something like \"nested Datalog\", though there is no literature that matches the model I described above.\n\nPicture topics replace the need to have a special notion of a statically-specified \"attribute\", because the topic can itself be any value. This should hopefully make meta-programming possible, but at the very least, I hope it leads to a very minimalist (and intuitive) semantics.\n\nAll of the above is subject to change, of course! Given my current track record, I wouldn't be surprised if I find some major flaw in this kind of architecture.",
        "user": "UCGAK10LS",
        "ts": "1595502541.213100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595503089.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VLPT0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "where I am right now in my journey, that is basically: identity of things, properties of things, relations between things."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How do you distinguish between properties and relations? Is the fact that I'm \"holding my tea cup\" a property of myself, or am I just in a relationship with my tea cup?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At a more abstract level, you have symbols of value, order of those symbols and their aggregations, bags/sets of symbols."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is a \"symbol of value\"? I don't quite understand that term. And you seem to recognise both "
                            },
                            {
                                "type": "text",
                                "text": "sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "bags",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? I've always found those to be in contention with one another, and so I've (for the meantime) concluded that if a user is in a scenario where they want a bag (which should be rare), they can simulate it with a set quite easily. The converse is not possible, though.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, as you can probably deduce, I've settled on something that looks like objects that have unique identity, which are bags of properties"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've currently settled on two notions that together can act like a conventional object. The first is something I'm tentatively calling a "
                            },
                            {
                                "type": "text",
                                "text": "picture",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is a "
                            },
                            {
                                "type": "text",
                                "text": "set",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with an exterior label (I call it the "
                            },
                            {
                                "type": "text",
                                "text": "topic",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") that contains "
                            },
                            {
                                "type": "text",
                                "text": "symbols",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and/or further pictures (these are called "
                            },
                            {
                                "type": "text",
                                "text": "subtopics",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "). These can be used to form the \"descriptions\" I was hinting at earlier; they are immutable value types. If you want a picture to be mutable (and thus behave like an object), you can stick it in a "
                            },
                            {
                                "type": "text",
                                "text": "workspace",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is the unit of mutability. Workspaces are identified (and thus referenced, and queried) by the aforementioned symbols. A workspace's state evolves by a "
                            },
                            {
                                "type": "text",
                                "text": "rulebook",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (a set of "
                            },
                            {
                                "type": "text",
                                "text": "rules",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "), which updates a workspace's picture in response to "
                            },
                            {
                                "type": "text",
                                "text": "events",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I plan to base the semantics of rules on logic programming. The end result will be something like \"nested Datalog\", though there is no literature that matches the model I described above.\n\nPicture topics replace the need to have a special notion of a statically-specified \"attribute\", because the topic can itself be any value. This should hopefully make meta-programming possible, but at the very least, I hope it leads to a very minimalist (and intuitive) semantics.\n\nAll of the above is subject to change, of course! Given my current track record, I wouldn't be surprised if I find some major flaw in this kind of architecture."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "1a464d36-a4cf-4e3a-a67a-8f8c03e42135",
        "type": "message",
        "text": "<@UCGAK10LS> In terms of storage, the natural thing to do in a log-structured environment is to have a \"cleaner\" that purges no longer referenced old versions subject to some policy. In the paper I linked, we built the system to purge whatever was no longer linked. In another system one might have a policy of \"versions older than a year to which no one holds a dangling pointer\". In either case, I would strongly encourage you _not_ to consider practical matters of performance or storage efficiency at this stage. Go a bit mad, follow untrodden paths, find weird things!\n\nAs for expressivity/ease of triples, one would expect a system that can construct other representations on top of triples for ease of use. What that looks like in your domain is a very open question. :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1595503300.214000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "llUZZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " In terms of storage, the natural thing to do in a log-structured environment is to have a \"cleaner\" that purges no longer referenced old versions subject to some policy. In the paper I linked, we built the system to purge whatever was no longer linked. In another system one might have a policy of \"versions older than a year to which no one holds a dangling pointer\". In either case, I would strongly encourage you "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to consider practical matters of performance or storage efficiency at this stage. Go a bit mad, follow untrodden paths, find weird things!\n\nAs for expressivity/ease of triples, one would expect a system that can construct other representations on top of triples for ease of use. What that looks like in your domain is a very open question. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "574dbe9b-85e5-4802-9878-55cc5f1ec466",
        "type": "message",
        "text": "<@U013ZLJARC7> I'm definitely good at going mad! It's my perpetual state of being :slightly_smiling_face:. Thank you. I'm going to keep pondering on all of this!",
        "user": "UCGAK10LS",
        "ts": "1595503559.214200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yo4kr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I'm definitely good at going mad! It's my perpetual state of being "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": ". Thank you. I'm going to keep pondering on all of this!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "man_in_lotus_position",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ee8fc6b0-d608-474f-a553-8ae7f4fe1c88",
        "type": "message",
        "text": "<@U013ZLJARC7> which paper are you talking about exactly? I was on the verge of implementing a cleaner, \u201cInterdimensional black hole\u201d so to say that would purge empty references in the background, but couldnt decide on when to run it.",
        "user": "UNBPP291C",
        "ts": "1595503733.214400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UNBPP291C",
            "ts": "1595503738.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I6p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " which paper are you talking about exactly? I was on the verge of implementing a cleaner, \u201cInterdimensional black hole\u201d so to say that would purge empty references in the background, but couldnt decide on when to run it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "7d321006-7f62-4c7e-aab4-41a4b49e30bb",
        "type": "message",
        "text": "<@UE6EFEPTQ>\n&gt; One issue that really bugs me is that I can't extract a single representation of order!\nIf you make any breakthroughs on this, let me know. I'm still trying to figure out how to represent sequences (lists, priority queues) and trees (e.g. family trees, or any other *domain-relevant* tree structure) in a *non-hierarchical* manner, such that users can perform arbitrary traversals (in any direction) and queries. My big constraint here is that *I want to ensure traversals will always terminate*, so I need there to be some measure of progress associated with the traversal rules. Another challenge is *multi-dimensional ordered structures*, for example, a spreadsheet! How can one describe a traversal across a spreadsheet? Every cell in a spreadsheet is ordered in two dimensions! My current line of investigation is to determine whether all kinds of ordering can be exposed as numberings, and sequence manipulation is manipulation of those numberings, i.e. a list might look like `{(c,1), (a,2), (t,3)}` and a priority queue might look like `{(c, -12), (a, 7), (t, 34)}`. I'm thinking of going deep and figuring out if lists and trees can be treated as *spatial data sets* and manipulated geometrically.",
        "user": "UCGAK10LS",
        "ts": "1595504167.214700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595504458.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nKnH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One issue that really bugs me is that I can't extract a single representation of order!"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you make any breakthroughs on this, let me know. I'm still trying to figure out how to represent sequences (lists, priority queues) and trees (e.g. family trees, or any other "
                            },
                            {
                                "type": "text",
                                "text": "domain-relevant",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " tree structure) in a "
                            },
                            {
                                "type": "text",
                                "text": "non-hierarchical ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "manner, such that users can perform arbitrary traversals (in any direction) and queries. My big constraint here is that "
                            },
                            {
                                "type": "text",
                                "text": "I want to ensure traversals will always terminate",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", so I need there to be some measure of progress associated with the traversal rules. Another challenge is "
                            },
                            {
                                "type": "text",
                                "text": "multi-dimensional ordered structures",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", for example, a spreadsheet! How can one describe a traversal across a spreadsheet? Every cell in a spreadsheet is ordered in two dimensions! My current line of investigation is to determine whether all kinds of ordering can be exposed as numberings, and sequence manipulation is manipulation of those numberings, i.e. a list might look like "
                            },
                            {
                                "type": "text",
                                "text": "{(c,1), (a,2), (t,3)}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and a priority queue might look like "
                            },
                            {
                                "type": "text",
                                "text": "{(c, -12), (a, 7), (t, 34)}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I'm thinking of going deep and figuring out if lists and trees can be treated as "
                            },
                            {
                                "type": "text",
                                "text": "spatial data sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and manipulated geometrically."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "092080b2-99d8-467d-87c8-45e54da50a0d",
        "type": "message",
        "text": "&gt;  How do you distinguish between properties and relations? Is the fact that I'm \"holding my tea cup\" a property of myself, or am I just in a relationship with my tea cup?\nit's a property of you, the link to the cup, and a property of the cup, back-linking to you, since both of you care about the holding! Other links may be one-way: the puddle has a link to the sun that's warming it and evaporating it, but the sun couldn't care less about the puddle",
        "user": "UE6EFEPTQ",
        "ts": "1595504622.215300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZaFgI",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " How do you distinguish between properties and relations? Is the fact that I'm \"holding my tea cup\" a property of myself, or am I just in a relationship with my tea cup?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it's a property of you, the link to the cup, and a property of the cup, back-linking to you, since both of you care about the holding! Other links may be one-way: the puddle has a link to the sun that's warming it and evaporating it, but the sun couldn't care less about the puddle"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "8e486fa1-6833-45d6-8ff4-6b23e4546b9b",
        "type": "message",
        "text": "That seems like a bit of an arbitrary distinction though, right? How do you formalize who \"cares\" about a relationship? How does it affect how a user models their application?",
        "user": "UCGAK10LS",
        "ts": "1595504758.215500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595504797.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=a3h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That seems like a bit of an arbitrary distinction though, right? How do you formalize who \"cares\" about a relationship? How does it affect how a user models their application?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "e4076dc7-2296-42dd-b808-2ba302c64895",
        "type": "message",
        "text": "&gt;  What is a \"symbol of value\"? I don't quite understand that term. And you seem to recognise both\u00a0*sets*\u00a0and\u00a0*bags*? I've always found those to be in contention with one another, and so I've (for the meantime) concluded that if a user is in a scenario where they want a bag (which should be rare), they can simulate it with a set quite easily. The converse is not possible, though.\n\"3.2\" \"up\" \"red\".\nset/bag: just recognition that ordered lists sometimes don't need order, but have to be laid out somehow in space, which means the order is incidental. I don't think this is a problem though.",
        "user": "UE6EFEPTQ",
        "ts": "1595504764.215700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kZ=s",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " What is a \"symbol of value\"? I don't quite understand that term. And you seem to recognise both\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "sets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0and\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "bags",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? I've always found those to be in contention with one another, and so I've (for the meantime) concluded that if a user is in a scenario where they want a bag (which should be rare), they can simulate it with a set quite easily. The converse is not possible, though."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"3.2\" \"up\" \"red\".\nset/bag: just recognition that ordered lists sometimes don't need order, but have to be laid out somehow in space, which means the order is incidental. I don't think this is a problem though."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "413fc53b-827a-4770-9db0-06e1e08f47fd",
        "type": "message",
        "text": "\"who cares\": it's up to you as the modeller",
        "user": "UE6EFEPTQ",
        "ts": "1595504811.216000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595504818.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gr9J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"who cares\": it's up to you as the modeller"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6b47ef8c-d416-4f2c-967b-8eecc726258e",
        "type": "message",
        "text": "This thread is piling up and I need lunch.. :smile:",
        "user": "UE6EFEPTQ",
        "ts": "1595504925.216300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cQoQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This thread is piling up and I need lunch.. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "f54cfbe2-4578-429a-a2f8-29eb3b6afd6d",
        "type": "message",
        "text": "What are your measures of success? To be programmable by techies or normals?",
        "user": "UE6EFEPTQ",
        "ts": "1595504976.216500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mkl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are your measures of success? To be programmable by techies or normals?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "f93a7bd1-792d-482c-9f63-9590b7e6ecd7",
        "type": "message",
        "text": "<@U013ZLJARC7> I take the approach of aggressively GCing old states/versions: if you want to model history, you do that explicitly yourself",
        "user": "UE6EFEPTQ",
        "ts": "1595505073.216700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/H5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I take the approach of aggressively GCing old states/versions: if you want to model history, you do that explicitly yourself"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6cefc899-41d0-4a3c-82d4-afcf03d42f89",
        "type": "message",
        "text": "On order (e.g. spreadsheets): that's a whole thread in itself",
        "user": "UE6EFEPTQ",
        "ts": "1595505154.216900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nAM=a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On order (e.g. spreadsheets): that's a whole thread in itself"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "dbd2765d-c466-4e46-b041-d4d9d77c828b",
        "type": "message",
        "text": "I'm getting overloaded. Time for lunch",
        "user": "UE6EFEPTQ",
        "ts": "1595505160.217100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+EC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm getting overloaded. Time for lunch"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "0625f8b4-2500-4913-9838-7078774462ca",
        "type": "message",
        "text": "<@UNBPP291C> This <http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.102.8253&amp;rep=rep1&amp;type=pdf|paper> describes one such implementation. We used multiple threads of execution. One of the benefits of the overall architecture is that multiple readers can continue running without any locking while writes are streaming in.",
        "user": "U013ZLJARC7",
        "ts": "1595506697.217400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ljr5p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNBPP291C"
                            },
                            {
                                "type": "text",
                                "text": " This "
                            },
                            {
                                "type": "link",
                                "url": "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.102.8253&rep=rep1&type=pdf",
                                "text": "paper"
                            },
                            {
                                "type": "text",
                                "text": " describes one such implementation. We used multiple threads of execution. One of the benefits of the overall architecture is that multiple readers can continue running without any locking while writes are streaming in."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "9a7d5967-a45a-4760-90f9-90930379e9d2",
        "type": "message",
        "text": "So ... fuelled up now.. :smile:\nSpreadsheets: well, tables, well... again it depends on the semantics of the table: for example, a list of objects can form a table with the common property labels as either row or col headers, and all the property values in the grid. If you have a genuine case of 2D tabular data - e.g., an f(x,y), then the order you select (x then y or y then x) only matters for optimisation",
        "user": "UE6EFEPTQ",
        "ts": "1595507675.217600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TyQaR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So ... fuelled up now.. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": "\nSpreadsheets: well, tables, well... again it depends on the semantics of the table: for example, a list of objects can form a table with the common property labels as either row or col headers, and all the property values in the grid. If you have a genuine case of 2D tabular data - e.g., an f(x,y), then the order you select (x then y or y then x) only matters for optimisation"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "f80aa74e-3a78-4930-995e-084b0193bf48",
        "type": "message",
        "text": "funny, can't think of an example of f(x,y) as a table, where col headers and row headers are either both symbolic or both ordinal .. can you?",
        "user": "UE6EFEPTQ",
        "ts": "1595507779.217800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XaUM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "funny, can't think of an example of f(x,y) as a table, where col headers and row headers are either both symbolic or both ordinal .. can you?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "f97a8076-0644-4680-a445-769e68642ef2",
        "type": "message",
        "text": "(a 2D lookup table where row and col symbols are values not \"property names\")",
        "user": "UE6EFEPTQ",
        "ts": "1595507941.218000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "usjzH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(a 2D lookup table where row and col symbols are values not \"property names\")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "4fd692a5-09ef-460a-a095-efd4dbc0859c",
        "type": "message",
        "text": "&gt;  If you make any breakthroughs on this, let me know. I'm still trying to figure out how to represent sequences (lists, priority queues) and trees (e.g. family trees, or any other\u00a0*domain-relevant*\u00a0tree structure) in a\u00a0*non-hierarchical*\u00a0manner, such that users can perform arbitrary traversals (in any direction) and queries. My big constraint here is that\u00a0*I want to ensure traversals will always terminate*, so I need there to be some measure of progress associated with the traversal rules.\nwhy non-hierarchical? how does that help with traversal termination?",
        "user": "UE6EFEPTQ",
        "ts": "1595508200.218200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bvijb",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " If you make any breakthroughs on this, let me know. I'm still trying to figure out how to represent sequences (lists, priority queues) and trees (e.g. family trees, or any other\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "domain-relevant",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0tree structure) in a\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "non-hierarchical\u00a0",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "manner, such that users can perform arbitrary traversals (in any direction) and queries. My big constraint here is that\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "I want to ensure traversals will always terminate",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", so I need there to be some measure of progress associated with the traversal rules."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why non-hierarchical? how does that help with traversal termination?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "2b0a4413-76ab-4113-a121-459e528b047a",
        "type": "message",
        "text": "&gt; I've currently settled on two notions that together can act like a conventional object. The first is something I'm tentatively calling a\u00a0*picture*, which is a\u00a0*set*\u00a0with an exterior label (I call it the\u00a0*topic*) that contains\u00a0*symbols*\u00a0and/or further pictures (these are called\u00a0*subtopics*). These can be used to form the \"descriptions\" I was hinting at earlier; they are immutable value types. If you want a picture to be mutable (and thus behave like an object), you can stick it in a\u00a0*workspace*, which is the unit of mutability. Workspaces are identified (and thus referenced, and queried) by the aforementioned symbols. A workspace's state evolves by a\u00a0*rulebook*\u00a0(a set of\u00a0*rules*), which updates a workspace's picture in response to\u00a0*events*. I plan to base the semantics of rules on logic programming. The end result will be something like \"nested Datalog\", though there is no literature that matches the model I described above.\n&gt; Picture topics replace the need to have a special notion of a statically-specified \"attribute\", because the topic can itself be any value. This should hopefully make meta-programming possible, but at the very least, I hope it leads to a very minimalist (and intuitive) semantics.\nThis is what prompted my question above: who are your target audience? Is this going to be intuitive to everyone, if it's non-techies you're after?",
        "user": "UE6EFEPTQ",
        "ts": "1595508319.218400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595508330.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JIst",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've currently settled on two notions that together can act like a conventional object. The first is something I'm tentatively calling a\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "picture",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is a\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "set",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0with an exterior label (I call it the\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "topic",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") that contains\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "symbols",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0and/or further pictures (these are called\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "subtopics",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "). These can be used to form the \"descriptions\" I was hinting at earlier; they are immutable value types. If you want a picture to be mutable (and thus behave like an object), you can stick it in a\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "workspace",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is the unit of mutability. Workspaces are identified (and thus referenced, and queried) by the aforementioned symbols. A workspace's state evolves by a\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "rulebook",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u00a0(a set of\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "rules",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "), which updates a workspace's picture in response to\u00a0"
                            },
                            {
                                "type": "text",
                                "text": "events",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I plan to base the semantics of rules on logic programming. The end result will be something like \"nested Datalog\", though there is no literature that matches the model I described above.\nPicture topics replace the need to have a special notion of a statically-specified \"attribute\", because the topic can itself be any value. This should hopefully make meta-programming possible, but at the very least, I hope it leads to a very minimalist (and intuitive) semantics."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is what prompted my question above: who are your target audience? Is this going to be intuitive to everyone, if it's non-techies you're after?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "c25b8f7e-f666-4372-89ba-f85f0840b1f9",
        "type": "message",
        "text": "(iow maybe you could draw a diagram with examples! :smile: )",
        "user": "UE6EFEPTQ",
        "ts": "1595508369.218700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1595508383.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6DiMz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(iow maybe you could draw a diagram with examples! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": " )"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "bb11e0d4-4b09-4870-8e57-413115d5b404",
        "type": "message",
        "text": "<@UCGAK10LS> \"Has anyone...\" asked in the place where a good fraction of us have.  :wink:  After playing in this space for twenty years, I'm not a believer in an ideal model.  What is ideal will depend on the task at hand.  What is better is having systems that you can readily shift between.",
        "user": "UA14TGLTC",
        "ts": "1595509502.219300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sky=c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " \"Has anyone...\" asked in the place where a good fraction of us have.  "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            },
                            {
                                "type": "text",
                                "text": "  After playing in this space for twenty years, I'm not a believer in an ideal model.  What is ideal will depend on the task at hand.  What is better is having systems that you can readily shift between."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            },
            {
                "name": "amiga-tick",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "77a03adc-62d1-4f4b-99e7-2f832cdedfd4",
        "type": "message",
        "text": "You know you're in bad programming place when a conceptually straightforward shift proves difficult.  On realizing that instead of having one of these things, you want to be able to shift between three different kinds. which will now require six months of developement work.",
        "user": "UA14TGLTC",
        "ts": "1595509697.219500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oa/1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You know you're in bad programming place when a conceptually straightforward shift proves difficult.  On realizing that instead of having one of these things, you want to be able to shift between three different kinds. which will now require six months of developement work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "de806a1c-241c-417b-a366-36432e6142eb",
        "type": "message",
        "text": "Also today via Hacker News, I was pointed to Terry Tao talking about mathematical notation, which is of course a model for the underlying notions.  <https://mathoverflow.net/questions/366070/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle/366118#366118>",
        "user": "UA14TGLTC",
        "ts": "1595509786.219700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "MathOverflow",
                "title": "What are the benefits of writing vector inner products as $\\langle u, v\\rangle$ as opposed to $u^T v$?",
                "title_link": "https://mathoverflow.net/questions/366070/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle/366118#366118",
                "text": "In a lot of computational math, operations research, such as algorithm design for optimization problems and the like, authors like to use $$\\langle \\cdot, \\cdot \\rangle$$ as opposed to $$(\\cdot)^T ...",
                "fallback": "MathOverflow: What are the benefits of writing vector inner products as $\\langle u, v\\rangle$ as opposed to $u^T v$?",
                "thumb_url": "https://cdn.sstatic.net/Sites/mathoverflow/Img/apple-touch-icon@2.png?v=f1c9606b77ff",
                "from_url": "https://mathoverflow.net/questions/366070/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle/366118#366118",
                "thumb_width": 316,
                "thumb_height": 316,
                "service_icon": "https://cdn.sstatic.net/Sites/mathoverflow/Img/apple-touch-icon.png?v=8c5ff8612fb4",
                "id": 1,
                "original_url": "https://mathoverflow.net/questions/366070/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle/366118#366118"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aei",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also today via Hacker News, I was pointed to Terry Tao talking about mathematical notation, which is of course a model for the underlying notions.  "
                            },
                            {
                                "type": "link",
                                "url": "https://mathoverflow.net/questions/366070/what-are-the-benefits-of-writing-vector-inner-products-as-langle-u-v-rangle/366118#366118"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "dc35db2d-9aed-4dfa-8f81-2730314aea93",
        "type": "message",
        "text": "&gt; What are your measures of success? To be programmable by techies or normals?\nDefinitely \"normal people\". Unusual folks like us can focus on developing the infrastructure that implements humane programming systems. Of course there's still going to be concepts that need to be learned and practiced for a person to develop competence.\n&gt; Is this going to be intuitive to everyone, if it's non-techies you're after?\nOnce learned from effective teaching materials, and with the aid of effective visualisations, yes, I hope it will be intuitive. I actually think I can map it to everyday representations like nested dot points and tables. But first I have to figure out the semantics I want.",
        "user": "UCGAK10LS",
        "ts": "1595509928.220000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595509945.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j8EkS",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are your measures of success? To be programmable by techies or normals?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Definitely \"normal people\". Unusual folks like us can focus on developing the infrastructure that implements humane programming systems. Of course there's still going to be concepts that need to be learned and practiced for a person to develop competence.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this going to be intuitive to everyone, if it's non-techies you're after?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Once learned from effective teaching materials, and with the aid of effective visualisations, yes, I hope it will be intuitive. I actually think I can map it to everyday representations like nested dot points and tables. But first I have to figure out the semantics I want."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "13d53eac-e989-4b04-b6f8-c081a8b3ffbe",
        "type": "message",
        "text": "<@UE6EFEPTQ>\n&gt; funny, can't think of an example of f(x,y) as a table\nThe data that people _store_ in a spreadsheet is usually tabular, but the spreadsheet _itself_, as a *graphical artifact*, is most certainly a function f(x,y) from row/column number to datum. Navigating a spreadsheet using a keyboard requires locating successor/predecessor cells within each axis. So a spreadsheet is perhaps better termed a *grid*, which one could argue is the generalization of a sequence to 2D.",
        "user": "UCGAK10LS",
        "ts": "1595510222.220300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1595510256.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/SFJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "funny, can't think of an example of f(x,y) as a table"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The data that people "
                            },
                            {
                                "type": "text",
                                "text": "store",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in a spreadsheet is usually tabular, but the spreadsheet "
                            },
                            {
                                "type": "text",
                                "text": "itself",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", as a "
                            },
                            {
                                "type": "text",
                                "text": "graphical artifact",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", is most certainly a function f(x,y) from row/column number to datum. Navigating a spreadsheet using a keyboard requires locating successor/predecessor cells within each axis. So a spreadsheet is perhaps better termed a "
                            },
                            {
                                "type": "text",
                                "text": "grid",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which one could argue is the generalization of a sequence to 2D."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "67feb4fe-2cad-449e-adfb-cee500de4f4c",
        "type": "message",
        "text": "&gt; why non-hierarchical? how does that help with traversal termination?\nThose are orthogonal, but the reason for eschewing hierarchy is to avoid a situation where a user specifies a data structure, and later realises that they can't express the query they want because the data is \"ordered\" in the wrong way. Then they change the structure or add a new one. Hierarchical data structuring always leads to this pain.",
        "user": "UCGAK10LS",
        "ts": "1595510415.220600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gTG",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "why non-hierarchical? how does that help with traversal termination?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Those are orthogonal, but the reason for eschewing hierarchy is to avoid a situation where a user specifies a data structure, and later realises that they can't express the query they want because the data is \"ordered\" in the wrong way. Then they change the structure or add a new one. Hierarchical data structuring always leads to this pain."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "CE92C8D4-36E9-49DC-BE54-8A573B85B1A4",
        "type": "message",
        "text": "Been thinking about this problem for the last year or so, and I\u2019ve ended up somewhere I didn\u2019t intend so this may not be an answer you\u2019ll like.\n\nI don\u2019t think there is any single representation that has all the desirable properties you\u2019re looking for, *but* not only do I think that\u2019s okay, I think we can do even better by moving up a level and instead look for a representation that can itself represent the more desirable representations. If we take a hypergraph or metagraph, we can use it to represent sets, lists, trees and acyclic graphs, etc, etc. And thus can embed structures with desirable properties if we accept a base representation that has few if any of the properties we would like.",
        "user": "U014WA16VNJ",
        "ts": "1595511569.228600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595511605.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fzr4G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Been thinking about this problem for the last year or so, and I\u2019ve ended up somewhere I didn\u2019t intend so this may not be an answer you\u2019ll like.\n\nI don\u2019t think there is any single representation that has all the desirable properties you\u2019re looking for, "
                            },
                            {
                                "type": "text",
                                "text": "but ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "not only do I think that\u2019s okay, I think we can do even better by moving up a level and instead look for a representation that can itself represent the more desirable representations. If we take a hypergraph or metagraph, we can use it to represent sets, lists, trees and acyclic graphs, etc, etc. And thus can embed structures with desirable properties if we accept a base representation that has few if any of the properties we would like."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "06bcb73a-3fdb-481d-b67b-45448e191872",
        "type": "message",
        "text": "We're gonna need some examples to chew on. :smile:",
        "user": "UE6EFEPTQ",
        "ts": "1595512211.229000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hX270",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We're gonna need some examples to chew on. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "87843085-0609-4824-AFA3-58363A5C4080",
        "type": "message",
        "text": "I\u2019ll pull out some references from my research library when I\u2019m home, but in the meantime I\u2019ll put a couple things forward. \n\nThere is a partial order to the generalisation of structures such that hypergraphs [1] are at the top, a subset of hypergraphs form a directed graph, a subset of directed graphs form an undirected graph, and this pattern follows down to trees, sets, lists, and so on.\n\nThere are many possible semantics for these structures and I\u2019ve yet to see much work here as most of it is towards proving certain properties of these structures. Category theory provides useful properties but certainly doesn\u2019t translate directly to nice semantics for an actual end-user system.\n\n\n1. This is not quite true, as metagraphs are more general though not yet well understood or defined. And also typed <https://rcor.me/papers/typed-graph-theory.pdf|graphs are more general than un-typed graphs>. (Sorry for all the Greek!)",
        "user": "U014WA16VNJ",
        "ts": "1595513403.240000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dafx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ll pull out some references from my research library when I\u2019m home, but in the meantime I\u2019ll put a couple things forward. \n\nThere is a partial order to the generalisation of structures such that hypergraphs [1] are at the top, a subset of hypergraphs form a directed graph, a subset of directed graphs form an undirected graph, and this pattern follows down to trees, sets, lists, and so on.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "There are many possible semantics for these structures and I\u2019ve yet to see much work here as most of it is towards proving certain properties of these structures. Category theory provides useful properties but certainly doesn\u2019t translate directly to nice semantics for an actual end-user system.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n\n1. This is not quite true, as metagraphs are more general though not yet well understood or defined. And also typed "
                            },
                            {
                                "type": "link",
                                "url": "https://rcor.me/papers/typed-graph-theory.pdf",
                                "text": "graphs are more general than un-typed graphs"
                            },
                            {
                                "type": "text",
                                "text": ". (Sorry for all the Greek!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "C550A1B0-1820-4C0A-B349-8ECB1A7CAE17",
        "type": "message",
        "text": "I\u2019d add that I\u2019m not proposing that this is the best way to interact with a system, and there are places where natural representations do not always fit in a machine-oriented way, such as functions, n-dimensional arrays, etc. But in these places there are natural representations that can be used in part to interact with them. I.e. representations of grammars for strings (not the data type, just ordered sets of symbols) along with logics, type systems, etc given an appropriate semantics and grammar.",
        "user": "U014WA16VNJ",
        "ts": "1595513674.245300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595513710.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "khQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019d add that I\u2019m not proposing that this is the best way to interact with a system, and there are places where natural representations do not always fit in a machine-oriented way, such as functions, n-dimensional arrays, etc. But in these places there are natural representations that can be used in part to interact with them. I.e. representations of grammars for strings (not the data type, just ordered sets of symbols) along with logics, type systems, etc given an appropriate semantics and grammar."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "2eab9bbd-b19f-41f3-b1ab-7613479453c5",
        "type": "message",
        "text": "<@U014WA16VNJ> Idk, I'm not really being sold on the hypergraph thing yet. I've never seen an information model based on manipulating graphs that feels \"good\" and \"intuitive\" for general-purpose applications, and if that's not your point, then I'm not sure what value you're proposing they have. Mathematical formalization takes a backseat to user experience in my world.\n\nAlso, I can actually model hypergraphs quite easily in the information model I briefly described above (labelled nested sets). I'm not sure why I'd want to, though.",
        "user": "UCGAK10LS",
        "ts": "1595519560.246300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7GHnz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " Idk, I'm not really being sold on the hypergraph thing yet. I've never seen an information model based on manipulating graphs that feels \"good\" and \"intuitive\" for general-purpose applications, and if that's not your point, then I'm not sure what value you're proposing they have. Mathematical formalization takes a backseat to user experience in my world.\n\nAlso, I can actually model hypergraphs quite easily in the information model I briefly described above (labelled nested sets). I'm not sure why I'd want to, though."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "5c023981-2de6-4243-ba3b-ed16f49c65ae",
        "type": "message",
        "text": "<@UCGAK10LS> he's saying that if you use hypergraphs as your canonical representation, all other structures are reduced to views and mutation rules over that hypergraph. This gets you the property that <@UA14TGLTC> was talking about that it is trivial to go from one representation to another. It also gives you the flexibility to create \"good\" and \"intuitive\" interfaces on top without changing the underlying model.",
        "user": "UEBG0NPDK",
        "ts": "1595521463.256700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1595521488.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qSyc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " he's saying that if you use hypergraphs as your canonical representation, all other structures are reduced to views and mutation rules over that hypergraph. This gets you the property that "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " was talking about that it is trivial to go from one representation to another. It also gives you the flexibility to create \"good\" and \"intuitive\" interfaces on top without changing the underlying model."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "64BD7DE1-CCC8-4304-885C-C296DFE6B418",
        "type": "message",
        "text": "<@UCGAK10LS> I agree, mathematical formalisations should take a backseat to user experience a lot of the time, and also agree manipulating graphs doesn\u2019t feel good for general purpose applications, at least not yet. My point (which by all means you can ignore!) is that it may be useful to build the information model at a slightly higher level than your planned use-case, which may help de-emphasise finding a perfect representation which you may wish to tweak later.\n\nI think there\u2019s lots of merit in sticking to your intuition and discovering the emergent properties of your system [1]\n\nI bring up these points mostly as exploratory, and to help support the idea of separating the model from the internal workings of computers or current computer systems.\n\n1. many great ideas happened this way, Unison for example discovered many great consequences only after deciding their basic principles of content-addressed immutable code.",
        "user": "U014WA16VNJ",
        "ts": "1595521567.258200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GRK2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I agree, mathematical formalisations should take a backseat to user experience a lot of the time, and also agree manipulating graphs doesn\u2019t feel good for general purpose applications, at least not yet. My point (which by all means you can ignore!) is that it may be useful to build the information model at a slightly higher level than your planned use-case, which may help de-emphasise finding a perfect representation which you may wish to tweak later.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "I think there\u2019s lots of merit in sticking to your intuition and discovering the emergent properties of your system [1]\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I bring up these points mostly as exploratory, and to help support the idea of separating the model from the internal workings of computers or current computer systems.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n1. many great ideas happened this way, Unison for example discovered many great consequences only after deciding their basic principles of content-addressed immutable code."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7D508A70-8006-4C49-9786-BCD0905052C8",
        "type": "message",
        "text": "<@UEBG0NPDK> yes that\u2019s exactly it, well put ",
        "user": "U014WA16VNJ",
        "ts": "1595521749.259800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595521833.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i2+sw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " yes that\u2019s exactly it, well put "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "272e9306-0473-443c-830a-270e4762cb9c",
        "type": "message",
        "text": "if your goal is to go after end users and also be truly general purpose, I think you'll likely end up on a hypergraph. People do not naturally think in strict structures, they think in very loose, just in time structure. As several people have said in here, that means you need to flow seamlessly between representations and allow for partial/incomplete ones to still be useful and to link to completely different views that color things in a bit more.",
        "user": "UEBG0NPDK",
        "ts": "1595522737.260600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1595527173.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kMJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if your goal is to go after end users and also be truly general purpose, I think you'll likely end up on a hypergraph. People do not naturally think in strict structures, they think in very loose, just in time structure. As several people have said in here, that means you need to flow seamlessly between representations and allow for partial/incomplete ones to still be useful and to link to completely different views that color things in a bit more."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "c2dc1386-f81b-4ad4-91d3-0a8c3af01ce9",
        "type": "message",
        "text": "This is what I've been thinking about for the last several years, and haven't gotten all that far. One of my goals is to provide an intermediate format for converting/proxying between systems speaking different languages (immediately commercially useful and helps overcome network effects). I think my most interesting idea at the moment is that data is a program (under a suitably restricted interpreter), that outputs itself, or parts of itself identified by an argument (e.g. treating a hash map as a function from keys to values). This also helps with one of my long-standing goals to ease mixing of manually and procedurally generated data.",
        "user": "U016VUZGUUQ",
        "ts": "1595522816.260900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iS+O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is what I've been thinking about for the last several years, and haven't gotten all that far. One of my goals is to provide an intermediate format for converting/proxying between systems speaking different languages (immediately commercially useful and helps overcome network effects). I think my most interesting idea at the moment is that data is a program (under a suitably restricted interpreter), that outputs itself, or parts of itself identified by an argument (e.g. treating a hash map as a function from keys to values). This also helps with one of my long-standing goals to ease mixing of manually and procedurally generated data."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6546d48b-6ffa-428a-a667-0edcd47ae24f",
        "type": "message",
        "text": "I thought about hypergraphs for a while, albeit when I was a lot younger and stupider, and my conclusion was that I'd rather go with a fundamental structure that makes it easy to implement hypergraphs. To me that looks more like a logic database or triple (tuple?) store.",
        "user": "U016VUZGUUQ",
        "ts": "1595523083.261300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MQfP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I thought about hypergraphs for a while, albeit when I was a lot younger and stupider, and my conclusion was that I'd rather go with a fundamental structure that makes it easy to implement hypergraphs. To me that looks more like a logic database or triple (tuple?) store."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "1FA77ECB-DAA5-4530-BE41-14E9F745B457",
        "type": "message",
        "text": "<@U016VUZGUUQ> that first goal of yours is one I\u2019ve been pursuing for a while for the exact same reasons! Have you made progress you\u2019d be willing to share?",
        "user": "U014WA16VNJ",
        "ts": "1595523188.262600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595523437.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P60My",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " that first goal of yours is one I\u2019ve been pursuing for a while for the exact same reasons! Have you made progress you\u2019d be willing to share?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6a430586-0534-4a38-a072-877e1a2bb2b8",
        "type": "message",
        "text": "<@U014WA16VNJ> haha, not really. I've spent the last several years building up ideas and tearing them down when I realize they're not general enough. I am confident at this point that the data store needs to be an active participant to support things like API translation proxies, and that solving the problem of Naming Things is important (tracking identities referenced in different ways in different representations). Ask me again in a year. :D \n\nHave you already read the Functorial Data Migration peoole's work?",
        "user": "U016VUZGUUQ",
        "ts": "1595524234.262900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xjR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " haha, not really. I've spent the last several years building up ideas and tearing them down when I realize they're not general enough. I am confident at this point that the data store needs to be an active participant to support things like API translation proxies, and that solving the problem of Naming Things is important (tracking identities referenced in different ways in different representations). Ask me again in a year. :D \n\nHave you already read the Functorial Data Migration peoole's work?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "type": "message",
        "text": "This week on code faster, 2 good and one weird. Good #1 pullrequest, a company I occasionally review code for on a part time basis synidcated one of my posts! Good #2, Gradient Ventures (Google's VC arm) retweeted their syndication! Weird: I tried writing a more captivating title, \"jq features considered harmful\", but it didn't feel right after launch. I tried a few more and eventually felt happy with \"Avoid these 6 jq features\". Still looking for good resources on how to write a good title if anybody has suggestions",
        "user": "UL5AX4G2H",
        "ts": "1595528501.266600",
        "team": "T5TCAFTA9",
        "thread_ts": "1595528501.266600",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1595573579.300500",
        "reply_users": [
            "UC2A2ARPT",
            "U013KEPEJ2H",
            "UL5AX4G2H"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "FDE141D1-D348-4B47-82C4-52E33A51442C",
        "type": "message",
        "text": "<@U016VUZGUUQ> I hadn\u2019t but will check it out, it looks compelling. I\u2019m assuming <https://arxiv.org/abs/1009.1166|this> is the work you\u2019re referring to?",
        "user": "U014WA16VNJ",
        "ts": "1595529545.267500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595529598.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "56E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " I hadn\u2019t but will check it out, it looks compelling. I\u2019m assuming "
                            },
                            {
                                "type": "link",
                                "url": "https://arxiv.org/abs/1009.1166",
                                "text": "this"
                            },
                            {
                                "type": "text",
                                "text": " is the work you\u2019re referring to?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "1eeda2c3-d4c9-4e86-9821-63c1ad69249d",
        "type": "message",
        "text": "You should add a link to your post!",
        "user": "UC2A2ARPT",
        "ts": "1595529702.267800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xq8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You should add a link to your post!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595528501.266600",
        "parent_user_id": "UL5AX4G2H",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UP28ETUSE",
                    "U014WA16VNJ",
                    "UCUSW7WVD",
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "aa392b45-243f-45cc-a1ae-2b786d158229",
        "type": "message",
        "text": "<@U014WA16VNJ> yep. I think they've built a company on their ideas, too. IIRC they still had to do some weird hacks that made me think it needed more work to be nice to work with in the real world, but definitely interesting. I need to read them more closely at some point.",
        "user": "U016VUZGUUQ",
        "ts": "1595530330.268000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I4x0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": " yep. I think they've built a company on their ideas, too. IIRC they still had to do some weird hacks that made me think it needed more work to be nice to work with in the real world, but definitely interesting. I need to read them more closely at some point."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "8568761a-ae44-40ee-a8be-ea8446239bb5",
        "type": "message",
        "text": "<@UC6997THT>\n&gt; I want to say all the parts are not there.\nRemember, this is \"Future of Code\", not \"Today of Code\".\n\nYou are giving more examples of finished products that are not all there.\nThese are good examples of what is not working right now, but none of these examples show any fundamental missing pieces for why a new flash like platform can't work.\n\nFrom a distribution perspective, I think all the technological pieces are there. Even before web assembly, I think the parts where there.\n\nThe death of flash is one of the big reasons web browsers started to grow the necessary features to replace flash(for better or worse). Web assembly might be the final piece, because it allows a single binary blob to be easily embedded and run. We just need to get better at compression (which is actively being worked on.)\n\n<@UC6997THT> My question for you is, if you think all the pieces are not there. What pieces do you think are missing? Not which product is missing, we wouldn't be having this discussion if a finished product already existed, but which technological or social pieces are missing?",
        "user": "U01661S9F34",
        "ts": "1595531028.268400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gfZqy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to say all the parts are not there."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Remember, this is \"Future of Code\", not \"Today of Code\".\n\nYou are giving more examples of finished products that are not all there.\nThese are good examples of what is not working right now, but none of these examples show any fundamental missing pieces for why a new flash like platform can't work.\n\nFrom a distribution perspective, I think all the technological pieces are there. Even before web assembly, I think the parts where there.\n\nThe death of flash is one of the big reasons web browsers started to grow the necessary features to replace flash(for better or worse). Web assembly might be the final piece, because it allows a single binary blob to be easily embedded and run. We just need to get better at compression (which is actively being worked on.)\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": " My question for you is, if you think all the pieces are not there. What pieces do you think are missing? Not which product is missing, we wouldn't be having this discussion if a finished product already existed, but which technological or social pieces are missing?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "4c9c5c31-1bdf-4e39-9935-b08057e69729",
        "type": "message",
        "text": "I was thinking about this, and while it's very different in a lot of ways, I think the <https://www.lexaloffle.com/pico-8.php|Pico-8> community has succeeded with a similar spirit to the old Flash games communities, even if it is a bit more niche and smaller scale.",
        "user": "U01661S9F34",
        "ts": "1595531329.268700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "title": "PICO-8 Fantasy Console",
                "title_link": "https://www.lexaloffle.com/pico-8.php",
                "text": "PICO-8 is a fantasy console for making, sharing and playing tiny games and other computer programs.",
                "fallback": "PICO-8 Fantasy Console",
                "image_url": "https://www.lexaloffle.com/gfx/p8tv_preview_orul.png",
                "from_url": "https://www.lexaloffle.com/pico-8.php",
                "image_width": 579,
                "image_height": 250,
                "image_bytes": 337177,
                "service_icon": "https://www.lexaloffle.com/favicon.ico",
                "service_name": "lexaloffle.com",
                "id": 1,
                "original_url": "https://www.lexaloffle.com/pico-8.php"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5VQL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was thinking about this, and while it's very different in a lot of ways, I think the "
                            },
                            {
                                "type": "link",
                                "url": "https://www.lexaloffle.com/pico-8.php",
                                "text": "Pico-8"
                            },
                            {
                                "type": "text",
                                "text": " community has succeeded with a similar spirit to the old Flash games communities, even if it is a bit more niche and smaller scale."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595442804.152100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "d4d2e5d3-23c8-4114-9582-f8fc67d1c126",
        "type": "message",
        "text": "Oh, thanks to you guys I now know that what I was doing is a hypegraph :smile: IIRC my hypergraphy was basically a  store of mostly maps of &lt;ID, Value&gt; and &lt;Type/Dimension/GraphID, &lt;ID, NodeData&gt;&gt; . Guess I was calling it wrong the whole time :thinking_face:",
        "user": "UNBPP291C",
        "ts": "1595532317.269000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hek4r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, thanks to you guys I now know that what I was doing is a hypegraph "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": " IIRC my hypergraphy was basically a  store of mostly maps of <ID, Value> and <Type/Dimension/GraphID, <ID, NodeData>> . Guess I was calling it wrong the whole time "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "d4e0c32e-48e8-48ee-acc0-670eb4656635",
        "type": "message",
        "text": "I had to look up hypergraph, but I'm still confused about why it's not just the same modelling approach as .. JSON?",
        "user": "UE6EFEPTQ",
        "ts": "1595532911.269200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "teqAw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had to look up hypergraph, but I'm still confused about why it's not just the same modelling approach as .. JSON?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "c4fae4b9-6c7f-48a4-8cf5-b99046960a3d",
        "type": "message",
        "text": "Or really just relations.",
        "user": "UE6EFEPTQ",
        "ts": "1595532933.269400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lEQkA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or really just relations."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "41E4710B-2A7F-4260-AB29-159B35BE3163",
        "type": "message",
        "text": "<@UE6EFEPTQ> Relational models impose some more strict structure over your data in the form of tables. In graphs and hypergraphs the vertices/nodes and edges/lines are first class citizens. ",
        "user": "U014WA16VNJ",
        "ts": "1595534162.273000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1595534650.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B+PUA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " Relational models impose some more strict structure over your data in the form of tables. In graphs and hypergraphs the vertices/nodes and edges/lines are first class citizens. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "0ab699db-e09a-4081-a096-22ba96f57e1c",
        "type": "message",
        "text": "relations in 6th normal form are a good practical representation for hypergraphs",
        "user": "UEBG0NPDK",
        "ts": "1595534317.273500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R4R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "relations in 6th normal form are a good practical representation for hypergraphs"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595489301.204200",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U014WA16VNJ",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "41893153-615a-4fbe-b5df-23a0032e9038",
        "type": "message",
        "text": "Yeah I mean, there is a value esp. in the physical events. And I don't want to discount the individual moral calculus people are making in their heads when they decide to participate, which I think is often quite sophisticated, and perhaps a lot of what I wrote is more of a reaction to my own past naivety toward these events(and I think, there is some unnecessary paternalism in my original post I should reflect on...).\n\nMy intuition is that the computing community in general would be healthier tho if there was a bigger focus on community-driven jams than corporate hackathons, but I need to do more research and thinking to substantiate this.",
        "user": "UMWF81HTP",
        "ts": "1595535815.274100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XseNs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I mean, there is a value esp. in the physical events. And I don't want to discount the individual moral calculus people are making in their heads when they decide to participate, which I think is often quite sophisticated, and perhaps a lot of what I wrote is more of a reaction to my own past naivety toward these events(and I think, there is some unnecessary paternalism in my original post I should reflect on...).\n\nMy intuition is that the computing community in general would be healthier tho if there was a bigger focus on community-driven jams than corporate hackathons, but I need to do more research and thinking to substantiate this."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "cc61175f-00ca-495e-a298-02152c135a0b",
        "type": "message",
        "text": "So what about a Future of Coding jam driven by the community and sponsored by... Replit? :smile:",
        "user": "UJ6LDMMN0",
        "ts": "1595538403.275000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CC6k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So what about a Future of Coding jam driven by the community and sponsored by... Replit? "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D"
    },
    {
        "client_msg_id": "626bcb65-886b-41a8-879c-72ee91103e45",
        "type": "message",
        "text": "More seriously, there is something interesting in the Replit announce:\n&gt; If languages are mediums of thought, and there are more and more people interested in expressing themselves digitally, shouldn't we expect to see many more types of languages?\nand later:\n&gt; Programming languages are undoubtedly hard to make. They require a combination of design skills and technical chops. But for some reason, language designers are typically solo hackers. But what if we made programming languages easier to make? If we showed that it is possible for anyone, even those with limited experience, perhaps especially beginners, can create and experiment with languages? Wouldn\u2019t we get a lot more exciting and fresh ideas?\nIt is true that few people try to create language. And I guess it would be good it was different. As an example, I thought about trying to actually do it myself after years of programming. I guess I felt unlegitimate to do so before.\n\nBut, of course now I see it can be fun (and that you can even learn thing from it). In fact during workshops with kids sometime we start approaching programming by asking them to create programming languages: one kid plays the role of a robot that has to move on a landscape and an other kid writes down some \"formal instructions\" of her invention on a paper, and the robot-kid follows the instructions to reach a particular place of the landscape.\n\nSo I agree with Replit that it would be nice if creating languages was easier and more widespread.",
        "user": "UJ6LDMMN0",
        "ts": "1595539274.275300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YxP/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More seriously, there is something interesting in the Replit announce:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If languages are mediums of thought, and there are more and more people interested in expressing themselves digitally, shouldn't we expect to see many more types of languages?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and later:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Programming languages are undoubtedly hard to make. They require a combination of design skills and technical chops. But for some reason, language designers are typically solo hackers. But what if we made programming languages easier to make? If we showed that it is possible for anyone, even those with limited experience, perhaps especially beginners, can create and experiment with languages? Wouldn\u2019t we get a lot more exciting and fresh ideas?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is true that few people try to create language. And I guess it would be good it was different. As an example, I thought about trying to actually do it myself after years of programming. I guess I felt unlegitimate to do so before.\n\nBut, of course now I see it can be fun (and that you can even learn thing from it). In fact during workshops with kids sometime we start approaching programming by asking them to create programming languages: one kid plays the role of a robot that has to move on a landscape and an other kid writes down some \"formal instructions\" of her invention on a paper, and the robot-kid follows the instructions to reach a particular place of the landscape.\n\nSo I agree with Replit that it would be nice if creating languages was easier and more widespread."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1595355834.085400",
        "parent_user_id": "UKP3B2J5D"
    }
]