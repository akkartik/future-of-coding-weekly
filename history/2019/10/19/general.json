[
    {
        "client_msg_id": "96bfc2fe-ee2e-4fdd-ac3a-f16205343adf",
        "type": "message",
        "text": "<@UMXUZ97LJ> Oh yes! There is a lot you could want from a history system, some notes:\n- undo/data + actions history tree\n      - separate \"channels\" (eg. UI, document data, analytics data) // eg. undoing should sometimes undo document data change, but not UI, sometimes both, etc\n      - nested grouping (eg. \"drawing a line\" is (\"pen down\", \"pen move\", \"pen up\"))\n        - possible to undo full \"draw square\", or just undo last \"side\", or even just last \"pen up\" and \"pen move\".\n      - reverse-reverse to allow reverse of one specific action after other actions performed (eg. not \"undo last delete\", nor \"undo delete of XXX when it happened\", but \"undo delete of XXX now\")\n        - all three variants should be possible?\n        - in extension, this \"history tree\" could be shared across clients, and thus form a basis for both the collab and version control functionality, as well as time-travel debugging and full replay (as in Edwards system above)",
        "user": "UNCP67JSK",
        "ts": "1571436615.030600",
        "team": "T5TCAFTA9",
        "thread_ts": "1571417532.010400",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "ae579f72-54e5-4d1e-bcd3-892d8261b243",
        "type": "message",
        "text": "I'm not sure you'd want to emulate it, but vim has a very interesting undo/redo model. <https://vim.fandom.com/wiki/Using_undo_branches>",
        "user": "UP448V1PB",
        "ts": "1571438362.030800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Vim Tips Wiki",
                "title": "Using undo branches | Vim Tips Wiki | FANDOM powered by Wikia",
                "title_link": "https://vim.fandom.com/wiki/Using_undo_branches",
                "text": "Vim supports standard undo and redo, and also supports undo branches which allow you to undo some changes, then make a new change, while keeping all changes available in the undo tree. Vim makes...",
                "fallback": "Vim Tips Wiki: Using undo branches | Vim Tips Wiki | FANDOM powered by Wikia",
                "thumb_url": "https://vignette.wikia.nocookie.net/vim/images/c/ce/Mundo.png/revision/latest/scale-to-width-down/2000?cb=20171026032804",
                "from_url": "https://vim.fandom.com/wiki/Using_undo_branches",
                "thumb_width": 2000,
                "thumb_height": 1541,
                "service_icon": "https://vignette.wikia.nocookie.net/vim/images/b/bc/Wiki.png/revision/latest?cb=20070515145358",
                "id": 1,
                "original_url": "https://vim.fandom.com/wiki/Using_undo_branches"
            }
        ],
        "thread_ts": "1571417532.010400",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "862eb03a-8c75-478d-beba-035c8d9b0865",
        "type": "message",
        "text": "<https://scattered-thoughts.net/writing/imp-simple-interpreter/>",
        "user": "U71PMQ1V0",
        "ts": "1571442437.031100",
        "team": "T5TCAFTA9",
        "thread_ts": "1569866970.116800",
        "parent_user_id": "U71PMQ1V0"
    },
    {
        "type": "message",
        "text": "makes sense lol",
        "files": [
            {
                "id": "FPKBLUJ13",
                "created": 1571445012,
                "timestamp": 1571445012,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "UHWC9PXBL",
                "editable": false,
                "size": 31556,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-FPKBLUJ13/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-FPKBLUJ13/download/image_from_ios.jpg",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 82,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 109,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_720.jpg",
                "thumb_720_w": 720,
                "thumb_720_h": 163,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 181,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_960.jpg",
                "thumb_960_w": 960,
                "thumb_960_h": 218,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-FPKBLUJ13-f7ffa3f0a2/image_from_ios_1024.jpg",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 232,
                "image_exif_rotation": 1,
                "original_w": 1125,
                "original_h": 255,
                "thumb_tiny": "AwAKADDSb7p6/hUeOwdvyqQ9KbgY6CgBwYe/5Ubh7/lTCBnoKTA9KAJNw9/yoBB9fypCBjoKVelAH//Z",
                "permalink": "https://futureofcoding.slack.com/files/UHWC9PXBL/FPKBLUJ13/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-FPKBLUJ13-07f59a98ba",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "ts": "1571445012.031600",
        "client_msg_id": "6241291E-18E7-4AED-8696-F6A55CBB1B63",
        "thread_ts": "1571417114.009100",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "09e995f2-d59e-4dc0-bd81-c6d899b6882d",
        "type": "message",
        "text": "Yes, that's a good way to think about it. Full vs incremental backups.\n Mostly because we can know in advance which versions people will overwhelmingly want to look at.",
        "user": "UCUSW7WVD",
        "ts": "1571446837.032000",
        "team": "T5TCAFTA9",
        "thread_ts": "1571337283.472300",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "e2bdf968-488d-4ff1-b8ad-2eddef522f8e",
        "type": "message",
        "text": "It would be SUPER helpful to just click someone's name and have a quick view of what they're about",
        "user": "UAVCC2X70",
        "ts": "1571447451.032300",
        "team": "T5TCAFTA9",
        "thread_ts": "1570433686.396200",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "1dc10e9b-bedc-40e3-8bc9-4dd1f090cb2b",
        "type": "message",
        "text": "Having the ability/freedom to easily change or control everything, is not the same thing as when and what you change, or how well organized /designed your software is (code, architecture, etc.).\n\nIt's ironic that the most malleable and powerful building material in existence, is also so needlessly locked down in practice.\n\nSoftware libraries are a great example: Yes, it's insane to expect to invent everything from scratch every time. But the ability to be in compete control of those decisions, and roll your own when needed/best, is invaluable.\n\nGood software design demands both high expressibility, and the discipline / skills to express something coherent and sensible.",
        "user": "UAVCC2X70",
        "ts": "1571452398.033100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1571452889.000000"
        },
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJKKBAMLL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "017c41bf-546b-459c-be91-16cc93ccc56c",
        "type": "message",
        "text": "If Bjarke Ingels can LITERALLY shape the physical built world (architecture) to the needs &amp; well-being of the people and environment in and around it, then we sure as heck can do the same with software:\n\n<https://youtu.be/u5pjep4whtk>\n\nConsider the incredible flexibility he's brought into design, and yet his buildings as are solid and stable as any other -- but more profound &amp; meaningful than would be possible otherwise",
        "user": "UAVCC2X70",
        "ts": "1571454759.033800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1571455950.000000"
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Bjarke Ingels on the expanded role of the architect",
                "title_link": "https://youtu.be/u5pjep4WHTk",
                "author_name": "Design Indaba",
                "author_link": "https://www.youtube.com/user/DesignIndaba",
                "thumb_url": "https://i.ytimg.com/vi/u5pjep4WHTk/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Bjarke Ingels on the expanded role of the architect",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/u5pjep4WHTk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/u5pjep4WHTk",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/u5pjep4WHTk"
            }
        ],
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "5C406F00-FCD1-4146-BB58-926FEF2BFF7E",
        "type": "message",
        "text": "I've been meaning to write one, but [homesteading]. Dan, you should do it and put it in your slack profile!",
        "user": "UC2A2ARPT",
        "ts": "1571462435.035900",
        "team": "T5TCAFTA9",
        "thread_ts": "1570433686.396200",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "6f847253-5725-46e6-806d-c9f5a13fd7a0",
        "type": "message",
        "text": "I just do a simple history[] stack of diffs and then \"undo\" just iterates through the stack applying each diff stopping at the desired step...Then you just need to call \"save()\" after each change operation and append to that stack",
        "user": "UMVFWPZ36",
        "ts": "1571465760.036100",
        "team": "T5TCAFTA9",
        "thread_ts": "1571417532.010400",
        "parent_user_id": "UFB8STN7K"
    },
    {
        "client_msg_id": "d8b6dbf4-aec2-414d-a094-866a11170f02",
        "type": "message",
        "text": "<@UAVCC2X70> Inspiring :thumbsup: I think both you and <@UEQ6M68H0> are correct IMO it the approach that\u2019s wrong. Here is my take on *cloud development only*. --\nReplacing bottom-up (like Ballerina, Darklang, LunaCode, Bloomlang, and nearly thing else I\u2019ve seen) has one fatal flaw: replacing and unlearning. I believe a long-term, top-down approach would solve both your arguments. I believe if we, the industry, builds products that don\u2019s replace but abstract we can change the origin of development (which I believe is mostly middle stack today). Once you add a new top of the stack then the middle and bottom are easier to replace because you can do it with no one knowing.",
        "user": "UJKKBAMLL",
        "ts": "1571468345.036700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1571468794.000000"
        },
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "79e617a9-4de5-4808-ae1f-9e25ed5e61a3",
        "type": "message",
        "text": "That seems pretty totalizing, which is ironic given where this thread began :stuck_out_tongue:",
        "user": "UCUSW7WVD",
        "ts": "1571468679.037000",
        "team": "T5TCAFTA9",
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "4498256d-dce9-4385-ac60-f1d27d0170e5",
        "type": "message",
        "text": "<@UCUSW7WVD> Should have made `cloud development only` more bold. The scope of my statement is specific to the cloud.",
        "user": "UJKKBAMLL",
        "ts": "1571468784.037200",
        "team": "T5TCAFTA9",
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "50dd1109-f6c9-41c3-ba67-1e0808a8be7d",
        "type": "message",
        "text": "Even so, aren't you assuming a single product will take over the entire cloud development industry? Things don't ever seem that clean to me.",
        "user": "UCUSW7WVD",
        "ts": "1571468957.037500",
        "team": "T5TCAFTA9",
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "8d8ef013-9a46-46a1-9109-be576bd2fdec",
        "type": "message",
        "text": "Not totally taken over, but Docker and Kubernetes have done quite well already.",
        "user": "UJKKBAMLL",
        "ts": "1571469022.037700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1571469029.000000"
        },
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "d64e2b45-069b-4bc4-ba02-a6349c41fe37",
        "type": "message",
        "text": "IMO we can\u2019t replace the middle without moving to the top first.",
        "user": "UJKKBAMLL",
        "ts": "1571469050.038000",
        "team": "T5TCAFTA9",
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "35f511f6-92f5-490d-a060-646f870f56df",
        "type": "message",
        "text": "There are efforts to commoditized infra already. Take Crossplane at <http://Upbound.io|Upbound.io> for example.",
        "user": "UJKKBAMLL",
        "ts": "1571469151.038200",
        "team": "T5TCAFTA9",
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "1d7ba26e-7610-4611-b0f9-d83b87565ea2",
        "type": "message",
        "text": "And just to clear: I don\u2019t think a \u201csingle product\u201d will \u201ctake over\u201d\u2026 but there will be another big change. As big as the introduction of AWS (the birth of the \u201cCloud\u201d). Maybe it will take another 10-20 years\u2026. but remain confident that what we use today will change drastically in my lifetime.",
        "user": "UJKKBAMLL",
        "ts": "1571469329.038400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1571469379.000000"
        },
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "46c6456d-9189-4b88-8997-c9ccec01733e",
        "type": "message",
        "text": "Change, sure.\n\n&gt; IMO we can\u2019t replace the middle without moving to the top first.\n\nI disagree, but that's mostly a subjective matter. I guess we'll see in 20 years which approach dominates, if indeed it's one of these.\n\nBut it seems more objectively clear to me that you're only seeing a subset of the cloud development industry if you think Kubernetes is taking over. Any significant players who started out on other stacks will take years to migrate over, and by the time they do you'll have something else that seems like the 'top'. And then you'll have multiple tops as the industry fragments. In other words, it'll be like pretty much every segment of development in the last 30 years. If cloud development seems relatively homogeneous, it's just because it's only 5 years old. Give it time, it'll be the tower of Babel all over again.",
        "user": "UCUSW7WVD",
        "ts": "1571469442.038700",
        "team": "T5TCAFTA9",
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "2e780e22-d34d-40ed-b80f-c50016b196ca",
        "type": "message",
        "text": "Sorry, Kubernetes is 5 years old. Cloud is a little older, but still relatively young.",
        "user": "UCUSW7WVD",
        "ts": "1571469592.038900",
        "team": "T5TCAFTA9",
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "55a50382-56cb-49e8-b973-31854e7a84e0",
        "type": "message",
        "text": "True that :wink:  RE `seeing a subset of the cloud development industry if you think Kubernetes is taking over.` my statement of Docker &amp; K8S was simply an example of monumental change. By no means am I suggesting there is a one-size fits all product/solution of the cloud. I\u2019m just saying there will be (and already are) abstractions that *will* change the landscape.",
        "user": "UJKKBAMLL",
        "ts": "1571469748.039100",
        "team": "T5TCAFTA9",
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "6274a0c4-f55c-42d4-8082-541e5152a885",
        "type": "message",
        "text": "Hi guys! Let me ask you about an issue I have for a long time.\n\nThe problem is that many times in \u201cstandard mainstream\u201d languages a business term in the business logic is duplicated in different names and even IDEs can\u2019t relate the dups, I have to rely on Good ol\u2019 Search &amp; Replace and/or regex - which does not help much really.\n\nWhat I\u2019d like to see if I\u2019d be able to assemble function names just as other piece of data in my program. I am wondering if that feature already exist somewhere (I\u2019d suspect it\u2019s in LISP if anywhere).\n\nExample:\nInstead having `setA(A a), setB(B b), setC(C c)`\nor `(setA a), (setB b), (setC c)` as different functions,\nI\u2019d like to have `([set A] a), ([set B] b),([set C] c)`.\n\nSo next time when I want to refactor/rename `A`, or even `set` to something else, I\u2019d be able to do that easily.\n\nThe reason I got there is that I am really into Refactoring and my belief is the easiest Refactoring method is(/must be) Renaming so its a shame not being able to Rename stuff in 0.1 sec. (just changing the characters, not even addressing the change in meaning!) Without easy, secure renaming (lol) my productivity can\u2019t even start.",
        "user": "UL3CJ7YKC",
        "ts": "1571489526.050200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1571489536.000000"
        },
        "thread_ts": "1571489526.050200",
        "reply_count": 33,
        "reply_users_count": 8,
        "latest_reply": "1571673624.121500",
        "reply_users": [
            "UL3CJ7YKC",
            "UNCP67JSK",
            "UAVCC2X70",
            "UHWC9PXBL",
            "UMVFWPZ36",
            "U8A5MS6R1",
            "UCKRZS3DZ",
            "UBRKVHMCL"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "880446ab-cb81-40d1-82a3-db5618305171",
        "type": "message",
        "text": "Please tell me it\u2019s just a macro and can be done in Clojure! :smile: And the real question how to hack it onto Typescript not to ruin other IDE features :smile: <@UDKTZSD6H> <@U8A5MS6R1>",
        "user": "UL3CJ7YKC",
        "ts": "1571490385.050400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1571490722.000000"
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "76cc2eb7-58ad-4568-8f6e-79c5b62e186e",
        "type": "message",
        "text": "Same! The concept I'm been thinking about is that all entities are identified by id under the hood, such that a rename really is just one rename, not a hundred changes.\n\nFurthermore, you may add \"aliases\" to entities (eg. `put book in bookshelf` might be nicer (as in help you solve your problem faster, in some cases) than `add object to container`). Then, you may switch between jargon and abstraction in the view layer as you go.\n\nIdentifiers should strive to be non-entangled, eg. `setTemperature termostat 15deg` could instead be `set temperature of termostat to 15deg`. If we then also have `set volume of speaker to 20db`, the `set` identifier could be (auto) linked as the same \"action type\", and thus renamed to, eg. \"adjust\" (or only rename when used with a temperature (then, \"adjust\" will become an alias to \"set\" with a specific association to \"temperature\")).",
        "user": "UNCP67JSK",
        "ts": "1571491344.050700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UNCP67JSK",
            "ts": "1571491451.000000"
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6d0275b3-2ab0-48a2-a456-5be4003b743c",
        "type": "message",
        "text": "Yep! I have some further ideas myself, but the main question is first: what is available today and what/how?",
        "user": "UL3CJ7YKC",
        "ts": "1571493834.051200",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "80234088-c612-457a-90d2-88047b705dbd",
        "type": "message",
        "text": "Go find Simonyi's work in the Intentional Domain Workbench.",
        "user": "UAVCC2X70",
        "ts": "1571500171.051700",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "0ab395a9-18bb-4647-885b-d44df39cc237",
        "type": "message",
        "text": "<https://youtu.be/4pT9tDmxjlg>",
        "user": "UAVCC2X70",
        "ts": "1571500224.051900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Charles Simonyi Keynote at MODELS 2013 Conference",
                "title_link": "https://youtu.be/4pT9tDmxjlg",
                "author_name": "Intentional Software",
                "author_link": "https://www.youtube.com/channel/UCiKxfTe5Alext8894DQgN_Q",
                "thumb_url": "https://i.ytimg.com/vi/4pT9tDmxjlg/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Charles Simonyi Keynote at MODELS 2013 Conference",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/4pT9tDmxjlg?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/4pT9tDmxjlg",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/4pT9tDmxjlg"
            }
        ],
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UN7BQ1VQU"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9A23F2CE-6D39-4B42-84A3-865E30ECC422",
        "type": "message",
        "text": "incidentally, Charles Simonyi might be interested in funding FoC <@U5TCAFTD3> ",
        "user": "UHWC9PXBL",
        "ts": "1571502768.053700",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "7f6843c8-e73a-4269-b892-0375c2ac0bc9",
        "type": "message",
        "text": "<@UAVCC2X70> I\u2019ve already checked it earlier, but it seemed too vague to me. What parts do you think relate the most?",
        "user": "UL3CJ7YKC",
        "ts": "1571504470.054000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1571504498.000000"
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "5d1a8015-f443-47b1-83ed-fc5c514d7b3b",
        "type": "message",
        "text": "I think it basically amounted to storing code as a reified structure, and referencing entities by I'd (GUID) rather than by name. Things still have names, but they are stored with the entity. So the names can change, but the IDs (and this the references to things) do not. So something like renaming becomes trivial.\n\nEven though the literal structure of code contains IDs, some editor would actually show you the names",
        "user": "UAVCC2X70",
        "ts": "1571505491.054600",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "3bf301c7-9053-47bf-8baf-83c0a2972308",
        "type": "message",
        "text": "Yeah, something like that. Are you aware of something like that implemented in VSCode / Jetbrains world?",
        "user": "UL3CJ7YKC",
        "ts": "1571508070.054800",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "720837af-7529-424b-a1f6-39a0f89e57bf",
        "type": "message",
        "text": "My work on Tree Notation is attempting to solve this sort of problem. In Tree Languages, everything is \"clean data\". Every character is meaningful, and every word has types. Parsing is very easy (there are no parens or quotes or semicolons, etc). The end result is in the future, due to the reduction in tooling cost, it will be very easy to do all sorts of project-wise refactors through a variety of strategies more intelligent than Regex Search/Replaces or simply \"Intelligent Renames\". You should be able to do queries like \"rename all 'A' item cell Types to 'X'\" or \"rename all 'set' method cellTypes to 'setFoo' \"",
        "user": "UMVFWPZ36",
        "ts": "1571508090.055000",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a484ee47-ed77-4d17-8976-378aa5baecab",
        "type": "message",
        "text": "<@UMVFWPZ36> Yeah, I really like the query part, thought about the same.\n\nCan you give a pointer to your work? And can you maybe give me an insight why these things are not widespread yet?\n\nWhat prevents Jetbrains / Microsoft to use such tech? Is it the near future?",
        "user": "UL3CJ7YKC",
        "ts": "1571508266.055300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1571508314.000000"
        },
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "def8b5da-b6ca-4e52-919d-f6cd688c1a93",
        "type": "message",
        "text": "I think everyone has a valid view about problems with software, although our concerns and focus may be different.\n\nThere is lot of noise and excitement in the industry and things that really are not making anything better -- or at least, if taken as a replacement or solution or cover-up of real problems, just adds more mess without fixing those problems.\n\nSo for example, the debate between flexibile or concrete, functional or imperative, static or dynamic, ... It's not meaningful in the large! A wrench is not a good hammer! Screws are not \"better\" than nails!\n\nSo Edward's response of X (as *opposed* to Y) being a mistake, is valid. And he's not mistaken that that's largely how the software works thinks. But ultimately the future is in finding the right synergy/applicability of both X and Y, for any X and Y.\n\n(C.A. demonstrates this well in Notes On The Synthesis Of Form)",
        "user": "UAVCC2X70",
        "ts": "1571508430.055700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1571509217.000000"
        },
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "9e64e7c1-9ef1-459a-87d2-5f514e250fb6",
        "type": "message",
        "text": "Here are some demo languages: <https://jtree.treenotation.org/designer/> here is more info: <https://treenotation.org/>",
        "user": "UMVFWPZ36",
        "ts": "1571509474.056300",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "732b96cf-5950-429b-bedd-6793aa5eef0a",
        "type": "message",
        "text": "&gt; And can you maybe give me an insight why these things are not widespread yet?\n\n1. It was not theoretically obvious that visible syntax characters are not necessary. 2. Tree Languages are only substantially better than BNF languages when you have tools that leverage the advantages of Tree Languages. BNF Languages + BNF Languages Tools &gt; Tree Languages.  From what I've seen so far Tree Languages + Tree Languages Tools &gt; BNF Languages + BNF Languages Tools",
        "user": "UMVFWPZ36",
        "ts": "1571509631.056500",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "71c01af8-96cb-4500-9734-14fa1a467bd2",
        "type": "message",
        "text": "3. What prevents Jetbrains / Microsoft to use such tech? Nothing, but the usage numbers are still very small (in the thousands of weekly actives currently)",
        "user": "UMVFWPZ36",
        "ts": "1571509680.056700",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "b783f546-02d7-4969-8c52-58625446e869",
        "type": "message",
        "text": "4. Is it the near future? I think so, once a killer app takes off",
        "user": "UMVFWPZ36",
        "ts": "1571509696.056900",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "f9213358-4ca7-4f0b-9498-bb772c54d9cb",
        "type": "message",
        "text": "I'm very eager to launch Ohayo 14, which is the first fully open source advanced app that utilizes Tree Languages",
        "user": "UMVFWPZ36",
        "ts": "1571509725.057100",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "d70f1ea2-7101-4a70-b4d2-eeeaadc9a4a9",
        "type": "message",
        "text": "should be any day now",
        "user": "UMVFWPZ36",
        "ts": "1571509730.057300",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "56fdb9d1-db30-48ef-94b7-0ffef1c6f6ef",
        "type": "message",
        "text": "perhaps someone else will end up creating a killer app that leverages Tree Notation (or another spatial notation\u2014I have to admit for the possibility that I've made some key mistakes in TN)",
        "user": "UMVFWPZ36",
        "ts": "1571509767.057500",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "26740f56-2fef-43d2-8c28-fe0949cb6e18",
        "type": "message",
        "text": "but if not someone else, we should have a couple going by 2020",
        "user": "UMVFWPZ36",
        "ts": "1571509787.057700",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "917de7be-e5e9-4aef-848e-8361471fddcd",
        "type": "message",
        "text": "For example, I think what Dark (and similar projects) are after is DEFINITELY an ideal way to go! But as a *pattern* of development, rather than a prepackaged untouchable solution.\n\nI believe the future / full potential power of software cannot be prepackaged, but involves good patterns and ways to make it simple and easy to use &amp; create good patterns.",
        "user": "UAVCC2X70",
        "ts": "1571510000.057900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1571512082.000000"
        },
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL"
    },
    {
        "client_msg_id": "36c769c9-bb87-44a4-968a-39b86aa8b333",
        "type": "message",
        "text": "Ty!",
        "user": "UL3CJ7YKC",
        "ts": "1571513720.058500",
        "team": "T5TCAFTA9",
        "thread_ts": "1571489526.050200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "0B7E1732-F943-4C3D-99B5-53A07FD733FA",
        "type": "message",
        "text": "I see two big weaknesses in the web platform from a FoC point of view: 1) the technology and the culture behind it are ver much fashion-drive, 2) user interfaces are constrained by the page-in-browser-tab model.",
        "user": "UJBAJNFLK",
        "ts": "1571514709.061900",
        "team": "T5TCAFTA9",
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3"
    },
    {
        "client_msg_id": "191A2FCF-F527-49AE-9158-CF3B0AE7E282",
        "type": "message",
        "text": " <@UJBAJNFLK> 1) abstractions can separate one from this 2) check out Progressive Web Apps",
        "user": "ULM3U6275",
        "ts": "1571515836.063700",
        "team": "T5TCAFTA9",
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    }
]