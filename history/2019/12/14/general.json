[
    {
        "client_msg_id": "5446cab1-fd05-436b-8008-cc8bcce2884b",
        "type": "message",
        "text": "Radar charts are neat especially when (though it isn't usually the case) the area has some meaning.  I feel the first time I saw them was to graph Transformer stats, as in the toys, in the '80s.  In that case the area was significant: a measure of the Transformer's overall power.",
        "user": "UA14TGLTC",
        "ts": "1576286473.009500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "amtig",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Radar charts are neat especially when (though it isn't usually the case) the area has some meaning.  I feel the first time I saw them was to graph Transformer stats, as in the toys, in the '80s.  In that case the area was significant: a measure of the Transformer's overall power."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576262057.005600",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "484e61b1-6797-472d-a6c4-44de846a83e1",
        "type": "message",
        "text": "I think you're saying that something counts as \"code\", to the extent that using it counts as \"programming\".\n\nOn the one hand, it's somewhat of a closed view: code is just the means for programming, and programming is only understood in terms of code.\n\nOn the other hand, that's probably the most meaningful and practical definition for 99.99% of anyone who's even talking about \"code\" to begin with.\n\nSo I guess it depends on whether your context is immediately practical, or about reinventing everything from first principles.",
        "user": "UAVCC2X70",
        "ts": "1576294991.009800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1576296347.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hzNx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you're saying that something counts as \"code\", to the extent that using it counts as \"programming\".\n\nOn the one hand, it's somewhat of a closed view: code is just the means for programming, and programming is only understood in terms of code.\n\nOn the other hand, that's probably the most meaningful and practical definition for 99.99% of anyone who's even talking about \"code\" to begin with.\n\nSo I guess it depends on whether your context is immediately practical, or about reinventing everything from first principles."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1573264632.251900",
        "parent_user_id": "UAVCC2X70"
    },
    {
        "client_msg_id": "13e550de-686b-45c9-93d5-b4a15a69ac8a",
        "type": "message",
        "text": "As I mentioned before, the definition of \"code\" keeps changing. In 1956, \"code\" was machine code, and Fortran programs were not code, they were a way of programming without writing code. Today, the Scratch programming language is considered \"no code\", despite it being a very thin layer of graphical syntax on top of a conventional imperative programming language. For programming language research, I need a definition of \"code\" that is general and timeless.",
        "user": "UJN1TAYEQ",
        "ts": "1576334251.010800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0d9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As I mentioned before, the definition of \"code\" keeps changing. In 1956, \"code\" was machine code, and Fortran programs were not code, they were a way of programming without writing code. Today, the Scratch programming language is considered \"no code\", despite it being a very thin layer of graphical syntax on top of a conventional imperative programming language. For programming language research, I need a definition of \"code\" that is general and timeless."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1573264632.251900",
        "parent_user_id": "UAVCC2X70",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2a419421-f4ba-498c-b906-fa90939d616a",
        "type": "message",
        "text": "I guess we all know the proper engineering definition of analog and digital. The confusion comes from people incorrectly using \"analog\" as a synonym for \"primitive\" or \"antiquated\".\n&gt; Early computing devices were \u201canalog\u201d\nWrong. The abacus is digital. (Although the slide rule is analog.)\n&gt; for example, Charles Babbage\u2019s difference engine\nWrong. The difference engine is digital, as were later mechanical and electro-mechanical calculators. The Difference Engine #1 was designed to operate on 20 digit decimal numbers, and you can't get that level of accuracy from an analog computer.\n&gt; Likewise, the telegraph was analog.\nWrong again. The telegraph quantizes line voltages into two levels, on and off, and it quantizes the duration of square wave impulses into two durations, \"dit\" and \"dah\" (short and long).\n\nThe Analytical Engine (1837) was the first programmable, general purpose, Turing-complete computer. It was digital, and I think it had to be digital. I've never heard of a general purpose, programmable analog computer, only special purpose machines for performing specific calculations. I don't think analog \"computers\" are in the same category, so I don't think that the analog/digital axis is really relevant to the rest of the post.",
        "user": "UJN1TAYEQ",
        "ts": "1576353872.011100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1576356413.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SOfsT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess we all know the proper engineering definition of analog and digital. The confusion comes from people incorrectly using \"analog\" as a synonym for \"primitive\" or \"antiquated\".\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Early computing devices were \u201canalog\u201d"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wrong. The abacus is digital. (Although the slide rule is analog.)\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "for example, Charles Babbage\u2019s difference engine"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wrong. The difference engine is digital, as were later mechanical and electro-mechanical calculators. The Difference Engine #1 was designed to operate on 20 digit decimal numbers, and you can't get that level of accuracy from an analog computer.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Likewise, the telegraph was analog."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wrong again. The telegraph quantizes line voltages into two levels, on and off, and it quantizes the duration of square wave impulses into two durations, \"dit\" and \"dah\" (short and long).\n\nThe Analytical Engine (1837) was the first programmable, general purpose, Turing-complete computer. It was digital, and I think it had to be digital. I've never heard of a general purpose, programmable analog computer, only special purpose machines for performing specific calculations. I don't think analog \"computers\" are in the same category, so I don't think that the analog/digital axis is really relevant to the rest of the post."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576262057.005600",
        "parent_user_id": "U8A5MS6R1"
    }
]