[
    {
        "client_msg_id": "2ba33255-705b-4af2-a696-20faf37759d3",
        "type": "message",
        "text": "Hey guys!\nWorking on a node editor here and was curious to know if there are any similar projects out there that use auto-completion ?\nThe idea is that you should get suggestions on what might be the best nodes that your current selection needs, regardless of whether you have those nodes in your graph or not. I can think of this vastly simplifying the loop concept for instance, where you'd suggest the user a loop node whenever they try to create a setup that requires one.\n\nAnother utility here would be suggestion highlights of possible connections that you can draw between a currently selected socket and all the ones in your graph.\n\nWould love to know if there are projects out there that use a similar approach, just to make sure I'm not reinventing a wheel but improving one.",
        "user": "URKL31C2J",
        "ts": "1576193888.389600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QPls+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey guys!\nWorking on a node editor here and was curious to know if there are any similar projects out there that use auto-completion ?\nThe idea is that you should get suggestions on what might be the best nodes that your current selection needs, regardless of whether you have those nodes in your graph or not. I can think of this vastly simplifying the loop concept for instance, where you'd suggest the user a loop node whenever they try to create a setup that requires one.\n\nAnother utility here would be suggestion highlights of possible connections that you can draw between a currently selected socket and all the ones in your graph.\n\nWould love to know if there are projects out there that use a similar approach, just to make sure I'm not reinventing a wheel but improving one."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576193888.389600",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1577724254.199100",
        "reply_users": [
            "UC2A2ARPT",
            "URKL31C2J"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "66b591e0-d995-45dd-9ac5-61c32ed754a2",
        "type": "message",
        "text": "hmm the original post was really interesting but I was disappointed the HN commenters were pretty unnimaginative. The larger idea here of creating programs out of a stack of interleaved programs seems like a powerful generalization of the more typical \"lifecycle hooks and callbacks\" model of extension I'm used to seeing.\n\nThis and the twitter discussions definitely got me more interested in Behavioral Programming and b-threads!",
        "user": "UMWF81HTP",
        "ts": "1576196353.389700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1576196368.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=pUnf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hmm the original post was really interesting but I was disappointed the HN commenters were pretty unnimaginative. The larger idea here of creating programs out of a stack of interleaved programs seems like a powerful generalization of the more typical \"lifecycle hooks and callbacks\" model of extension I'm used to seeing.\n\nThis and the twitter discussions definitely got me more interested in Behavioral Programming and b-threads!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576107068.370000",
        "parent_user_id": "UL3CJ7YKC",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "ce53163e-f00f-41b0-9d5c-95bd9c15a2b1",
        "type": "message",
        "text": "Sorry I meant \"block\" of architecture, not something that's \"blocking\"! :smile:",
        "user": "UE6EFEPTQ",
        "ts": "1576197372.390200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7qPn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry I meant \"block\" of architecture, not something that's \"blocking\"! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576025152.342800",
        "parent_user_id": "UP6G25H35"
    },
    {
        "client_msg_id": "3768901e-5414-434c-8bbf-90aeabc3abdc",
        "type": "message",
        "text": "I just realized something about \"no code\".\n\nBased on what has been laid out, \"code\" is a scripted  (e.g. repeatable / replay-able) specification for doing or generating something. Yada yada language, interpreter, etc.\n\nSo I'd say that even a diagram or animation of what will happen, is code -- so long as it's a sufficiently complete and interpretable specification.\n\nBut there's a lot of such things that people don't call or think of as \"code\". People talk about \"code\" when that's literally all it is: this stuff that when I read it, I understand that it means to do this and then do that, and I can picture *in my head* what that might look like or how that might play out. But when you work with a very direct representation of the actual thing (or behaviors), then it's not \"code\", it's just that thing itself (or a depiction of it).\n\nSo a written description of shapes to be drawn, is code. But dragons shapes on a canvas is \"no code\". Technically it all *is* code, but you're not _looking at \"code\"_, you're working with (e.g.) a direct representation of the thing -- there's no _reason_ to think of it in terms of \"code\" because it just is",
        "user": "UAVCC2X70",
        "ts": "1576200423.390700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1576216387.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ibs+W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just realized something about \"no code\".\n\nBased on what has been laid out, \"code\" is a scripted  (e.g. repeatable / replay-able) specification for doing or generating something. Yada yada language, interpreter, etc.\n\nSo I'd say that even a diagram or animation of what will happen, is code -- so long as it's a sufficiently complete and interpretable specification.\n\nBut there's a lot of such things that people don't call or think of as \"code\". People talk about \"code\" when that's literally all it is: this stuff that when I read it, I understand that it means to do this and then do that, and I can picture "
                            },
                            {
                                "type": "text",
                                "text": "in my head",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " what that might look like or how that might play out. But when you work with a very direct representation of the actual thing (or behaviors), then it's not \"code\", it's just that thing itself (or a depiction of it).\n\nSo a written description of shapes to be drawn, is code. But dragons shapes on a canvas is \"no code\". Technically it all "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " code, but you're not "
                            },
                            {
                                "type": "text",
                                "text": "looking at \"code\"",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", you're working with (e.g.) a direct representation of the thing -- there's no "
                            },
                            {
                                "type": "text",
                                "text": "reason",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to think of it in terms of \"code\" because it just is"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1573264632.251900",
        "parent_user_id": "UAVCC2X70"
    },
    {
        "client_msg_id": "cbc38e12-28b7-48f0-acc9-be007be9d7b6",
        "type": "message",
        "text": "So maybe \"code\" (in the cultural sense) means that _I_ have to _interpret_ it's meaning. _I_ have to read it and playing it out (simulate it) in my head. It's literally code _to me_ because I (and not just the computer) _am_ the interpreter.",
        "user": "UAVCC2X70",
        "ts": "1576200867.391000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1576201394.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s/jJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So maybe \"code\" (in the cultural sense) means that "
                            },
                            {
                                "type": "text",
                                "text": "I",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " have to "
                            },
                            {
                                "type": "text",
                                "text": "interpret",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it's meaning. "
                            },
                            {
                                "type": "text",
                                "text": "I ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "have to read it and playing it out (simulate it) in my head. It's literally code "
                            },
                            {
                                "type": "text",
                                "text": "to me ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "because I (and not just the computer) "
                            },
                            {
                                "type": "text",
                                "text": "am",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the interpreter."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1573264632.251900",
        "parent_user_id": "UAVCC2X70"
    },
    {
        "client_msg_id": "ccfbfcee-dcbd-4a46-a25d-f6f9b246315f",
        "type": "message",
        "text": "That also hints at how much better \"code\" can be: direct representations that have (comparatively) immediate meaning at a glance, or for which the computer can demonstrate it. We have these powerful simulators, so why don't we offload to them vs having to manually parse and play out \"code\" in our heads?",
        "user": "UAVCC2X70",
        "ts": "1576201595.393800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1576201957.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ywe2G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That also hints at how much better \"code\" can be: direct representations that have (comparatively) immediate meaning at a glance, or for which the computer can demonstrate it. We have these powerful simulators, so why don't we offload to them vs having to manually parse and play out \"code\" in our heads?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1573264632.251900",
        "parent_user_id": "UAVCC2X70"
    },
    {
        "client_msg_id": "79126ee5-30a9-4ed3-a87d-94731448eae6",
        "type": "message",
        "text": "you can take beads for a test drive at <http://beadslang.com|beadslang.com>. I only have a 100 page user manual and a dozen examples so far. Mac or Windows required for development; emits web apps or using Haxe/Air can generate IOS/Android.  I use deduction to determine which part of the screen needs refresh automaticallly. Publish/Subscribe takes advantage of the same internal tracking system. Not a multithreaded system at present. Currently a few people are testing it while we keep on improving the documentation. There are various solvers in the product; one is the layout solver, where you declare the constraints on how you want the objects to be laid out and it does the final calculations. To make things look good on many screen sizes is a very tricky task, and my system aids a skilled programmer but the level of precision one needs to generate mobile apps that fit tight spaces i doubt will ever be easy for anyone. The only other solver in constants use is the rectangle solver. There was a sequel to Visicalc called TKSolver which allowed you to iterate and work backwards; Excel has some of those features, but TKsolver was very clever. I haven't seen anything like it since frankly. So many people working in ML now, solving a formula seems old fashioned.  The other area that is highly declarative is the schema designer for the graph database. in Beads you typically declare before you stuff the data into the graph the structure and type of the nodes, which allows the compiler to check for dumb errors. But that is nothing new.",
        "user": "UEQ6M68H0",
        "ts": "1576220663.395200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lxbb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you can take beads for a test drive at "
                            },
                            {
                                "type": "link",
                                "url": "http://beadslang.com",
                                "text": "beadslang.com"
                            },
                            {
                                "type": "text",
                                "text": ". I only have a 100 page user manual and a dozen examples so far. Mac or Windows required for development; emits web apps or using Haxe/Air can generate IOS/Android.  I use deduction to determine which part of the screen needs refresh automaticallly. Publish/Subscribe takes advantage of the same internal tracking system. Not a multithreaded system at present. Currently a few people are testing it while we keep on improving the documentation. There are various solvers in the product; one is the layout solver, where you declare the constraints on how you want the objects to be laid out and it does the final calculations. To make things look good on many screen sizes is a very tricky task, and my system aids a skilled programmer but the level of precision one needs to generate mobile apps that fit tight spaces i doubt will ever be easy for anyone. The only other solver in constants use is the rectangle solver. There was a sequel to Visicalc called TKSolver which allowed you to iterate and work backwards; Excel has some of those features, but TKsolver was very clever. I haven't seen anything like it since frankly. So many people working in ML now, solving a formula seems old fashioned.  The other area that is highly declarative is the schema designer for the graph database. in Beads you typically declare before you stuff the data into the graph the structure and type of the nodes, which allows the compiler to check for dumb errors. But that is nothing new."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575999812.302200",
        "parent_user_id": "UL3CJ7YKC",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0233DB62-CB0B-4E99-9075-5FC2D6C8BF79",
        "type": "message",
        "text": "Great, I'll check out.\n\nSo there is no generic solver like in Prolog which might determine the temporal order of things (just with more features and different approach)?",
        "user": "UL3CJ7YKC",
        "ts": "1576240475.002400",
        "team": "T5TCAFTA9",
        "thread_ts": "1575999812.302200",
        "parent_user_id": "UL3CJ7YKC"
    },
    {
        "client_msg_id": "747059ba-7e7a-40fb-be51-3c649095d3f2",
        "type": "message",
        "text": "I saw those rave reviews too, had a quick look, and decided \"maybe later\". It looks like the notes are stored in a proprietary format on their server, meaning that I would not want to use the tool for anything important anyway, no matter how good it might be otherwise.",
        "user": "UJBAJNFLK",
        "ts": "1576244369.002900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qGVX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I saw those rave reviews too, had a quick look, and decided \"maybe later\". It looks like the notes are stored in a proprietary format on their server, meaning that I would not want to use the tool for anything important anyway, no matter how good it might be otherwise."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576189222.387500",
        "parent_user_id": "UJTHWNH2T",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UCKRZS3DZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4182fe95-ba8a-4a24-9a8f-145bd53ca653",
        "type": "message",
        "text": "Understandable. On the other hand,\n\n``` conaws [Tag user]\n38 days ago\n\nCofounder here -- just want to let people know that we STRONGLY believe that your data shouldn't be trapped in a SAAS application.\n\nRoam does allow you to export all your data to an org-mode file (the emacs outliner), we're working on other import/export options, and want to get to the place where there is a close to plain text representation of your Roam workspace on your file system that syncs both ways.\n\nWe weren't expecting someone to post us to HN yet. This is a case of, if you're not embarrassed on launch, you launched too late. Just want to let y'all know we dont believe in SAAS lockin for a tool for thought, and data portability for the folks who aren't emacs users is coming. ```",
        "user": "UJTHWNH2T",
        "ts": "1576246367.003100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1/6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Understandable. On the other hand,\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": " conaws [Tag user]\n38 days ago\n\nCofounder here -- just want to let people know that we STRONGLY believe that your data shouldn't be trapped in a SAAS application.\n\nRoam does allow you to export all your data to an org-mode file (the emacs outliner), we're working on other import/export options, and want to get to the place where there is a close to plain text representation of your Roam workspace on your file system that syncs both ways.\n\nWe weren't expecting someone to post us to HN yet. This is a case of, if you're not embarrassed on launch, you launched too late. Just want to let y'all know we dont believe in SAAS lockin for a tool for thought, and data portability for the folks who aren't emacs users is coming. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576189222.387500",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "E8FF03F7-601C-4FF0-86DD-89168FAEF279",
        "type": "message",
        "text": "<https://twitter.com/fasterthanlime/status/1204868004787490816|https://twitter.com/fasterthanlime/status/1204868004787490816>",
        "user": "UFEQUBNNT",
        "ts": "1576253680.003400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/fasterthanlime|@fasterthanlime>: you: worrying about a hashmap's performance\n\noracle: <https://pbs.twimg.com/media/ELiNEDbWsAENlFZ.png>",
                "ts": 1576097892,
                "author_name": "fasterthanlime \ud83c\udf49",
                "author_link": "https://twitter.com/fasterthanlime/status/1204868004787490816",
                "author_icon": "https://pbs.twimg.com/profile_images/936324358649405440/kRROV3kf_normal.jpg",
                "author_subname": "@fasterthanlime",
                "text": "you: worrying about a hashmap's performance\n\noracle: <https://pbs.twimg.com/media/ELiNEDbWsAENlFZ.png>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/fasterthanlime/status/1204868004787490816",
                "image_url": "https://pbs.twimg.com/media/ELiNEDbWsAENlFZ.png",
                "image_width": 870,
                "image_height": 77,
                "image_bytes": 15725,
                "id": 1,
                "original_url": "https://twitter.com/fasterthanlime/status/1204868004787490816",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iey",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/fasterthanlime/status/1204868004787490816",
                                "text": "https://twitter.com/fasterthanlime/status/1204868004787490816"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1574951564.258100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f2527825-762d-4e18-853a-959d3306b43e",
        "type": "message",
        "text": "My definition of \"code\" is based on expressive power, and on what  abstraction mechanisms are available. It's not directly based on how code is displayed to the user. I don't consider SVG to be code, because there is no support for parameters, conditionals or iteration. Postscript, also a vector graphics standard, _is_ code. Inkscape, a graphical/GUI based editor for SVG images, has groups and layers, which are abstraction mechanisms, but that's not powerful enough to quality as code. Some parametric CAD programs are powerful enough to qualify as code, even though what's displayed on the screen is the geometric model, which you can modify using direct manipulation.\n\nWhen you edit a pixel based image using a simple image editor like MSPaint, what you see (the pixels) are all there is. When you transition to a vector-based image editor like InkScape, now the pixels that represent your image are no longer all that there is. The image is partitioned into geometric objects, and each geometric object has hidden state that represents its abstract structure. This state can be revealed and edited. a bezier curve has control points that you can edit: they are normally invisible, but you can make them visible on command so that they become editable.\n\nWhen you transition from Inkscape to a vector based image representation that is powerful enough to be considered code, now you have more hidden structure that needs to be revealed on command so that it can be edited. If you are deeply embedded in text-based programming culture, then you might think the only way to do it is to have two panes: one shows a traditional text based program, and the other show the image that the program constructs. However, that's not the only possible user interface. Constraint based CAD programs have been demonstrating a different way to do it, going back to Ivan Sutherland's Sketchpad UI in 1960.",
        "user": "UJN1TAYEQ",
        "ts": "1576254737.003800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hDGNL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My definition of \"code\" is based on expressive power, and on what  abstraction mechanisms are available. It's not directly based on how code is displayed to the user. I don't consider SVG to be code, because there is no support for parameters, conditionals or iteration. Postscript, also a vector graphics standard, "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " code. Inkscape, a graphical/GUI based editor for SVG images, has groups and layers, which are abstraction mechanisms, but that's not powerful enough to quality as code. Some parametric CAD programs are powerful enough to qualify as code, even though what's displayed on the screen is the geometric model, which you can modify using direct manipulation.\n\nWhen you edit a pixel based image using a simple image editor like MSPaint, what you see (the pixels) are all there is. When you transition to a vector-based image editor like InkScape, now the pixels that represent your image are no longer all that there is. The image is partitioned into geometric objects, and each geometric object has hidden state that represents its abstract structure. This state can be revealed and edited. a bezier curve has control points that you can edit: they are normally invisible, but you can make them visible on command so that they become editable.\n\nWhen you transition from Inkscape to a vector based image representation that is powerful enough to be considered code, now you have more hidden structure that needs to be revealed on command so that it can be edited. If you are deeply embedded in text-based programming culture, then you might think the only way to do it is to have two panes: one shows a traditional text based program, and the other show the image that the program constructs. However, that's not the only possible user interface. Constraint based CAD programs have been demonstrating a different way to do it, going back to Ivan Sutherland's Sketchpad UI in 1960."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1573264632.251900",
        "parent_user_id": "UAVCC2X70",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ff65c555-0c6b-4339-9cf9-9bbb7cf1c46f",
        "type": "message",
        "text": "if they layered a semi-traditional sketch/illustrator-style interface over this i think they\u2019d make a lot of money",
        "user": "UHWC9PXBL",
        "ts": "1576255187.004400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xw3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if they layered a semi-traditional sketch/illustrator-style interface over this i think they\u2019d make a lot of money"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576184139.385700",
        "parent_user_id": "UP658E1GB"
    },
    {
        "client_msg_id": "97331194-ad3c-42ae-a9e9-7e6975e574b9",
        "type": "message",
        "text": "It\u2019s on my docket to try out\u2014I\u2019ll let you know how it goes. I have very weird requirements for notetaking applications (although Roam seems like the closest match yet). I wish text wasn\u2019t like the \u201cdefault\u201d format, though.",
        "user": "UHWC9PXBL",
        "ts": "1576255270.004600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yU+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s on my docket to try out\u2014I\u2019ll let you know how it goes. I have very weird requirements for notetaking applications (although Roam seems like the closest match yet). I wish text wasn\u2019t like the \u201cdefault\u201d format, though."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576189222.387500",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "3094e96c-3b25-4cf2-a46a-dd543f5cf871",
        "type": "message",
        "text": "haven\u2019t seen that anywhere except games\u2014Eg Outer Wilds: <https://youtu.be/ifTMC7ybZDc?t=227>",
        "user": "UHWC9PXBL",
        "ts": "1576255408.005300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Outer Wilds Critique | The Opposite of No Man's Sky and My Game of the Year",
                "title_link": "https://youtu.be/ifTMC7ybZDc?t=227",
                "author_name": "Chris Davis",
                "author_link": "https://www.youtube.com/channel/UCgnPgGFT3fRVkXKL59iFDzQ",
                "thumb_url": "https://i.ytimg.com/vi/ifTMC7ybZDc/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Outer Wilds Critique | The Opposite of No Man's Sky and My Game of the Year",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/ifTMC7ybZDc?start=227&feature=oembed&start=227&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/ifTMC7ybZDc?t=227",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/ifTMC7ybZDc?t=227"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yG8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "haven\u2019t seen that anywhere except games\u2014Eg Outer Wilds: "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/ifTMC7ybZDc?t=227"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "425fc0f1-3b0f-44c5-bba7-594b7b056936",
        "type": "message",
        "text": "<https://jods.mitpress.mit.edu/pub/6pewbpry>",
        "user": "U8A5MS6R1",
        "ts": "1576262057.005600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Journal of Design and Science",
                "title": "Defining the Dimensions of the \u201cSpace\u201d of Computing \u00b7 Journal of Design and Science",
                "title_link": "https://jods.mitpress.mit.edu/pub/6pewbpry",
                "text": "The first computing machines were so large they filled entire rooms. Today they are ubiquitous, built invisibly into our environments. While it's tempting to view this change within a predetermined space of progress, we can still shape the future on our own terms.",
                "fallback": "Journal of Design and Science: Defining the Dimensions of the \u201cSpace\u201d of Computing \u00b7 Journal of Design and Science",
                "thumb_url": "https://assets.pubpub.org/9pi1c5c6/41554230047846.jpeg",
                "from_url": "https://jods.mitpress.mit.edu/pub/6pewbpry",
                "thumb_width": 2244,
                "thumb_height": 1509,
                "service_icon": "https://assets.pubpub.org/gqinwefs/21508255847021.png",
                "id": 1,
                "original_url": "https://jods.mitpress.mit.edu/pub/6pewbpry"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G018n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://jods.mitpress.mit.edu/pub/6pewbpry"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576262057.005600",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1576404688.012000",
        "reply_users": [
            "UCUSW7WVD",
            "UA14TGLTC",
            "UJN1TAYEQ"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "96DA2495-E926-4C23-AA3E-2EB4442D0EF9",
        "type": "message",
        "text": "<@UJTHWNH2T> That\u2019s good news! Roam is moving up on my list of new stuff to try out.",
        "user": "UJBAJNFLK",
        "ts": "1576263988.007300",
        "team": "T5TCAFTA9",
        "thread_ts": "1576189222.387500",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "0b2543db-115b-4a22-ab7e-b6eeced2008b",
        "type": "message",
        "text": "<@UHWC9PXBL> <@UJBAJNFLK> cool. Let us know how it goes :slightly_smiling_face:",
        "user": "UJTHWNH2T",
        "ts": "1576265266.007500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oEFu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " cool. Let us know how it goes "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576189222.387500",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "a878cd20-4caf-4935-877f-d181696c763a",
        "type": "message",
        "text": "I've just started trying it myself, yesterday",
        "user": "UJTHWNH2T",
        "ts": "1576265273.007700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4+l++",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've just started trying it myself, yesterday"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576189222.387500",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "b6469cf4-80d8-43f2-af2f-1058594587f7",
        "type": "message",
        "text": "Axes mentioned in this post:\n* analog vs digital (I've never understood this one)\n* centralized vs distributed\n* fixed vs fluid (seems ill-posed)\n* controlling vs collaborating (author needs to read his Ivan Illich)\n* momentary vs long-lasting\n* peek-into vs be-inside (wish the word 'environment' wasn't already taken)\n* consuming vs authoring",
        "user": "UCUSW7WVD",
        "ts": "1576268043.008000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tMsvE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Axes mentioned in this post:\n* analog vs digital (I've never understood this one)\n* centralized vs distributed\n* fixed vs fluid (seems ill-posed)\n* controlling vs collaborating (author needs to read his Ivan Illich)\n* momentary vs long-lasting\n* peek-into vs be-inside (wish the word 'environment' wasn't already taken)\n* consuming vs authoring"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576262057.005600",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "8278e1c8-bf38-4b0a-be9b-2acfe16179d8",
        "type": "message",
        "text": "On a slight tangent, I like the visualization of multi-dimensional entities here. Interesting alternative to the polygons we see sometimes; I've used it before in <https://www.ribbonfarm.com/2014/04/09/the-legibility-tradeoff>, for example. I just learned that it's called a radar chart: <https://towardsdatascience.com/plotting-in-many-dimensions-382fbd7fe76e>. The approach of OP is called a parallel coordinates chart (albeit rotated). It also has some relation to Wardley maps: <https://medium.com/wardleymaps/finding-a-path-cdb1249078c0>",
        "user": "UCUSW7WVD",
        "ts": "1576268649.008200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1576268663.000000"
        },
        "attachments": [
            {
                "service_name": "Medium",
                "title": "Mis-employing radar charts to distinguish multidimensional data",
                "title_link": "https://towardsdatascience.com/plotting-in-many-dimensions-382fbd7fe76e",
                "text": "It\u2019s common to see charts that visualize data in two or three dimensions, but what about more than that? (For the impatient: scroll to the\u2026",
                "fallback": "Medium: Mis-employing radar charts to distinguish multidimensional data",
                "image_url": "https://miro.medium.com/max/1200/1*xxrfaHp0huBKO0QE3ZGR8w.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "7 min read",
                        "short": true
                    }
                ],
                "ts": 1518189142,
                "from_url": "https://towardsdatascience.com/plotting-in-many-dimensions-382fbd7fe76e",
                "image_width": 673,
                "image_height": 250,
                "image_bytes": 156986,
                "service_icon": "https://cdn-images-1.medium.com/fit/c/152/152/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 2,
                "original_url": "https://towardsdatascience.com/plotting-in-many-dimensions-382fbd7fe76e"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VKqGA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On a slight tangent, I like the visualization of multi-dimensional entities here. Interesting alternative to the polygons we see sometimes; I've used it before in "
                            },
                            {
                                "type": "link",
                                "url": "https://www.ribbonfarm.com/2014/04/09/the-legibility-tradeoff"
                            },
                            {
                                "type": "text",
                                "text": ", for example. I just learned that it's called a radar chart: "
                            },
                            {
                                "type": "link",
                                "url": "https://towardsdatascience.com/plotting-in-many-dimensions-382fbd7fe76e"
                            },
                            {
                                "type": "text",
                                "text": ". The approach of OP is called a parallel coordinates chart (albeit rotated). It also has some relation to Wardley maps: "
                            },
                            {
                                "type": "link",
                                "url": "https://medium.com/wardleymaps/finding-a-path-cdb1249078c0"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576262057.005600",
        "parent_user_id": "U8A5MS6R1"
    }
]