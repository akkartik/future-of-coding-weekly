[
    {
        "client_msg_id": "b7b1a196-529c-4407-a6ea-e283273d37ce",
        "type": "message",
        "text": "Here's a video presentation of my attempt at a compact visual syntax for Haskell as part of the Glance project.\nVideo: <https://youtu.be/cb25Ts4rLXA>\nSlides: <https://docs.google.com/presentation/d/1MC37OSCooOS9Kwkg8vj1AeIKTV4e2pqH3ijcBnlq1iw>\nFeedback on the project goal and strategy, and the high level visual design (e.g. using indentation, the topology of the nodes, etc.) would be especially useful.",
        "user": "UP3FH4CLU",
        "ts": "1576657342.007300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Glance: Compact visual syntax for Haskell",
                "title_link": "https://youtu.be/cb25Ts4rLXA",
                "author_name": "Glance",
                "author_link": "https://www.youtube.com/channel/UCs2gsWfcy83Yqk873WkPfeg",
                "thumb_url": "https://i.ytimg.com/vi/cb25Ts4rLXA/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Glance: Compact visual syntax for Haskell",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/cb25Ts4rLXA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/cb25Ts4rLXA",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/cb25Ts4rLXA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rmDt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a video presentation of my attempt at a compact visual syntax for Haskell as part of the Glance project.\nVideo: "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/cb25Ts4rLXA"
                            },
                            {
                                "type": "text",
                                "text": "\nSlides: "
                            },
                            {
                                "type": "link",
                                "url": "https://docs.google.com/presentation/d/1MC37OSCooOS9Kwkg8vj1AeIKTV4e2pqH3ijcBnlq1iw"
                            },
                            {
                                "type": "text",
                                "text": "\nFeedback on the project goal and strategy, and the high level visual design (e.g. using indentation, the topology of the nodes, etc.) would be especially useful."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576657342.007300",
        "reply_count": 21,
        "reply_users_count": 5,
        "latest_reply": "1576914153.027300",
        "reply_users": [
            "UC2A2ARPT",
            "UBKNXPBAB",
            "UBN9AFS0N",
            "UP3FH4CLU",
            "UA14TGLTC"
        ],
        "subscribed": true,
        "last_read": "1576914153.027300",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F",
                    "UA14TGLTC",
                    "UBN9AFS0N",
                    "UD31LGQKB",
                    "UAVCC2X70"
                ],
                "count": 5
            },
            {
                "name": "heart_eyes",
                "users": [
                    "UC2A2ARPT",
                    "U85HCL7JP"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b32cf5b6-1969-472b-af7f-5b80e2cffccb",
        "type": "message",
        "text": "Hello Friends, wrote a thing, 'tis the season and all <https://gist.github.com/wtaysom/7e5fda6d65807073c3fa6b92b1e25a32>.  It's a review of Paul Graham's Bel programming language, Chris Granger's Eve project <@UEBG0NPDK>, and some silly reflections on VR.",
        "user": "UA14TGLTC",
        "ts": "1576661100.008400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FLR0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello Friends, wrote a thing, 'tis the season and all "
                            },
                            {
                                "type": "link",
                                "url": "https://gist.github.com/wtaysom/7e5fda6d65807073c3fa6b92b1e25a32"
                            },
                            {
                                "type": "text",
                                "text": ".  It's a review of Paul Graham's Bel programming language, Chris Granger's Eve project "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": ", and some silly reflections on VR."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576661100.008400",
        "reply_count": 43,
        "reply_users_count": 9,
        "latest_reply": "1578136300.369200",
        "reply_users": [
            "UBN9AFS0N",
            "UA14TGLTC",
            "UD3AK9JRF",
            "UJN1TAYEQ",
            "UC2A2ARPT",
            "UCGAK10LS",
            "UEBG0NPDK",
            "UFLN9JFRT",
            "UHWC9PXBL"
        ],
        "subscribed": true,
        "last_read": "1578136300.369200",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJN1TAYEQ",
                    "UCUSW7WVD",
                    "UMVFWPZ36",
                    "UEBG0NPDK",
                    "UNLS33M61"
                ],
                "count": 5
            },
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36",
                    "UC2A2ARPT",
                    "UE3KC0VK6"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "000d4c8b-733f-423a-ab9e-744edd211f13",
        "type": "message",
        "text": "So happens to treat on some of your topics <@UP3FH4CLU>.  I like your graphical to textual slider.  Ask yourself how things you can do to graphical representation differ from the textural one.",
        "user": "UA14TGLTC",
        "ts": "1576661720.011200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=7k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So happens to treat on some of your topics "
                            },
                            {
                                "type": "user",
                                "user_id": "UP3FH4CLU"
                            },
                            {
                                "type": "text",
                                "text": ".  I like your graphical to textual slider.  Ask yourself how things you can do to graphical representation differ from the textural one."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "66c5f45a-54b3-498a-a967-f467953e3cf6",
        "type": "message",
        "text": "These days, I try to explore a place way, way further left on the graphics side.  For example, to program something similar to factorial... Measure out a length.  Rotate a duplicate ninety degrees.  Draw the missing edge to make this a right equilateral triangle.  Cut some lengths out of the triangle at a regular interval.  Product those into a many dimensional cube.  Flatten.",
        "user": "UA14TGLTC",
        "ts": "1576662544.017900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f31rD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "These days, I try to explore a place way, way further left on the graphics side.  For example, to program something similar to factorial... Measure out a length.  Rotate a duplicate ninety degrees.  Draw the missing edge to make this a right equilateral triangle.  Cut some lengths out of the triangle at a regular interval.  Product those into a many dimensional cube.  Flatten."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UAVCC2X70",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "9aad303c-5d1e-4e89-b01c-739024a5fd3c",
        "type": "message",
        "text": "Consider it further evolution <https://www.willamette.edu/~fruehr/haskell/evolution.html>.",
        "user": "UA14TGLTC",
        "ts": "1576662807.019000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LKcP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Consider it further evolution "
                            },
                            {
                                "type": "link",
                                "url": "https://www.willamette.edu/~fruehr/haskell/evolution.html"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "8145ae8b-b30d-495f-a12a-75ff52cdecc4",
        "type": "message",
        "text": "great post! you close mentioning you are working on something, is there something we can see already?",
        "user": "UBN9AFS0N",
        "ts": "1576670450.019100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mDemn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "great post! you close mentioning you are working on something, is there something we can see already?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "479117ba-2202-437b-ad75-4f5a58d436f3",
        "type": "message",
        "text": "No.  Alas.",
        "user": "UA14TGLTC",
        "ts": "1576672343.019300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kGWN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No.  Alas."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "d3e60ee3-b2f7-46e0-af90-a7f9ba1fc456",
        "type": "message",
        "text": "I just finished watching the first part of the video. Like <@UA14TGLTC> said, the graphical-to-textual slider is fantastic. That could be a really neat way to learn how to \"read\" the graphical syntax \u2014 start with some textual code, then incrementally convert it to the graphical syntax.\n\nThis is a nicely made video, too. I appreciate that you edited out the pauses without destroying the flow of your speech. I really feel the investment you made in respecting the viewer's time and attention.",
        "user": "UC2A2ARPT",
        "ts": "1576686494.019800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6yW1p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just finished watching the first part of the video. Like "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " said, the graphical-to-textual slider is fantastic. That could be a really neat way to learn how to \"read\" the graphical syntax \u2014 start with some textual code, then incrementally convert it to the graphical syntax.\n\nThis is a nicely made video, too. I appreciate that you edited out the pauses without destroying the flow of your speech. I really feel the investment you made in respecting the viewer's time and attention."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576657342.007300",
        "parent_user_id": "UP3FH4CLU"
    },
    {
        "client_msg_id": "757bb239-ecf0-40c8-9d13-bc6516c53cc5",
        "type": "message",
        "text": "Thanks. I\u2019m working on something with some similarity to Eve, so I appreciate the field report.",
        "user": "UD3AK9JRF",
        "ts": "1576693136.020100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+XqCT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks. I\u2019m working on something with some similarity to Eve, so I appreciate the field report."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "db67c335-d6ca-4e14-8722-e843a2280371",
        "type": "message",
        "text": "<@UA14TGLTC> I am fascinated by your concept of a programming language with \"a beautiful surface syntax\". Can you give an example of a language that qualifies?",
        "user": "UJN1TAYEQ",
        "ts": "1576700145.020700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jI1=z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " I am fascinated by your concept of a programming language with \"a beautiful surface syntax\". Can you give an example of a language that qualifies?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "157b7641-b6e3-4b3e-b1c0-07a2f0c64c82",
        "type": "message",
        "text": "You've posted frequently about visual programming languages. Are there any that you think are particularly noteworthy and worth emulating in a new project?",
        "user": "UJN1TAYEQ",
        "ts": "1576700679.020900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vc2a8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You've posted frequently about visual programming languages. Are there any that you think are particularly noteworthy and worth emulating in a new project?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "ec8ee0be-427d-42f7-a158-0b02b4325e55",
        "type": "message",
        "text": "This was a fun read. Thanks William!\n\nNow, gloves off..\n\n&gt; Wires are just a means to connect related things. Why not connect them directly? Just put them next to each other.\nWires aren't particularly useful in the node-wire VPLs I've seen. But that's a missed opportunity! Wires are the connective tissue, the substitute for names, the links, the structure, the guidance, channels through which data flows. You could get rid of them, since they are a fair bit like incidental complexity at the moment. (I'm reminded of Inventing on Principle, where Bret redesigns electrical schematics to be wire-less.) Or, you could spend that incidental complexity on increased visual-communication bandwidth, on debug aids, on liveness, on surface syntax, or on _style \u2014_ _make the wires look cool._",
        "user": "UC2A2ARPT",
        "ts": "1576709768.000500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=F1K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was a fun read. Thanks William!\n\nNow, gloves off..\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wires are just a means to connect related things. Why not connect them directly? Just put them next to each other."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWires aren't particularly useful in the node-wire VPLs I've seen. But that's a missed opportunity! Wires are the connective tissue, the substitute for names, the links, the structure, the guidance, channels through which data flows. You could get rid of them, since they are a fair bit like incidental complexity at the moment. (I'm reminded of Inventing on Principle, where Bret redesigns electrical schematics to be wire-less.) Or, you could spend that incidental complexity on increased visual-communication bandwidth, on debug aids, on liveness, on surface syntax, or on "
                            },
                            {
                                "type": "text",
                                "text": "style \u2014",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "make the wires look cool.",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1576661100.008400",
        "parent_user_id": "UA14TGLTC",
        "reactions": [
            {
                "name": "wave",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    }
]