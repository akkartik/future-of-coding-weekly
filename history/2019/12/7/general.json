[
    {
        "client_msg_id": "d13ae869-d170-4cce-b30e-cb2236aee764",
        "type": "message",
        "text": "awesome. Thanks. I'll definitely check it out. I've been thinking about how the next wave of the centralization/decentralization cycle will play out.",
        "user": "URC5MU2AZ",
        "ts": "1575673777.137600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6UmmL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "awesome. Thanks. I'll definitely check it out. I've been thinking about how the next wave of the centralization/decentralization cycle will play out."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575653839.123000",
        "parent_user_id": "UFXFB1RK8"
    },
    {
        "client_msg_id": "e9d7fdae-1176-4930-988b-3eb6bd43838d",
        "type": "message",
        "text": "Great talk by Mel Conway touching on tangible and live software: <https://www.youtube.com/watch?v=u6eP77G6KbM>",
        "user": "U8A5MS6R1",
        "ts": "1575676344.138400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Consider the Development Feedback Loop - Mel Conway",
                "title_link": "https://www.youtube.com/watch?v=u6eP77G6KbM",
                "author_name": "Domain-Driven Design Europe",
                "author_link": "https://www.youtube.com/channel/UC3PGn-hQdbtRiqxZK9XBGqQ",
                "thumb_url": "https://i.ytimg.com/vi/u6eP77G6KbM/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Consider the Development Feedback Loop - Mel Conway",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/u6eP77G6KbM?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=u6eP77G6KbM",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=u6eP77G6KbM"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1cd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great talk by Mel Conway touching on tangible and live software: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=u6eP77G6KbM"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575676344.138400",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1576532777.023900",
        "reply_users": [
            "U8A5MS6R1",
            "UEBG0NPDK",
            "UEQ6M68H0",
            "UC21F8Q48"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJVEPCVT6",
                    "UJFN50C00"
                ],
                "count": 2
            },
            {
                "name": "point_up_2",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "List of properties of 'hands on' construction tool for software.",
        "files": [
            {
                "id": "FRFUF5NBG",
                "created": 1575676407,
                "timestamp": 1575676407,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U8A5MS6R1",
                "editable": false,
                "size": 569792,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-FRFUF5NBG/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-FRFUF5NBG/download/image.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 203,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 270,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 405,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 450,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 540,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-FRFUF5NBG-7966a445b5/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 576,
                "image_exif_rotation": 1,
                "original_w": 1280,
                "original_h": 720,
                "thumb_tiny": "AwAbADCN7q4CA4Xn2psd7cSSBF2ZPqKvt5nmjBGzjIrP/wCYof8AeP8AKluNk/mXfrF+VHmXnrF+VSqBmngfWnZE3ZX8y79YvyqOW6uYSN3lnPoKulf84rP1H7yfQ0WQ7s0WYBwu3r3rMkcJqLMxwAx/lWqnKLnnik2r6D8qnZlbooi6iB+/+hp/22L+8fyq5tX+6Pyo2r/dH5U+YXKU/t0X94/lVW6lSZlKknAOeK1tq/3R+VJtX+6Pyo5g5T//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/U8A5MS6R1/FRFUF5NBG/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-FRFUF5NBG-45b7ab26b8",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4+B0O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "List of properties of 'hands on' construction tool for software."
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U8A5MS6R1",
        "display_as_bot": false,
        "ts": "1575676412.138600",
        "client_msg_id": "fde1ca5f-f6f0-46ea-bb34-a6cef70d8d2e",
        "thread_ts": "1575676344.138400",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UJVEPCVT6"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "51ef3f67-6149-4c99-8300-04a39541514f",
        "type": "message",
        "text": "if you're interested in that, here's the paper he wrote about them: <http://melconway.com/Home/pdf/simplify.pdf>",
        "user": "UEBG0NPDK",
        "ts": "1575679076.139000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bmPI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if you're interested in that, here's the paper he wrote about them: "
                            },
                            {
                                "type": "link",
                                "url": "http://melconway.com/Home/pdf/simplify.pdf"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575676344.138400",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UJVEPCVT6",
                    "UFPPABQ7P",
                    "UHWC9PXBL",
                    "UJFN50C00"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "7ca2cff9-081c-4df3-bccf-4b703e260445",
        "type": "message",
        "text": "Thanks! Lot of good stuff in there that resonates well with me:\n&gt; The input-process-output application-building model must be replaced by a transform-in-place model. Instead of source and object files we should be thinking in terms of modifying the working material in stages.\n&gt; \n&gt; \u201cstarting\u201da program is alien to the transform-in-place model\n&gt; \n&gt; the developer must be able to build interactively any application whose components can be anywhere on the network and that is represented in its entirety on the user interface of a tool that conforms to all the hands-on design principles.",
        "user": "U8A5MS6R1",
        "ts": "1575684006.139300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H8ZYg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! Lot of good stuff in there that resonates well with me:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The input-process-output application-building model must be replaced by a transform-in-place model. Instead of source and object files we should be thinking in terms of modifying the working material in stages.\n\n\u201cstarting\u201da program is alien to the transform-in-place model\n\nthe developer must be able to build interactively any application whose components can be anywhere on the network and that is represented in its entirety on the user interface of a tool that conforms to all the hands-on design principles."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575676344.138400",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "227d89fb-1d58-4b20-a1c3-2aa828767326",
        "type": "message",
        "text": "His Hands-On chart is quite accurate, and very useful for designers of software for beginners. His box and wire user interface for the programming is very similar to what Luna is doing, although Luna is trying to be able to switch back and forth between a syntax view and a node-and-wire view, which is an additional challenge that many of us are skeptical can be achieved before they use up all their capital. I can't imagine how many man-years Conway put into his program builder. Unfortunately his system hits a brick wall where there is a magical message block that handles the user input. It is a simple fact that manipulating graphical objects takes a fair amount of code and that responding to a range of gestures, while taking into account the time periods of those gestures, is a challenging task, and is not easily represented in some graphical way.",
        "user": "UEQ6M68H0",
        "ts": "1575703540.139600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1575703738.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AvVN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "His Hands-On chart is quite accurate, and very useful for designers of software for beginners. His box and wire user interface for the programming is very similar to what Luna is doing, although Luna is trying to be able to switch back and forth between a syntax view and a node-and-wire view, which is an additional challenge that many of us are skeptical can be achieved before they use up all their capital. I can't imagine how many man-years Conway put into his program builder. Unfortunately his system hits a brick wall where there is a magical message block that handles the user input. It is a simple fact that manipulating graphical objects takes a fair amount of code and that responding to a range of gestures, while taking into account the time periods of those gestures, is a challenging task, and is not easily represented in some graphical way."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575676344.138400",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4d80969a-9d80-4cf9-babb-37162ccc02fd",
        "type": "message",
        "text": "<@U5STGTB3J> I think this illustrates my feelings about abstraction well. There's three layers of abstraction here, the weave itself, its internal 'up and down' grid (in the middle) and the code used to generate that grid on the left. Each a very different domain. There is a _lot_ more detail in the weave for sure, but each domain also has its own detail. By creating an abstraction you create a system of knowledge, what Thor Magnusson calls an \"epistemic tool\"",
        "user": "UF89Z7SRF",
        "ts": "1575712138.140100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HGiE6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " I think this illustrates my feelings about abstraction well. There's three layers of abstraction here, the weave itself, its internal 'up and down' grid (in the middle) and the code used to generate that grid on the left. Each a very different domain. There is a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " more detail in the weave for sure, but each domain also has its own detail. By creating an abstraction you create a system of knowledge, what Thor Magnusson calls an \"epistemic tool\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF"
    },
    {
        "client_msg_id": "8A108E8A-E67D-4430-8239-6DB11A084320",
        "type": "message",
        "text": "<@UF89Z7SRF> I can see where our understanding of _abstraction_ diverges. Most of the examples you gave, I would call _translations_ or _transformations_, because you jump between domains. I agree that _transformations_ don\u2019t necessarily remove or add details. My understanding of _transformation_ is that it\u2019s merely a change of form or appearance.\n\nMy understanding of _abstraction_ is that it is a more specific form of _translation_, with the added constraints of what I described as \u201cremoving detail\u201d and also that you stay within the same domain.\n\nYou abstract because you generalize more specific concepts by ignoring some of their details and lift the commonalities you want to highlight into a concept that\u2019s higher up the taxonomy, still in the same domain. You do that so you can remove complexity and more efficiently think or communicate with the now abstracted, simpler concept, no longer having to deal with all the detail removed. For me that\u2019s the whole point of abstracting \u2014 to reduce cognitive burden, to simplify.\n\nIn my taxonomy of definitions, confusingly _abstraction_ is therefore a more specific concept than _transformation_ adding more specific requirements to what it describes.\n\nThat\u2019s how I think about this.\nDoes that make any sense?",
        "user": "U5STGTB3J",
        "ts": "1575716021.160400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1575716799.000000"
        },
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U6FKVSVCK",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "38b26cca-5017-49ec-8ab8-8852953d4b16",
        "type": "message",
        "text": "So run-length encoding isn't an abstraction because you can go in both directions? So an algorithm of how to make a thing isn't more abstract than the thing?",
        "user": "UF89Z7SRF",
        "ts": "1575733182.167200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wb/p2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So run-length encoding isn't an abstraction because you can go in both directions? So an algorithm of how to make a thing isn't more abstract than the thing?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF"
    },
    {
        "client_msg_id": "dafe4e7e-d14e-44c6-ad43-7b5619bcedd3",
        "type": "message",
        "text": "This makes sense, although feels counter-intuitive to me.",
        "user": "UF89Z7SRF",
        "ts": "1575733197.167400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W0M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This makes sense, although feels counter-intuitive to me."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF"
    },
    {
        "client_msg_id": "e477b2aa-1032-4284-9d0f-a520c1b195ec",
        "type": "message",
        "text": "and I'm not sure why you add 'still in the same domain' as a constraint. If you take discrete samples of a continuous signal that seems like it woudl be an abstraction by your definition, except discrete and analogue signals exist in different domains.",
        "user": "UF89Z7SRF",
        "ts": "1575733537.167600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qg2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and I'm not sure why you add 'still in the same domain' as a constraint. If you take discrete samples of a continuous signal that seems like it woudl be an abstraction by your definition, except discrete and analogue signals exist in different domains."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF"
    },
    {
        "client_msg_id": "11df1af5-6da4-4feb-865a-37bf5c7010a6",
        "type": "message",
        "text": "Hello, I'm working on an in-house forms library (managing user input validation and submission, and establishing controlled inputs in HTML) does anyone have advice on favorite forms/input management patterns they've used? I'm most interested in separating view and state management as much as possible. I have a strong preference towards FRP.",
        "user": "UFPPABQ7P",
        "ts": "1575736895.172800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XTk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello, I'm working on an in-house forms library (managing user input validation and submission, and establishing controlled inputs in HTML) does anyone have advice on favorite forms/input management patterns they've used? I'm most interested in separating view and state management as much as possible. I have a strong preference towards FRP."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575736895.172800",
        "reply_count": 9,
        "reply_users_count": 3,
        "latest_reply": "1575834029.185400",
        "reply_users": [
            "UFPPABQ7P",
            "UA14TGLTC",
            "UHWC9PXBL"
        ],
        "subscribed": false
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "In the past, I approached this problem by establishing a `Model` type for every input that would hang onto a few interesting props\u2014\n```{\n  value: T, \n  isTouched: boolean,\n  errors: Array&lt;{id, display}&gt;,\n  warnings: Array&lt;{id, display}&gt;,\n  notes: Array&lt;{id, display}&gt;\n}```",
        "user": "UFPPABQ7P",
        "ts": "1575737238.172900",
        "thread_ts": "1575736895.172800",
        "root": {
            "client_msg_id": "11df1af5-6da4-4feb-865a-37bf5c7010a6",
            "type": "message",
            "text": "Hello, I'm working on an in-house forms library (managing user input validation and submission, and establishing controlled inputs in HTML) does anyone have advice on favorite forms/input management patterns they've used? I'm most interested in separating view and state management as much as possible. I have a strong preference towards FRP.",
            "user": "UFPPABQ7P",
            "ts": "1575736895.172800",
            "team": "T5TCAFTA9",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "XTk",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Hello, I'm working on an in-house forms library (managing user input validation and submission, and establishing controlled inputs in HTML) does anyone have advice on favorite forms/input management patterns they've used? I'm most interested in separating view and state management as much as possible. I have a strong preference towards FRP."
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1575736895.172800",
            "reply_count": 9,
            "reply_users_count": 3,
            "latest_reply": "1575834029.185400",
            "reply_users": [
                "UFPPABQ7P",
                "UA14TGLTC",
                "UHWC9PXBL"
            ],
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WNmD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the past, I approached this problem by establishing a "
                            },
                            {
                                "type": "text",
                                "text": "Model",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " type for every input that would hang onto a few interesting props\u2014\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{\n  value: T, \n  isTouched: boolean,\n  errors: Array<{id, display}>,\n  warnings: Array<{id, display}>,\n  notes: Array<{id, display}>\n}"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "66c15972-4c21-4ec2-93ae-4b4a6d82b4db"
    },
    {
        "client_msg_id": "6763bc28-7e42-4ad4-8d94-a2cfc589c1e3",
        "type": "message",
        "text": "This was a good approach imo due to the ability to aggregate models into larger models\u2014for example only if all child models are touch is the super model touched.",
        "user": "UFPPABQ7P",
        "ts": "1575737308.173200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U2Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was a good approach imo due to the ability to aggregate models into larger models\u2014for example only if all child models are touch is the super model touched."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575736895.172800",
        "parent_user_id": "UFPPABQ7P"
    },
    {
        "client_msg_id": "2d07381b-d417-41c3-9f21-c9fb762e0e25",
        "type": "message",
        "text": "Yes, intuition\u2026 ever since you rejected my initial comment, I was questioning my own intuitive understanding and have since been reading the Wikipedia pages for _transformation_ and _abstraction (computer science), which_ leads to _generalization_, which introduces the domain constraint. And so I thought I share what I learned and refined the description of my understanding based on that.\n\nI'm not saying I've figured it all out and my interpretation is correct and you're wrong; who knows. It's kind of\u2026 abstract. :wink: Language is hard. What I wrote makes sense to me, seems to be aligned with the definitions in a reasonably authoritative source, and so I hope it has a chance to align with other people's understanding, and I feel comfort in that I'm not just making stuff up or rely on my intuition.\n\nI'm still just interpreting something I likely do not fully understand. But we have to agree on something, some kind of starting point, to have a meaningful discussion, and I think we didn't have that, and probably still don't have. And that's fine, as I'm not debating because I want to change your mind or I need to \"be right\". It was a good prompt for me to check my own understanding of these concepts and I coincidentally happen to write something currently where this exercise was just super useful and important and I want to be precise about this.\n\nThanks for your comments that encouraged me to put in effort that I wouldn't have otherwise. Perhaps it'll make my work a little better.",
        "user": "U5STGTB3J",
        "ts": "1575738604.173400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LWKA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, intuition\u2026 ever since you rejected my initial comment, I was questioning my own intuitive understanding and have since been reading the Wikipedia pages for "
                            },
                            {
                                "type": "text",
                                "text": "transformation",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "abstraction (computer science), which",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " leads to "
                            },
                            {
                                "type": "text",
                                "text": "generalization",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which introduces the domain constraint. And so I thought I share what I learned and refined the description of my understanding based on that.\n\nI'm not saying I've figured it all out and my interpretation is correct and you're wrong; who knows. It's kind of\u2026 abstract. "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            },
                            {
                                "type": "text",
                                "text": " Language is hard. What I wrote makes sense to me, seems to be aligned with the definitions in a reasonably authoritative source, and so I hope it has a chance to align with other people's understanding, and I feel comfort in that I'm not just making stuff up or rely on my intuition.\n\nI'm still just interpreting something I likely do not fully understand. But we have to agree on something, some kind of starting point, to have a meaningful discussion, and I think we didn't have that, and probably still don't have. And that's fine, as I'm not debating because I want to change your mind or I need to \"be right\". It was a good prompt for me to check my own understanding of these concepts and I coincidentally happen to write something currently where this exercise was just super useful and important and I want to be precise about this.\n\nThanks for your comments that encouraged me to put in effort that I wouldn't have otherwise. Perhaps it'll make my work a little better."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1575368526.370100",
        "parent_user_id": "UF89Z7SRF"
    }
]