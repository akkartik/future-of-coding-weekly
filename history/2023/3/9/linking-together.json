[
    {
        "client_msg_id": "CA73D926-96D6-47E6-873C-C79EA798D34C",
        "type": "message",
        "text": "a channel i follow on youtube (Creativity Labs) just released three absolutely banger prototype videos in the last hour \n\u2022 <https://youtu.be/2yzP70KTeJo|first> data visualization with a really neat linked code&lt;-&gt;text description interface\n\u2022 <https://youtu.be/vItfhC-5fvs|second> interactive programming visualizer/debugger that\u2019s kind of like the next, more-interactive step for a lot of Bret Victor\u2019s little diagrams\n\u2022 <https://youtu.be/apqF8_7dgbY|third> (ridiculously souped up logging that (in their example) hooks logs from the same place over time, associates them to elements on the page, enables filtering by call site, scope, and spatially on the page\nAre they members of this slack (no idea how i found the channel otherwise)?? If so, I\u2019d love to get in touch!",
        "user": "UHWC9PXBL",
        "ts": "1678321880.602369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NFU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a channel i follow on youtube (Creativity Labs) just released three absolutely banger prototype videos in the last hour \n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://youtu.be/2yzP70KTeJo",
                                        "text": "first"
                                    },
                                    {
                                        "type": "text",
                                        "text": " data visualization with a really neat linked code<->text description interface"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://youtu.be/vItfhC-5fvs",
                                        "text": "second"
                                    },
                                    {
                                        "type": "text",
                                        "text": " interactive programming visualizer/debugger that\u2019s kind of like the next, more-interactive step for a lot of Bret Victor\u2019s little diagrams"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://youtu.be/apqF8_7dgbY",
                                        "text": "third"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (ridiculously souped up logging that (in their example) hooks logs from the same place over time, associates them to elements on the page, enables filtering by call site, scope, and spatially on the page"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAre they members of this slack (no idea how i found the channel otherwise)?? If so, I\u2019d love to get in touch!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1678321920.000000"
        },
        "attachments": [
            {
                "from_url": "https://youtu.be/2yzP70KTeJo",
                "thumb_url": "https://i.ytimg.com/vi/2yzP70KTeJo/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/2yzP70KTeJo?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"DataParticles: Block-based and Language-oriented Authoring ofAnimated Unit Visualizations\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/2yzP70KTeJo",
                "fallback": "YouTube Video: DataParticles: Block-based and Language-oriented Authoring ofAnimated Unit Visualizations",
                "title": "DataParticles: Block-based and Language-oriented Authoring ofAnimated Unit Visualizations",
                "title_link": "https://youtu.be/2yzP70KTeJo",
                "author_name": "Creativity Lab",
                "author_link": "https://www.youtube.com/@creativitylab66",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            },
            {
                "from_url": "https://youtu.be/vItfhC-5fvs",
                "thumb_url": "https://i.ytimg.com/vi/vItfhC-5fvs/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/vItfhC-5fvs?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"CrossCode: Multi-level Visualization of Program Execution\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 2,
                "original_url": "https://youtu.be/vItfhC-5fvs",
                "fallback": "YouTube Video: CrossCode: Multi-level Visualization of Program Execution",
                "title": "CrossCode: Multi-level Visualization of Program Execution",
                "title_link": "https://youtu.be/vItfhC-5fvs",
                "author_name": "Creativity Lab",
                "author_link": "https://www.youtube.com/@creativitylab66",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            },
            {
                "from_url": "https://youtu.be/apqF8_7dgbY",
                "thumb_url": "https://i.ytimg.com/vi/apqF8_7dgbY/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/apqF8_7dgbY?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Log-it: Supporting Programming with Interactive, Contextual, Structured, and Visual Logs\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 3,
                "original_url": "https://youtu.be/apqF8_7dgbY",
                "fallback": "YouTube Video: Log-it: Supporting Programming with Interactive, Contextual, Structured, and Visual Logs",
                "title": "Log-it: Supporting Programming with Interactive, Contextual, Structured, and Visual Logs",
                "title_link": "https://youtu.be/apqF8_7dgbY",
                "author_name": "Creativity Lab",
                "author_link": "https://www.youtube.com/@creativitylab66",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "thread_ts": "1678321880.602369",
        "reply_count": 9,
        "reply_users_count": 8,
        "latest_reply": "1678441718.922699",
        "reply_users": [
            "U013ZLJARC7",
            "UC2A2ARPT",
            "U04S390M7EZ",
            "UHWC9PXBL",
            "U0296ACR13M",
            "U04MAEU6VHN",
            "U04GFG356MV",
            "U02JQA5FY5C"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "boom",
                "users": [
                    "UC2A2ARPT",
                    "U0123H7JRDM",
                    "U0296ACR13M",
                    "UBN9AFS0N",
                    "U02NU8FTL5N"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "4deb1ef7-e19b-466f-ab1f-d9a145d01b79",
        "type": "message",
        "text": "Good stuff! This is coming out of Haijun Jia's lab at UCSD. They have been publishing good work for around ten years, an archive of which is here: <https://creativity.ucsd.edu>",
        "user": "U013ZLJARC7",
        "ts": "1678323182.216459",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z+Bf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good stuff! This is coming out of Haijun Jia's lab at UCSD. They have been publishing good work for around ten years, an archive of which is here: "
                            },
                            {
                                "type": "link",
                                "url": "https://creativity.ucsd.edu"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "8fea6f9b-9d88-4c8d-90a2-e89cd8527152",
        "type": "message",
        "text": "[After watching the first video]\nThis is fascinating stuff. I've been working on similar tooling, but with a totally different approach/perspective, since my team isn't at all interested in sequential data visualization, but rather sequential technical illustration. So it's fun to see what sorts of things are easier/harder about making this stuff approachable to non-coders when you design it around some expectation of data/stats literacy VS arts/visual communication proficiency.\n\n[After watching the second video]\nThis is really neat. I feel like I'll have to watch this one a few times at least to really appreciate what they've done. Immediately, though, I love the attention to graphic design.\n\n[Third video]\nNot so hot on this one.\n\n[Meta-point]\nGarth, this YT channel slaps bumps grinds and rips so hard.",
        "user": "UC2A2ARPT",
        "ts": "1678328961.424329",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rwgJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[After watching the first video]\nThis is fascinating stuff. I've been working on similar tooling, but with a totally different approach/perspective, since my team isn't at all interested in sequential data visualization, but rather sequential technical illustration. So it's fun to see what sorts of things are easier/harder about making this stuff approachable to non-coders when you design it around some expectation of data/stats literacy VS arts/visual communication proficiency.\n\n[After watching the second video]\nThis is really neat. I feel like I'll have to watch this one a few times at least to really appreciate what they've done. Immediately, though, I love the attention to graphic design.\n\n[Third video]\nNot so hot on this one.\n\n[Meta-point]\nGarth, this YT channel slaps bumps grinds and rips so hard."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1678330705.000000"
        },
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "609DBC58-0D75-47DA-A706-46AA351FEEB8",
        "type": "message",
        "text": "Log-it looks really interesting, I\u2019ll watch the video later. \n\nThe ad-hoc object exploration reminds me of dynamic tracing tools, like Erlang tracing or \u201cproduction safe debuggers\u201d like <https://www.rookout.com|https://www.rookout.com> (roughly speaking: query languages to select variables or properties to export into log stream _during_ program execution, without any interruption). \n\nThe context bits - while not exactly the same - make me think of <http://honeycomb.io|honeycomb.io>, where you ditch traditional logs in favor of emitting one big JSON object per \u201cunit of work\u201d (often, web request) and you pile fields into that object. The result is a lot of power to cross reference different parts of execution. Honeycomb in particular pairs it with some really smart visualization / interactive visual outlier identification tools.",
        "user": "U04S390M7EZ",
        "ts": "1678329872.780939",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f+78m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Log-it looks really interesting, I\u2019ll watch the video later. \n\nThe ad-hoc object exploration reminds me of dynamic tracing tools, like Erlang tracing or \u201cproduction safe debuggers\u201d like "
                            },
                            {
                                "type": "link",
                                "url": "https://www.rookout.com",
                                "text": "https://www.rookout.com"
                            },
                            {
                                "type": "text",
                                "text": " (roughly speaking: query languages to select variables or properties to export into log stream "
                            },
                            {
                                "type": "text",
                                "text": "during",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " program execution, without any interruption). \n\nThe context bits - while not exactly the same - make me think of "
                            },
                            {
                                "type": "link",
                                "url": "http://honeycomb.io",
                                "text": "honeycomb.io"
                            },
                            {
                                "type": "text",
                                "text": ", where you ditch traditional logs in favor of emitting one big JSON object per \u201cunit of work\u201d (often, web request) and you pile fields into that object. The result is a lot of power to cross reference different parts of execution. Honeycomb in particular pairs it with some really smart visualization / interactive visual outlier identification tools."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "6AF6C932-7D40-4B97-A9AE-C755A0C8325C",
        "type": "message",
        "text": "the second one reminded me of Hest when they had the assignment value travel down the wire into the variable",
        "user": "UHWC9PXBL",
        "ts": "1678329878.055349",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g2Cv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the second one reminded me of Hest when they had the assignment value travel down the wire into the variable"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1678329887.000000"
        },
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "wink",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5a6696bb-700c-46e1-86bd-ffcbf86d7d54",
        "type": "message",
        "text": "Good stuff!\n\nI found the first one most interesting. Quite similar to some other stuff I've seen for mixing text and interactive visualizations. What was the name of Bret Victor's project before dynamic land? (<http://play.witheve.com/>, and maybe not so similar after all..). And wasn't someone here working on something similar as well?\n\nNot so sure about the second one. Seems maybe too disconnected from the code. I've seen a similar design that draws the control flow on top of code and liked it better.\n\nAs about the third: Printing to csv and loading it up in Excel (as a data source) is underrated :slightly_smiling_face:.",
        "user": "U0296ACR13M",
        "ts": "1678346512.106679",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CU9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good stuff!\n\nI found the first one most interesting. Quite similar to some other stuff I've seen for mixing text and interactive visualizations. What was the name of Bret Victor's project before dynamic land? ("
                            },
                            {
                                "type": "link",
                                "url": "http://play.witheve.com/"
                            },
                            {
                                "type": "text",
                                "text": ", and maybe not so similar after all..). And wasn't someone here working on something similar as well?\n\nNot so sure about the second one. Seems maybe too disconnected from the code. I've seen a similar design that draws the control flow on top of code and liked it better.\n\nAs about the third: Printing to csv and loading it up in Excel (as a data source) is underrated "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0296ACR13M",
            "ts": "1678347098.000000"
        },
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "I am beginning to believe that with AI, it might be possible to let non-programmers make software. Until now, most software was imperative and needed to be managed by knowledgable human. With what I am seeing with LLM such as chatGPT, we might be entering declarative software building and not worry about the internals. In fact, I am going to experiment if I can create few ideas I have in my mind using declarative approach.  Would love if anyone can share examples of such attempts already.\n\nDeclarative approach with AI to me is significantly different than no-coding platform, because no-coding platforms have pre-built lego pieces and will have limited configuration potential. But with AI based system what if we can build the lego pieces to our description on demand?",
        "user": "UAV037WKC",
        "ts": "1678372217.896749",
        "thread_ts": "1677925287.583739",
        "root": {
            "client_msg_id": "7acba099-0ebf-4ab2-8d06-ffc1827ce303",
            "type": "message",
            "text": "<https://twitter.com/garybernhardt/status/1631866199515738113>",
            "user": "UDQBTJ211",
            "ts": "1677925287.583739",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "H+n1f",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "link",
                                    "url": "https://twitter.com/garybernhardt/status/1631866199515738113"
                                }
                            ]
                        }
                    ]
                }
            ],
            "team": "T5TCAFTA9",
            "attachments": [
                {
                    "from_url": "https://twitter.com/garybernhardt/status/1631866199515738113",
                    "ts": 1677902195,
                    "id": 1,
                    "original_url": "https://twitter.com/garybernhardt/status/1631866199515738113",
                    "fallback": "<https://twitter.com/garybernhardt|@garybernhardt>: 1960s: \"COBOL will let non-programmers make the software!\"\n\n1980s: \"4GLs will let non-programmers make the software!\"\n\n2000s: \"UML will let non-programmers make the software!\"\n\n2020s: \"AI will let non-programmers make the software!\"",
                    "text": "1960s: \"COBOL will let non-programmers make the software!\"\n\n1980s: \"4GLs will let non-programmers make the software!\"\n\n2000s: \"UML will let non-programmers make the software!\"\n\n2020s: \"AI will let non-programmers make the software!\"",
                    "author_name": "Gary Bernhardt",
                    "author_link": "https://twitter.com/garybernhardt/status/1631866199515738113",
                    "author_icon": "https://pbs.twimg.com/profile_images/1328504683095199745/YXr3Xioa_normal.jpg",
                    "author_subname": "@garybernhardt",
                    "service_name": "twitter",
                    "service_url": "https://twitter.com/",
                    "footer": "Twitter",
                    "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
                }
            ],
            "thread_ts": "1677925287.583739",
            "reply_count": 19,
            "reply_users_count": 11,
            "latest_reply": "1678404020.541969",
            "reply_users": [
                "UDQBTJ211",
                "U03R0B9U1GD",
                "UAJKEBGP8",
                "U016VUZGUUQ",
                "UJBAJNFLK",
                "U035QJ14NN9",
                "UBSMEUXAA",
                "U04MTMF6Y4W",
                "UAV037WKC",
                "U03E4LY27FS",
                "U02NU8FTL5N"
            ],
            "is_locked": false,
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JaiCw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am beginning to believe that with AI, it might be possible to let non-programmers make software. Until now, most software was imperative and needed to be managed by knowledgable human. With what I am seeing with LLM such as chatGPT, we might be entering declarative software building and not worry about the internals. In fact, I am going to experiment if I can create few ideas I have in my mind using declarative approach.  Would love if anyone can share examples of such attempts already.\n\nDeclarative approach with AI to me is significantly different than no-coding platform, because no-coding platforms have pre-built lego pieces and will have limited configuration potential. But with AI based system what if we can build the lego pieces to our description on demand?"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "24126059-e85a-4a32-8ed1-118cbe7d0d84",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U035QJ14NN9",
                    "U03E4LY27FS",
                    "U02NU8FTL5N",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "3ce6c725-a792-4c95-b9d4-4c7d921d3b2a",
        "type": "message",
        "text": "(ftr I don't think bret worked on eve, that was chris granger <https://chris-granger.com/resume/>)",
        "user": "U04MAEU6VHN",
        "ts": "1678378273.595259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eB42Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(ftr I don't think bret worked on eve, that was chris granger "
                            },
                            {
                                "type": "link",
                                "url": "https://chris-granger.com/resume/"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U0296ACR13M"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "351ae352-7594-4d96-88bd-744f47e6f657",
        "type": "message",
        "text": "Well no wonder I was having so difficult time googling the project :sweat_smile:",
        "user": "U0296ACR13M",
        "ts": "1678378851.460029",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7o9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well no wonder I was having so difficult time googling the project "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "2e184c0d-8468-4a63-8f4b-0075de62407b",
        "type": "message",
        "text": "Data Particles looks :fire: . Really interested in language-oriented authoring tools.",
        "user": "U04GFG356MV",
        "ts": "1678397795.068949",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g=MZV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Data Particles looks "
                            },
                            {
                                "type": "emoji",
                                "name": "fire",
                                "unicode": "1f525"
                            },
                            {
                                "type": "text",
                                "text": " . Really interested in language-oriented authoring tools."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "463e131a-0eed-48bb-add5-dbad1dfd0f7d",
        "type": "message",
        "text": "today found this on twitter about the CrossCode project\n<https://twitter.com/devamarh/status/1633883490151464963?t=zfhcE7_x7VP21ff_p3QEKg&amp;s=35>",
        "user": "U02JQA5FY5C",
        "ts": "1678441718.922699",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k/K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "today found this on twitter about the CrossCode project\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/devamarh/status/1633883490151464963?t=zfhcE7_x7VP21ff_p3QEKg&s=35"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://twitter.com/devamarh/status/1633883490151464963?t=zfhcE7_x7VP21ff_p3QEKg&amp;s=35",
                "ts": 1678383154,
                "thumb_url": "https://pbs.twimg.com/ext_tw_video_thumb/1633883400800206848/pu/img/t75HcNhpyNXTLHR7.jpg",
                "thumb_width": 1200,
                "thumb_height": 410,
                "video_html": "<video controls poster=\"https://pbs.twimg.com/ext_tw_video_thumb/1633883400800206848/pu/img/t75HcNhpyNXTLHR7.jpg\" width=\"1200\" height=\"410\"><source type=\"video/mp4\" src=\"https://video.twimg.com/ext_tw_video/1633883400800206848/pu/vid/1200x410/J6EIG1NiuLRP0JXT.mp4?tag=12\"></video>",
                "video_html_width": 1200,
                "video_html_height": 410,
                "id": 1,
                "original_url": "https://twitter.com/devamarh/status/1633883490151464963?t=zfhcE7_x7VP21ff_p3QEKg&amp;s=35",
                "fallback": "<https://twitter.com/devamarh|@devamarh>: My #CHI2023 paper :)\n\nDebugging code doesn't have to be a headache. CrossCode visualizes your JavaScript code at multiple levels of abstraction \u2013 so you can easily find key steps without being overwhelmed by all the execution details. (1/5)",
                "text": "My #CHI2023 paper :)\n\nDebugging code doesn't have to be a headache. CrossCode visualizes your JavaScript code at multiple levels of abstraction \u2013 so you can easily find key steps without being overwhelmed by all the execution details. (1/5)",
                "author_name": "Devamardeep Hayatpur",
                "author_link": "https://twitter.com/devamarh/status/1633883490151464963",
                "author_icon": "https://pbs.twimg.com/profile_images/1326679086018736130/GCzKVokW_normal.jpg",
                "author_subname": "@devamarh",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "thread_ts": "1678321880.602369",
        "parent_user_id": "UHWC9PXBL"
    }
]