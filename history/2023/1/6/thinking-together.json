[
    {
        "client_msg_id": "f52ffad9-a77f-435b-8c6c-1f171d49709e",
        "type": "message",
        "text": "Inspired by <https://futureofcoding.slack.com/archives/C5U3SEW6A/p1672756060085649> and <https://futureofcoding.slack.com/archives/C5U3SEW6A/p1672816690782479>, plus my daily work with a Smalltalk system, I started thinking about high-level architectures of information processing systems.\n\nSpreadsheets are two-layer systems, with a data grid on top and a code grid below it. That's a good architecture for dealing with heterogeneous grid-shaped data and shallow computation. For homogeneous grid-shaped data (arrays, data frames) you'd prefer to compute with the grid as a whole, and for complex/deep computation, you want a more code-centric architecture. You can of course prepare the complex code in some other architecture and just call it from a spreadsheet. High-level architectures can be composed.\n\nDataflow graphs, of which Data Rabbit is an amazing implementation, have nodes containing code and data flowing through the edges. They can deal with irregularly shaped data, even messy data, but, like spreadsheets, they are limited to shallow computation.\n\nA Smalltalk image is a code database built on top of a an unstructured \"object lake\". It's great for dealing with complex code, but has no high-level structure for data. You can, and have to, roll your own. From this point of view, a Smalltalk image is the perfect complement to a spreadsheet or a data flow graph, having opposite strengths and weaknesses.\n\nSo... are they more such high-level structures that have proven useful in practice? Is there just a small set whose elements can be combined, or should we expect a large number of unrelated architectures being good for specific purposes? Note that I am thinking about \"good for\", not \"applicable to\". All Turing-complete systems are equivalent in principle, but that doesn't make them good tools for all purposes. My question is ultimately one of human-computer interaction.",
        "user": "UJBAJNFLK",
        "ts": "1673002504.972119",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/u=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Inspired by "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1672756060085649"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1672816690782479"
                            },
                            {
                                "type": "text",
                                "text": ", plus my daily work with a Smalltalk system, I started thinking about high-level architectures of information processing systems.\n\nSpreadsheets are two-layer systems, with a data grid on top and a code grid below it. That's a good architecture for dealing with heterogeneous grid-shaped data and shallow computation. For homogeneous grid-shaped data (arrays, data frames) you'd prefer to compute with the grid as a whole, and for complex/deep computation, you want a more code-centric architecture. You can of course prepare the complex code in some other architecture and just call it from a spreadsheet. High-level architectures can be composed.\n\nDataflow graphs, of which Data Rabbit is an amazing implementation, have nodes containing code and data flowing through the edges. They can deal with irregularly shaped data, even messy data, but, like spreadsheets, they are limited to shallow computation.\n\nA Smalltalk image is a code database built on top of a an unstructured \"object lake\". It's great for dealing with complex code, but has no high-level structure for data. You can, and have to, roll your own. From this point of view, a Smalltalk image is the perfect complement to a spreadsheet or a data flow graph, having opposite strengths and weaknesses.\n\nSo... are they more such high-level structures that have proven useful in practice? Is there just a small set whose elements can be combined, or should we expect a large number of unrelated architectures being good for specific purposes? Note that I am thinking about \"good for\", not \"applicable to\". All Turing-complete systems are equivalent in principle, but that doesn't make them good tools for all purposes. My question is ultimately one of human-computer interaction."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1672756060085649",
                "ts": "1672756060.085649",
                "author_id": "U018S42NMMM",
                "channel_id": "C5U3SEW6A",
                "channel_team": "T5TCAFTA9",
                "channel_name": "linking-together",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C5U3SEW6A",
                        "ts": "1672756060.085649",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "LaMl",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "link",
                                                    "url": "https://www.youtube.com/watch?v=U9uZlEqUQw0"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " by "
                                                },
                                                {
                                                    "type": "user",
                                                    "user_id": "UNE19BRU4"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1672756060085649",
                "fallback": "[January 3rd, 2023 6:27 AM] nilesh.tr: <https://www.youtube.com/watch?v=U9uZlEqUQw0> by <@UNE19BRU4>",
                "text": "<https://www.youtube.com/watch?v=U9uZlEqUQw0> by <@UNE19BRU4>",
                "author_name": "Nilesh Trivedi",
                "author_link": "https://futureofcoding.slack.com/team/U018S42NMMM",
                "author_icon": "https://avatars.slack-edge.com/2020-08-20/1311510042709_8bcc9424861242616fb3_48.jpg",
                "author_subname": "Nilesh Trivedi",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in #linking-together"
            },
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1672816690782479",
                "ts": "1672816690.782479",
                "author_id": "U013ZLJARC7",
                "channel_id": "C5U3SEW6A",
                "channel_team": "T5TCAFTA9",
                "channel_name": "linking-together",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C5U3SEW6A",
                        "ts": "1672816690.782479",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "gbr7o",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "Loads of good FOC stuff here:\n"
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https://www.youtube.com/watch?v=bXRDfxp_4H0"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 2,
                "original_url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1672816690782479",
                "fallback": "[January 3rd, 2023 11:18 PM] jack529: Loads of good FOC stuff here:\n<https://www.youtube.com/watch?v=bXRDfxp_4H0>",
                "text": "Loads of good FOC stuff here:\n<https://www.youtube.com/watch?v=bXRDfxp_4H0>",
                "author_name": "Jack Rusher",
                "author_link": "https://futureofcoding.slack.com/team/U013ZLJARC7",
                "author_icon": "https://secure.gravatar.com/avatar/f4ae9e5b29386489b18b3bc6b1f41a22.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-48.png",
                "author_subname": "Jack Rusher",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in #linking-together"
            }
        ],
        "thread_ts": "1673002504.972119",
        "reply_count": 9,
        "reply_users_count": 5,
        "latest_reply": "1673107276.558049",
        "reply_users": [
            "UE6EFEPTQ",
            "UJBAJNFLK",
            "UQ706GB9U",
            "U013ZLJARC7",
            "U03TX2GT080"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "54ebd9cd-5e3c-4274-a8cc-87866328faca",
        "type": "message",
        "text": "I don't watch videos normally, because I can scan text in a tenth of the time, so I'm not entirely sure what you're asking here: do you mean are there architectures that structure both code and data in the UX?",
        "user": "UE6EFEPTQ",
        "ts": "1673004163.236039",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nFJT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't watch videos normally, because I can scan text in a tenth of the time, so I'm not entirely sure what you're asking here: do you mean are there architectures that structure both code and data in the UX?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "9256a728-bd9a-4c58-8ef2-bdead2b42fb8",
        "type": "message",
        "text": "Could be UX, as in spreadsheets or in Data Rabbit, both of which target end users. But in a scenario where developers and users are distinct, it would be the top level at which developers work when assembling a system.",
        "user": "UJBAJNFLK",
        "ts": "1673007109.222499",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yBYeU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could be UX, as in spreadsheets or in Data Rabbit, both of which target end users. But in a scenario where developers and users are distinct, it would be the top level at which developers work when assembling a system."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "9858738A-DE45-43E1-9287-83B765D83167",
        "type": "message",
        "text": "Have you looked into pandas python library. it has a data frames class that operates kind of like the data layer of a spread sheet. ",
        "user": "UQ706GB9U",
        "ts": "1673024441.662369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yqq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you looked into pandas python library. it has a data frames class that operates kind of like the data layer of a spread sheet"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "9f0b64c7-9b8d-4dbc-9463-d0aae47e57e6",
        "type": "message",
        "text": "The Smalltalk \"object lake\" (love the term) is, crucially, organized as a tree. There's a similar structure to the objects in CLOS. I would say that a tree of things that inherit (for some definition of \"inherit\") traits from their parents is one of these \"mother sauce\" sorts of things.",
        "user": "U013ZLJARC7",
        "ts": "1673024926.895639",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oKTe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Smalltalk \"object lake\" (love the term) is, crucially, organized as a tree. There's a similar structure to the objects in CLOS. I would say that a tree of things that inherit (for some definition of \"inherit\") traits from their parents is one of these \"mother sauce\" sorts of things."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "a2767282-28e7-4fd2-a827-a87775acf44e",
        "type": "message",
        "text": "I\u2019ve actually been thinking a lot about this topic as we\u2019ve been building a new spreadsheet web app. What we came up with was to nudge folks to input in their data properly and separate data from their analysis (all the math and functions). So that\u2019s why our app looks like table grid blocks on an endless canvas vs the more traditional spreadsheet editor which is just one big table grid",
        "user": "U03TX2GT080",
        "ts": "1673028707.753259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GIo2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve actually been thinking a lot about this topic as we\u2019ve been building a new spreadsheet web app. What we came up with was to nudge folks to input in their data properly and separate data from their analysis (all the math and functions). So that\u2019s why our app looks like table grid blocks on an endless canvas vs the more traditional spreadsheet editor which is just one big table grid"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "964bb1d4-1cae-4f5b-adcb-e6e65982c0c3",
        "type": "message",
        "text": "<@U03TX2GT080> Separating data from analysis is very much the mainstream approach. What's interesting to me is how they end up being put together in the end. The mainstream there is having the code manage the data in an ad-hoc fashion, through the OS' file system.\nSo how does this work in your new spreadsheet? You have the data grid as in traditional spreadsheets. How is it hooked up with the code?",
        "user": "UJBAJNFLK",
        "ts": "1673082101.095889",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Ojjh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03TX2GT080"
                            },
                            {
                                "type": "text",
                                "text": " Separating data from analysis is very much the mainstream approach. What's interesting to me is how they end up being put together in the end. The mainstream there is having the code manage the data in an ad-hoc fashion, through the OS' file system.\nSo how does this work in your new spreadsheet? You have the data grid as in traditional spreadsheets. How is it hooked up with the code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "afa8876f-75c2-4a55-982a-9951389f333d",
        "type": "message",
        "text": "<@U013ZLJARC7> Yes, tree structures are important. But I don't agree that Smalltalk or CLOS objects form a tree. Cycles are permitted, and actually quite frequent, at least in Smalltalk. So at the lowest level, it's just objects pointing to each other.\nBTW, I didn't make up the term \"object lake\", I saw it somewhere, but don't remember where!",
        "user": "UJBAJNFLK",
        "ts": "1673082239.964959",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o=jR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " Yes, tree structures are important. But I don't agree that Smalltalk or CLOS objects form a tree. Cycles are permitted, and actually quite frequent, at least in Smalltalk. So at the lowest level, it's just objects pointing to each other.\nBTW, I didn't make up the term \"object lake\", I saw it somewhere, but don't remember where!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "42e55b7d-4560-4511-a211-62c208916d8b",
        "type": "message",
        "text": "<@UQ706GB9U> Pandas works much like other data-frame-based languages and libraries (R, ...): the data takes the form of tables (homogeneous in rows, heterogeneous in columns), and the code operates on the aggregate (table, row, column), not the individual data item as in spreadsheets.",
        "user": "UJBAJNFLK",
        "ts": "1673082357.409689",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tfsm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UQ706GB9U"
                            },
                            {
                                "type": "text",
                                "text": " Pandas works much like other data-frame-based languages and libraries (R, ...): the data takes the form of tables (homogeneous in rows, heterogeneous in columns), and the code operates on the aggregate (table, row, column), not the individual data item as in spreadsheets."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "dd5a8f94-0bfb-4da0-bbe9-501990a9be87",
        "type": "message",
        "text": "I'm talking about the tree (which can reticulate, of course) represented by (in the Smalltalk context) the class browser. The objects themselves relate to that tree-shaped thing in specific ways, &amp;c. There's similar stuff going on in CLOS, but with different affordances for navigating those relationships.",
        "user": "U013ZLJARC7",
        "ts": "1673107276.558049",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g=o7y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm talking about the tree (which can reticulate, of course) represented by (in the Smalltalk context) the class browser. The objects themselves relate to that tree-shaped thing in specific ways, &c. There's similar stuff going on in CLOS, but with different affordances for navigating those relationships."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1673002504.972119",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    }
]