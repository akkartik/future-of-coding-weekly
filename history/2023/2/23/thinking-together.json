[
    {
        "client_msg_id": "d7791f8e-9885-4400-826a-bfab344a37a8",
        "type": "message",
        "text": "Another thing I'd be interested is solutions for bidirectional text transformations (for source code). Ideally a system in which you could define transformations once, and get both AtoB and BtoA transformers",
        "user": "U0296ACR13M",
        "ts": "1677155560.177159",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JT5G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another thing I'd be interested is solutions for bidirectional text transformations (for source code). Ideally a system in which you could define transformations once, and get both AtoB and BtoA transformers"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1677155560.177159",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1677372669.380089",
        "reply_users": [
            "UA14TGLTC"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f5ce1e45-af36-4e3c-b631-4af2b9712b8e",
        "type": "message",
        "text": "For me the question is \"continuation\" (analogous to \"analytic continuation\").  For source code transformations, I imagine robust automatic error handling stemming from the fact that most transformations are somewhat compositional, I mean the action on the whole text is sort of a combination on the action of the parts `f(text) = f(text.some_part) ** f(text.some_other_part)`.\n\nIn as much as LLMs \"think\" and \"are creative\", I'd say it comes from the attempt to find the \"conceptual space\" defined by the training text.  Here the core transformation is from some chunk of text to the next chunk plus some attention data structure that gets updated along the way.",
        "user": "UA14TGLTC",
        "ts": "1677372669.380089",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mmm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me the question is \"continuation\" (analogous to \"analytic continuation\").  For source code transformations, I imagine robust automatic error handling stemming from the fact that most transformations are somewhat compositional, I mean the action on the whole text is sort of a combination on the action of the parts "
                            },
                            {
                                "type": "text",
                                "text": "f(text) = f(text.some_part) ** f(text.some_other_part)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nIn as much as LLMs \"think\" and \"are creative\", I'd say it comes from the attempt to find the \"conceptual space\" defined by the training text.  Here the core transformation is from some chunk of text to the next chunk plus some attention data structure that gets updated along the way."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1677155560.177159",
        "parent_user_id": "U0296ACR13M"
    }
]