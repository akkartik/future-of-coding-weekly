[
    {
        "client_msg_id": "c5c1daa6-6bec-48c3-87ed-42d7bebd9a3d",
        "type": "message",
        "text": "Brooks said in the Mythical Man Month.\n\nFail.\n\nFail again.\n\nSucceed.\n\nYou want to find a way to fail-fast the first two times.  Using type-checked, bloatware languages ain\u2019t the way to fail-fast.",
        "user": "UGWUJUZHT",
        "ts": "1681203504.609419",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mAI+D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Brooks said in the Mythical Man Month.\n\nFail.\n\nFail again.\n\nSucceed.\n\nYou want to find a way to fail-fast the first two times.  Using type-checked, bloatware languages ain\u2019t the way to fail-fast."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681203504.609419",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1681642404.304789",
        "reply_users": [
            "UGWUJUZHT",
            "U035QJ14NN9",
            "U016VUZGUUQ",
            "UM7034QUQ"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U04BFFZNGRY",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "47405ed8-c6f2-49a6-a727-5318b200fc0e",
        "type": "message",
        "text": "I would, further, modify this to\n1. Fail.\n2. Fail again.\n3. Succeed.\n4. Productize.\nUsing type-checked, bloatware languages ain\u2019t the way to perform steps 1-3.\n\nArchitecture \u2261 1-3\nEngineering \u2261 3\nCoding \u2261 4\nProduction Engineering \u2261 4\nQ/A \u2261 4\n...",
        "user": "UGWUJUZHT",
        "ts": "1681203540.599779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Spmb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would, further, modify this to\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Fail."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Fail again."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Succeed."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Productize."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nUsing type-checked, bloatware languages ain\u2019t the way to perform steps 1-3.\n\nArchitecture \u2261 1-3\nEngineering \u2261 3\nCoding \u2261 4\nProduction Engineering \u2261 4\nQ/A \u2261 4\n..."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681203504.609419",
        "parent_user_id": "UGWUJUZHT"
    },
    {
        "client_msg_id": "27a24f5a-f8a8-45b8-8f0b-9bb4a1f6783d",
        "type": "message",
        "text": "I've been thinking: We might need new languages for describing workflows that involve both humans and bots. Something much nicer than BPMN (which is XML-based): <https://twitter.com/nileshtrivedi/status/1645779203210764289>",
        "user": "U018S42NMMM",
        "ts": "1681219934.723879",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/mL6J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking: We might need new languages for describing workflows that involve both humans and bots. Something much nicer than BPMN (which is XML-based): "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/nileshtrivedi/status/1645779203210764289"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681219934.723879",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1681390855.077479",
        "reply_users": [
            "UGWUJUZHT",
            "U016VUZGUUQ",
            "U018S42NMMM"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "fc6045af-2750-4a25-917b-4ca57528d7a4",
        "type": "message",
        "text": "I would suggest: starting by critiquing the current technology.\n\nFor starters: I don\u2019t know anything about BPMN, but, looking at the posted diagram, I see:\n1. A wall of detail\n\u2022 \u201csimplicity is the lack of nuance\u201d\n\u2022 there seem to be no layers, everything is laid out flat\n\u2022 breaking of The Rule of 7 (no more than 7+-2 items in an eye-full)\n\u2022 the diagram is \u201ctoo busy\u201d\n2. Too many icons\n\u2022 I count something like 5 different kinds of figures\n\u2022 The rectangles have many kinds of sub-icons in the upper left corners\n\u2022 At least 3 kinds of lines\n\u2022 text too small to read \n\u2022 EEs used to draw all sorts of icons on schematics, then, later, learned to draw only rectangles and lines and text\n3. Apparent breaking of Containment\n\u2022 Arrows appear to poke through walls instead of being attached to well-defined Ports (aka \u201cad hoc\u201d)\nThe system probably needs all of that detail, but, the reader should not be forced to read all of the details at once.  If interested, the reader should be able to drill down into components to see more detail, then, drill down into that detail to see even more detail, ad infinitum.\n\n[aside: Lispers hate XML because it is the only syntax uglier than Lisp]",
        "user": "UGWUJUZHT",
        "ts": "1681222093.752539",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D7lGS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would suggest: starting by critiquing the current technology.\n\nFor starters: I don\u2019t know anything about BPMN, but, looking at the posted diagram, I see:\n1. A wall of detail\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\u201csimplicity is the lack of nuance\u201d"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "there seem to be no layers, everything is laid out flat"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "breaking of The Rule of 7 (no more than 7+-2 items in an eye-full)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the diagram is \u201ctoo busy\u201d"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "2. Too many icons\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I count something like 5 different kinds of figures"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The rectangles have many kinds of sub-icons in the upper left corners"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "At least 3 kinds of lines"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "text too small to read "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "EEs used to draw all sorts of icons on schematics, then, later, learned to draw only rectangles and lines and text"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "3. Apparent breaking of Containment\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Arrows appear to poke through walls instead of being attached to well-defined Ports (aka \u201cad hoc\u201d)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe system probably needs all of that detail, but, the reader should not be forced to read all of the details at once.  If interested, the reader should be able to drill down into components to see more detail, then, drill down into that detail to see even more detail, ad infinitum.\n\n[aside: Lispers hate XML because it is the only syntax uglier than Lisp]"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681219934.723879",
        "parent_user_id": "U018S42NMMM",
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U018S42NMMM"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5D306343-50EF-43E6-9BF8-941B21F89C14",
        "type": "message",
        "text": "Type checking allows you to detect failure even before you run the code. It's a way to fail even faster.",
        "user": "U035QJ14NN9",
        "ts": "1681228915.647059",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ohbpK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Type checking allows you to detect failure even before you run the code. It's a way to fail even faster"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681203504.609419",
        "parent_user_id": "UGWUJUZHT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03R0B9U1GD",
                    "U016VUZGUUQ",
                    "UQ706GB9U",
                    "UM7034QUQ"
                ],
                "count": 4
            },
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9fd0c719-445d-468d-9186-90da337397cd",
        "type": "message",
        "text": "Just don't conflate \"type checked\" and \"bloatware\". It's definitely bad to have both, but they're not the same.\n\nI really wish OCaml would take off. I really really wish 1ML would take off, but last I heard that's still a research prototype, so... :( I guess we're relying on Rust and Swift to carry the torch of nice types into the mainstream. (I like Rust, but everyone would be better served by it being a niche language for when GC is unaffordable.)",
        "user": "U016VUZGUUQ",
        "ts": "1681232653.666159",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ID+DM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just don't conflate \"type checked\" and \"bloatware\". It's definitely bad to have both, but they're not the same.\n\nI really wish OCaml would take off. I really really wish 1ML would take off, but last I heard that's still a research prototype, so... :( I guess we're relying on Rust and Swift to carry the torch of nice types into the mainstream. (I like Rust, but everyone would be better served by it being a niche language for when GC is unaffordable.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681203504.609419",
        "parent_user_id": "UGWUJUZHT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U035QJ14NN9",
                    "U04QB9V2RNG"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "40af0664-f7a5-4edf-99ee-c4a2af575e3d",
        "type": "message",
        "text": "I'm trying to figure out how to formally treat jobs that pass from humans to automation and back as continuations. An agent receives a continuation plus some description of work to do, does their part, adds it to the continuation's context or somesuch, and reactivates it, which may or may not be the same as assigning it to a human or kicking off a process. There's a certain sense where e.g. work tickets just trivially are continuations, but getting mileage out of the concept is tricky. Maybe someone here will make headway with it.",
        "user": "U016VUZGUUQ",
        "ts": "1681233006.660919",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bc/SG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm trying to figure out how to formally treat jobs that pass from humans to automation and back as continuations. An agent receives a continuation plus some description of work to do, does their part, adds it to the continuation's context or somesuch, and reactivates it, which may or may not be the same as assigning it to a human or kicking off a process. There's a certain sense where e.g. work tickets just trivially are continuations, but getting mileage out of the concept is tricky. Maybe someone here will make headway with it."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681219934.723879",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "type": "message",
        "text": "There do exist some nice DSLs for these. Essentially, workflows are Turing-complete programs, for multiple processors - some of which are humans while others are machines.\n\nThis one is called Flor: <https://github.com/floraison/flor>",
        "files": [
            {
                "id": "F052YGR0MMK",
                "created": 1681374426,
                "timestamp": 1681374426,
                "name": "workflow.jpg",
                "title": "workflow.jpg",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "U018S42NMMM",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 119345,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F052YGR0MMK/workflow.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F052YGR0MMK/download/workflow.jpg",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 185,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 246,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_720.jpg",
                "thumb_720_w": 720,
                "thumb_720_h": 369,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 410,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_960.jpg",
                "thumb_960_w": 960,
                "thumb_960_h": 492,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F052YGR0MMK-536e897882/workflow_1024.jpg",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 525,
                "original_w": 1280,
                "original_h": 656,
                "thumb_tiny": "AwAYADC+WwSKM+xNBxuPzUoKjvQAZ/2TTsD/ACaTcvrRuX1oAUDFLTd6+tAYE4BoAYep4P5UvP8Ad/SnHvTqAGc/3f0o5/ufpT6KAGf8ApR1+5inUUAf/9k=",
                "permalink": "https://futureofcoding.slack.com/files/U018S42NMMM/F052YGR0MMK/workflow.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F052YGR0MMK-b9de86bb89",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U018S42NMMM",
        "display_as_bot": false,
        "ts": "1681374460.911419",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ALZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There do exist some nice DSLs for these. Essentially, workflows are Turing-complete programs, for multiple processors - some of which are humans while others are machines.\n\nThis one is called Flor: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/floraison/flor"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "6ffb39aa-0872-4996-b8b1-d60eb5d541d0",
        "thread_ts": "1681219934.723879",
        "parent_user_id": "U018S42NMMM",
        "subtype": "thread_broadcast",
        "root": {
            "client_msg_id": "27a24f5a-f8a8-45b8-8f0b-9bb4a1f6783d",
            "type": "message",
            "text": "I've been thinking: We might need new languages for describing workflows that involve both humans and bots. Something much nicer than BPMN (which is XML-based): <https://twitter.com/nileshtrivedi/status/1645779203210764289>",
            "user": "U018S42NMMM",
            "ts": "1681219934.723879",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "/mL6J",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "I've been thinking: We might need new languages for describing workflows that involve both humans and bots. Something much nicer than BPMN (which is XML-based): "
                                },
                                {
                                    "type": "link",
                                    "url": "https://twitter.com/nileshtrivedi/status/1645779203210764289"
                                }
                            ]
                        }
                    ]
                }
            ],
            "team": "T5TCAFTA9",
            "thread_ts": "1681219934.723879",
            "reply_count": 6,
            "reply_users_count": 3,
            "latest_reply": "1681390855.077479",
            "reply_users": [
                "UGWUJUZHT",
                "U016VUZGUUQ",
                "U018S42NMMM"
            ],
            "is_locked": false,
            "subscribed": false
        },
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "77fd8d18-cad8-43ac-936f-2fbbda8ef1b6",
        "type": "message",
        "text": "Workflows require extreme decoupling (which I have come to call 0D).  Synchronous software programming languages inhibit this kind of thing.",
        "user": "UGWUJUZHT",
        "ts": "1681382526.209879",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f2R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Workflows require extreme decoupling (which I have come to call 0D).  Synchronous software programming languages inhibit this kind of thing."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681219934.723879",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "d5413266-3a8f-4403-acd4-ae87d383c943",
        "type": "message",
        "text": "(FMI: where is this jpg?  I want to pass it on to a friend, but I haven\u2019t found it in the github yet).",
        "user": "UGWUJUZHT",
        "ts": "1681382831.657369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n=M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(FMI: where is this jpg?  I want to pass it on to a friend, but I haven\u2019t found it in the github yet)."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681219934.723879",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "1eee9f82-f54e-4943-b074-03ba1e56522d",
        "type": "message",
        "text": "Flor: <https://github.com/floraison/flor>\nScreenshot is from this page: <https://jmettraux.skepti.ch/20190407.html>",
        "user": "U018S42NMMM",
        "ts": "1681390855.077479",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B3Mc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Flor: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/floraison/flor"
                            },
                            {
                                "type": "text",
                                "text": "\nScreenshot is from this page: "
                            },
                            {
                                "type": "link",
                                "url": "https://jmettraux.skepti.ch/20190407.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681219934.723879",
        "parent_user_id": "U018S42NMMM",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT",
                    "U016VUZGUUQ"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "966959e8-cd7f-475f-ae52-1f0b77a23fad",
        "type": "message",
        "text": "Ocaml is used by jane st. Idk if that's taking off necessarily, but by dollar effect it might rank fairly high in languages.",
        "user": "UM7034QUQ",
        "ts": "1681642345.325409",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+noPM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ocaml is used by jane st. Idk if that's taking off necessarily, but by dollar effect it might rank fairly high in languages."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681203504.609419",
        "parent_user_id": "UGWUJUZHT"
    },
    {
        "client_msg_id": "04f0bfde-ef27-49b5-88bf-ba20227f8cf0",
        "type": "message",
        "text": "Typescript types aren't too bad. There's definitely some bloat though.",
        "user": "UM7034QUQ",
        "ts": "1681642404.304789",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gsk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Typescript types aren't too bad. There's definitely some bloat though."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1681203504.609419",
        "parent_user_id": "UGWUJUZHT"
    }
]