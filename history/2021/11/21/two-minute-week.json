[
    {
        "client_msg_id": "f21f3773-5a7e-46db-8b69-a553258ef783",
        "type": "message",
        "text": ":wave: Hi, all! This is my first post on Alpha here, so I want to establish a little bit of context. (The next posts will be shorter.)\n\nAlpha\u2014a programming language for extensible systems (and hopefully malleable ones in the future). I imagine it as something in between of Julia, Emacs Lisp, and Smalltalk.\n\nI\u2019ve been working on it for a month now, so it\u2019s still an infant. It has REPL, user-defined types, multi-methods, and a print function, but not much else :grin:\n\nSo far it serves two purposes:\n\u2022 it is a playground for me to experiment with PLT ideas (multi-methods, JIT, gradual typing, etc)\n\u2022 it allows me to gain actual experience implementing languages (my problem is that I have too much knowledge and too little practice)\nThis week I was adding a garbage collector. It was tougher than I expected, but I got it working with the host language. The compiler still needs to be modified to produce the compatible code, so that\u2019s the focus of the next week.\n\nHere is a larger update for this week with memory layout images and some tips on debugging GC:\n<https://www.alexeyshmalko.com/alpha-3/>",
        "user": "UPX3PH28N",
        "ts": "1637514717.060300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.alexeyshmalko.com/alpha-3/",
                "service_name": "Alexey Shmalko",
                "title": "Alpha #3: dynamically-sized types and almost-finished garbage collection",
                "title_link": "https://www.alexeyshmalko.com/alpha-3/",
                "text": "SVec is a small vector\u2014an immutable length-prefixed array of pointers.",
                "image_url": "https://www.alexeyshmalko.com/_next/static/resources/01232046ce4cbd52232a/svec-layout.png",
                "image_width": 580,
                "image_height": 250,
                "image_bytes": 213694,
                "fallback": "Alexey Shmalko: Alpha #3: dynamically-sized types and almost-finished garbage collection",
                "service_icon": "https://www.alexeyshmalko.com/favicon.ico",
                "id": 1,
                "original_url": "https://www.alexeyshmalko.com/alpha-3/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c=1da",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "wave"
                            },
                            {
                                "type": "text",
                                "text": " Hi, all! This is my first post on Alpha here, so I want to establish a little bit of context. (The next posts will be shorter.)\n\nAlpha\u2014a programming language for extensible systems (and hopefully malleable ones in the future). I imagine it as something in between of Julia, Emacs Lisp, and Smalltalk.\n\nI\u2019ve been working on it for a month now, so it\u2019s still an infant. It has REPL, user-defined types, multi-methods, and a print function, but not much else "
                            },
                            {
                                "type": "emoji",
                                "name": "grin"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSo far it serves two purposes:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "it is a playground for me to experiment with PLT ideas (multi-methods, JIT, gradual typing, etc)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "it allows me to gain actual experience implementing languages (my problem is that I have too much knowledge and too little practice)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis week I was adding a garbage collector. It was tougher than I expected, but I got it working with the host language. The compiler still needs to be modified to produce the compatible code, so that\u2019s the focus of the next week.\n\nHere is a larger update for this week with memory layout images and some tips on debugging GC:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.alexeyshmalko.com/alpha-3/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "U0123H7JRDM",
                    "UC2A2ARPT"
                ],
                "count": 3
            }
        ]
    }
]