[
    {
        "client_msg_id": "0270b0bb-bcb7-4483-b93f-710a47a93dcb",
        "type": "message",
        "text": "I've been getting sucked hard into the Lua universe in recent weeks. Some links.\n\nIntroductory magazine article: <https://cacm.acm.org/magazines/2018/11/232214-a-look-at-the-design-of-lua/fulltext>\n\nVery cool technical paper on _how_ they manage to implement an efficient interpreter and register-based VM in 12k LoC: <https://www.lua.org/doc/jucs05.pdf>\n\nA very interesting \"federated monorepo\" approach to a batteries-included Lua distribution: <https://luapower.com>. In particular check out <https://luapower.com/philosophy>. I particularly feel like the author and I were separated at birth for this passage:\n\n&gt; NO [SUB-]DIRECTORIES\n&gt; \n&gt; This may be a hard sell but I stand by it. [Sub-]directories are evil. Not so much because of semantics, but because of the tools we use suck at working with them. [No global overview;] instead you have to _navigate_ them.\n---",
        "user": "UCUSW7WVD",
        "ts": "1637081629.124500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1637081721.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lboC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been getting sucked hard into the Lua universe in recent weeks. Some links.\n\nIntroductory magazine article: "
                            },
                            {
                                "type": "link",
                                "url": "https://cacm.acm.org/magazines/2018/11/232214-a-look-at-the-design-of-lua/fulltext"
                            },
                            {
                                "type": "text",
                                "text": "\n\nVery cool technical paper on "
                            },
                            {
                                "type": "text",
                                "text": "how",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " they manage to implement an efficient interpreter and register-based VM in 12k LoC: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.lua.org/doc/jucs05.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\nA very interesting \"federated monorepo\" approach to a batteries-included Lua distribution: "
                            },
                            {
                                "type": "link",
                                "url": "https://luapower.com"
                            },
                            {
                                "type": "text",
                                "text": ". In particular check out "
                            },
                            {
                                "type": "link",
                                "url": "https://luapower.com/philosophy"
                            },
                            {
                                "type": "text",
                                "text": ". I particularly feel like the author and I were separated at birth for this passage:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "NO [SUB-]DIRECTORIES\n\nThis may be a hard sell but I stand by it. [Sub-]directories are evil. Not so much because of semantics, but because of the tools we use suck at working with them. [No global overview;] instead you have to _navigate_ them."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n---"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "reply_count": 15,
        "reply_users_count": 4,
        "latest_reply": "1637219612.129600",
        "reply_users": [
            "UBSMEUXAA",
            "UCUSW7WVD",
            "UA14TGLTC",
            "UJBAJNFLK"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UF1ATC4RF",
                    "UPVBV34EL",
                    "UJBAJNFLK",
                    "U8A5MS6R1",
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 6
            },
            {
                "name": "eyes",
                "users": [
                    "U013ZLJARC7",
                    "UJBAJNFLK"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ff8df3be-4af0-4715-ba3c-44426ad6e95b",
        "type": "message",
        "text": "While you're digging into Lua I suggest you check out other implementations that are open source",
        "user": "UBSMEUXAA",
        "ts": "1637109122.125800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sPV1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While you're digging into Lua I suggest you check out other implementations that are open source"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "dd840754-79e2-4227-b26c-862f1e3c54ea",
        "type": "message",
        "text": "<https://luau-lang.org/> is Roblox custom Lua VM, it adds improved sand boxing, gradual type support, improved performance, has a linter and typechecker",
        "user": "UBSMEUXAA",
        "ts": "1637109391.126000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://luau-lang.org/",
                "title": "Luau",
                "title_link": "https://luau-lang.org/",
                "text": "Luau (lowercase u, /\u02c8lu.a\u028a/) is a fast, small, safe, gradually typed embeddable scripting language derived from Lua.",
                "image_url": "https://luau-lang.org/assets/images/luau-header.png",
                "image_width": 1000,
                "image_height": 250,
                "image_bytes": 19490,
                "fallback": "Luau",
                "service_icon": "https://luau-lang.org/favicon.ico",
                "service_name": "luau-lang.org",
                "id": 1,
                "original_url": "https://luau-lang.org/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zItW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://luau-lang.org/"
                            },
                            {
                                "type": "text",
                                "text": " is Roblox custom Lua VM, it adds improved sand boxing, gradual type support, improved performance, has a linter and typechecker"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "dd595b8d-1b48-4e9f-b3a8-ca18ec03640e",
        "type": "message",
        "text": "It's been recently open sourced, so I don't have much experience with it, but it's probably roughly analogous to JavaScript:Typescript",
        "user": "UBSMEUXAA",
        "ts": "1637109449.126300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A1laj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's been recently open sourced, so I don't have much experience with it, but it's probably roughly analogous to JavaScript:Typescript"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "1e866a79-e308-4a40-bcb9-df2b87650de0",
        "type": "message",
        "text": "<https://luajit.org/> is pretty well known so you might be aware of it.  The name makes it obvious, but LuaJIT is a version of Lua that does just in time compilation and has some of its own custom features\\syntax",
        "user": "UBSMEUXAA",
        "ts": "1637109568.126500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mt17x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://luajit.org/"
                            },
                            {
                                "type": "text",
                                "text": " is pretty well known so you might be aware of it.  The name makes it obvious, but LuaJIT is a version of Lua that does just in time compilation and has some of its own custom features\\syntax"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "c48478c6-3df8-4eed-8477-34d48631bc1b",
        "type": "message",
        "text": "it also has a fast interpreter",
        "user": "UBSMEUXAA",
        "ts": "1637109576.126700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fKe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it also has a fast interpreter"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "965d1f43-b25e-4238-9580-ceca6806d2d9",
        "type": "message",
        "text": "There are some forks\\variations that I'm less familiar with",
        "user": "UBSMEUXAA",
        "ts": "1637109590.126900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vouvn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are some forks\\variations that I'm less familiar with"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "670c77fa-15be-478f-84dc-047613cb720e",
        "type": "message",
        "text": "KoreVM\\Havok Script was a proprietary LuaVM that was used in a variety of AAA games (Call of Duty, Fable, Kingdoms of Amalur).  I worked with it when I worked on Call of Duty, but because it's proprietary and discontinued there isn't too much information on it.  Similar to Luau, it had some support for typing (which we didn't use when I worked on COD) and an optimized interpreter and improved (for the time) debugging tools.  Seems like Lua has some pretty good IDEs and debuggers now though.",
        "user": "UBSMEUXAA",
        "ts": "1637110244.127100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ffLDa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "KoreVM\\Havok Script was a proprietary LuaVM that was used in a variety of AAA games (Call of Duty, Fable, Kingdoms of Amalur).  I worked with it when I worked on Call of Duty, but because it's proprietary and discontinued there isn't too much information on it.  Similar to Luau, it had some support for typing (which we didn't use when I worked on COD) and an optimized interpreter and improved (for the time) debugging tools.  Seems like Lua has some pretty good IDEs and debuggers now though."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "74914613-dfb1-490d-a013-07bf8aafdcd9",
        "type": "message",
        "text": "<https://www.gdcvault.com/play/1014795/Havok-Script-Efficient-Lua-Scripting>",
        "user": "UBSMEUXAA",
        "ts": "1637110245.127300",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.gdcvault.com/play/1014795/Havok-Script-Efficient-Lua-Scripting",
                "title": "Havok Script: Efficient Lua Scripting in Game Production (Presented by Havok)",
                "title_link": "https://www.gdcvault.com/play/1014795/Havok-Script-Efficient-Lua-Scripting",
                "image_url": "https://ubm-twvideo01.s3.amazonaws.com/o1/vault/GDCvault_thumb/thumb_gdc11.jpg",
                "image_width": 100,
                "image_height": 72,
                "image_bytes": 6225,
                "fallback": "Havok Script: Efficient Lua Scripting in Game Production (Presented by Havok)",
                "service_icon": "https://www.gdcvault.com/img/favicon.ico",
                "service_name": "gdcvault.com",
                "id": 1,
                "original_url": "https://www.gdcvault.com/play/1014795/Havok-Script-Efficient-Lua-Scripting"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7xQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.gdcvault.com/play/1014795/Havok-Script-Efficient-Lua-Scripting"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "8f201f9e-1984-46ed-98ba-2f2754753224",
        "type": "message",
        "text": "Pico-8 mostly uses vanilla Lua 5.1, but adds a few new built-in library functions and changes some syntax (notably assignment operators and bitwise operators) comprehensive list across versions is here <https://gist.github.com/josefnpat/bfe4aaa5bbb44f572cd0>",
        "user": "UBSMEUXAA",
        "ts": "1637110535.127600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "daJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pico-8 mostly uses vanilla Lua 5.1, but adds a few new built-in library functions and changes some syntax (notably assignment operators and bitwise operators) comprehensive list across versions is here "
                            },
                            {
                                "type": "link",
                                "url": "https://gist.github.com/josefnpat/bfe4aaa5bbb44f572cd0"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "a07c62fb-9c41-462e-a47c-ddc67ca1b8d5",
        "type": "message",
        "text": "Oh, I totally missed that PICO-8 is programmed in a subset of Lua!",
        "user": "UCUSW7WVD",
        "ts": "1637112993.127800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1637114251.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BRl8j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, I totally missed that PICO-8 is programmed in a subset of Lua!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "13a951e5-4493-455a-b886-f69a52db07c3",
        "type": "message",
        "text": "Then you no doubt have read \"The Evolution of Lua\"  <https://dl.acm.org/doi/10.1145/1238844.1238846>.\n\nFavorite quotes...\n\nMost successful languages are raised rather than designed. ... We include a new feature in Lua only when all three of us agree.\n\nLua provides mechanism not policy. ... Instead of littering the language with lots of features, we provided ways for users to program the features themselves, in the way they wanted them, and only for those features they needed.\n\nSince its first version Lua has had real users, that is, users others than ourselves, who care not about the language itself but only about how to use it productively.\n\nLua is best described as a closed-development, open-source project.  Lua is not developed in a collaborative way.  We accept user suggestions, but never their code verbatim.  We always try to do our own implementation.",
        "user": "UA14TGLTC",
        "ts": "1637119583.128100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cVZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Then you no doubt have read \"The Evolution of Lua\"  "
                            },
                            {
                                "type": "link",
                                "url": "https://dl.acm.org/doi/10.1145/1238844.1238846"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nFavorite quotes...\n\nMost successful languages are raised rather than designed. ... We include a new feature in Lua only when all three of us agree.\n\nLua provides mechanism not policy. ... Instead of littering the language with lots of features, we provided ways for users to program the features themselves, in the way they wanted them, and only for those features they needed.\n\nSince its first version Lua has had real users, that is, users others than ourselves, who care not about the language itself but only about how to use it productively.\n\nLua is best described as a closed-development, open-source project.  Lua is not developed in a collaborative way.  We accept user suggestions, but never their code verbatim.  We always try to do our own implementation."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UBSMEUXAA",
                    "UJBAJNFLK"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e8d28da9-aa29-48fe-bb94-48af4a191175",
        "type": "message",
        "text": "The \"design of Lua\" article is very nice. I'd love to see more descriptions of languages (and other infrastructure software) at that level.\nAlso, the specific form of minimalism adopted by Lua looks very interesting. More pragmatic than e.g. Scheme.\nWhat do people use Lua for in real life nowadays? Given the existence of multiple implementations, there are probably different important use cases. <@UBSMEUXAA> mentioned games. Are there other big application domains?",
        "user": "UJBAJNFLK",
        "ts": "1637146789.128800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LUMd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The \"design of Lua\" article is very nice. I'd love to see more descriptions of languages (and other infrastructure software) at that level.\nAlso, the specific form of minimalism adopted by Lua looks very interesting. More pragmatic than e.g. Scheme.\nWhat do people use Lua for in real life nowadays? Given the existence of multiple implementations, there are probably different important use cases. "
                            },
                            {
                                "type": "user",
                                "user_id": "UBSMEUXAA"
                            },
                            {
                                "type": "text",
                                "text": " mentioned games. Are there other big application domains?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "5c4fba63-241b-4b1f-984f-15da94c5a8ad",
        "type": "message",
        "text": "It's used as configuration for a variety of different software, which is kind of it's original intended use case",
        "user": "UBSMEUXAA",
        "ts": "1637167820.129000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i7fJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's used as configuration for a variety of different software, which is kind of it's original intended use case"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "a1687b2e-d484-4e49-a0c3-3c129928b61b",
        "type": "message",
        "text": "Redis uses Lua <https://redis.io/commands/eval> for example",
        "user": "UBSMEUXAA",
        "ts": "1637168160.129200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Sh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Redis uses Lua "
                            },
                            {
                                "type": "link",
                                "url": "https://redis.io/commands/eval"
                            },
                            {
                                "type": "text",
                                "text": " for example"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "e97e069f-d16b-440b-b0fc-4fc95f84c060",
        "type": "message",
        "text": "Embedded use cases make a lot of sense, also because there is little competition in that space, with Tcl mostly dead and Python having moved on elsewhere.\nBut what about the heavier machinery I see, such as LuaJIT or Terra? Terra in particular looks like a replacement for C, so the code structure should be Lua outside and Terra inside, rather than Lua inside something else.",
        "user": "UJBAJNFLK",
        "ts": "1637219612.129600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C9qy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Embedded use cases make a lot of sense, also because there is little competition in that space, with Tcl mostly dead and Python having moved on elsewhere.\nBut what about the heavier machinery I see, such as LuaJIT or Terra? Terra in particular looks like a replacement for C, so the code structure should be Lua outside and Terra inside, rather than Lua inside something else."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1637081629.124500",
        "parent_user_id": "UCUSW7WVD"
    }
]