[
    {
        "client_msg_id": "ca418fec-6365-4fae-b584-80cffff2e8c0",
        "type": "message",
        "text": "A recurrent topic in this community is \"Why do today's programming system so strongly rely on text files, and can we do better?\" This tweet made me think of a possible answer: epistemic transparence (of text) vs. epistemic opacity (of data formats requiring more specialized tools for inspection). We have so many tools for inspecting text files that it's hard to imagine that someone could sneak in a tool that deliberately misrepresents the information in a file. Human-readable data encodings in text files thus provide acces to a shared ground truth. The tools intermediating between bits in memory and UIs (screens etc.) are so simple that they are easy to understand and easy to verify and validate. Even for relatively simple structured binary formats such as tar, this is no longer true.\n<https://twitter.com/slpnix/status/1457642326956855296>",
        "user": "UJBAJNFLK",
        "ts": "1636714161.079200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://twitter.com/slpnix/status/1457642326956855296",
                "fallback": "<https://twitter.com/slpnix|@slpnix>: \"(...) where a single .tar file contains different contents depending on the tar utility being used.\" <https://twitter.com/ReproBuilds/status/1457638619003432962>",
                "ts": 1636363987,
                "text": "\"(...) where a single .tar file contains different contents depending on the tar utility being used.\" <https://twitter.com/ReproBuilds/status/1457638619003432962>",
                "service_name": "twitter",
                "service_url": "https://twitter.com",
                "author_name": "Sergio L\u00f3pez",
                "author_link": "https://twitter.com/slpnix/status/1457642326956855296",
                "author_icon": "https://pbs.twimg.com/profile_images/1255407175738036229/GQgYkk1U_normal.jpg",
                "author_subname": "@slpnix",
                "id": 1,
                "original_url": "https://twitter.com/slpnix/status/1457642326956855296",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "from_url": "https://twitter.com/ReproBuilds/status/1457638619003432962",
                "fallback": "<https://twitter.com/ReproBuilds|@ReproBuilds>: Check out what's been happening last month in the world of <https://twitter.com/ReproBuilds|@ReproBuilds> and related supply-chain stuff! <https://reproducible-builds.org/reports/2021-10/>  cc <https://twitter.com/packagingcon|@packagingcon> <https://twitter.com/lolamby|@lolamby> <https://twitter.com/codethink|@codethink> <https://twitter.com/QubesOS|@QubesOS> <https://pbs.twimg.com/media/FDqSVteXEAAmC4g.jpg>",
                "ts": 1636363103,
                "text": "Check out what's been happening last month in the world of <https://twitter.com/ReproBuilds|@ReproBuilds> and related supply-chain stuff! <https://reproducible-builds.org/reports/2021-10/>  cc <https://twitter.com/packagingcon|@packagingcon> <https://twitter.com/lolamby|@lolamby> <https://twitter.com/codethink|@codethink> <https://twitter.com/QubesOS|@QubesOS> <https://pbs.twimg.com/media/FDqSVteXEAAmC4g.jpg>",
                "service_name": "twitter",
                "service_url": "https://twitter.com",
                "author_name": "Reproducible Builds",
                "author_link": "https://twitter.com/ReproBuilds/status/1457638619003432962",
                "author_icon": "https://pbs.twimg.com/profile_images/1001801313070534656/gOSrgWid_normal.jpg",
                "author_subname": "@ReproBuilds",
                "image_url": "https://pbs.twimg.com/media/FDqSVteXEAAmC4g.jpg",
                "image_width": 910,
                "image_height": 512,
                "image_bytes": 88102,
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Yo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A recurrent topic in this community is \"Why do today's programming system so strongly rely on text files, and can we do better?\" This tweet made me think of a possible answer: epistemic transparence (of text) vs. epistemic opacity (of data formats requiring more specialized tools for inspection). We have so many tools for inspecting text files that it's hard to imagine that someone could sneak in a tool that deliberately misrepresents the information in a file. Human-readable data encodings in text files thus provide acces to a shared ground truth. The tools intermediating between bits in memory and UIs (screens etc.) are so simple that they are easy to understand and easy to verify and validate. Even for relatively simple structured binary formats such as tar, this is no longer true.\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/slpnix/status/1457642326956855296"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "reply_count": 14,
        "reply_users_count": 8,
        "latest_reply": "1636907932.088800",
        "reply_users": [
            "UDQBTJ211",
            "UCS1K3QTH",
            "U02JDAYKW7J",
            "U8A5MS6R1",
            "UJBAJNFLK",
            "UCUSW7WVD",
            "UD3AK9JRF",
            "U016VUZGUUQ"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "94392a27-1209-426e-8605-7363813eaee3",
        "type": "message",
        "text": "I read a similar thought recently when discussing \"binary vs text\" formats. You never really think it, but text is a binary format, it's just the tools to view it are extremely widespread.",
        "user": "UDQBTJ211",
        "ts": "1636717688.079400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K1e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I read a similar thought recently when discussing \"binary vs text\" formats. You never really think it, but text is a binary format, it's just the tools to view it are extremely widespread."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "0E4A508F-4E75-43D5-B003-150C9A567337",
        "type": "message",
        "text": "Interestingly text is much more complex than many binary formats. Unicode has given us the worlds scripts, and fully supporting text us a mammoth undertaking.",
        "user": "UCS1K3QTH",
        "ts": "1636720427.084500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sGXVj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interestingly text is much more complex than many binary formats. Unicode has given us the worlds scripts, and fully supporting text us a mammoth undertaking."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "scream",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9e6df1ba-e768-471e-adc6-e35c021d616b",
        "type": "message",
        "text": "I think we have to underline that text files are punch card emulators, in the same way that TTY terminals are teletype emulators\u2026 the fundamental aspects of how people still haven\u2019t changed much since the JVNeumann days, even though the machines certainly have. You can make arguments about how things are \u201cbetter\u201d which generally comes to mean faster, more \u201cexpressive,\u201d or simply you have color in the terminal so you can do highlighting etc  but that\u2019s all incremental improvements on the same setup.",
        "user": "U02JDAYKW7J",
        "ts": "1636722879.084700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rm6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think we have to underline that text files are punch card emulators, in the same way that TTY terminals are teletype emulators\u2026 the fundamental aspects of how people still haven\u2019t changed much since the JVNeumann days, even though the machines certainly have. You can make arguments about how things are \u201cbetter\u201d which generally comes to mean faster, more \u201cexpressive,\u201d or simply you have color in the terminal so you can do highlighting etc  but that\u2019s all incremental improvements on the same setup."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "e4cba67a-7e40-40f9-a30e-df9cb68d00db",
        "type": "message",
        "text": "<@UJBAJNFLK> yes transparency seems like a strong motivator for sticking to plain text files. Often this shows up in stated reasons like \"I can see it\". There is a clear boundary of this artifact (the bytes in the file) and the standard representation is \"total\" - the entirety of the text is visible, no hidden layers.\nAnother related possible reason is reproducibility - if I can see some plain text, I can reproduce it quite easily. Max calls this the \"production script\": <https://twitter.com/maxkreminski/status/1149825466603200518>",
        "user": "U8A5MS6R1",
        "ts": "1636731755.085300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1636731794.000000"
        },
        "attachments": [
            {
                "from_url": "https://twitter.com/maxkreminski/status/1149825466603200518",
                "fallback": "<https://twitter.com/maxkreminski|@maxkreminski>: maybe one of the reasons structure editors haven't caught on among programmers is because textual representations of code more directly encode the mechanical \"production script\" (i.e. the sequence of keypresses) by which the code was produced <https://twitter.com/maxkreminski/status/825065009780649986>",
                "ts": 1562974728,
                "text": "maybe one of the reasons structure editors haven't caught on among programmers is because textual representations of code more directly encode the mechanical \"production script\" (i.e. the sequence of keypresses) by which the code was produced <https://twitter.com/maxkreminski/status/825065009780649986>",
                "service_name": "twitter",
                "service_url": "https://twitter.com",
                "author_name": "Max Kreminski",
                "author_link": "https://twitter.com/maxkreminski/status/1149825466603200518",
                "author_icon": "https://pbs.twimg.com/profile_images/1232221568748507141/XwILIoBP_normal.jpg",
                "author_subname": "@maxkreminski",
                "id": 1,
                "original_url": "https://twitter.com/maxkreminski/status/1149825466603200518",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            },
            {
                "from_url": "https://twitter.com/maxkreminski/status/825065009780649986",
                "fallback": "<https://twitter.com/maxkreminski|@maxkreminski>: Since the viewer can\u2019t access the temporal \u201cproduction script\u201d, it\u2019s hard to \u201clearn drawing by seeing\u201d the way we \u201clearn lang by listening\u201d. <https://pbs.twimg.com/media/C3M4OoNUYAED9QN.jpg>",
                "ts": 1485545801,
                "text": "Since the viewer can\u2019t access the temporal \u201cproduction script\u201d, it\u2019s hard to \u201clearn drawing by seeing\u201d the way we \u201clearn lang by listening\u201d. <https://pbs.twimg.com/media/C3M4OoNUYAED9QN.jpg>",
                "service_name": "twitter",
                "service_url": "https://twitter.com",
                "author_name": "Max Kreminski",
                "author_link": "https://twitter.com/maxkreminski/status/825065009780649986",
                "author_icon": "https://pbs.twimg.com/profile_images/1232221568748507141/XwILIoBP_normal.jpg",
                "author_subname": "@maxkreminski",
                "image_url": "https://pbs.twimg.com/media/C3M4OoNUYAED9QN.jpg",
                "image_width": 978,
                "image_height": 350,
                "image_bytes": 130083,
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jF=k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " yes transparency seems like a strong motivator for sticking to plain text files. Often this shows up in stated reasons like \"I can see it\". There is a clear boundary of this artifact (the bytes in the file) and the standard representation is \"total\" - the entirety of the text is visible, no hidden layers.\nAnother related possible reason is reproducibility - if I can see some plain text, I can reproduce it quite easily. Max calls this the \"production script\": "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/maxkreminski/status/1149825466603200518"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c4ca5eca-549d-400c-ad42-72cf3f4cc12e",
        "type": "message",
        "text": "<@UDQBTJ211> Everything is binary in the end. What sets text apart is its extreme generality, leading to widespread tool support. If you have the slightest worry that a text-based tool is hiding something from you, you just check using one of the hundreds of alternatives. As for <@UCS1K3QTH> comment about the complexity of text: most real-life data formats use only a tiny subset of Unicode, plus perhaps full Unicode in string data. Decent Unicode support matters (and is widespread), but full support is rarely required.",
        "user": "UJBAJNFLK",
        "ts": "1636735740.085900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DE=uH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " Everything is binary in the end. What sets text apart is its extreme generality, leading to widespread tool support. If you have the slightest worry that a text-based tool is hiding something from you, you just check using one of the hundreds of alternatives. As for "
                            },
                            {
                                "type": "user",
                                "user_id": "UCS1K3QTH"
                            },
                            {
                                "type": "text",
                                "text": " comment about the complexity of text: most real-life data formats use only a tiny subset of Unicode, plus perhaps full Unicode in string data. Decent Unicode support matters (and is widespread), but full support is rarely required."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "2db465cd-dbd5-478a-9179-7e038aef3e50",
        "type": "message",
        "text": "<@U02JDAYKW7J> I think what you describe is an orthogonal issue. You can have a user interface at the level of some convenient data structure, but use a text-based encoding underneath (JSON, XML, all the other W3C standards, ...). You don't _have to_ look at that representation, but you _can_.",
        "user": "UJBAJNFLK",
        "ts": "1636735908.086100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hjn/E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02JDAYKW7J"
                            },
                            {
                                "type": "text",
                                "text": " I think what you describe is an orthogonal issue. You can have a user interface at the level of some convenient data structure, but use a text-based encoding underneath (JSON, XML, all the other W3C standards, ...). You don't "
                            },
                            {
                                "type": "text",
                                "text": "have to",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " look at that representation, but you "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "b1a96805-1f96-48d9-bbb0-11590c63def4",
        "type": "message",
        "text": "To add weight to <@UCS1K3QTH>'s point, it's pretty common at this point to see vulnerabilities involving Unicode homoglyphs.\n\n<https://en.wikipedia.org/wiki/Homoglyph|https://en.wikipedia.org/wiki/Homoglyph>",
        "user": "UCUSW7WVD",
        "ts": "1636753229.086800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8xn4g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To add weight to "
                            },
                            {
                                "type": "user",
                                "user_id": "UCS1K3QTH"
                            },
                            {
                                "type": "text",
                                "text": "'s point, it's pretty common at this point to see vulnerabilities involving Unicode homoglyphs.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Homoglyph",
                                "text": "https://en.wikipedia.org/wiki/Homoglyph"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0bc08d47-3623-4ddd-822a-0f61903a0d44",
        "type": "message",
        "text": "<@UJBAJNFLK> fair point. What I was mostly focusing is the \u2018file\u2019 part not the text. Why do we have files and have so much focus on them.",
        "user": "U02JDAYKW7J",
        "ts": "1636760943.087100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dJ6g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " fair point. What I was mostly focusing is the \u2018file\u2019 part not the text. Why do we have files and have so much focus on them."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "98255E00-D031-433E-847C-6AD8FF25AABA",
        "type": "message",
        "text": "Unicode is a scripting language. <https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html|https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html>",
        "user": "UD3AK9JRF",
        "ts": "1636768650.087500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html",
                "title": "Security advisory for rustc (CVE-2021-42574) | Rust Blog",
                "title_link": "https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html",
                "text": "Empowering everyone to build reliable and efficient software.",
                "thumb_url": "https://www.rust-lang.org/static/images/rust-social.jpg",
                "thumb_width": 1024,
                "thumb_height": 1024,
                "fallback": "Security advisory for rustc (CVE-2021-42574) | Rust Blog",
                "service_icon": "https://blog.rust-lang.org/images/apple-touch-icon.png",
                "service_name": "blog.rust-lang.org",
                "id": 1,
                "original_url": "https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xMwMf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unicode is a scripting language. "
                            },
                            {
                                "type": "link",
                                "url": "https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html",
                                "text": "https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e817729c-f60f-476a-bc48-fc4386390223",
        "type": "message",
        "text": "Yes, transparency (or at least the illusion thereof) is a huge aspect of why text will be hard or impossible to kill. Key aspect: text has (almost) no room for hidden state. A text editor is pretty much surjective onto the set of binaries that won't crash your text editor, and once it opens you can change any byte... Of course the eldritch complexity of Unicode spoils a lot of those \"guarantees\". If we're going to replace text, I'd honestly like a format that offers even better surjectivity (onto parsable files if not onto binary strings).\n\nThe fact is, if your visual editing tool doesn't let me inspect every literal bit of code, I will never fully trust that bugs in your editor aren't hiding important things from me. For serious applications, that's a problem.\n\n(Also, text is convenient when dealing with \"invalid\" under-construction states.)",
        "user": "U016VUZGUUQ",
        "ts": "1636774282.087900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sq5o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, transparency (or at least the illusion thereof) is a huge aspect of why text will be hard or impossible to kill. Key aspect: text has (almost) no room for hidden state. A text editor is pretty much surjective onto the set of binaries that won't crash your text editor, and once it opens you can change any byte... Of course the eldritch complexity of Unicode spoils a lot of those \"guarantees\". If we're going to replace text, I'd honestly like a format that offers even better surjectivity (onto parsable files if not onto binary strings).\n\nThe fact is, if your visual editing tool doesn't let me inspect every literal bit of code, I will never fully trust that bugs in your editor aren't hiding important things from me. For serious applications, that's a problem.\n\n(Also, text is convenient when dealing with \"invalid\" under-construction states.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "6e6b7746-d32d-4642-abff-34497c5f6a86",
        "type": "message",
        "text": "<@U02JDAYKW7J> Files matter for transparency as well, because it's the system infrastructure that guarantees access to the basic data layout to a wide variety of tools. We could have something else as the \"ground truth\" layer, of course. But it matters that this layer is accessible to a large range of tools.\nIllustrative example: a Smalltalk image. Reflection provides the means to inspect the object graph, and Smalltalk comes with the tools to do so. But all that access goes through the Smalltalk VM. If you have to envisage the possibility of a compromised VM, you can't trust your system any more.\nThe same holds of course for the file system layer of a typical Unix system. But there is diversity-with-compatibility. Don't trust btrfs? Use ext4. Paranoid? Store all your stuff on three different file systems, and run consistency checks from time to time.\nIn the end, it's tool diversity that matters. No single bottleneck for accessing your data.",
        "user": "UJBAJNFLK",
        "ts": "1636789782.088200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0JF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02JDAYKW7J"
                            },
                            {
                                "type": "text",
                                "text": " Files matter for transparency as well, because it's the system infrastructure that guarantees access to the basic data layout to a wide variety of tools. We could have something else as the \"ground truth\" layer, of course. But it matters that this layer is accessible to a large range of tools.\nIllustrative example: a Smalltalk image. Reflection provides the means to inspect the object graph, and Smalltalk comes with the tools to do so. But all that access goes through the Smalltalk VM. If you have to envisage the possibility of a compromised VM, you can't trust your system any more.\nThe same holds of course for the file system layer of a typical Unix system. But there is diversity-with-compatibility. Don't trust btrfs? Use ext4. Paranoid? Store all your stuff on three different file systems, and run consistency checks from time to time.\nIn the end, it's tool diversity that matters. No single bottleneck for accessing your data."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "5e67e16f-c5b3-47f7-ab60-0b5862014ea6",
        "type": "message",
        "text": "The original smalltalk \u201cimage\u201d was full memory dumped to tape/disk and you would boot right into that state. The image files exist b/c in the end we are all running a unix. A more smalltalk smalltalk would be a collection of objects with addresses living in some ecosystem, remote or otherwise. Kay had imagined each object being a VM, fully self-contained. We are just shoving the current VM onto unix, which is what it is\u2026\n\nEven the word &lt;&lt;file&gt;&gt; evokes old thinking in a new medium, thinking that has nothing to do with computing but with how we organized paper medium based information. This is one reason why the \u2018younger\u2019 generation is trending towards a complete lack of understand, or mental image, of files, folders, directories. In the world for them it\u2019s just \u201ca bunch of stuff\u201d out there and ways to find the stuff. (Of course we don\u2019t give them good metaphors for how the stuff should be found but that\u2019s another story.) But their mentality is modern, it\u2019s a computing mentality, even if the much of it amounts to improved means to an unimproved end.",
        "user": "U02JDAYKW7J",
        "ts": "1636800621.088400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cfcyf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The original smalltalk \u201cimage\u201d was full memory dumped to tape/disk and you would boot right into that state. The image files exist b/c in the end we are all running a unix. A more smalltalk smalltalk would be a collection of objects with addresses living in some ecosystem, remote or otherwise. Kay had imagined each object being a VM, fully self-contained. We are just shoving the current VM onto unix, which is what it is\u2026\n\nEven the word <<file>> evokes old thinking in a new medium, thinking that has nothing to do with computing but with how we organized paper medium based information. This is one reason why the \u2018younger\u2019 generation is trending towards a complete lack of understand, or mental image, of files, folders, directories. In the world for them it\u2019s just \u201ca bunch of stuff\u201d out there and ways to find the stuff. (Of course we don\u2019t give them good metaphors for how the stuff should be found but that\u2019s another story.) But their mentality is modern, it\u2019s a computing mentality, even if the much of it amounts to improved means to an unimproved end."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "2623ab7e-274e-44b3-aee4-b847727321e6",
        "type": "message",
        "text": "<@U02JDAYKW7J> I completely agree. My goal is to figure out what makes the text-in-file storage system so attractive that it has persisted over decades, in spite of its shortcomings. One of them is a sense of agency and data ownership. Not sure that people who grew up with today's cloud silos see the value of that.",
        "user": "UJBAJNFLK",
        "ts": "1636907569.088600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "98yho",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02JDAYKW7J"
                            },
                            {
                                "type": "text",
                                "text": " I completely agree. My goal is to figure out what makes the text-in-file storage system so attractive that it has persisted over decades, in spite of its shortcomings. One of them is a sense of agency and data ownership. Not sure that people who grew up with today's cloud silos see the value of that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "caf1c904-fd01-4239-8e08-22fae3b9cc10",
        "type": "message",
        "text": "BTW, I briefly tried to use Smalltalk in its original form. It was a pirate copy of Smalltalk-80 for the Atari ST. Booted from a floppy disk, and completely independent from the standard Atari OS. And that made it completely useless for me. Try something new, fine, but without access to any of my data, no. Perhaps it made sense in a better networked environment, but for me back then, networking was via dial-up modems: slow and expensive.",
        "user": "UJBAJNFLK",
        "ts": "1636907932.088800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cfTr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "BTW, I briefly tried to use Smalltalk in its original form. It was a pirate copy of Smalltalk-80 for the Atari ST. Booted from a floppy disk, and completely independent from the standard Atari OS. And that made it completely useless for me. Try something new, fine, but without access to any of my data, no. Perhaps it made sense in a better networked environment, but for me back then, networking was via dial-up modems: slow and expensive."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1636714161.079200",
        "parent_user_id": "UJBAJNFLK"
    }
]