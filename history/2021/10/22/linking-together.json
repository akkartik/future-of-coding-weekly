[
    {
        "client_msg_id": "8bffd4bb-7fd6-4e40-8976-4fe0064ac013",
        "type": "message",
        "text": "<https://twitter.com/ChristianSelig/status/1451193663657164810> This thread is fun and has a lot of examples of cool embedded documentation and fancy comment diagrams.  It also has a lot of examples of teams, leads and engineering managers removing embedded documentation because it doesn't fit standardized process.  I know the \"official\" FoC stance is to not care much about standard practice (hence the focus on hobby projects, non-programmers or \"less serious\" domains like education and games), but this demonstrates pretty clearly how common it is for people to have good ideas and useful tools that work for them, only to have corporate process\\machine cull them.",
        "user": "UBSMEUXAA",
        "ts": "1634856571.005600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/ChristianSelig|@ChristianSelig>: When you think you're good at commenting your code but then see some of Apple's open source stuff <https://pbs.twimg.com/media/FCOsv-FVUAQ05DV.jpg>",
                "ts": 1634826505,
                "author_name": "Christian Selig",
                "author_link": "https://twitter.com/ChristianSelig/status/1451193663657164810",
                "author_icon": "https://pbs.twimg.com/profile_images/1352325963628109827/8RkeP_nk_normal.jpg",
                "author_subname": "@ChristianSelig",
                "text": "When you think you're good at commenting your code but then see some of Apple's open source stuff <https://pbs.twimg.com/media/FCOsv-FVUAQ05DV.jpg>",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/ChristianSelig/status/1451193663657164810",
                "image_url": "https://pbs.twimg.com/media/FCOsv-FVUAQ05DV.jpg",
                "image_width": 895,
                "image_height": 1199,
                "image_bytes": 101907,
                "id": 1,
                "original_url": "https://twitter.com/ChristianSelig/status/1451193663657164810",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FQTq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/ChristianSelig/status/1451193663657164810"
                            },
                            {
                                "type": "text",
                                "text": " This thread is fun and has a lot of examples of cool embedded documentation and fancy comment diagrams.  It also has a lot of examples of teams, leads and engineering managers removing embedded documentation because it doesn't fit standardized process.  I know the \"official\" FoC stance is to not care much about standard practice (hence the focus on hobby projects, non-programmers or \"less serious\" domains like education and games), but this demonstrates pretty clearly how common it is for people to have good ideas and useful tools that work for them, only to have corporate process\\machine cull them."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "reply_count": 10,
        "reply_users_count": 7,
        "latest_reply": "1634907302.008700",
        "reply_users": [
            "UBSMEUXAA",
            "UAJKEBGP8",
            "UCUSW7WVD",
            "UK3LH8CF5",
            "UJBAJNFLK",
            "U013ZLJARC7",
            "UDQBTJ211"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "dc0ca37a-667f-474d-94f1-0e0affa4a9ae",
        "type": "message",
        "text": "<https://twitter.com/11c634c4443b/status/1451201714976030720>",
        "user": "UBSMEUXAA",
        "ts": "1634856654.005900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/11c634c4443b|@11c634c4443b>: <https://twitter.com/ChristianSelig|@ChristianSelig> I used to do this at my old job - inject schematics into the comments. They used to be collapsible using a Sublime Text plugin. Nobody liked it from the team and I was told to stop. :smiling_face_with_tear:",
                "ts": 1634828425,
                "author_name": "\ud83d\udc68\ud83c\udffb\u200d\ud83d\udd2c\ud83d\udd2d\ud83e\uddec",
                "author_link": "https://twitter.com/11c634c4443b/status/1451201714976030720",
                "author_icon": "https://pbs.twimg.com/profile_images/1346918806598410241/a6cy23Bc_normal.jpg",
                "author_subname": "@11c634c4443b",
                "text": "<https://twitter.com/ChristianSelig|@ChristianSelig> I used to do this at my old job - inject schematics into the comments. They used to be collapsible using a Sublime Text plugin. Nobody liked it from the team and I was told to stop. :smiling_face_with_tear:",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/11c634c4443b/status/1451201714976030720",
                "id": 1,
                "original_url": "https://twitter.com/11c634c4443b/status/1451201714976030720",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GWaI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/11c634c4443b/status/1451201714976030720"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "reactions": [
            {
                "name": "cry",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "856b2960-cea6-4ecf-8bd2-69603fdfb602",
        "type": "message",
        "text": "For the record I'm actually not a huge fan of documentation in comments or explanation in comments (how or why), and I prefer outside documentation if possible, and why in commit messages and/or change logs so a explanation can be tied to the code at a specific point in time, but I'm also a comment pragmatist .  I also like links, diagrams and pseudo code or higher level code to explain hard to read sections of code (mostly math heavy stuff, or SIMD optimized, etc.)\n\nPretty strongly against comments that explain obvious code and definitely against out of date or incorrect (lying) comments",
        "user": "UBSMEUXAA",
        "ts": "1634857046.006200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RLvn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the record I'm actually not a huge fan of documentation in comments or explanation in comments (how or why), and I prefer outside documentation if possible, and why in commit messages and/or change logs so a explanation can be tied to the code at a specific point in time, but I'm also a comment pragmatist .  I also like links, diagrams and pseudo code or higher level code to explain hard to read sections of code (mostly math heavy stuff, or SIMD optimized, etc.)\n\nPretty strongly against comments that explain obvious code and definitely against out of date or incorrect (lying) comments"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "cc44c168-a39a-4c30-ad14-b6fe28c4f8e0",
        "type": "message",
        "text": "wow this epic",
        "user": "UAJKEBGP8",
        "ts": "1634857651.006400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KKR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wow this epic"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "38e032e9-209d-477c-ae30-a17f274737a4",
        "type": "message",
        "text": "&gt; If I write a comment like that my team probably will give in the code review a comment: write this doc on confluence (and no one never will read the doc).\n<https://twitter.com/Welt_schmerz_/status/1451358249454800897>",
        "user": "UCUSW7WVD",
        "ts": "1634871638.006900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5ks",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I write a comment like that my team probably will give in the code review a comment: write this doc on confluence (and no one never will read the doc)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://twitter.com/Welt_schmerz_/status/1451358249454800897"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA",
        "reactions": [
            {
                "name": "cry",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "78aa7790-308c-405c-a27d-b221514ed13a",
        "type": "message",
        "text": "Any others anyone can spot? I'm actually more interested in the bunny trail of people killing this stuff.",
        "user": "UCUSW7WVD",
        "ts": "1634871815.007400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pzNJb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Any others anyone can spot? I'm actually more interested in the bunny trail of people killing this stuff."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "bd00ba5b-75c7-4798-a58b-b6954f7f5026",
        "type": "message",
        "text": "I\u2019ve made a few comments like this in readme\u2019s and in code comments before.  I am a big fan of long comments in codebases about why something exists or ways in which it could be improved. Big fan of explanatory commit messages, providing context around the history of things, and the avenues tried and discarded.\n\nI used to not feel this way. But I\u2019m really not sure now that I understand why. I would have probably said things like comments can be incorrect and/or misleading. But I guess I actually find that fact useful, rather than harmful. If the author thought their code did one thing and it actually did another, knowing that is good for me. Or if the code has changed its purpose overtime, I can discover that via that comment.\n\nAs I\u2019ve had to fix more and more code, learning the history and purpose of the code is incredibly useful. Having to infer that san-comments is much harder. (It goes without saying that I don\u2019t mean comments like \u201cset x to 2\u201d)\n\nI am emphatically anti-external documentation. I think that is the single greatest way to make the documentation 1) not written 2) not read and 3) not helpful. External documentation means I have to know that I need to know something. When I\u2019m reading code, why would I expect there to be something in a totally separate context telling me about this code?\n\n (Linking is not and answer. I can\u2019t  how many times I\u2019ve read \u201cPlease see CEH1282 for more explanation\u201d just to find just to find out that CEH was the project management tool that the company got rid of 6 years ago.)\n\n\nIf you want to make these sorts of diagrams and are on the mac, definitely recommend <https://monodraw.helftone.com/>",
        "user": "UK3LH8CF5",
        "ts": "1634873061.007600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GN/3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve made a few comments like this in readme\u2019s and in code comments before.  I am a big fan of long comments in codebases about why something exists or ways in which it could be improved. Big fan of explanatory commit messages, providing context around the history of things, and the avenues tried and discarded.\n\nI used to not feel this way. But I\u2019m really not sure now that I understand why. I would have probably said things like comments can be incorrect and/or misleading. But I guess I actually find that fact useful, rather than harmful. If the author thought their code did one thing and it actually did another, knowing that is good for me. Or if the code has changed its purpose overtime, I can discover that via that comment.\n\nAs I\u2019ve had to fix more and more code, learning the history and purpose of the code is incredibly useful. Having to infer that san-comments is much harder. (It goes without saying that I don\u2019t mean comments like \u201cset x to 2\u201d)\n\nI am emphatically anti-external documentation. I think that is the single greatest way to make the documentation 1) not written 2) not read and 3) not helpful. External documentation means I have to know that I need to know something. When I\u2019m reading code, why would I expect there to be something in a totally separate context telling me about this code?\n\n (Linking is not and answer. I can\u2019t  how many times I\u2019ve read \u201cPlease see CEH1282 for more explanation\u201d just to find just to find out that CEH was the project management tool that the company got rid of 6 years ago.)\n\n\nIf you want to make these sorts of diagrams and are on the mac, definitely recommend "
                            },
                            {
                                "type": "link",
                                "url": "https://monodraw.helftone.com/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "08b912b6-77e6-430b-95df-e75ad423b2be",
        "type": "message",
        "text": "Is \"internal\" vs. \"external\" the best way to discuss documentation? Elsewhere in this community, people like to criticize that we store code in text files. Isn't that the more fundamental issue? That files( and the tools that process them) guide how we structure code and documentation? I think that the ideas from literate programming (and later computational notebooks) are more useful, even though the tools and techniques from this space are far from mature yet.",
        "user": "UJBAJNFLK",
        "ts": "1634885128.007800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z/n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is \"internal\" vs. \"external\" the best way to discuss documentation? Elsewhere in this community, people like to criticize that we store code in text files. Isn't that the more fundamental issue? That files( and the tools that process them) guide how we structure code and documentation? I think that the ideas from literate programming (and later computational notebooks) are more useful, even though the tools and techniques from this space are far from mature yet."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "c28a9f2e-479a-4ca0-93a6-b1478a1d62af",
        "type": "message",
        "text": "In the beforetimes, comments like this were more common. There's even an emacs mode for drawing them: <http://www.lysator.liu.se/~tab/artist/>",
        "user": "U013ZLJARC7",
        "ts": "1634886756.008200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1634886783.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UWY7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the beforetimes, comments like this were more common. There's even an emacs mode for drawing them: "
                            },
                            {
                                "type": "link",
                                "url": "http://www.lysator.liu.se/~tab/artist/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "522b13a5-dd0f-461a-af94-7f6a7409445b",
        "type": "message",
        "text": "Internal vs external seems a decent distinction to me. The whole point of comments is they are unavoidably attached to a particular piece of code. Clearly external documentation is lacking something, as it always existed and yet people developed this practice of annotating the code in-place.",
        "user": "UDQBTJ211",
        "ts": "1634906108.008500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qv+U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Internal vs external seems a decent distinction to me. The whole point of comments is they are unavoidably attached to a particular piece of code. Clearly external documentation is lacking something, as it always existed and yet people developed this practice of annotating the code in-place."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "4a04f8a1-0074-4e04-9a2a-f42897d230f9",
        "type": "message",
        "text": "For me the more fundamental distinction is documentation that guides to the code vs. documentation that answers questions raised by the code. The latter is what I would expect to find \"close\" to the code, e.g. in the form of comments. Guiding documentation can easily refer to many places in the code, so you can't really put it inside the same file.",
        "user": "UJBAJNFLK",
        "ts": "1634907302.008700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jvG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me the more fundamental distinction is documentation that guides to the code vs. documentation that answers questions raised by the code. The latter is what I would expect to find \"close\" to the code, e.g. in the form of comments. Guiding documentation can easily refer to many places in the code, so you can't really put it inside the same file."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634856571.005600",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "7a736f40-6278-467d-880d-a2ab401be143",
        "type": "message",
        "text": "Hypertext tools from the 80s\n\n<https://fibery.io/blog/hypertext-tools-from-the-80s/>",
        "user": "UBN9AFS0N",
        "ts": "1634912318.009200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "As We May Think \u2014 products &amp; tools for thought",
                "title": "Hypertext tools from the 80s",
                "title_link": "https://fibery.io/blog/hypertext-tools-from-the-80s/",
                "text": "The pre-internet era was full of wonderful and very powerful systems that are well forgotten now, but we definitely can learn from them, try to understand why we had an enormous degradation in the 1990s and 2000s, and why we are enjoying hypertext systems renaissance now.",
                "fallback": "As We May Think \u2014 products &amp; tools for thought: Hypertext tools from the 80s",
                "image_url": "https://fibery.io/blog/static/fa9305b716ad69404cfd6c19f63b4bdc/d089e/intermedia1.png",
                "image_width": 331,
                "image_height": 250,
                "from_url": "https://fibery.io/blog/hypertext-tools-from-the-80s/",
                "image_bytes": 34982,
                "service_icon": "https://fibery.io/blog/icons/icon-48x48.png?v=e7fde6a93cbcc7bc8da62d47503a4ad7",
                "id": 1,
                "original_url": "https://fibery.io/blog/hypertext-tools-from-the-80s/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yPDVw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hypertext tools from the 80s\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://fibery.io/blog/hypertext-tools-from-the-80s/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "USH01JEDQ",
                    "U02JDAYKW7J",
                    "UMV4B97GT",
                    "U0112C10V4Y",
                    "UJBAJNFLK"
                ],
                "count": 5
            }
        ]
    }
]