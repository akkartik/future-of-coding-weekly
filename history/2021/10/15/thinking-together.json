[
    {
        "client_msg_id": "43BC5EE3-EC35-4179-AC41-3C3B058D5B89",
        "type": "message",
        "text": "Does anyone know of work on software maintenance? Specifically around modifying code after upgrading libraries with breaking changes. I spend most of my time making sure no one notices that I\u2019ve changed anything. I feel like improvements to this could have huge benefits to productivity. ",
        "user": "UQ706GB9U",
        "ts": "1634314007.365700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cVvo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone know of work on software maintenance? Specifically around modifying code after upgrading libraries with breaking changes. I spend most of my time making sure no one notices that I\u2019ve changed anything. I feel like improvements to this could have huge benefits to productivity. "
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634314007.365700",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1634462004.388000",
        "reply_users": [
            "UCUSW7WVD",
            "U013ZLJARC7"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "122e28ea-193f-4b91-8af2-790ed793c914",
        "type": "message",
        "text": "I think this is the implicit motivation for a _lot_ of research and tech choices. Languages trying to be predictable (Go) are focused on maintenance. Rhetoric about readability, how programs are read a lot more than modified, Literate Programming and how programs should be written for people to read. Automated testing and version control are arguably the biggest recent advances.\n\nIn spite of all the research it remains a problem. I think it'll never be completely solved because better tools just cause people to take on more complex projects, the way building more roads never seems to eliminate traffic jams. And those local complexifying choices pollute our shared commons.\n\nDijkstra said his brain is very small and can only handle small programs. Dennis Ritchie said if you write programs using all of your brain you won't be smart enough to debug them. Illich warned us of the consequences of adopting tools too quickly. Unfortunately the world doesn't listen to any of these prophets. After 10k years the prisoner's dilemma continues to reign supreme.",
        "user": "UCUSW7WVD",
        "ts": "1634320967.365800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0FBJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this is the implicit motivation for a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of research and tech choices. Languages trying to be predictable (Go) are focused on maintenance. Rhetoric about readability, how programs are read a lot more than modified, Literate Programming and how programs should be written for people to read. Automated testing and version control are arguably the biggest recent advances.\n\nIn spite of all the research it remains a problem. I think it'll never be completely solved because better tools just cause people to take on more complex projects, the way building more roads never seems to eliminate traffic jams. And those local complexifying choices pollute our shared commons.\n\nDijkstra said his brain is very small and can only handle small programs. Dennis Ritchie said if you write programs using all of your brain you won't be smart enough to debug them. Illich warned us of the consequences of adopting tools too quickly. Unfortunately the world doesn't listen to any of these prophets. After 10k years the prisoner's dilemma continues to reign supreme."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634314007.365700",
        "parent_user_id": "UQ706GB9U",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7ca749b3-bfa7-491f-8763-141ada3729ef",
        "type": "message",
        "text": "s/Dennis Ritchie/Brian Kerighan/ :slightly_smiling_face:",
        "user": "U013ZLJARC7",
        "ts": "1634462004.388000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a8x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "s/Dennis Ritchie/Brian Kerighan/ "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1634314007.365700",
        "parent_user_id": "UQ706GB9U",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]