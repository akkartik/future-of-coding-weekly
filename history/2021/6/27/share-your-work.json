[
    {
        "client_msg_id": "04aa66dd-81e7-4c58-b318-751a7d867636",
        "type": "message",
        "text": "Hi,\n\nI\u2019ve decided to step out of my comfort zone and share with you a codesandbox which has the flowrunner-canvas editor embedded. This is the side project I have been working on the last couple of years and shown some video\u2019s of it here. And to manage expectations: this is a small part of what is possible already, and only a very small amount of node-types have been made available when using the editor this way. Also expect some bugs ;-) The editor is responsive but support for touch screens can and will be improved in the future.\nBut hopefully it gives enough impressions on some of the core ideas of the project.\n\nThe flow that is loaded when opening the codesandbox, has a form-node with radio-buttons, when you choose the top most radiobutton, two input fields will appear. The values you enter in those input fields are multiplied together by the expression-node and the output is shown in the debug-node.\u00a0\n\nAll nodes manipulate the payload (a basic javascript object), which is passed through to the next output. The results are visible in realtime as well as the execution path the flow follows.\n\nIn this example, localstorage is used for storing the flow (it is initialised with an example automatically). But this doesn\u2019t work in incognito mode, please be aware of that if you want to try it out like that.\n\n<https://codesandbox.io/s/flowrunner-canvas-wljy9>\n\nFeedback is very welcome! :slightly_smiling_face: Thanks!",
        "user": "U0123H7JRDM",
        "ts": "1624794298.120500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "CodeSandbox",
                "title": "flowrunner-canvas - CodeSandbox",
                "title_link": "https://codesandbox.io/s/flowrunner-canvas-wljy9",
                "text": "flowrunner-canvas by devhelpr using @devhelpr/flowrunner-canvas, react, react-dom, react-scripts",
                "fallback": "CodeSandbox: flowrunner-canvas - CodeSandbox",
                "image_url": "https://codesandbox.io/api/v1/sandboxes/wljy9/screenshot.png",
                "image_width": 476,
                "image_height": 250,
                "ts": 1624121703,
                "from_url": "https://codesandbox.io/s/flowrunner-canvas-wljy9",
                "image_bytes": 12653,
                "service_icon": "https://codesandbox.io/favicon.ico",
                "id": 1,
                "original_url": "https://codesandbox.io/s/flowrunner-canvas-wljy9"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YKo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi,\n\nI\u2019ve decided to step out of my comfort zone and share with you a codesandbox which has the flowrunner-canvas editor embedded. This is the side project I have been working on the last couple of years and shown some video\u2019s of it here. And to manage expectations: this is a small part of what is possible already, and only a very small amount of node-types have been made available when using the editor this way. Also expect some bugs ;-) The editor is responsive but support for touch screens can and will be improved in the future.\nBut hopefully it gives enough impressions on some of the core ideas of the project.\n\nThe flow that is loaded when opening the codesandbox, has a form-node with radio-buttons, when you choose the top most radiobutton, two input fields will appear. The values you enter in those input fields are multiplied together by the expression-node and the output is shown in the debug-node.\u00a0\n\nAll nodes manipulate the payload (a basic javascript object), which is passed through to the next output. The results are visible in realtime as well as the execution path the flow follows.\n\nIn this example, localstorage is used for storing the flow (it is initialised with an example automatically). But this doesn\u2019t work in incognito mode, please be aware of that if you want to try it out like that.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://codesandbox.io/s/flowrunner-canvas-wljy9"
                            },
                            {
                                "type": "text",
                                "text": "\n\nFeedback is very welcome! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " Thanks!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1624794298.120500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1624804703.120900",
        "reply_users": [
            "U0123H7JRDM"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UUQ2EQW21"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0a8f9af6-f43f-44b1-8f14-353aca2b0806",
        "type": "message",
        "text": "An additional example : <https://codesandbox.io/s/flowrunner-canvas-wasm-example-p68pz> .. you have to play around with the sliders to get some result. The \"script\" in the ScriptTask-node gets compiled to webassembly in real-time. The sliders are input-parameters to this webassembly module, and the output is shown in the node on the right-hand side.",
        "user": "U0123H7JRDM",
        "ts": "1624804703.120900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "CodeSandbox",
                "title": "flowrunner-canvas-wasm-example - CodeSandbox",
                "title_link": "https://codesandbox.io/s/flowrunner-canvas-wasm-example-p68pz",
                "text": "flowrunner-canvas-wasm-example by devhelpr using @devhelpr/flowrunner-canvas, react, react-dom, react-scripts",
                "fallback": "CodeSandbox: flowrunner-canvas-wasm-example - CodeSandbox",
                "image_url": "https://codesandbox.io/api/v1/sandboxes/p68pz/screenshot.png",
                "image_width": 476,
                "image_height": 250,
                "ts": 1624828794,
                "from_url": "https://codesandbox.io/s/flowrunner-canvas-wasm-example-p68pz",
                "image_bytes": 13187,
                "service_icon": "https://codesandbox.io/favicon.ico",
                "id": 1,
                "original_url": "https://codesandbox.io/s/flowrunner-canvas-wasm-example-p68pz"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O8z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An additional example : "
                            },
                            {
                                "type": "link",
                                "url": "https://codesandbox.io/s/flowrunner-canvas-wasm-example-p68pz"
                            },
                            {
                                "type": "text",
                                "text": " .. you have to play around with the sliders to get some result. The \"script\" in the ScriptTask-node gets compiled to webassembly in real-time. The sliders are input-parameters to this webassembly module, and the output is shown in the node on the right-hand side."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1624794298.120500",
        "parent_user_id": "U0123H7JRDM"
    }
]