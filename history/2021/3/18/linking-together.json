[
    {
        "client_msg_id": "f8b9c3df-a672-40b8-bee6-575e5a313e69",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=hQ4Y-eAOZ-8|Uncanny Valleys in Declarative Language Design>",
        "user": "UBN9AFS0N",
        "ts": "1616070822.013500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Uncanny Valleys in Declarative Language Design",
                "title_link": "https://www.youtube.com/watch?v=hQ4Y-eAOZ-8",
                "author_name": "Mark S. Miller",
                "author_link": "https://www.youtube.com/c/MarkMiller-erights",
                "thumb_url": "https://i.ytimg.com/vi/hQ4Y-eAOZ-8/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Uncanny Valleys in Declarative Language Design",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/hQ4Y-eAOZ-8?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://www.youtube.com/watch?v=hQ4Y-eAOZ-8",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=hQ4Y-eAOZ-8"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9NQLv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=hQ4Y-eAOZ-8",
                                "text": "Uncanny Valleys in Declarative Language Design"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1616070822.013500",
        "reply_count": 5,
        "reply_users_count": 5,
        "latest_reply": "1616175869.020000",
        "reply_users": [
            "UHWC9PXBL",
            "UA14TGLTC",
            "UJBAJNFLK",
            "UDKTZSD6H",
            "U01AD80KMLK"
        ],
        "subscribed": true,
        "last_read": "1616175869.020000",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UJBAJNFLK",
                    "UJ6LDMMN0"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "77840797-9016-49A9-9B0F-616E0C0E9D68",
        "type": "message",
        "text": "wow. thought this looked interesting but didn\u2019t expect it to be as great as it was! should be required watching for language designers imo",
        "user": "UHWC9PXBL",
        "ts": "1616078096.015100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IOp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wow. thought this looked interesting but didn\u2019t expect it to be as great as it was! should be required watching for language designers imo"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1616070822.013500",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "00b1b7b8-de39-43e0-b6e5-9c9a413b967d",
        "type": "message",
        "text": "One of the coolest projects I\u2019ve stumbled into this month: <https://github.com/Overv/outrun#outrun> Such a poetic idea!\n\nIs your \u2018localhost\u2019 being slow? Screw it, offload to some other beefy server to do heavy lifting and send you back the results. Love how its integrated at cli + filesystem level. Obviously some serious limitations to it, but its a nice personal computing / homebrew approach :beer:\n\nAlso makes cloud computing..more true to the name?",
        "user": "UAJKEBGP8",
        "ts": "1616104725.016800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "Overv/outrun",
                "title_link": "https://github.com/Overv/outrun#outrun",
                "text": "Execute a local command using the processing power of another Linux machine. - Overv/outrun",
                "fallback": "GitHub: Overv/outrun",
                "thumb_url": "https://avatars.githubusercontent.com/u/285063?s=400&v=4",
                "from_url": "https://github.com/Overv/outrun#outrun",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/Overv/outrun#outrun"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DAdMq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of the coolest projects I\u2019ve stumbled into this month: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/Overv/outrun#outrun"
                            },
                            {
                                "type": "text",
                                "text": " Such a poetic idea!\n\nIs your \u2018localhost\u2019 being slow? Screw it, offload to some other beefy server to do heavy lifting and send you back the results. Love how its integrated at cli + filesystem level. Obviously some serious limitations to it, but its a nice personal computing / homebrew approach "
                            },
                            {
                                "type": "emoji",
                                "name": "beer"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAlso makes cloud computing..more true to the name?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "UC2A2ARPT",
                    "U01KZQEQVUP",
                    "UHWC9PXBL",
                    "UJ6LDMMN0"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "5790e377-8c36-48c4-831a-95ccf50f14a2",
        "type": "message",
        "text": "The philosophy here is considerably deeper than the example, which I think can be summed up with people expect something like breadth-first search in Prolog-like languages.  (I've seen it time and again.)\n\nBut adapting to how people expect a language to work?  That's the ticket!",
        "user": "UA14TGLTC",
        "ts": "1616133672.017200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7BT5v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The philosophy here is considerably deeper than the example, which I think can be summed up with people expect something like breadth-first search in Prolog-like languages.  (I've seen it time and again.)\n\nBut adapting to how people expect a language to work?  That's the ticket!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1616070822.013500",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0a1eca25-dd13-46ca-8dc2-802aa2d953f5",
        "type": "message",
        "text": "A very good talk indeed. Makes me wonder to what degree language user expectations depend on their prior experience, not just in computing. Also how the way their expectations evolve depends on their prior experience.",
        "user": "UJBAJNFLK",
        "ts": "1616143929.017800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KcIF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A very good talk indeed. Makes me wonder to what degree language user expectations depend on their prior experience, not just in computing. Also how the way their expectations evolve depends on their prior experience."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1616070822.013500",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ccc91ff1-41cd-41a2-aabf-ebb3401d21cf",
        "type": "message",
        "text": "Thanks for sharing this talk. That Venn diagramming coadaption idea was super nice!",
        "user": "UDKTZSD6H",
        "ts": "1616149538.018600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p1pl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing this talk. That Venn diagramming coadaption idea was super nice!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1616070822.013500",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "634bff75-ddc5-4fbc-a5df-b6aa597f0c90",
        "type": "message",
        "text": "I worked with Yedalog inside Google! Small world :smile:",
        "user": "U01AD80KMLK",
        "ts": "1616175869.020000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YUcPA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I worked with Yedalog inside Google! Small world "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1616070822.013500",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "hushed",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    }
]