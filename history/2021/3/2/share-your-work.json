[
    {
        "client_msg_id": "be6883b3-22ff-4f39-b9d6-5eb72530aa76",
        "type": "message",
        "text": "Hey guys, I took a long break from MockMechanics, but I'm back. Just finished the 7 segment display video on youtube, check it out: <https://www.youtube.com/watch?v=9rieZb2hzLE>",
        "user": "U01GPM3BY4R",
        "ts": "1614679421.045400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Seven Segment Display",
                "title_link": "https://www.youtube.com/watch?v=9rieZb2hzLE",
                "author_name": "MockMechanics",
                "author_link": "https://www.youtube.com/c/MockMechanics",
                "thumb_url": "https://i.ytimg.com/vi/9rieZb2hzLE/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Seven Segment Display",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/9rieZb2hzLE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=9rieZb2hzLE",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=9rieZb2hzLE"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "42zi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey guys, I took a long break from MockMechanics, but I'm back. Just finished the 7 segment display video on youtube, check it out: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=9rieZb2hzLE"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "reply_count": 13,
        "reply_users_count": 3,
        "latest_reply": "1614803504.058500",
        "reply_users": [
            "UC2A2ARPT",
            "U01GPM3BY4R",
            "UBKNXPBAB"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U013HU44GLS",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "c9248aa1-ab3d-405e-b3b2-90912f3a5ae5",
        "type": "message",
        "text": "Please continue to share videos like these! I'm very excited to see more of the 3D Printer.\n\nFor the 7-segment display, would it have been possible to do something like... draw each of the numbers on separate image objects, and then only show the one that matched the current value, and hide all the others? Or, perhaps, to position them all in a line, and create a \"window\" in which only one number is visible, and then slide the desired number into the window?\n\nIt feels like this is the sort of problem that lends itself _very_ naturally to a purely mechanical solution, so I was surprised to see you resort to (quite a bit of) text code to make it work.",
        "user": "UC2A2ARPT",
        "ts": "1614701973.045600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aWhrL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Please continue to share videos like these! I'm very excited to see more of the 3D Printer.\n\nFor the 7-segment display, would it have been possible to do something like... draw each of the numbers on separate image objects, and then only show the one that matched the current value, and hide all the others? Or, perhaps, to position them all in a line, and create a \"window\" in which only one number is visible, and then slide the desired number into the window?\n\nIt feels like this is the sort of problem that lends itself "
                            },
                            {
                                "type": "text",
                                "text": "very",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " naturally to a purely mechanical solution, so I was surprised to see you resort to (quite a bit of) text code to make it work."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R"
    },
    {
        "client_msg_id": "a4ced5a7-a545-4ae3-a53e-a7a0cee5e33e",
        "type": "message",
        "text": "Hey Ivan, thanks. I probably could make a purely mechanical display, using your idea but I was focusing on the 3d printer, so I guess I just didn't. Plus with library parts I have to balance coolness with practicality. If I can use a bit more code but the part is fast, occupies less space and so on so that it's ready to be imported to other machines it makes sense to do so. Plus it's not that much code really, if you look closely it's mostly data. But I was intrigued by your idea, let me try to implement it real quick...",
        "user": "U01GPM3BY4R",
        "ts": "1614703415.046000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VLYU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey Ivan, thanks. I probably could make a purely mechanical display, using your idea but I was focusing on the 3d printer, so I guess I just didn't. Plus with library parts I have to balance coolness with practicality. If I can use a bit more code but the part is fast, occupies less space and so on so that it's ready to be imported to other machines it makes sense to do so. Plus it's not that much code really, if you look closely it's mostly data. But I was intrigued by your idea, let me try to implement it real quick..."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "864be12c-e137-4c30-af79-474ae93be267",
        "type": "message",
        "text": "That totally makes sense. I'm mostly just curious to feel out what the limits are \u2014 if there's a reason that you just simply _can't_ make something like that, or if it was merely a choice not to. I love seeing what happens when visual programming tools are pushed to the breaking point. To me, it reveals a lot about the tool.",
        "user": "UC2A2ARPT",
        "ts": "1614703756.046300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k+LIx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That totally makes sense. I'm mostly just curious to feel out what the limits are \u2014 if there's a reason that you just simply "
                            },
                            {
                                "type": "text",
                                "text": "can't",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " make something like that, or if it was merely a choice not to. I love seeing what happens when visual programming tools are pushed to the breaking point. To me, it reveals a lot about the tool."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R"
    },
    {
        "type": "message",
        "text": "Yes, you're right, there's a lot of trade offs like this with MockMechanics. I made it that way deliberately, ideally you can do anything visually, but you don't have to if it's simpler/more efficient/etc to do with code. One thing that I do a lot is to create a quick version of something with code, then make it more visual, because I have a lot of experience with traditional coding but am an amateur with visual programming even though it's my own tool. Anyway, something like this you had in mind?",
        "files": [
            {
                "id": "F01PT6K0P8V",
                "created": 1614705048,
                "timestamp": 1614705048,
                "name": "recording-2021-03-02_14.07.08.mkv",
                "title": "recording-2021-03-02_14.07.08.mkv",
                "mimetype": "video/x-matroska",
                "filetype": "mkv",
                "pretty_type": "Matroska Video",
                "user": "U01GPM3BY4R",
                "editable": false,
                "size": 4750780,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01PT6K0P8V/recording-2021-03-02_14.07.08.mkv",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01PT6K0P8V/download/recording-2021-03-02_14.07.08.mkv",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F01PT6K0P8V-7862dfc423/recording-2021-03-02_14.07.08_thumb_video.jpeg",
                "permalink": "https://futureofcoding.slack.com/files/U01GPM3BY4R/F01PT6K0P8V/recording-2021-03-02_14.07.08.mkv",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01PT6K0P8V-c04a5d76fc",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EDYc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, you're right, there's a lot of trade offs like this with MockMechanics. I made it that way deliberately, ideally you can do anything visually, but you don't have to if it's simpler/more efficient/etc to do with code. One thing that I do a lot is to create a quick version of something with code, then make it more visual, because I have a lot of experience with traditional coding but am an amateur with visual programming even though it's my own tool. Anyway, something like this you had in mind?"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U01GPM3BY4R",
        "display_as_bot": false,
        "ts": "1614705074.046500",
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "447a86b4-51f7-418a-abe2-d2d97be3805d",
        "type": "message",
        "text": "I know this isn't quite at the conciseness that is usually shared here, but today we made some strong progress on our Driver SDK design in TypeScript to support really flexible i18n definitions.\n\nI'm quite proud of the conciseness of the demo recording (esp at 1.5x, haha).\n\n\u2022 Part 1 of our progress today including an overview of the type checking experience while developing a service driver with the SDK *<https://www.loom.com/share/d575f780680c48f2a20d7c24ec2e2ace|2021-03 DriverSDK define-service.ts \u2014 storytime-pr - Part 1: Type definitions>*\n\u2022 <https://www.loom.com/share/662638c0855b45d485f4ffd1852b9174|Part 2 (english localization)> demonstrating the way which a localization can be set up for \"wolfram solve\" action and some insights into the way param qualification are likely going to evolve in the future\nI deeply appreciate all the inspiring links, discussions, and feedback I come across here, and I would love to see if our ideas resonate or inspire anyone else.",
        "user": "UFPPABQ7P",
        "ts": "1614718647.051400",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Loom",
                "service_url": "https://www.loom.com",
                "title": "2021-03 DriverSDK define-service.ts \u2014 storytime-pr - Part 1: Type definitions",
                "title_link": "https://www.loom.com/share/d575f780680c48f2a20d7c24ec2e2ace",
                "thumb_url": "https://cdn.loom.com/sessions/thumbnails/d575f780680c48f2a20d7c24ec2e2ace-00001.gif",
                "thumb_width": 1024,
                "thumb_height": 576,
                "fallback": "Loom Video: 2021-03 DriverSDK define-service.ts \u2014 storytime-pr - Part 1: Type definitions",
                "video_html": "<iframe src=\"https://www.loom.com/embed/d575f780680c48f2a20d7c24ec2e2ace?autoplay=1\" frameborder=\"0\" width=\"1280\" height=\"960\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>",
                "video_html_width": 1280,
                "video_html_height": 960,
                "from_url": "https://www.loom.com/share/d575f780680c48f2a20d7c24ec2e2ace",
                "id": 1,
                "original_url": "https://www.loom.com/share/d575f780680c48f2a20d7c24ec2e2ace"
            },
            {
                "service_name": "Loom",
                "service_url": "https://www.loom.com",
                "title": "2021-03 Define action localization &amp; upcoming param re-architecture \u2014 storytime-pr",
                "title_link": "https://www.loom.com/share/662638c0855b45d485f4ffd1852b9174",
                "thumb_url": "https://cdn.loom.com/sessions/thumbnails/662638c0855b45d485f4ffd1852b9174-00001.gif",
                "thumb_width": 1024,
                "thumb_height": 576,
                "fallback": "Loom Video: 2021-03 Define action localization & upcoming param re-architecture \u2014 storytime-pr",
                "video_html": "<iframe src=\"https://www.loom.com/embed/662638c0855b45d485f4ffd1852b9174?autoplay=1\" frameborder=\"0\" width=\"1280\" height=\"960\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>",
                "video_html_width": 1280,
                "video_html_height": 960,
                "from_url": "https://www.loom.com/share/662638c0855b45d485f4ffd1852b9174",
                "id": 2,
                "original_url": "https://www.loom.com/share/662638c0855b45d485f4ffd1852b9174"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LW3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I know this isn't quite at the conciseness that is usually shared here, but today we made some strong progress on our Driver SDK design in TypeScript to support really flexible i18n definitions.\n\nI'm quite proud of the conciseness of the demo recording (esp at 1.5x, haha).\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Part 1 of our progress today including an overview of the type checking experience while developing a service driver with the SDK "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://www.loom.com/share/d575f780680c48f2a20d7c24ec2e2ace",
                                        "text": "2021-03 DriverSDK define-service.ts \u2014 storytime-pr - Part 1: Type definitions",
                                        "style": {
                                            "bold": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://www.loom.com/share/662638c0855b45d485f4ffd1852b9174",
                                        "text": "Part 2 (english localization)"
                                    },
                                    {
                                        "type": "text",
                                        "text": " demonstrating the way which a localization can be set up for \"wolfram solve\" action and some insights into the way param qualification are likely going to evolve in the future"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI deeply appreciate all the inspiring links, discussions, and feedback I come across here, and I would love to see if our ideas resonate or inspire anyone else."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614718647.051400",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1614718870.051600",
        "reply_users": [
            "UFPPABQ7P"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "U85HCL7JP"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "58f55fae-10e9-40eb-9fce-00b9754d4e11",
        "type": "message",
        "text": "For a bit more context we are building basically a low-code sort of platform that's heavily text / language based with embedded symbols and values in line.\n\nThis work is part of the design of our \"driver SDK\" which you would use to write integrations for services.",
        "user": "UFPPABQ7P",
        "ts": "1614718870.051600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KD6NX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For a bit more context we are building basically a low-code sort of platform that's heavily text / language based with embedded symbols and values in line.\n\nThis work is part of the design of our \"driver SDK\" which you would use to write integrations for services."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614718647.051400",
        "parent_user_id": "UFPPABQ7P"
    },
    {
        "client_msg_id": "40929a0e-1aaf-47ba-acfd-987aba99b1d5",
        "type": "message",
        "text": "Yeah, that's more what I had in mind. Love it. The thing is, though, how can you make that work as a reusable component that doesn't take up.. tons of space.",
        "user": "UC2A2ARPT",
        "ts": "1614719468.051900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vsW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, that's more what I had in mind. Love it. The thing is, though, how can you make that work as a reusable component that doesn't take up.. tons of space."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01GPM3BY4R"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "fbfb2a09-af1b-44c7-91f6-48aff8d28046",
        "type": "message",
        "text": "Exactly.",
        "user": "U01GPM3BY4R",
        "ts": "1614723411.052200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8DLN2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Exactly."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "425db0ec-dd74-4e7d-8161-35eab0f2070c",
        "type": "message",
        "text": "One option would be to allow a subcomponent to \"hide\"/\"fold away\" its internal mechanism when it is used in a larger assembly. For instance, the 7-segment display could \"hide\"/\"fold away\" its carousel when it is used in a larger machine. (Though, when using or editing this larger assembly, you would sometimes want quick access to the internals of the subcomponents, so there would have to be some \"focus on subcomponent\" interaction.)\n\nI'm not sure if this would line up with your objectives. If you want every large machine to be something you could actually theoretically construct, as a single object in real space, this would conflict with that desire.\n\nBut personally, I prefer:\n\nA: a system that encourages you to build everything mechanically, including arbitrary subcomponents, and which uses the \"hide\"/\"fold away\" feature to facilitate this,\n\nto:\n\nB: a system which requires assemblies to combine subcomponents in real space, with the consequence that builders are discouraged from building subcomponents mechanically.\n\n(Of course, some third possibility might be out there that would avoid this compromise entirely!)",
        "user": "UBKNXPBAB",
        "ts": "1614752367.053500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBKNXPBAB",
            "ts": "1614752408.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZUzmz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One option would be to allow a subcomponent to \"hide\"/\"fold away\" its internal mechanism when it is used in a larger assembly. For instance, the 7-segment display could \"hide\"/\"fold away\" its carousel when it is used in a larger machine. (Though, when using or editing this larger assembly, you would sometimes want quick access to the internals of the subcomponents, so there would have to be some \"focus on subcomponent\" interaction.)\n\nI'm not sure if this would line up with your objectives. If you want every large machine to be something you could actually theoretically construct, as a single object in real space, this would conflict with that desire.\n\nBut personally, I prefer:\n\nA: a system that encourages you to build everything mechanically, including arbitrary subcomponents, and which uses the \"hide\"/\"fold away\" feature to facilitate this,\n\nto:\n\nB: a system which requires assemblies to combine subcomponents in real space, with the consequence that builders are discouraged from building subcomponents mechanically.\n\n(Of course, some third possibility might be out there that would avoid this compromise entirely!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "<@UBKNXPBAB> Actually something like this already exists, you don't see all the parts of the machines I show because they are hidden in different layers (which I just upgraded so you can name each layer). Take a look at this image. The problem with using it for the carousel is that you have to move parts to and from a background layer during use, instead of only when editing the machine. I have never done something like that but I'm sure it's possible. The scripting system has full access to the whole program, it would be relatively easy to create a library part that can change the layer of a part depending on where it is for instance (So only the front display is in the visible layer, when it rotates it is moved to a background layer)",
        "files": [
            {
                "id": "F01QC0CEY2D",
                "created": 1614760937,
                "timestamp": 1614760937,
                "name": "Screenshot from 2021-02-24 17-16-58.png",
                "title": "Screenshot from 2021-02-24 17-16-58.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U01GPM3BY4R",
                "editable": false,
                "size": 76614,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01QC0CEY2D/screenshot_from_2021-02-24_17-16-58.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01QC0CEY2D/download/screenshot_from_2021-02-24_17-16-58.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01QC0CEY2D-6669051dce/screenshot_from_2021-02-24_17-16-58_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01QC0CEY2D-6669051dce/screenshot_from_2021-02-24_17-16-58_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01QC0CEY2D-6669051dce/screenshot_from_2021-02-24_17-16-58_360.png",
                "thumb_360_w": 320,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01QC0CEY2D-6669051dce/screenshot_from_2021-02-24_17-16-58_480.png",
                "thumb_480_w": 427,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01QC0CEY2D-6669051dce/screenshot_from_2021-02-24_17-16-58_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F01QC0CEY2D-6669051dce/screenshot_from_2021-02-24_17-16-58_720.png",
                "thumb_720_w": 640,
                "thumb_720_h": 720,
                "original_w": 683,
                "original_h": 768,
                "thumb_tiny": "AwAwACqJ4lVsAHoDzTdi+hqWT7/4DtinWxBkbpkCtNFG5lq5WINqg4IIPoaPLWrCusiuk2V+YgZGPpUKnI56042fQJXXUQRrnvUhiUEj5v0po61MQST8v/jtTNK5UG2itM4LfKRjHamI7RsGXqKj3Dn2oLYFQWXVuy0bEKAR6mqwdgPWmiRNrbgST+lJ5gxjBoTaBpMmWTLAY6mrBHJ4H5GqKyAMDjpU/wBqzzs6+9NtvcSSWxWHRuf50jdBSDpSYNIYtHem0UAOp46VFzS5PqaAP//Z",
                "permalink": "https://futureofcoding.slack.com/files/U01GPM3BY4R/F01QC0CEY2D/screenshot_from_2021-02-24_17-16-58.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01QC0CEY2D-1544f291b6",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ymr31",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": " Actually something like this already exists, you don't see all the parts of the machines I show because they are hidden in different layers (which I just upgraded so you can name each layer). Take a look at this image. The problem with using it for the carousel is that you have to move parts to and from a background layer during use, instead of only when editing the machine. I have never done something like that but I'm sure it's possible. The scripting system has full access to the whole program, it would be relatively easy to create a library part that can change the layer of a part depending on where it is for instance (So only the front display is in the visible layer, when it rotates it is moved to a background layer)"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "U01GPM3BY4R",
        "display_as_bot": false,
        "ts": "1614761219.053800",
        "edited": {
            "user": "U01GPM3BY4R",
            "ts": "1614761310.000000"
        },
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R"
    },
    {
        "client_msg_id": "449c1816-7a51-4ce0-add9-b03f231a1c23",
        "type": "message",
        "text": "Sorry, I didn't explain, the naming of the layers was to solve the conflict you mentioned. Before, in the first layer there was everything you could see and everything I wanted to hide was littered throughout the other layers, but hidden mechanisms conflicted with each other in these hidden layers. Now you can have a layer say \"clock\" where you show the parts of the clock you want and put what you don't want in the background layer (that's why there's two squares beside each name). And you can have a different layer for another machine/subcomponent with it's own foreground and background layer. Also for flexibility while editing, the whole foreground/background thing is just a convention, you can pick and choose each layer and sublayer to show or hide it (in the image the five foreground layers are visible, that's what the white outline means).",
        "user": "U01GPM3BY4R",
        "ts": "1614762719.054400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01GPM3BY4R",
            "ts": "1614762765.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Avbj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry, I didn't explain, the naming of the layers was to solve the conflict you mentioned. Before, in the first layer there was everything you could see and everything I wanted to hide was littered throughout the other layers, but hidden mechanisms conflicted with each other in these hidden layers. Now you can have a layer say \"clock\" where you show the parts of the clock you want and put what you don't want in the background layer (that's why there's two squares beside each name). And you can have a different layer for another machine/subcomponent with it's own foreground and background layer. Also for flexibility while editing, the whole foreground/background thing is just a convention, you can pick and choose each layer and sublayer to show or hide it (in the image the five foreground layers are visible, that's what the white outline means)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R"
    },
    {
        "client_msg_id": "93ac66e2-e608-453d-a149-99b8b6ea6f91",
        "type": "message",
        "text": "&gt; The problem with using it for the carousel is that you have to move parts to and from a background layer during use, instead of only when editing the machine.\nOne of the solutions to this that I'm considering for Hest is some sort of portal/window/mask-like behaviour. When creating a subcomponent, you'd draw a bounding volume around the stuff you want to show to the outside world. Anything not within that volume is hidden when viewing from the outside, but visible when editing the subcomponent. This is how subpatchers work in Max, and (to a certain extent) how nested SWFs worked in Flash. It doesn't work in all cases, but it is compatible with other techniques for controlling visibility (like layers), and it does let you control visibility purely _in space,_ without getting abstract.",
        "user": "UC2A2ARPT",
        "ts": "1614800252.056800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1614800273.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mxYA",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The problem with using it for the carousel is that you have to move parts to and from a background layer during use, instead of only when editing the machine."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nOne of the solutions to this that I'm considering for Hest is some sort of portal/window/mask-like behaviour. When creating a subcomponent, you'd draw a bounding volume around the stuff you want to show to the outside world. Anything not within that volume is hidden when viewing from the outside, but visible when editing the subcomponent. This is how subpatchers work in Max, and (to a certain extent) how nested SWFs worked in Flash. It doesn't work in all cases, but it is compatible with other techniques for controlling visibility (like layers), and it does let you control visibility purely "
                            },
                            {
                                "type": "text",
                                "text": "in space, ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "without getting abstract."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R"
    },
    {
        "client_msg_id": "2c7ad294-2691-4afb-9cbb-13184eeaf9b8",
        "type": "message",
        "text": "I really love that idea Ivan, I'm always looking for ways to make more use of the 3d space instead of relying on 2d windows, I even considered making the logic gates 3d components that you connect with 3d wires. In the end I decided it would look too messy, but for layers it might work just fine. In my case each 3d \"layer\" could have any custom shape, made of the same blocks used to build machines. Added to my idea file, thanks! Also I didn't know about Hest until now (sorry, I'm a bit self absorbed), I saw the shitty math video on twitter just now and it looks cool. What would be the best way to explore it when I have some time in the weekend (is it an online tool? is there some documentation? I couldn't find it on your bio/websites)",
        "user": "U01GPM3BY4R",
        "ts": "1614801400.057400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01GPM3BY4R",
            "ts": "1614801474.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gWv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really love that idea Ivan, I'm always looking for ways to make more use of the 3d space instead of relying on 2d windows, I even considered making the logic gates 3d components that you connect with 3d wires. In the end I decided it would look too messy, but for layers it might work just fine. In my case each 3d \"layer\" could have any custom shape, made of the same blocks used to build machines. Added to my idea file, thanks! Also I didn't know about Hest until now (sorry, I'm a bit self absorbed), I saw the shitty math video on twitter just now and it looks cool. What would be the best way to explore it when I have some time in the weekend (is it an online tool? is there some documentation? I couldn't find it on your bio/websites)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R"
    },
    {
        "client_msg_id": "62411328-34fe-4395-a33f-3f09e3c6294a",
        "type": "message",
        "text": "It's a prototype. I've given a few private demos via Zoom, and I wrote <https://ivanish.ca/hest-time-travel/|a post> a while ago thinking through some of the design and challenges I was facing. It's a \"work\" project, rather than a \"personal\" project, and I'm the only programmer at my company, so I only get to work on it when there aren't other projects that need my immediate attention. So it's sort of in dev hell. Each year, I have a few good months to build it out, and then it's back on the shelf. My coworkers are all fine with the idea that it's something worth pursuing, even if it takes a decade, so I'm not complaining. Slow and steady!",
        "user": "UC2A2ARPT",
        "ts": "1614803237.057900",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1614803243.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KSN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a prototype. I've given a few private demos via Zoom, and I wrote "
                            },
                            {
                                "type": "link",
                                "url": "https://ivanish.ca/hest-time-travel/",
                                "text": "a post"
                            },
                            {
                                "type": "text",
                                "text": " a while ago thinking through some of the design and challenges I was facing. It's a \"work\" project, rather than a \"personal\" project, and I'm the only programmer at my company, so I only get to work on it when there aren't other projects that need my immediate attention. So it's sort of in dev hell. Each year, I have a few good months to build it out, and then it's back on the shelf. My coworkers are all fine with the idea that it's something worth pursuing, even if it takes a decade, so I'm not complaining. Slow and steady!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R",
        "reactions": [
            {
                "name": "grin",
                "users": [
                    "U01GPM3BY4R"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U01GPM3BY4R"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "81bc4c09-96f0-4612-a728-b009d15408cd",
        "type": "message",
        "text": "Alright, I'll have a look at the post, it does look cool.",
        "user": "U01GPM3BY4R",
        "ts": "1614803504.058500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UGPr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Alright, I'll have a look at the post, it does look cool."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1614679421.045400",
        "parent_user_id": "U01GPM3BY4R"
    }
]