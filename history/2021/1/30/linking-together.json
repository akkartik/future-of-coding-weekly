[
    {
        "client_msg_id": "256938BF-F08E-4490-846B-2841C8CA6D7A",
        "type": "message",
        "text": "reminds me of some of the original t2tuesday simulation videos, which i unfortunately can\u2019t find",
        "user": "UHWC9PXBL",
        "ts": "1611963164.023400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6m/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "reminds me of some of the original t2tuesday simulation videos, which i unfortunately can\u2019t find"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1611863830.015600",
        "parent_user_id": "UFQQ3P867"
    },
    {
        "client_msg_id": "33d56ed4-b8f7-4cd4-962a-fb491e873578",
        "type": "message",
        "text": "C-for-Metal: High Performance SIMD Programming on Intel GPUs - <https://arxiv.org/abs/2101.11049|https://arxiv.org/abs/2101.11049>",
        "user": "UPVBV34EL",
        "ts": "1611991104.023700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "arXiv.org",
                "title": "C-for-Metal: High Performance SIMD Programming on Intel GPUs",
                "title_link": "https://arxiv.org/abs/2101.11049",
                "text": "The SIMT execution model is commonly used for general GPU development. CUDA and OpenCL developers write scalar code that is implicitly parallelized by compiler and hardware. On Intel GPUs,...",
                "fallback": "arXiv.org: C-for-Metal: High Performance SIMD Programming on Intel GPUs",
                "from_url": "https://arxiv.org/abs/2101.11049",
                "service_icon": "https://static.arxiv.org/static/browse/0.3.2.6/images/icons/favicon.ico",
                "id": 1,
                "original_url": "https://arxiv.org/abs/2101.11049"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zJyt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "C-for-Metal: High Performance SIMD Programming on Intel GPUs - "
                            },
                            {
                                "type": "link",
                                "url": "https://arxiv.org/abs/2101.11049",
                                "text": "https://arxiv.org/abs/2101.11049"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e6c55e90-de72-4e93-a3b8-c6198389c4bb",
        "type": "message",
        "text": "Interesting thread in the sense that it represents how most programmers think about VPL. L Ritter holds the fort though. I'm curious what people here think about some of the comments and the general temperature of the thread\n\n<https://twitter.com/tom_forsyth/status/1355404333135798272?s=19|https://twitter.com/tom_forsyth/status/1355404333135798272?s=19>",
        "user": "UBSMEUXAA",
        "ts": "1612032903.026500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/tom_forsyth|@tom_forsyth>: I *still* haven't seen a visual scripting system that is actually more concise and readable than a bunch of text/code. There's trivial examples that are fine in both, but the visual version always turns into a tangled mess sooner than the text.",
                "ts": 1611988549,
                "author_name": "Tom Forsyth",
                "author_link": "https://twitter.com/tom_forsyth/status/1355404333135798272",
                "author_icon": "https://pbs.twimg.com/profile_images/378800000513376397/df7bd88037322f6d1a43f89ffbd89035_normal.png",
                "author_subname": "@tom_forsyth",
                "text": "I *still* haven't seen a visual scripting system that is actually more concise and readable than a bunch of text/code. There's trivial examples that are fine in both, but the visual version always turns into a tangled mess sooner than the text.",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/tom_forsyth/status/1355404333135798272?s=19",
                "id": 1,
                "original_url": "https://twitter.com/tom_forsyth/status/1355404333135798272?s=19",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TUaa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting thread in the sense that it represents how most programmers think about VPL. L Ritter holds the fort though. I'm curious what people here think about some of the comments and the general temperature of the thread\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/tom_forsyth/status/1355404333135798272?s=19",
                                "text": "https://twitter.com/tom_forsyth/status/1355404333135798272?s=19"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1612032903.026500",
        "reply_count": 8,
        "reply_users_count": 6,
        "latest_reply": "1612090695.034300",
        "reply_users": [
            "U016VUZGUUQ",
            "UBN9AFS0N",
            "UBSMEUXAA",
            "USH01JEDQ",
            "U01L1TTFP62",
            "UAL7940NM"
        ],
        "subscribed": true,
        "last_read": "1612090695.034300",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "afd73d71-bdec-4951-81ae-8aecbbfe5009",
        "type": "message",
        "text": "I wonder if he includes statechart FSMs in the term \"visual programming\". I'd really like to know how well they work in the wild.",
        "user": "U016VUZGUUQ",
        "ts": "1612033297.026700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FaX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder if he includes statechart FSMs in the term \"visual programming\". I'd really like to know how well they work in the wild."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1612032903.026500",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "7866bb68-6f70-482b-9c1a-f2c1c290c4c2",
        "type": "message",
        "text": "I think it's a waste of time to try to convince people that already have for formed opinion like that.\n\nUse the energy saved by not arguing with them to build something good and useful for a group that is more open to new tools/ideas or that could/would not participate in programming without a visual tool.\n\nIf you are successful, even for a niche you may be closer to convert them eventually.",
        "user": "UBN9AFS0N",
        "ts": "1612033861.026900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cyYQd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's a waste of time to try to convince people that already have for formed opinion like that.\n\nUse the energy saved by not arguing with them to build something good and useful for a group that is more open to new tools/ideas or that could/would not participate in programming without a visual tool.\n\nIf you are successful, even for a niche you may be closer to convert them eventually."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1612032903.026500",
        "parent_user_id": "UBSMEUXAA",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UBSMEUXAA",
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UJ6LDMMN0"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "d209379e-1708-40c1-9949-1323ee3d9097",
        "type": "message",
        "text": "I think because it's mostly game programmers in the thread, the discussion is about node based tools, some mention of structured editors and block based editors as well",
        "user": "UBSMEUXAA",
        "ts": "1612037665.027200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9uJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think because it's mostly game programmers in the thread, the discussion is about node based tools, some mention of structured editors and block based editors as well"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1612032903.026500",
        "parent_user_id": "UBSMEUXAA"
    },
    {
        "client_msg_id": "15BAA1DF-8625-447B-9F48-6173E30EDB96",
        "type": "message",
        "text": "I like such provocations that get a lot of responses, as I end up learning a lot quickly. (Didn't know about vvvv - there are actually jobs for that tech, that's a great sign.)\n\nOne word I didn't see in the threads is \"refactor\". Someone hit the nail on the head when they said \"beginner code is tangled too\".\n\nI liked these 2 comments about layers <https://twitter.com/mikkomononen/status/1355456413598937094?s=21|https://twitter.com/mikkomononen/status/1355456413598937094?s=21>",
        "user": "USH01JEDQ",
        "ts": "1612046936.031000",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "fallback": "<https://twitter.com/MikkoMononen|@MikkoMononen>: <https://twitter.com/aniruddhahar|@aniruddhahar> <https://twitter.com/tom_forsyth|@tom_forsyth> Would be interesting to hear how coders see code. I imagine it in \"transparent layers\", asm/hw, syntax, prog flow, data flow, abstraction, systems relation, ux. I think i can usually juggle 3 layers at time but i reread my code focusing different things, and rewrite.",
                "ts": 1612000966,
                "author_name": "Mikko Mononen",
                "author_link": "https://twitter.com/MikkoMononen/status/1355456413598937094",
                "author_icon": "https://pbs.twimg.com/profile_images/378800000404893091/d44f9c45d05dff4cd191e614c37d9e48_normal.jpeg",
                "author_subname": "@MikkoMononen",
                "text": "<https://twitter.com/aniruddhahar|@aniruddhahar> <https://twitter.com/tom_forsyth|@tom_forsyth> Would be interesting to hear how coders see code. I imagine it in \"transparent layers\", asm/hw, syntax, prog flow, data flow, abstraction, systems relation, ux. I think i can usually juggle 3 layers at time but i reread my code focusing different things, and rewrite.",
                "service_name": "twitter",
                "service_url": "https://twitter.com/",
                "from_url": "https://twitter.com/mikkomononen/status/1355456413598937094?s=21",
                "id": 1,
                "original_url": "https://twitter.com/mikkomononen/status/1355456413598937094?s=21",
                "footer": "Twitter",
                "footer_icon": "https://a.slack-edge.com/80588/img/services/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cRBy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like such provocations that get a lot of responses, as I end up learning a lot quickly. (Didn't know about vvvv - there are actually jobs for that tech, that's a great sign.)\n\nOne word I didn't see in the threads is \"refactor\". Someone hit the nail on the head when they said \"beginner code is tangled too\".\n\nI liked these 2 comments about layers "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/mikkomononen/status/1355456413598937094?s=21",
                                "text": "https://twitter.com/mikkomononen/status/1355456413598937094?s=21"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1612032903.026500",
        "parent_user_id": "UBSMEUXAA",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9EF6AFAF-CFE6-477C-86C4-01AA16C316E2",
        "type": "message",
        "text": "<@U016VUZGUUQ> That's a very interesting comment \u2013 has there been focused visual programming around FSMs / HSMs? Seems like a perfect application.",
        "user": "USH01JEDQ",
        "ts": "1612047104.033200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xGSXF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " That's a very interesting comment \u2013 has there been focused visual programming around FSMs / HSMs? Seems like a perfect application."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1612032903.026500",
        "parent_user_id": "UBSMEUXAA"
    }
]