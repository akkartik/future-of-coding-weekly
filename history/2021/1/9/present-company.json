[
    {
        "client_msg_id": "b746f701-368d-4410-b39c-8f766a8ebea1",
        "type": "message",
        "text": "I don't remember if I played with this before, but wow it is amazing! Great stuff.",
        "user": "UMVFWPZ36",
        "ts": "1610147826.185700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ckyH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't remember if I played with this before, but wow it is amazing! Great stuff."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609519757.183300",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "e7dde12b-fceb-4103-b297-4dfaa7e38345",
        "type": "message",
        "text": "Anyone have a favourite JS library for working with CRDTs? Or even something a little more high-level, for doing collaborative editing? I control the editor (clients), the data model, and the server. I'd like something that helps handle ~conflict resolution~ concurrent changes to the structure of data. Curious to see what options are available. I'm definitely not looking for something tied to any particular framework (eg: React, Express, etc) \u2014 just something that works with vanilla JS.",
        "user": "UC2A2ARPT",
        "ts": "1610160039.187600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1610210210.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aps",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone have a favourite JS library for working with CRDTs? Or even something a little more high-level, for doing collaborative editing? I control the editor (clients), the data model, and the server. I'd like something that helps handle "
                            },
                            {
                                "type": "text",
                                "text": "conflict resolution",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " concurrent changes to the structure of data. Curious to see what options are available. I'm definitely not looking for something tied to any particular framework (eg: React, Express, etc) \u2014 just something that works with vanilla JS."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "reply_count": 19,
        "reply_users_count": 7,
        "latest_reply": "1610308022.219600",
        "reply_users": [
            "UC2A2ARPT",
            "UCGAK10LS",
            "UE1JQM9HQ",
            "UN57U8V53",
            "UHWC9PXBL",
            "UFPPABQ7P",
            "UJ6LDMMN0"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "3380884a-172a-4be1-90ef-f108478a1307",
        "type": "message",
        "text": "Examples of things that might work, since they give you control over the server:\n\n\u2022 <https://github.com/automerge/automerge>\n\u2022 <https://github.com/yjs/yjs/>\n\u2022 <https://github.com/share/sharedb>\nExamples of things that might not work, since they seem to prefer to use a public or private server that isn't your own:\n\n\u2022 <https://gun.eco>\n\u2022 <https://pusher.com>\n\u2022 <https://firebase.google.com>\nWould love more suggestions if you know of anything.",
        "user": "UC2A2ARPT",
        "ts": "1610160807.187800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1610160883.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y/1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Examples of things that might work, since they give you control over the server:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://github.com/automerge/automerge"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://github.com/yjs/yjs/"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://github.com/share/sharedb"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nExamples of things that might not work, since they seem to prefer to use a public or private server that isn't your own:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://gun.eco"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://pusher.com"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https://firebase.google.com"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWould love more suggestions if you know of anything."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "143010B3-E391-4544-9A87-452D13BD3574",
        "type": "message",
        "text": "I\u2019ve never tried to build a conflict resolution system, but one thing I believe to be true is that it\u2019s impossible to automatically merge truly conflicting edits using a generic algorithm whilst preserving intent. If two people change the same piece/region of data asynchronously, they did so with the intent of giving the data a certain shape/property/meaning. To offer \u201cautomatic conflict resolution\u201d is to offer \u201cmerger of meaning\u201d which is never going to be solvable via a generic algorithm. What is the problem that CRDT libraries claim to be solving? What is an example CRDT that an app has actually used that doesn\u2019t employ a trivial resolution algorithm? You\u2019re always going to need to encode domain-specific knowledge in any non-trivial resolution algorithm, to ensure the resolution captures user intent.",
        "user": "UCGAK10LS",
        "ts": "1610165142.196600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1610165190.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H2j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve never tried to build a conflict resolution system, but one thing I believe to be true is that it\u2019s impossible to automatically merge truly conflicting edits using a generic algorithm whilst preserving intent. If two people change the same piece/region of data asynchronously, they did so with the intent of giving the data a certain shape/property/meaning. To offer \u201cautomatic conflict resolution\u201d is to offer \u201cmerger of meaning\u201d which is never going to be solvable via a generic algorithm. What is the problem that CRDT libraries claim to be solving? What is an example CRDT that an app has actually used that doesn\u2019t employ a trivial resolution algorithm? You\u2019re always going to need to encode domain-specific knowledge in any non-trivial resolution algorithm, to ensure the resolution captures user intent."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "e15a1143-88d6-4424-a125-207979f46474",
        "type": "message",
        "text": "<@UCGAK10LS> Definitely. However, with collaborative editing, you are in a domain where it is cheap enough to correct problems if they appear.",
        "user": "UE1JQM9HQ",
        "ts": "1610184797.196900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nqb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Definitely. However, with collaborative editing, you are in a domain where it is cheap enough to correct problems if they appear."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "EE5EA962-F8A8-4507-8058-FA0D4BB4393C",
        "type": "message",
        "text": "I suppose if it\u2019s real-time collaboration, yes!",
        "user": "UCGAK10LS",
        "ts": "1610185144.197700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JTsv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose if it\u2019s real-time collaboration, yes!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "d5094f95-b31d-42c4-a870-e8af782ab393",
        "type": "message",
        "text": "Yeah \u2014 I'm not looking for something _magic_. I'm happy with LWW (or whatever) at the level of individual leaf nodes within a big structure of CRDTs (or whatever). I just don't want to have to implement said CRDTs myself.\n\nIn other words \u2014 I'm happy to write the logic for \"What should happen when one element of this CRDT set has multiple divergent edits?\" as long as I don't have to write the logic for \"What should happen when two separate elements of this CRDT set have independent edits?\"",
        "user": "UC2A2ARPT",
        "ts": "1610209895.198000",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1610210028.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fBN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah \u2014 I'm not looking for something "
                            },
                            {
                                "type": "text",
                                "text": "magic",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I'm happy with LWW (or whatever) at the level of individual leaf nodes within a big structure of CRDTs (or whatever). I just don't want to have to implement said CRDTs myself.\n\nIn other words \u2014 I'm happy to write the logic for \"What should happen when one element of this CRDT set has multiple divergent edits?\" as long as I don't have to write the logic for \"What should happen when two separate elements of this CRDT set have independent edits?\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "ECD0D507-6A19-44AE-AC88-77C614AC36A4",
        "type": "message",
        "text": "Be careful with CRDTs as they have tradeoffs and aren\u2019t as simple as \u201cpick a library.\u201d I\u2019d recommend operational transforms if you have a server involved.",
        "user": "UN57U8V53",
        "ts": "1610212503.201700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=KFpP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Be careful with CRDTs as they have tradeoffs and aren\u2019t as simple as \u201cpick a library.\u201d I\u2019d recommend operational transforms if you have a server involved."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "00B0A8BB-2ABB-4259-9FF2-CC932B7E6602",
        "type": "message",
        "text": "Even with OTs though, you need to decide exactly what your atoms are (Words, characters, html tags, etc)",
        "user": "UN57U8V53",
        "ts": "1610212650.203600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lHl1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Even with OTs though, you need to decide exactly what your atoms are (Words, characters, html tags, etc)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "B6A1EB28-B96F-4656-A3D2-8D3B067278BB",
        "type": "message",
        "text": "This is the classic js lib: <https://github.com/josephg/ShareJS|https://github.com/josephg/ShareJS>",
        "user": "UN57U8V53",
        "ts": "1610212773.204200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UN57U8V53",
            "ts": "1610212961.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sWx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the classic js lib: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/josephg/ShareJS",
                                "text": "https://github.com/josephg/ShareJS"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "54217b05-0475-4dc2-8c2a-8f6276a627ea",
        "type": "message",
        "text": "The atoms are individual leaf nodes in a tree. If there's a conflict at the node level, I'm happy with LWW. The thing I'm looking for help with is edits to the structure of the tree (nodes being added, removed, and moved).\n\nI'd love to know what some of the tradeoffs with CRDTs are. I'm happy to go with OT, too. I don't care too much about the particular algorithms involved, no more than other implementation details like what the API surface is like, how mature the library is, how many active users it has, etc. I'm just saying \"CRDT\" since that's a term in common parlance.",
        "user": "UC2A2ARPT",
        "ts": "1610212943.204500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LjHOk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The atoms are individual leaf nodes in a tree. If there's a conflict at the node level, I'm happy with LWW. The thing I'm looking for help with is edits to the structure of the tree (nodes being added, removed, and moved).\n\nI'd love to know what some of the tradeoffs with CRDTs are. I'm happy to go with OT, too. I don't care too much about the particular algorithms involved, no more than other implementation details like what the API surface is like, how mature the library is, how many active users it has, etc. I'm just saying \"CRDT\" since that's a term in common parlance."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "846B51A1-5E86-4967-854A-0FDB8C989C4E",
        "type": "message",
        "text": "Is there any invalid configuration of said tree? If so, CRDTs can get you in trouble",
        "user": "UN57U8V53",
        "ts": "1610215294.205700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q6yO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there any invalid configuration of said tree? If so, CRDTs can get you in trouble"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "9EC0A5E0-5CA2-481E-8239-D6B134BDBB15",
        "type": "message",
        "text": "(For example, we hit problems with this in a screen design tool)",
        "user": "UN57U8V53",
        "ts": "1610215337.206700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TWO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(For example, we hit problems with this in a screen design tool)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "ECF41851-F53C-4631-BA69-DAEDBAFB88D1",
        "type": "message",
        "text": "CRDTs have memory growth problems and you need to make strict decisions on how you \u201crefresh\u201d when clients disconnect",
        "user": "UN57U8V53",
        "ts": "1610215746.208300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jj4SD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "CRDTs have memory growth problems and you need to make strict decisions on how you \u201crefresh\u201d when clients disconnect"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "type": "message",
        "text": "i don\u2019t think gun requires an external server except for webrtc connections, which do by design: \n\nthey used to have a fallback. i feel like their documentation has gotten more friendly, but also worse somehow lol",
        "files": [
            {
                "id": "F01K220EYQY",
                "created": 1610225534,
                "timestamp": 1610225534,
                "name": "Image from iOS.png",
                "title": "Image from iOS",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UHWC9PXBL",
                "editable": false,
                "size": 1162626,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01K220EYQY/image_from_ios.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01K220EYQY/download/image_from_ios.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_360.png",
                "thumb_360_w": 166,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_480.png",
                "thumb_480_w": 222,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_720.png",
                "thumb_720_w": 333,
                "thumb_720_h": 720,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 1732,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_960.png",
                "thumb_960_w": 443,
                "thumb_960_h": 960,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F01K220EYQY-c594de34de/image_from_ios_1024.png",
                "thumb_1024_w": 473,
                "thumb_1024_h": 1024,
                "image_exif_rotation": 1,
                "original_w": 1125,
                "original_h": 2436,
                "thumb_tiny": "AwAwABalvGOho3r2zVhLRCisZouRkgmnC0jGMzQnHXnr+tAFXeMf/WpN4qae3WONSJY2OcHaeag2+4oAd2pMe9KOlFADT060lOakoAd/nrRj2/WjbS+WfQ0ANIpKdgUYoA//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UHWC9PXBL/F01K220EYQY/image_from_ios.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01K220EYQY-2d6043bb4d",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jfq6f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i don\u2019t think gun requires an external server except for webrtc connections, which do by design: \n\nthey used to have a fallback. i feel like their documentation has gotten more friendly, but also worse somehow lol"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UHWC9PXBL",
        "display_as_bot": false,
        "ts": "1610225568.209900",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1610225586.000000"
        },
        "client_msg_id": "415879B7-087C-4868-96AF-4A7080D44261",
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "C86ED082-D029-4763-AE87-EF057D972E96",
        "type": "message",
        "text": "Regarding \u201cI don\u2019t want to have to implement CRDTs\u201d, isn\u2019t the logic really damn simple? That\u2019s why the whole notion of \u201cCRDT libraries\u201d has always perplexed me: the simple resolution schemes are easy to implement manually, and the complex ones MUST be implemented manually because they aren\u2019t going to be generic.",
        "user": "UCGAK10LS",
        "ts": "1610229728.213600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1610229785.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UrQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding \u201cI don\u2019t want to have to implement CRDTs\u201d, isn\u2019t the logic really damn simple? That\u2019s why the whole notion of \u201cCRDT libraries\u201d has always perplexed me: the simple resolution schemes are easy to implement manually, and the complex ones MUST be implemented manually because they aren\u2019t going to be generic."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "0C47FB66-BE6F-4675-9E3E-4B14A9870A68",
        "type": "message",
        "text": "Perhaps the only useful CRDT libraries are ones that provide a resolution algorithm for edits to sequences (text strings), because you need some kind of heuristic in order to figure out how several length-changing edits should combine. But we should just call those \u201ccollaborative text editing libraries\u201d and put the term CRDT to bed.",
        "user": "UCGAK10LS",
        "ts": "1610229984.217400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "raZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps the only useful CRDT libraries are ones that provide a resolution algorithm for edits to sequences (text strings), because you need some kind of heuristic in order to figure out how several length-changing edits should combine. But we should just call those \u201ccollaborative text editing libraries\u201d and put the term CRDT to bed."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610160039.187600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    }
]