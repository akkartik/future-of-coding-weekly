[
    {
        "client_msg_id": "f2aa3fa2-d98a-41e6-a9c9-1a0a69aea674",
        "type": "message",
        "text": ":books: Instadeq Reading List: May 2021\n\n:writing_hand: Notation as a Tool of Thought\n:thought_balloon: How can we develop transformative tools for thought?\n:female-artist: Design Discipline Versus Design Science\n\n<https://instadeq.com/blog/posts/instadeq-reading-list-may-2021/>",
        "user": "UBN9AFS0N",
        "ts": "1622451101.030100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P0b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "books"
                            },
                            {
                                "type": "text",
                                "text": " Instadeq Reading List: May 2021\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "writing_hand"
                            },
                            {
                                "type": "text",
                                "text": " Notation as a Tool of Thought\n"
                            },
                            {
                                "type": "emoji",
                                "name": "thought_balloon"
                            },
                            {
                                "type": "text",
                                "text": " How can we develop transformative tools for thought?\n"
                            },
                            {
                                "type": "emoji",
                                "name": "female-artist"
                            },
                            {
                                "type": "text",
                                "text": " Design Discipline Versus Design Science\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://instadeq.com/blog/posts/instadeq-reading-list-may-2021/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1622451101.030100",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1622716227.032900",
        "reply_users": [
            "UGWUJUZHT",
            "UA14TGLTC",
            "U0112C10V4Y"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1622716227.032900"
    },
    {
        "client_msg_id": "ce0c0a88-5b67-4ee2-ab07-f2e7f610bad7",
        "type": "message",
        "text": "Notation Builder ==&gt; PEG ==&gt; Ohm-Editor\n\n(<https://ohmlang.github.io/editor/> and <https://github.com/harc/ohm>)\n\n(textual notation only)\n(Notation == light-weight DSL)",
        "user": "UGWUJUZHT",
        "ts": "1622466016.030600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "harc/ohm",
                "title_link": "https://github.com/harc/ohm",
                "text": "A library and language for building parsers, interpreters, compilers, etc. - harc/ohm",
                "fallback": "GitHub: harc/ohm",
                "image_url": "https://opengraph.githubassets.com/49b45bbd04c86a54e68f3bafb7d7dcff74565a229d18bbffeca09c065bbef4d7/harc/ohm",
                "image_width": 500,
                "image_height": 250,
                "from_url": "https://github.com/harc/ohm",
                "image_bytes": 45589,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/harc/ohm"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vpI8A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Notation Builder ==> PEG ==> Ohm-Editor\n\n("
                            },
                            {
                                "type": "link",
                                "url": "https://ohmlang.github.io/editor/"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/harc/ohm"
                            },
                            {
                                "type": "text",
                                "text": ")\n\n(textual notation only)\n(Notation == light-weight DSL)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1622451101.030100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "e368d7b4-f7ea-459d-a172-8f3751cd028d",
        "type": "message",
        "text": "PEGs are good fun.  Much more intuitive than more traditional grammars.",
        "user": "UA14TGLTC",
        "ts": "1622472534.030900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3my3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "PEGs are good fun.  Much more intuitive than more traditional grammars."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1622451101.030100",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "a7d7234a-e236-47d6-9f20-ee0af06bd0dd",
        "type": "message",
        "text": "FYI - IMO, Ohm-editor, and Ohm-JS, are to PEG as grep and perl were to REGEX. (Subtle difference, but much more usable result).\n\nPEG is great for compiler-building and for DSL-building.  Ohm-editor, though, enables notation-building.\n\nI love PEG, but, I expect that I will never go back to using PEG again.  Using PEG is like accepting 2nd best after having tasted the Ohm-editor.",
        "user": "UGWUJUZHT",
        "ts": "1622518534.031400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OHl0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FYI - IMO, Ohm-editor, and Ohm-JS, are to PEG as grep and perl were to REGEX. (Subtle difference, but much more usable result).\n\nPEG is great for compiler-building and for DSL-building.  Ohm-editor, though, enables notation-building.\n\nI love PEG, but, I expect that I will never go back to using PEG again.  Using PEG is like accepting 2nd best after having tasted the Ohm-editor."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1622451101.030100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8622d3e4-251e-4e22-bbd3-0be76e2778c7",
        "type": "message",
        "text": "<@UGWUJUZHT> could you go into a bit more detail on notation building? It's not clear to me how it differs from a DSL building.",
        "user": "U0112C10V4Y",
        "ts": "1622647067.032600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y4=Yf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " could you go into a bit more detail on notation building? It's not clear to me how it differs from a DSL building."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1622451101.030100",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "thought_balloon",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e4005d6f-c003-4879-9074-0f81944ce007",
        "type": "message",
        "text": "short version:\n\nNotation vs. DSL is (1) mindset and (2) technology.\n\n(1) Mindset:\n\nAllow for change.\n\nWrite code that writes code.\n\nSyntax is cheap.\n\n(2) Technology - compiler voodoo vs. cheap-to-use tool.  REGEX used to be compiler voodoo, now it\u2019s easy.  PEG is still saddled with compiler-ish baggage.  Ohm-Editor crystallizes just how cheap syntax is.\n\n(1): Treat existing languages as \u201cassembler\u201d. Python, JS, WASM, Lisp, etc. are but \u201cassembly language\u201d for new-breed Notations.\n\nfurther reading:\n\nWhat If Making a Compiler Was Easy? <https://guitarvydas.github.io/2021/04/26/What-If-Making-A-Compiler-Was-Easy.html>\n\none example: Glue <https://guitarvydas.github.io/2021/04/11/Glue-Tool.html>\n\nlong version:\n\nI would be quite happy to discuss this further and to post links to my thoughts about: SCNs, PEG, Ohm-JS, Toolbox Languages, FDD (Failure-Driven Development), DaS (Diagrams as Syntax), and so on.",
        "user": "UGWUJUZHT",
        "ts": "1622716227.032900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Computing Simplicity",
                "title": "Glue Tool",
                "title_link": "https://guitarvydas.github.io/2021/04/11/Glue-Tool.html",
                "text": "Glue Tool",
                "fallback": "Computing Simplicity: Glue Tool",
                "ts": 1618099200,
                "from_url": "https://guitarvydas.github.io/2021/04/11/Glue-Tool.html",
                "id": 1,
                "original_url": "https://guitarvydas.github.io/2021/04/11/Glue-Tool.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cAf8m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "short version:\n\nNotation vs. DSL is (1) mindset and (2) technology.\n\n(1) Mindset:\n\nAllow for change.\n\nWrite code that writes code.\n\nSyntax is cheap.\n\n(2) Technology - compiler voodoo vs. cheap-to-use tool.  REGEX used to be compiler voodoo, now it\u2019s easy.  PEG is still saddled with compiler-ish baggage.  Ohm-Editor crystallizes just how cheap syntax is.\n\n(1): Treat existing languages as \u201cassembler\u201d. Python, JS, WASM, Lisp, etc. are but \u201cassembly language\u201d for new-breed Notations.\n\nfurther reading:\n\nWhat If Making a Compiler Was Easy? "
                            },
                            {
                                "type": "link",
                                "url": "https://guitarvydas.github.io/2021/04/26/What-If-Making-A-Compiler-Was-Easy.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\none example: Glue "
                            },
                            {
                                "type": "link",
                                "url": "https://guitarvydas.github.io/2021/04/11/Glue-Tool.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nlong version:\n\nI would be quite happy to discuss this further and to post links to my thoughts about: SCNs, PEG, Ohm-JS, Toolbox Languages, FDD (Failure-Driven Development), DaS (Diagrams as Syntax), and so on."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1622451101.030100",
        "parent_user_id": "UBN9AFS0N"
    }
]