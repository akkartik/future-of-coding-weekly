[
    {
        "client_msg_id": "8527f3fa-357a-4912-8f92-0f704c2a0e08",
        "type": "message",
        "text": "This is a prototype demo for Compose (new-ish startup): <https://youtu.be/TBf5Y3ri0DQ|https://youtu.be/TBf5Y3ri0DQ>\n\nWould love to hear points of confusion, excitement, and other feedback :relaxed:",
        "user": "U5TCAFTD3",
        "ts": "1631641865.036200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U5TCAFTD3",
            "ts": "1631641883.000000"
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Compose Turbine Prototype: Realtime Chat App",
                "title_link": "https://youtu.be/TBf5Y3ri0DQ",
                "author_name": "Steve Krouse",
                "author_link": "https://www.youtube.com/user/stevekrouse",
                "thumb_url": "https://i.ytimg.com/vi/TBf5Y3ri0DQ/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Compose Turbine Prototype: Realtime Chat App",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/TBf5Y3ri0DQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://youtu.be/TBf5Y3ri0DQ",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/TBf5Y3ri0DQ"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LJD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a prototype demo for Compose (new-ish startup): "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/TBf5Y3ri0DQ",
                                "text": "https://youtu.be/TBf5Y3ri0DQ"
                            },
                            {
                                "type": "text",
                                "text": "\n\nWould love to hear points of confusion, excitement, and other feedback "
                            },
                            {
                                "type": "emoji",
                                "name": "relaxed"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1631780004.039000",
        "reply_users": [
            "U02E2EPFZJ9",
            "U5TCAFTD3",
            "UUB7RA7PF",
            "UDQBTJ211"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UJBAJNFLK",
                    "U02E2EPFZJ9",
                    "UUB7RA7PF"
                ],
                "count": 4
            },
            {
                "name": "clap",
                "users": [
                    "U022YTVTSR5"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f828c2e1-46b3-405c-af8d-c041d6d430bb",
        "type": "message",
        "text": "I think the whole video was very clear. Would just have been nice to understand how the backend magic part actually works, but maybe stuff for another video.",
        "user": "U02E2EPFZJ9",
        "ts": "1631706356.037100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=mE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the whole video was very clear. Would just have been nice to understand how the backend magic part actually works, but maybe stuff for another video."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "parent_user_id": "U5TCAFTD3"
    },
    {
        "client_msg_id": "db657e29-a0b4-460a-8540-e920de26e58b",
        "type": "message",
        "text": "Thanks! Appreciate the feedback",
        "user": "U5TCAFTD3",
        "ts": "1631707016.037300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kQR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! Appreciate the feedback"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "parent_user_id": "U5TCAFTD3"
    },
    {
        "client_msg_id": "241f3363-2349-4d0e-8a02-a04269137766",
        "type": "message",
        "text": "Interesting work <@U5TCAFTD3>! Since I am working on <https://wasp-lang.dev/> and you mentioned you are trying to unify/squash the stack (elegant unified semantic layer - yumm), it got me pretty excited!\n\nBelow is my feedback on the video. For the context, these days my go-to for web dev is React + Node, while I do most of my system-level programming in Haskell.\n\n\u2022 Love the tone of voice, explanations and speed/tempo, video was comfortable and easy to follow.\n\u2022 I was speeding through the video and I missed the point where you said that \"./firebase\" is part of your Compose project, so I had to go again through the video to catch that part, where you say that you implemented \"./firebase\" with Compose. If there was a comment next to the `import { realtime } from \"./firebase\"` saying `// I implemented this using my project, Compose` that would help a lot.\n\u2022 I found the first part of the video pretty long, before we got to the firebase/compose part. The whole video is pretty long (18 min!), I barely convinced myself to watch it (with a lot of speeding up). The buildup makes sense so I understand why it is so long, but if it would be possible to make that part shorter I would go for it. Maybe you could decide that video is aimed for people who already know turbine and then you can skip that intro. Or, maybe you could use React instead of turbine (could you though, or Compose makes sense only with Turbine?) and then aim it for people who know React and again, you can skip the whole part where we are building a component.\n\u2022 So first I thought you used Compose to convert the firebase interface into a functional interface, but then I understood, when I watched that part again, that you actually built Composed on top of Firebase and firebase is really just an implementation detail that is not important? That was a bit confusing. I guess it could have been `import { realtime } from \"./compose\"`? So `realtime` is the function you implemented and is an interface of Compose?\n\u2022 I get the idea of component containing the information about how it stores/pulls the data that is globally available and persistent, and that sounds pretty cool! Some questions that immediately emerge are though: what about the access control and secrets (like API keys), which is normally done on the server since it is under our control, while client code can be modified by anybody? What about collaboration between the components and sharing the data? I am guessing you will answer those in the future, just wanted to share what pops into the mind.\n\u2022 I never saw Turbine before, and while it seems cool (I love functional, I use Haskell), it felt a bit complex compared to the React, probably because I know React, but maybe also because it is complex in its essence? Not sure, but if it was React, I believe I could focus more of my energy on the Compose itself. But again, I am not sure if you can make Compose work with React or not.\n\u2022 At the end, it was left wondering what a Compose really is -&gt; is it a kind of database that has nice TS SDK that is functional? Or is it something else?\nI hope this feedback helps and excited to see the future progress!",
        "user": "UUB7RA7PF",
        "ts": "1631710248.037500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jwgwR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting work "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "! Since I am working on "
                            },
                            {
                                "type": "link",
                                "url": "https://wasp-lang.dev/"
                            },
                            {
                                "type": "text",
                                "text": " and you mentioned you are trying to unify/squash the stack (elegant unified semantic layer - yumm), it got me pretty excited!\n\nBelow is my feedback on the video. For the context, these days my go-to for web dev is React + Node, while I do most of my system-level programming in Haskell.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Love the tone of voice, explanations and speed/tempo, video was comfortable and easy to follow."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I was speeding through the video and I missed the point where you said that \"./firebase\" is part of your Compose project, so I had to go again through the video to catch that part, where you say that you implemented \"./firebase\" with Compose. If there was a comment next to the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "import { realtime } from \"./firebase\"",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " saying "
                                    },
                                    {
                                        "type": "text",
                                        "text": "// I implemented this using my project, Compose",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " that would help a lot."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I found the first part of the video pretty long, before we got to the firebase/compose part. The whole video is pretty long (18 min!), I barely convinced myself to watch it (with a lot of speeding up). The buildup makes sense so I understand why it is so long, but if it would be possible to make that part shorter I would go for it. Maybe you could decide that video is aimed for people who already know turbine and then you can skip that intro. Or, maybe you could use React instead of turbine (could you though, or Compose makes sense only with Turbine?) and then aim it for people who know React and again, you can skip the whole part where we are building a component."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "So first I thought you used Compose to convert the firebase interface into a functional interface, but then I understood, when I watched that part again, that you actually built Composed on top of Firebase and firebase is really just an implementation detail that is not important? That was a bit confusing. I guess it could have been "
                                    },
                                    {
                                        "type": "text",
                                        "text": "import { realtime } from \"./compose\"",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "? So "
                                    },
                                    {
                                        "type": "text",
                                        "text": "realtime",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is the function you implemented and is an interface of Compose?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I get the idea of component containing the information about how it stores/pulls the data that is globally available and persistent, and that sounds pretty cool! Some questions that immediately emerge are though: what about the access control and secrets (like API keys), which is normally done on the server since it is under our control, while client code can be modified by anybody? What about collaboration between the components and sharing the data? I am guessing you will answer those in the future, just wanted to share what pops into the mind."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I never saw Turbine before, and while it seems cool (I love functional, I use Haskell), it felt a bit complex compared to the React, probably because I know React, but maybe also because it is complex in its essence? Not sure, but if it was React, I believe I could focus more of my energy on the Compose itself. But again, I am not sure if you can make Compose work with React or not."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "At the end, it was left wondering what a Compose really is -> is it a kind of database that has nice TS SDK that is functional? Or is it something else?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI hope this feedback helps and excited to see the future progress!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "parent_user_id": "U5TCAFTD3",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "25061680-5ccc-4a6e-a469-c791bf2e1a2d",
        "type": "message",
        "text": "Really amazing constructive feedback! :trophy: Thank you - I can definitely fix a lot of those in the next video. As far as using React.... I can probably do it but to be honest it is just not functional enough so i resist it. However you are 100% correct that attention spans are short so it could be a huge help... I will probably give it a go",
        "user": "U5TCAFTD3",
        "ts": "1631710622.037800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z8L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really amazing constructive feedback! "
                            },
                            {
                                "type": "emoji",
                                "name": "trophy"
                            },
                            {
                                "type": "text",
                                "text": " Thank you - I can definitely fix a lot of those in the next video. As far as using React.... I can probably do it but to be honest it is just not functional enough so i resist it. However you are 100% correct that attention spans are short so it could be a huge help... I will probably give it a go"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "parent_user_id": "U5TCAFTD3"
    },
    {
        "client_msg_id": "5e4a3ad7-3a8b-4f42-8306-97b839c26fd1",
        "type": "message",
        "text": "Glad it helps!\nI assumed that is so (Rust vs Turbine), but my main thought is that it is easier to introduce one concept (Compose) then introducing two of them (Turbine + Compose), which why I said that if you go with Turbine you should probably aim for Turbine users, but if you want to go more general, it would probably make sense to go for React. So maybe at this stage it is ok to stick with Turbine if you are not yet looking for wider adoption, but later it might make sense to go with React.\nGood luck!",
        "user": "UUB7RA7PF",
        "ts": "1631711682.038000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sFK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Glad it helps!\nI assumed that is so (Rust vs Turbine), but my main thought is that it is easier to introduce one concept (Compose) then introducing two of them (Turbine + Compose), which why I said that if you go with Turbine you should probably aim for Turbine users, but if you want to go more general, it would probably make sense to go for React. So maybe at this stage it is ok to stick with Turbine if you are not yet looking for wider adoption, but later it might make sense to go with React.\nGood luck!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "parent_user_id": "U5TCAFTD3"
    },
    {
        "client_msg_id": "3e4dbf0a-c0df-4085-a6a2-7ec3df0da709",
        "type": "message",
        "text": "Unfortunately Turbine, and all other \"pure\" FRP frameworks have zero adoption. Your React advice is thus doubly valid. Thanks!",
        "user": "U5TCAFTD3",
        "ts": "1631711772.038200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wJi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unfortunately Turbine, and all other \"pure\" FRP frameworks have zero adoption. Your React advice is thus doubly valid. Thanks!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "parent_user_id": "U5TCAFTD3",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUB7RA7PF"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "822a42a4-13cf-4e00-bc09-540842d0ff05",
        "type": "message",
        "text": "Great demo. I would probably pull the motivation section where you google for spreadsheet components to the beginning. This is the part that most succinctly explains your value.\n\nI second the comment about wanting to understand the back end. It feels so magic that it's a little bit off putting. Particularly for something like AWS where you want to be sure what your billing is going to be, and that it isn't sending excessive traffic.",
        "user": "UDQBTJ211",
        "ts": "1631779657.038700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1631779674.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mUYpe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great demo. I would probably pull the motivation section where you google for spreadsheet components to the beginning. This is the part that most succinctly explains your value.\n\nI second the comment about wanting to understand the back end. It feels so magic that it's a little bit off putting. Particularly for something like AWS where you want to be sure what your billing is going to be, and that it isn't sending excessive traffic."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "parent_user_id": "U5TCAFTD3"
    },
    {
        "client_msg_id": "5725cede-6798-46e7-945b-cb635eb86285",
        "type": "message",
        "text": "Great feedback as well! Thank you Chris!",
        "user": "U5TCAFTD3",
        "ts": "1631780004.039000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=jeFs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great feedback as well! Thank you Chris!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1631641865.036200",
        "parent_user_id": "U5TCAFTD3"
    }
]