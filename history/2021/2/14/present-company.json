[
    {
        "client_msg_id": "EBC400A8-0606-4BE7-8B71-714112368371",
        "type": "message",
        "text": "We haven\u2019t had one of these text-vs.-visual kind of debates in a while, and I think we\u2019re long overdue. This is a great piece of writing that looks at why UNIX in particular is so deeply rooted in text \u2014 and it puts forward a surprisingly untechnical theory (yes, of course, the UNIX pipe / composition argument makes an appearance too): <http://theody.net/elements.html|http://theody.net/elements.html>",
        "user": "U5STGTB3J",
        "ts": "1613299130.046800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mR5k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We haven\u2019t had one of these text-vs.-visual kind of debates in a while, and I think we\u2019re long overdue. This is a great piece of writing that looks at why UNIX in particular is so deeply rooted in text \u2014 and it puts forward a surprisingly untechnical theory (yes, of course, the UNIX pipe / composition argument makes an appearance too): "
                            },
                            {
                                "type": "link",
                                "url": "http://theody.net/elements.html",
                                "text": "http://theody.net/elements.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613299130.046800",
        "reply_count": 6,
        "reply_users_count": 4,
        "latest_reply": "1613320121.055500",
        "reply_users": [
            "U5STGTB3J",
            "UL5AX4G2H",
            "U01JHG5RQDQ",
            "UFPPABQ7P"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "2B3FEA8E-6C98-450E-9798-0490F3FF868F",
        "type": "message",
        "text": "Obviously, this eloquently takes the side of pro-text interfaces, although I\u2019m more of a pro-visual type. Well, that's my own cognitive dissonance I have to deal with. I\u2019m glad this was written while Microsoft was still at the helm of ruling the tech world. I\u2019m sure today's version would drag Apple through the mud instead. Of course, it would have to present much better arguments, given the Mac's UNIX roots, better UI consistency (compared to Windows), and a strong user community trained in the liberal arts\u2026",
        "user": "U5STGTB3J",
        "ts": "1613299564.052800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uxQ/T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Obviously, this eloquently takes the side of pro-text interfaces, although I\u2019m more of a pro-visual type. Well, that's my own cognitive dissonance I have to deal with. I\u2019m glad this was written while Microsoft was still at the helm of ruling the tech world. I\u2019m sure today's version would drag Apple through the mud instead. Of course, it would have to present much better arguments, given the Mac's UNIX roots, better UI consistency (compared to Windows), and a strong user community trained in the liberal arts\u2026"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613299130.046800",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "2FABDFBD-BDED-41C8-977F-71489B137352",
        "type": "message",
        "text": "(Did I push enough buttons to trigger people? :))",
        "user": "U5STGTB3J",
        "ts": "1613299653.054000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wye",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Did I push enough buttons to trigger people? :))"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613299130.046800",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "35225418-6f7e-47d2-b10a-f9d0c03ac00a",
        "type": "message",
        "text": "I'm pretty triggered that you tried to make this into a flame war because text is obviously superior :wink:",
        "user": "UL5AX4G2H",
        "ts": "1613312896.054200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p2vg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm pretty triggered that you tried to make this into a flame war because text is obviously superior "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613299130.046800",
        "parent_user_id": "U5STGTB3J",
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "54817809-04c9-4038-b71f-2a983a71b917",
        "type": "message",
        "text": "\"I continued to be puzzled at why they resented typing.\"\n\nI think the author is reading too much into this lol. the UX is just bad so people dont bother. nothing more complicated than that.",
        "user": "U01JHG5RQDQ",
        "ts": "1613314089.054400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AUisS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"I continued to be puzzled at why they resented typing.\"\n\nI think the author is reading too much into this lol. the UX is just bad so people dont bother. nothing more complicated than that."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613299130.046800",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "1809a5e0-26d2-4073-a24c-1c876f0ff898",
        "type": "message",
        "text": "Im sure he'd be happily using a visual point n click if it offered him the same power. So I guess he's talking about a very specific dumbed down paradigm with \"visual\"",
        "user": "U01JHG5RQDQ",
        "ts": "1613315013.054600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ciCk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Im sure he'd be happily using a visual point n click if it offered him the same power. So I guess he's talking about a very specific dumbed down paradigm with \"visual\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613299130.046800",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "84a5af4d-5cbf-4f75-9413-4f9195d972f7",
        "type": "message",
        "text": "<@UC2A2ARPT> what don't you like about electron? It could help with figuring out what a good alternative is, because my understanding is that Electron is as bare bones as you want it to be. It's hard to ignore the fact that Electron seems to have almost 100x the adoption of anything similar, which has resulted in it getting more optimizations and stability on many platforms. Along with there being many more resources for code signing to macOS (which is a hard problem other smaller electron alternatives have not gotten to like <https://github.com/tauri-apps/tauri|https://github.com/tauri-apps/tauri>)",
        "user": "UFPPABQ7P",
        "ts": "1613319356.054800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "tauri-apps/tauri",
                "title_link": "https://github.com/tauri-apps/tauri",
                "text": "Build smaller, faster, and more secure desktop applications with a web frontend. - tauri-apps/tauri",
                "fallback": "GitHub: tauri-apps/tauri",
                "from_url": "https://github.com/tauri-apps/tauri",
                "thumb_url": "https://repository-images.githubusercontent.com/196701619/aafe9d00-5045-11ea-81f3-6c7ff948d1d1",
                "thumb_width": 500,
                "thumb_height": 250,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/tauri-apps/tauri"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8bn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " what don't you like about electron? It could help with figuring out what a good alternative is, because my understanding is that Electron is as bare bones as you want it to be. It's hard to ignore the fact that Electron seems to have almost 100x the adoption of anything similar, which has resulted in it getting more optimizations and stability on many platforms. Along with there being many more resources for code signing to macOS (which is a hard problem other smaller electron alternatives have not gotten to like "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/tauri-apps/tauri",
                                "text": "https://github.com/tauri-apps/tauri"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1612923157.036800",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "4138de4a-8691-4533-b867-eda205901f61",
        "type": "message",
        "text": "Also, how much time are you willing to invest to avoid electron? I think Horowitz's suggestion of NW.js seems to be the most mature &amp; similar to Electron (at least I've heard about it a long time ago), but others may have a steeper learning curve to get set up since the tooling may be more hit and miss or have issues with Apple M1 while Electron gets sorted out more quickly (perhaps)",
        "user": "UFPPABQ7P",
        "ts": "1613319573.055100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1613319619.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "giC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, how much time are you willing to invest to avoid electron? I think Horowitz's suggestion of NW.js seems to be the most mature & similar to Electron (at least I've heard about it a long time ago), but others may have a steeper learning curve to get set up since the tooling may be more hit and miss or have issues with Apple M1 while Electron gets sorted out more quickly (perhaps)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1612923157.036800",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "c75bad5b-f85c-4474-91d6-39d9173aa2b4",
        "type": "message",
        "text": "The biggest issue with \"text vs visual\" arguments seems to be that there aren't enough examples of killer language-oriented programming environments. I believe the work which <@UEBG0NPDK>  has shared recently, with Eve, and with Light Table are largely textual oriented at the low level, but leverage spacial design to organize at a higher level (similar to Darklang, which is textual at a lower level and spacial at the \"wiring\" level)\nDifferent programming environments place the boundary between text and visual at different levels.",
        "user": "UFPPABQ7P",
        "ts": "1613320121.055500",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1613320136.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "um8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The biggest issue with \"text vs visual\" arguments seems to be that there aren't enough examples of killer language-oriented programming environments. I believe the work which "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": "  has shared recently, with Eve, and with Light Table are largely textual oriented at the low level, but leverage spacial design to organize at a higher level (similar to Darklang, which is textual at a lower level and spacial at the \"wiring\" level)\nDifferent programming environments place the boundary between text and visual at different levels."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613299130.046800",
        "parent_user_id": "U5STGTB3J"
    },
    {
        "client_msg_id": "92ed3b58-5f3f-4992-96d4-bbad0767a9d4",
        "type": "message",
        "text": "Does anyone know of a good community to learn about DSL/SDK design with FSharp? It doesn't have to be a community only about FSharp or only about DSL design.",
        "user": "UFPPABQ7P",
        "ts": "1613320242.057800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OKzv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone know of a good community to learn about DSL/SDK design with FSharp? It doesn't have to be a community only about FSharp or only about DSL design."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613320242.057800",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1613333573.061500",
        "reply_users": [
            "UFPPABQ7P",
            "U6BRN7A0Y",
            "U01CATCR60P",
            "UHWC9PXBL"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "e4e0e771-2a41-4613-9ac6-706cdf28c5d3",
        "type": "message",
        "text": "Cc <@U01CATCR60P> <@UHWC9PXBL> <@U6BRN7A0Y>",
        "user": "UFPPABQ7P",
        "ts": "1613320277.057900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mAy+5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cc "
                            },
                            {
                                "type": "user",
                                "user_id": "U01CATCR60P"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U6BRN7A0Y"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613320242.057800",
        "parent_user_id": "UFPPABQ7P"
    },
    {
        "client_msg_id": "e11fe0c7-ae27-4884-a94a-2217d6dfb68f",
        "type": "message",
        "text": "I have\u2019nt really tapped in to F# community yet. In terms of DSLs though, you\u2019d probably enjoy this: <https://www.microsoft.com/en-us/research/publication/the-f-computation-expression-zoo/>. Seems to be how lots of DSLs are done in F#",
        "user": "U6BRN7A0Y",
        "ts": "1613320470.058100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Microsoft Research",
                "title": "The F# Computation Expression Zoo - Microsoft Research",
                "title_link": "https://www.microsoft.com/en-us/research/publication/the-f-computation-expression-zoo/",
                "text": "F# computation expressions F# provide a uniform syntax for computations such as monads, monad transformers and applicative functors. The syntax is adaptable and close to built-in language features of Python and C#. This article provides the details shows that the right syntax can often be determined by considering laws.",
                "fallback": "Microsoft Research: The F# Computation Expression Zoo - Microsoft Research",
                "from_url": "https://www.microsoft.com/en-us/research/publication/the-f-computation-expression-zoo/",
                "service_icon": "https://www.microsoft.com/favicon.ico",
                "id": 1,
                "original_url": "https://www.microsoft.com/en-us/research/publication/the-f-computation-expression-zoo/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jdgG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have\u2019nt really tapped in to F# community yet. In terms of DSLs though, you\u2019d probably enjoy this: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.microsoft.com/en-us/research/publication/the-f-computation-expression-zoo/"
                            },
                            {
                                "type": "text",
                                "text": ". Seems to be how lots of DSLs are done in F#"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613320242.057800",
        "parent_user_id": "UFPPABQ7P",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFPPABQ7P",
                    "U019CPED6T1"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b7fc8287-ed09-4465-9109-8d5cda546d67",
        "type": "message",
        "text": "Thanks, <@U6BRN7A0Y>, I'll check this out! Ahmad also turned me on to computational expressions. And I've been really impressed with how the \"builder\" works with the type system well. It looks like macros almost, but it seems to feel like any other FSharp (with type checks, inference, go to def, etc)",
        "user": "UFPPABQ7P",
        "ts": "1613320700.058400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1613321002.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oE5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, "
                            },
                            {
                                "type": "user",
                                "user_id": "U6BRN7A0Y"
                            },
                            {
                                "type": "text",
                                "text": ", I'll check this out! Ahmad also turned me on to computational expressions. And I've been really impressed with how the \"builder\" works with the type system well. It looks like macros almost, but it seems to feel like any other FSharp (with type checks, inference, go to def, etc)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613320242.057800",
        "parent_user_id": "UFPPABQ7P"
    },
    {
        "client_msg_id": "a2f3ab53-2612-44a6-b2f5-b486e767d7ca",
        "type": "message",
        "text": "I'm unsure if there is a well formed community around it, unfortunately, as it is a little niche. Something I can chime in with is the shared <https://github.com/fsprojects|fsprojects github org> that you might have run into. It's for sure a good place to look at have others have handled DSLs. And also a lot of the members would know about it :)",
        "user": "U01CATCR60P",
        "ts": "1613322054.058800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01CATCR60P",
            "ts": "1613322688.000000"
        },
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "F# Community Project Incubation Space",
                "title_link": "https://github.com/fsprojects",
                "text": "F# Community Project Incubation Space has 128 repositories available. Follow their code on GitHub.",
                "fallback": "GitHub: F# Community Project Incubation Space",
                "from_url": "https://github.com/fsprojects",
                "thumb_url": "https://avatars.githubusercontent.com/u/6001315?s=280&v=4",
                "thumb_width": 200,
                "thumb_height": 200,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/fsprojects"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w5D8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm unsure if there is a well formed community around it, unfortunately, as it is a little niche. Something I can chime in with is the shared "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/fsprojects",
                                "text": "fsprojects github org"
                            },
                            {
                                "type": "text",
                                "text": " that you might have run into. It's for sure a good place to look at have others have handled DSLs. And also a lot of the members would know about it :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613320242.057800",
        "parent_user_id": "UFPPABQ7P",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "E0B2B9E5-610D-48AA-953C-B7B8D0E8341B",
        "type": "message",
        "text": "almost all of my exposure to f# is watching scott wlaschin talks on twitter\u2014and id classify them as more about functional programming patterns than F# in particular... also i think Koka, the algebraic effects proof of concept language was written in f#",
        "user": "UHWC9PXBL",
        "ts": "1613333573.061500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "10wFM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "almost all of my exposure to f# is watching scott wlaschin talks on twitter\u2014and id classify them as more about functional programming patterns than F# in particular... also i think Koka, the algebraic effects proof of concept language was written in f#"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613320242.057800",
        "parent_user_id": "UFPPABQ7P",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    }
]