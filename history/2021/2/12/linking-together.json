[
    {
        "client_msg_id": "2ff326d6-08ae-48e5-bcfb-a8d49236b3f8",
        "type": "message",
        "text": "Computational performance is such a fascinating topic to me and it took me a long time to realize that it\u2019s actually much simpler in concept than I thought. To go fast, you just can\u2019t do much stuff. All of those super fancy structures we\u2019d read about in research papers? They were almost always slower because in the end the only cleverness that matters is the bit where the total amount of work you do is less. You were often saving 10% here and hiding an extra 20% over there without realizing it.\n\nWhat makes the problem so difficult is that we hide a bunch of the work under abstractions that go all the way down to the computer arch. Realistically you can never account for all of that, but you\u2019d do better than 99% of the code that\u2019s out there if you had something that could give you better layouts.",
        "user": "UEBG0NPDK",
        "ts": "1613085090.126600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7x3h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Computational performance is such a fascinating topic to me and it took me a long time to realize that it\u2019s actually much simpler in concept than I thought. To go fast, you just can\u2019t do much stuff. All of those super fancy structures we\u2019d read about in research papers? They were almost always slower because in the end the only cleverness that matters is the bit where the total amount of work you do is less. You were often saving 10% here and hiding an extra 20% over there without realizing it.\n\nWhat makes the problem so difficult is that we hide a bunch of the work under abstractions that go all the way down to the computer arch. Realistically you can never account for all of that, but you\u2019d do better than 99% of the code that\u2019s out there if you had something that could give you better layouts."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "63a473a4-29b9-4f60-b677-02f9bba89806",
        "type": "message",
        "text": "so much of modern performance is bound to data movement",
        "user": "UEBG0NPDK",
        "ts": "1613085146.126800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tD/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so much of modern performance is bound to data movement"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "64ed4641-a94b-44ed-97fe-7fea32922156",
        "type": "message",
        "text": "That's a totally fair criticism against the DSL / zoo of languages approach. I don't have a good answer there either, just a personal preference :slightly_smiling_face:\n\nI will point out that the \"smart compiler\" approach has limits as well.\n\n<https://www.swansontec.com/sregisters.html|This article> is a bit specialized, but shows a practical example of automated where register allocation breaks down. Hardware engineers give preference to different registers for certain operations. It's hard to encode that into a modern compiler in an automatic way, t<https://signalsandthreads.com/compiler-optimization/#004327|hough both Intel and ARM spend a lot of time and money attempting to do so>. They often get \"good enough\" but it's never \"optimal\". Which is fine, but the problem is, because they are heuristic based, there is usually some input program that produces a terrible layout that completely destroys the performance, and then it's hard to fix without breaking other things.\n\nComputational performance is definitely a fascinating problem, with multiple approaches. :smile:",
        "user": "U01661S9F34",
        "ts": "1613085548.127100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1613085558.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y1RqP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's a totally fair criticism against the DSL / zoo of languages approach. I don't have a good answer there either, just a personal preference "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI will point out that the \"smart compiler\" approach has limits as well.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.swansontec.com/sregisters.html",
                                "text": "This article"
                            },
                            {
                                "type": "text",
                                "text": " is a bit specialized, but shows a practical example of automated where register allocation breaks down. Hardware engineers give preference to different registers for certain operations. It's hard to encode that into a modern compiler in an automatic way, t"
                            },
                            {
                                "type": "link",
                                "url": "https://signalsandthreads.com/compiler-optimization/#004327",
                                "text": "hough both Intel and ARM spend a lot of time and money attempting to do so"
                            },
                            {
                                "type": "text",
                                "text": ". They often get \"good enough\" but it's never \"optimal\". Which is fine, but the problem is, because they are heuristic based, there is usually some input program that produces a terrible layout that completely destroys the performance, and then it's hard to fix without breaking other things.\n\nComputational performance is definitely a fascinating problem, with multiple approaches. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "ad670237-03dc-4ff3-8f66-0b0f53281388",
        "type": "message",
        "text": "Yeah, I think with something like layout it\u2019s important that you can still manually specify it if you want. The problem with most automated approaches is that you can\u2019t see into it or adjust it slightly without resorting to weird tricks like reordering completely unrelated things.",
        "user": "UEBG0NPDK",
        "ts": "1613085768.127600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wWef=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I think with something like layout it\u2019s important that you can still manually specify it if you want. The problem with most automated approaches is that you can\u2019t see into it or adjust it slightly without resorting to weird tricks like reordering completely unrelated things."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ccf58069-6073-463a-9e0b-71403c9fdb75",
        "type": "message",
        "text": "This gets back to one of the biggest mental shifts we had after Eve which was that rather than focusing on simple, we should focus on \u201csimple to understand\u201d",
        "user": "UEBG0NPDK",
        "ts": "1613085802.127800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KGH/Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This gets back to one of the biggest mental shifts we had after Eve which was that rather than focusing on simple, we should focus on \u201csimple to understand\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3cde840c-a524-48ba-a17f-dac09ad139d2",
        "type": "message",
        "text": "&gt;  Computational performance is such a fascinating topic to me and it took me a long time to realize that it\u2019s actually much simpler in concept than I thought. To go fast, you just can\u2019t do much stuff. All of those super fancy structures we\u2019d read about in research papers? They were almost always slower because in the end the only cleverness that matters is the bit where the total amount of work you do is less. You were often saving 10% here and hiding an extra 20% over there without realizing it.\nThis is a profound insight. I remember Jonthan Blow talking about just this in an older talk he gave: <https://youtu.be/JjDsP5n2kSM?t=556> TL;DR lists are often fine! Start there, optimize only later / avoid premature optimization. *All data structures are fundamentally about optimization.*\n\nFun story of him looking at DOOM source code when it came out how he was chewed out by John Romero when Blow said asset loading was done sub-optimally (back when he wasn\u2019t enlightened!)",
        "user": "UAJKEBGP8",
        "ts": "1613088458.128200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UAJKEBGP8",
            "ts": "1613088544.000000"
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Jonathan Blow - How to program independent games -  CSUA Speech",
                "title_link": "https://youtu.be/JjDsP5n2kSM?t=556",
                "author_name": "Alexandre Franco",
                "author_link": "https://www.youtube.com/channel/UCALPBCryAkPlmukKlQcLG8w",
                "thumb_url": "https://i.ytimg.com/vi/JjDsP5n2kSM/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Jonathan Blow - How to program independent games -  CSUA Speech",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/JjDsP5n2kSM?start=556&feature=oembed&start=556&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https://youtu.be/JjDsP5n2kSM?t=556",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://youtu.be/JjDsP5n2kSM?t=556"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iPb/",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Computational performance is such a fascinating topic to me and it took me a long time to realize that it\u2019s actually much simpler in concept than I thought. To go fast, you just can\u2019t do much stuff. All of those super fancy structures we\u2019d read about in research papers? They were almost always slower because in the end the only cleverness that matters is the bit where the total amount of work you do is less. You were often saving 10% here and hiding an extra 20% over there without realizing it."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is a profound insight. I remember Jonthan Blow talking about just this in an older talk he gave: "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/JjDsP5n2kSM?t=556"
                            },
                            {
                                "type": "text",
                                "text": " TL;DR lists are often fine! Start there, optimize only later / avoid premature optimization. "
                            },
                            {
                                "type": "text",
                                "text": "All data structures are fundamentally about optimization.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nFun story of him looking at DOOM source code when it came out how he was chewed out by John Romero when Blow said asset loading was done sub-optimally (back when he wasn\u2019t enlightened!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "52dc8902-0690-434c-82d8-2ea07181cfe7",
        "type": "message",
        "text": "Bit old, but nice book",
        "user": "UPVBV34EL",
        "ts": "1613132344.130500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6hTgy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bit old, but nice book"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613078478.122600",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "client_msg_id": "c3300041-f801-4723-8845-44e3aad33264",
        "type": "message",
        "text": "Strong <@UCUSW7WVD> vibes in this intro:\n&gt; A self-explaining computing system would need a high-level programming language. Cant is meant to be both the main language you use in this fantasized environment and the language it's mainly written in.\n<https://github.com/darius/cant/blob/master/guide.md>",
        "user": "U013ZLJARC7",
        "ts": "1613141189.131200",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "darius/cant",
                "title_link": "https://github.com/darius/cant/blob/master/guide.md",
                "text": "A programming argot. Contribute to darius/cant development by creating an account on GitHub.",
                "fallback": "GitHub: darius/cant",
                "thumb_url": "https://avatars.githubusercontent.com/u/6712?s=400&v=4",
                "from_url": "https://github.com/darius/cant/blob/master/guide.md",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/darius/cant/blob/master/guide.md"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jpZLK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Strong "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " vibes in this intro:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A self-explaining computing system would need a high-level programming language. Cant is meant to be both the main language you use in this fantasized environment and the language it's mainly written in."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://github.com/darius/cant/blob/master/guide.md"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613141189.131200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1613145178.131500",
        "reply_users": [
            "UCUSW7WVD"
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "7b62c5d9-7411-4e07-bc62-d8c6b9c5b973",
        "type": "message",
        "text": "I know Darius, but wow I hadn't come across this yet. Need to spend more time talking to my friends.",
        "user": "UCUSW7WVD",
        "ts": "1613145178.131500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mgex",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I know Darius, but wow I hadn't come across this yet. Need to spend more time talking to my friends."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613141189.131200",
        "parent_user_id": "U013ZLJARC7",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UML4ZEKDK",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    }
]