[
    {
        "client_msg_id": "594627ef-b47a-4387-9d14-11cadcfde646",
        "type": "message",
        "text": "1. If a program is intended to be lifted into a GUI, its stdout is often hidden. It doesn't matter if it's silent or not. Often there are debuggability benefits to being verbose.\n2. GUIs are programs too! Extremely complex programs. Often the most complex part of a program.\n\nI should say that you're _totally_ feeding my biases here. I've spent the last 5 years arguing that programs should focus on programmers, and that people should go out of their comfort zones to understand computers. (Because the alternative cedes too much power.)\n\nBut focusing on programmers can sometimes involve providing lots of information so that a run is more intelligible. One of my favorite tricks is emitting facts deduced to a log, and having tests make assertions on the log (<http://akkartik.name/post/tracing-tests>). So I still think you're over-generalizing from Unix here. All we can conclude in general is that programs should probably provide a silent mode and a verbose mode, and which one you operate in depends on the situation. That's a lot less interesting for a blog post, though :slightly_smiling_face:",
        "user": "UCUSW7WVD",
        "ts": "1613518166.109100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9io",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "1. If a program is intended to be lifted into a GUI, its stdout is often hidden. It doesn't matter if it's silent or not. Often there are debuggability benefits to being verbose.\n2. GUIs are programs too! Extremely complex programs. Often the most complex part of a program.\n\nI should say that you're "
                            },
                            {
                                "type": "text",
                                "text": "totally",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " feeding my biases here. I've spent the last 5 years arguing that programs should focus on programmers, and that people should go out of their comfort zones to understand computers. (Because the alternative cedes too much power.)\n\nBut focusing on programmers can sometimes involve providing lots of information so that a run is more intelligible. One of my favorite tricks is emitting facts deduced to a log, and having tests make assertions on the log ("
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/post/tracing-tests"
                            },
                            {
                                "type": "text",
                                "text": "). So I still think you're over-generalizing from Unix here. All we can conclude in general is that programs should probably provide a silent mode and a verbose mode, and which one you operate in depends on the situation. That's a lot less interesting for a blog post, though "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613496313.107800",
        "parent_user_id": "UL5AX4G2H",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f45297da-2f45-48a4-91dd-57f45d7e78be",
        "type": "message",
        "text": "1. Oh it totallly does matter because if you use that program in non-gui mode then stdout is the way you interact with it. Otherwise you're repurposing stdout as a logging output. Logging output is valuable but then just log to a file.\n2. They are programs and should be the simplest part of the program because they're so hard to compose with other programs\n-v to verbose say things other than what's surprising is a common unix option but that's opt in, not opt out.",
        "user": "UL5AX4G2H",
        "ts": "1613547082.110600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fT/h",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Oh it totallly does matter because if you use that program in non-gui mode then stdout is the way you interact with it. Otherwise you're repurposing stdout as a logging output. Logging output is valuable but then just log to a file."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "They are programs and should be the simplest part of the program because they're so hard to compose with other programs"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n-v to verbose say things other than what's surprising is a common unix option but that's opt in, not opt out."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613496313.107800",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "08a7f1f9-58b1-4708-8151-c796cb394f7f",
        "type": "message",
        "text": "I had the same thought about constraining to given hardware.  But, regarding your fingers (!), I believe I am one of them, and for me the constraint was that it wouldn't run in WSL on windows with 64 bit.\nPerhaps constraining the _software_ environment would help - to a docker container maybe?",
        "user": "UUQ2EQW21",
        "ts": "1613557437.110900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2pZ/q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had the same thought about constraining to given hardware.  But, regarding your fingers (!), I believe I am one of them, and for me the constraint was that it wouldn't run in WSL on windows with 64 bit.\nPerhaps constraining the "
                            },
                            {
                                "type": "text",
                                "text": "software",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " environment would help - to a docker container maybe?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613351462.087400",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "169ee7d0-29ae-4332-9691-01746a3add5b",
        "type": "message",
        "text": "<@UUQ2EQW21> Thank you! Does WSL have Qemu? I wonder if baremetal would work for you.\n\n_Edit_: I'm out of fingers! 11 people have tried to run Mu. I'm probably missing a couple of other people like you as well.",
        "user": "UCUSW7WVD",
        "ts": "1613560924.111200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1613563543.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hlo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " Thank you! Does WSL have Qemu? I wonder if baremetal would work for you.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Edit",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": I'm out of fingers! 11 people have tried to run Mu. I'm probably missing a couple of other people like you as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613351462.087400",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "42de7f5c-088e-40e8-9586-c3945b8d0eb2",
        "type": "message",
        "text": "Are you assuming an architecture where the GUI shell for a program is always in a separately runnable process? I can imagine it's always a good idea to make it a separate library (MVC) but process separation has costs.\n\nYou sound like a bigger UNIX head than the creators of UNIX :slightly_smiling_face: That might be a compliment.",
        "user": "UCUSW7WVD",
        "ts": "1613563248.111400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1613563427.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IQ4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you assuming an architecture where the GUI shell for a program is always in a separately runnable process? I can imagine it's always a good idea to make it a separate library (MVC) but process separation has costs.\n\nYou sound like a bigger UNIX head than the creators of UNIX "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": " That might be a compliment."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613496313.107800",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "5a13a9e8-d9a9-4673-bd6b-c0287f2b954e",
        "type": "message",
        "text": "&gt; Otherwise you're repurposing stdout as a logging output. Logging output is valuable but then just log to a file.\nThere _is_ such a thing as `stderr`. Unix has it for a reason.\n\n&gt; -v to verbose say things other than what's surprising is a common unix option but that's opt in, not opt out.\nI'm claiming that there are situations where the right default is a little more verbose than complete silence. Imagine a server where the default log level to stdout is INFO. I've found that handy at times. The real interaction happens in another window, and that frees this one up to be verbose.",
        "user": "UCUSW7WVD",
        "ts": "1613565238.111800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "myCp",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Otherwise you're repurposing stdout as a logging output. Logging output is valuable but then just log to a file."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThere "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " such a thing as "
                            },
                            {
                                "type": "text",
                                "text": "stderr",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Unix has it for a reason.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "-v to verbose say things other than what's surprising is a common unix option but that's opt in, not opt out."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'm claiming that there are situations where the right default is a little more verbose than complete silence. Imagine a server where the default log level to stdout is INFO. I've found that handy at times. The real interaction happens in another window, and that frees this one up to be verbose."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613496313.107800",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "8542b5de-c1c6-4493-bdb2-612ca041e302",
        "type": "message",
        "text": "haha, I'm flattered but I hold them in too much esteem to consider myself more of a unix head than them. The Art Of Unix Programming completely changed my view of eng design.\n\nI'm imagining an architecture where the GUI can be modularized out. It doesn't need to be a separate process or anything. I'm imagining a layer of code which has API/TUI entry points and that the GUI is built on top of. Then everything below the GUI is easily composable with other programs (esp testing), and the GUI happens to be a nice way to make it easy to interact with the program.\n\nI'm not sure why it matters if there are exceptions to the rule. If you're going to hold a simple rule, it's better to err on the side of silence than on the side of noise. Should you hold a simple rule? I believe so because I've found there's bigger fish to fry.",
        "user": "UL5AX4G2H",
        "ts": "1613570256.112000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ffZI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "haha, I'm flattered but I hold them in too much esteem to consider myself more of a unix head than them. The Art Of Unix Programming completely changed my view of eng design.\n\nI'm imagining an architecture where the GUI can be modularized out. It doesn't need to be a separate process or anything. I'm imagining a layer of code which has API/TUI entry points and that the GUI is built on top of. Then everything below the GUI is easily composable with other programs (esp testing), and the GUI happens to be a nice way to make it easy to interact with the program.\n\nI'm not sure why it matters if there are exceptions to the rule. If you're going to hold a simple rule, it's better to err on the side of silence than on the side of noise. Should you hold a simple rule? I believe so because I've found there's bigger fish to fry."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613496313.107800",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "d04e20cc-701f-41ea-b2cf-fbb2ada485db",
        "type": "message",
        "text": "Not sure what you mean by bigger fish to fry. The first question that leads to for me is: why bother writing this, then?\n\nIf you call something a rule and never mention exceptions, then the reader will assume you don't intend exceptions.",
        "user": "UCUSW7WVD",
        "ts": "1613583940.112200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lJ=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure what you mean by bigger fish to fry. The first question that leads to for me is: why bother writing this, then?\n\nIf you call something a rule and never mention exceptions, then the reader will assume you don't intend exceptions."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613496313.107800",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "539b7297-9b1d-49f7-9d96-f8b2aed9be1b",
        "type": "message",
        "text": "I don't think what I'm pointing out are narrow exceptions to a rule at all. Rather this Unix 'rule' (and, indeed, the rest of <https://en.wikipedia.org/wiki/Unix_philosophy>) only applies in a very narrow domain: interactive programming in shell. Not even shell scripts, let alone well-designed GUI and web frameworks. Unix has had ample decades to demonstrate good examples in those areas, and it has failed.",
        "user": "UCUSW7WVD",
        "ts": "1613584797.112400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fqEJA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think what I'm pointing out are narrow exceptions to a rule at all. Rather this Unix 'rule' (and, indeed, the rest of "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Unix_philosophy"
                            },
                            {
                                "type": "text",
                                "text": ") only applies in a very narrow domain: interactive programming in shell. Not even shell scripts, let alone well-designed GUI and web frameworks. Unix has had ample decades to demonstrate good examples in those areas, and it has failed."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613496313.107800",
        "parent_user_id": "UL5AX4G2H"
    },
    {
        "client_msg_id": "94c7e75d-7602-42b4-b883-3535f7370fd3",
        "type": "message",
        "text": "Did you see Glance? <https://github.com/rgleichman/glance>",
        "user": "UDQBTJ211",
        "ts": "1613589535.112600",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "rgleichman/glance",
                "title_link": "https://github.com/rgleichman/glance",
                "text": "A visual Haskell. Contribute to rgleichman/glance development by creating an account on GitHub.",
                "fallback": "GitHub: rgleichman/glance",
                "thumb_url": "https://avatars.githubusercontent.com/u/1145705?s=400&v=4",
                "from_url": "https://github.com/rgleichman/glance",
                "thumb_width": 420,
                "thumb_height": 420,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/github.png",
                "id": 1,
                "original_url": "https://github.com/rgleichman/glance"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TUJ=3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Did you see Glance? "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/rgleichman/glance"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613275602.074900",
        "parent_user_id": "U5TCAFTD3"
    },
    {
        "client_msg_id": "e55cfcce-9ee5-475a-a0b6-7319d1fd4004",
        "type": "message",
        "text": "Whacky! And neat! Thanks for the pointer!",
        "user": "U5TCAFTD3",
        "ts": "1613589598.112900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1DGz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Whacky! And neat! Thanks for the pointer!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1613275602.074900",
        "parent_user_id": "U5TCAFTD3"
    }
]