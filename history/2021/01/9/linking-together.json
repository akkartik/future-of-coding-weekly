[
    {
        "client_msg_id": "267a1432-b6f5-4224-8837-6228daeba5c1",
        "type": "message",
        "text": "Crap, looks like I missed this opportunity. Probably wouldn't have landed it anyway?",
        "user": "UD6EXQVM0",
        "ts": "1610170727.462200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w9tFY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Crap, looks like I missed this opportunity. Probably wouldn't have landed it anyway?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1606245835.281400",
        "parent_user_id": "UFQQ3P867"
    },
    {
        "client_msg_id": "939d586b-a838-4b6e-b96d-dc04f92026a3",
        "type": "message",
        "text": "Something I don't understand: why should [1, 2] + [[0,0],[0,0]] be [[1,2],[1,2]] and not [[1,1],[2,2]]? Is it completely arbitrary or is there a reason?",
        "user": "UD6EXQVM0",
        "ts": "1610174481.462400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/eKY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something I don't understand: why should [1, 2] + [[0,0],[0,0]] be [[1,2],[1,2]] and not [[1,1],[2,2]]? Is it completely arbitrary or is there a reason?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1605627698.246200",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "0f3868d2-3de2-42ff-8c5a-aee9e1dcb7a5",
        "type": "message",
        "text": "GReTA: \"a platform for the international graph rewriting community, to promote recent developments and trends in the field, and to permit a regular networking and interaction between members of this community\"\n\nOkay, so where do I go if I'm newb and merely want to learn more about graph rewriting?",
        "user": "UD6EXQVM0",
        "ts": "1610175864.462600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OJu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "GReTA: \"a platform for the international graph rewriting community, to promote recent developments and trends in the field, and to permit a regular networking and interaction between members of this community\"\n\nOkay, so where do I go if I'm newb and merely want to learn more about graph rewriting?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607148052.311000",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "e6dd4133-42f8-4559-a3af-0983bce4bcd9",
        "type": "message",
        "text": "In particular I would like to know ways in which graph rewriting can be somehow superior to traditional, um, programs; the topic is only interesting to me insofar as it can provide a better way to accomplish something.",
        "user": "UD6EXQVM0",
        "ts": "1610175968.462800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1610176051.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ttKaL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In particular I would like to know ways in which graph rewriting can be somehow superior to traditional, um, programs; the topic is only interesting to me insofar as it can provide a better way to accomplish something."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607148052.311000",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "cad61683-1de8-40d0-b28e-ce9e3eed254c",
        "type": "message",
        "text": "I came to the same conclusion, that requiring provable termination isn't useful, but perhaps it's a useful default - perhaps a language can be designed such that it can prove most programs will terminate, and for cases where it can't prove it, you'll get a warning that you can then turn off (either by 'conjecturing' that it terminates, or declaring that it doesn't always terminate and the programmer just accepts it).\n\nHowever, if I was building a language, there are other type-system features I would prioritize over termination analysis (e.g. unit inference).",
        "user": "UD6EXQVM0",
        "ts": "1610178372.463300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1610178435.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WbjRy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I came to the same conclusion, that requiring provable termination isn't useful, but perhaps it's a useful default - perhaps a language can be designed such that it can prove most programs will terminate, and for cases where it can't prove it, you'll get a warning that you can then turn off (either by 'conjecturing' that it terminates, or declaring that it doesn't always terminate and the programmer just accepts it).\n\nHowever, if I was building a language, there are other type-system features I would prioritize over termination analysis (e.g. unit inference)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1604952430.207700",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "client_msg_id": "ed747d4e-e104-4ea7-8f56-1b58ffcc20f3",
        "type": "message",
        "text": "<@UD6EXQVM0> I have it on my backburner to study <https://en.wikipedia.org/wiki/GrGen>, \"a tool optimized for the processing of\u00a0<https://en.wikipedia.org/wiki/Graph_(data_structure)|graph structured>\u00a0data. The core of the languages consists of\u00a0<https://en.wikipedia.org/wiki/Modular|modular>\u00a0<https://en.wikipedia.org/wiki/Graph_rewriting|graph rewrite rules>, which are built on\u00a0<https://en.wikipedia.org/wiki/Declarative_programming|declarative>\u00a0graph pattern matching and rewriting\"",
        "user": "UN9SCH5RD",
        "ts": "1610180806.463800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PWC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " I have it on my backburner to study "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/GrGen"
                            },
                            {
                                "type": "text",
                                "text": ", \"a tool optimized for the processing of\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Graph_(data_structure)",
                                "text": "graph structured"
                            },
                            {
                                "type": "text",
                                "text": "\u00a0data. The core of the languages consists of\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Modular",
                                "text": "modular"
                            },
                            {
                                "type": "text",
                                "text": "\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Graph_rewriting",
                                "text": "graph rewrite rules"
                            },
                            {
                                "type": "text",
                                "text": ", which are built on\u00a0"
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Declarative_programming",
                                "text": "declarative"
                            },
                            {
                                "type": "text",
                                "text": "\u00a0graph pattern matching and rewriting\""
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607148052.311000",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "9768eb5d-3c46-4ddc-8d1e-e85e4cba0769",
        "type": "message",
        "text": "it is based on .NET so it should be up your alley :slightly_smiling_face:",
        "user": "UN9SCH5RD",
        "ts": "1610180833.464000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lIJrJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it is based on .NET so it should be up your alley "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607148052.311000",
        "parent_user_id": "USH01JEDQ"
    },
    {
        "client_msg_id": "eb1fb75f-90c9-4deb-9af4-aa8acf14f7f4",
        "type": "message",
        "text": "ohhh apparently also has a Java version... cool :slightly_smiling_face:",
        "user": "UN9SCH5RD",
        "ts": "1610181385.464200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2uf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ohhh apparently also has a Java version... cool "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1607148052.311000",
        "parent_user_id": "USH01JEDQ"
    }
]