[
    {
        "client_msg_id": "E3BFF80D-71CE-4DAB-8668-45CD33D51606",
        "type": "message",
        "text": "I don\u2019t really understand what you\u2019re trying to build. The API is going to be different depending on the registration info provided? The registration info is provided programmatically (by client software) and you want the client to be able to compute the resultant API\u2019s type/interface so static checking can be performed? If so, it sounds like your language needs a specially-crafted type system. The next step would be to show some examples of the types you want to be computed for specific registration info (inputs).",
        "user": "UCGAK10LS",
        "ts": "1610150064.482300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1610150095.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LnXY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don\u2019t really understand what you\u2019re trying to build. The API is going to be different depending on the registration info provided? The registration info is provided programmatically (by client software) and you want the client to be able to compute the resultant API\u2019s type/interface so static checking can be performed? If so, it sounds like your language needs a specially-crafted type system. The next step would be to show some examples of the types you want to be computed for specific registration info (inputs)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610067746.465300",
        "parent_user_id": "UFPPABQ7P"
    },
    {
        "client_msg_id": "b22d99c1-52dd-4832-bac0-45d181e5bca0",
        "type": "message",
        "text": "<@UCGAK10LS>, yes. You've got the right idea, here. The type-system we've designed has several distinguishing properties that make it better for our privacy-focused, semi-structured, editor.\nFor example, the projection of any type is separate from the type's \"registration ID\".",
        "user": "UFPPABQ7P",
        "ts": "1610199993.482700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LqM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": ", yes. You've got the right idea, here. The type-system we've designed has several distinguishing properties that make it better for our privacy-focused, semi-structured, editor.\nFor example, the projection of any type is separate from the type's \"registration ID\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610067746.465300",
        "parent_user_id": "UFPPABQ7P"
    },
    {
        "client_msg_id": "9d3351a8-c846-4c14-b422-ac4820bf1e23",
        "type": "message",
        "text": "Hi, I've been thinking about how end-users store and backup their data lately and came to the conclusion that there's currently no really good solution for it. I've written a blog post about the topic and would be interested to hear your thoughts. I have a couple of ideas how my dream system would look like and have started building a prototype. I hope to find time to write about that soon.\nHere's the post:\n<https://fkohlgrueber.github.io/blog/data-storage-part-1/>",
        "user": "UAL7940NM",
        "ts": "1610201089.487900",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Felix\u2019s Blog",
                "title": "Data Storage for Humans - Part 1: Existing Solutions",
                "title_link": "https://fkohlgrueber.github.io/blog/data-storage-part-1/",
                "text": "From time to time, friends or family members ask me for recommendations how they should store and backup their data. Most people (both technical and non-technical) I know have a sense that they should be keeping their data safe, but fail to actually do so. Instead of blaming them for it, I think we should create systems that make safe and secure data storage so simple that everyone can easily use it.",
                "fallback": "Felix\u2019s Blog: Data Storage for Humans - Part 1: Existing Solutions",
                "ts": 1610196356,
                "from_url": "https://fkohlgrueber.github.io/blog/data-storage-part-1/",
                "id": 1,
                "original_url": "https://fkohlgrueber.github.io/blog/data-storage-part-1/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4lVf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, I've been thinking about how end-users store and backup their data lately and came to the conclusion that there's currently no really good solution for it. I've written a blog post about the topic and would be interested to hear your thoughts. I have a couple of ideas how my dream system would look like and have started building a prototype. I hope to find time to write about that soon.\nHere's the post:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://fkohlgrueber.github.io/blog/data-storage-part-1/"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610201089.487900",
        "reply_count": 14,
        "reply_users_count": 5,
        "latest_reply": "1610351250.496200",
        "reply_users": [
            "UAL7940NM",
            "UFPPABQ7P",
            "UHWC9PXBL",
            "UCUSW7WVD",
            "UJBAJNFLK"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "c4392d03-5f95-4c7a-b773-524b67f130a7",
        "type": "message",
        "text": "I'm happy to discuss in this thread, on twitter or per email. Have a great day everyone :wink:",
        "user": "UAL7940NM",
        "ts": "1610201157.488100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hmOZe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm happy to discuss in this thread, on twitter or per email. Have a great day everyone "
                            },
                            {
                                "type": "emoji",
                                "name": "wink"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "05055f99-7b63-4fcd-8e17-832bda56bdb2",
        "type": "message",
        "text": "<@UC2A2ARPT> I wasn't sure whether to post here or in <#CCL5VVBAN|share-your-work>. Feel free to move the post if you find another channel more appropriate.",
        "user": "UAL7940NM",
        "ts": "1610201438.488300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nS8V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I wasn't sure whether to post here or in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": ". Feel free to move the post if you find another channel more appropriate."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3bb923b1-fc8f-4203-aa9e-aa703edf7291",
        "type": "message",
        "text": "<@UAL7940NM>, I'm currently reading through your write-up, but my first thought was to include a note on tagging systems like <https://perkeep.org/|Perkeep (multi-client non-hierarchical searchable blob storage)> and recently, <https://amoffat.github.io/supertag/|Supertag (non-hierarchical FUSE)>.",
        "user": "UFPPABQ7P",
        "ts": "1610210165.488600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sJy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAL7940NM"
                            },
                            {
                                "type": "text",
                                "text": ", I'm currently reading through your write-up, but my first thought was to include a note on tagging systems like "
                            },
                            {
                                "type": "link",
                                "url": "https://perkeep.org/",
                                "text": "Perkeep (multi-client non-hierarchical searchable blob storage)"
                            },
                            {
                                "type": "text",
                                "text": " and recently, "
                            },
                            {
                                "type": "link",
                                "url": "https://amoffat.github.io/supertag/",
                                "text": "Supertag (non-hierarchical FUSE)"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "32ff5986-ba74-45bc-82c0-b7fc89fcfbeb",
        "type": "message",
        "text": "Perhaps good for part 2 :slightly_smiling_face:",
        "user": "UFPPABQ7P",
        "ts": "1610210184.488800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=7r7w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Perhaps good for part 2 "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM"
    },
    {
        "client_msg_id": "41825223-0b32-40e8-916b-268df396655b",
        "type": "message",
        "text": "Hi <@UFPPABQ7P>, thanks for your feedback. The organization of files is definitely something to be covered in a future post. I'm currently thinking that a flat hash-based file store would be a good foundation on which other interesting things like tags or hierarchies could be implemented. \nBefore that though, I'd like to figure the \"distributed\" part out. That's the next step for me",
        "user": "UAL7940NM",
        "ts": "1610214840.489000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f2i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UFPPABQ7P"
                            },
                            {
                                "type": "text",
                                "text": ", thanks for your feedback. The organization of files is definitely something to be covered in a future post. I'm currently thinking that a flat hash-based file store would be a good foundation on which other interesting things like tags or hierarchies could be implemented. \nBefore that though, I'd like to figure the \"distributed\" part out. That's the next step for me"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "695970B8-3C35-4C69-98F7-050B18A92B87",
        "type": "message",
        "text": "this triggers my belief that there should be a good, cheap system for everyone to have a low-power, high-friendliness personal server with great ux. if you feel like that\u2019s related enough i\u2019d be super happy to chat anytime! definitely interested either way",
        "user": "UHWC9PXBL",
        "ts": "1610226018.491900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hec",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this triggers my belief that there should be a good, cheap system for everyone to have a low-power, high-friendliness personal server with great ux. if you feel like that\u2019s related enough i\u2019d be super happy to chat anytime! definitely interested either way"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM",
        "reactions": [
            {
                "name": "thought_balloon",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8928aff6-dc9e-4bcb-9ba1-1d0664ab7601",
        "type": "message",
        "text": "Data deletion: The opposite of not accidentally deleting data is confidence that deliberate deletions are truly deleted, not cached on a server somewhere.\n\nOne missing axis here is incrementality of backups. Time machine saves only differences with the previous backup. In addition to efficiency, incremental backups eliminate accidental deletion. And they can be layered on your 3 categories using tools like duplicity or borgbackup. Services like <http://rsync.net|rsync.net> and backblaze work particularly well with incremental backups.\n\nOne drawback of incremental backups or encryption is that it's easy to get into a state where you need to download gigabytes of data just to access one file. It seems worth explicitly stating that in \"universal access to data\". It's implied by the words there, but won't be obvious to readers.",
        "user": "UCUSW7WVD",
        "ts": "1610227093.492100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1610312092.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lhmj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Data deletion: The opposite of not accidentally deleting data is confidence that deliberate deletions are truly deleted, not cached on a server somewhere.\n\nOne missing axis here is incrementality of backups. Time machine saves only differences with the previous backup. In addition to efficiency, incremental backups eliminate accidental deletion. And they can be layered on your 3 categories using tools like duplicity or borgbackup. Services like "
                            },
                            {
                                "type": "link",
                                "url": "http://rsync.net",
                                "text": "rsync.net"
                            },
                            {
                                "type": "text",
                                "text": " and backblaze work particularly well with incremental backups.\n\nOne drawback of incremental backups or encryption is that it's easy to get into a state where you need to download gigabytes of data just to access one file. It seems worth explicitly stating that in \"universal access to data\". It's implied by the words there, but won't be obvious to readers."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1610201089.487900",
        "parent_user_id": "UAL7940NM"
    }
]