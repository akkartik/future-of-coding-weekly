[
    {
        "client_msg_id": "642989b4-4176-4c41-b31f-aceba96db2c6",
        "type": "message",
        "text": "This is the memory management strategy I've chosen for Curv, but I didn't think it was new. I thought I was stealing the idea from APL. Nice paper, it lays out the ideas very clearly. <https://aplwiki.com/wiki/Performance#Reference_counting_and_data_reuse>",
        "user": "UJN1TAYEQ",
        "ts": "1609890045.448200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hN=p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the memory management strategy I've chosen for Curv, but I didn't think it was new. I thought I was stealing the idea from APL. Nice paper, it lays out the ideas very clearly. "
                            },
                            {
                                "type": "link",
                                "url": "https://aplwiki.com/wiki/Performance#Reference_counting_and_data_reuse"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609244173.423500",
        "parent_user_id": "UDQBTJ211"
    },
    {
        "client_msg_id": "1178ee43-f462-42c0-b7d0-19b6c0786c38",
        "type": "message",
        "text": "So maybe the PLD community is balkanized. APL has been refcounted since the very beginning in the mid 1960s. APL implementors have been sweating the details on how to make a ref counted functional language fast for 55 years.",
        "user": "UJN1TAYEQ",
        "ts": "1609891998.448400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mZ+C+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So maybe the PLD community is balkanized. APL has been refcounted since the very beginning in the mid 1960s. APL implementors have been sweating the details on how to make a ref counted functional language fast for 55 years."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609244173.423500",
        "parent_user_id": "UDQBTJ211"
    },
    {
        "client_msg_id": "421f8995-5638-4a96-a8e2-50005b7c8caf",
        "type": "message",
        "text": "\"Lunar is my attempt to distill 40 years of programming language experience into the \"best\" language I can come up with. I hope that this will bring some forgotten ideas back into the spotlight of public attention.\"\n\nLunar programming language by David Moon - <http://users.rcn.com/david-moon/Lunar/>",
        "user": "UPVBV34EL",
        "ts": "1609920732.449600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QSryU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Lunar is my attempt to distill 40 years of programming language experience into the \"best\" language I can come up with. I hope that this will bring some forgotten ideas back into the spotlight of public attention.\"\n\nLunar programming language by David Moon - "
                            },
                            {
                                "type": "link",
                                "url": "http://users.rcn.com/david-moon/Lunar/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "411b2efa-4b5a-4b3a-9ac6-91b6963724fc",
        "type": "message",
        "text": "Will Low-Code development tools commercially profitable? <https://dev.to/taowen/will-low-code-development-tools-commercially-profitable-34ib>",
        "user": "UKFNXF0F9",
        "ts": "1609970688.450300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ic9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Will Low-Code development tools commercially profitable? "
                            },
                            {
                                "type": "link",
                                "url": "https://dev.to/taowen/will-low-code-development-tools-commercially-profitable-34ib"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609970688.450300",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1610024051.458400",
        "reply_users": [
            "U01DX39SB33",
            "UKFNXF0F9"
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "ce7422e5-5760-458a-a6c5-95970f875aa3",
        "type": "message",
        "text": "<@UKFNXF0F9> On the point on lock-in, ownership...:\n\nI don't think the problem is actually ownership or control (with a few regulatory exceptions in certain industries), it's more about trust.\n\nthe owernship/control/lock-in issue (as real as it is) is something that can be overcome. It's just a hard, long game of building trust which requires time, money and hard work.  I recall a lot more jokes and complaints from backend devs about how silly of an idea Heroku was (at launch) and that they wouldn't concede control for such little value.\n\nA few years of building a brand, trust and filling in the missing features and I now see the same backend devs opting for Heroku on projects left and right, with no concerns around control.",
        "user": "U01DX39SB33",
        "ts": "1609973706.456200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nyWU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKFNXF0F9"
                            },
                            {
                                "type": "text",
                                "text": " On the point on lock-in, ownership...:\n\nI don't think the problem is actually ownership or control (with a few regulatory exceptions in certain industries), it's more about trust.\n\nthe owernship/control/lock-in issue (as real as it is) is something that can be overcome. It's just a hard, long game of building trust which requires time, money and hard work.  I recall a lot more jokes and complaints from backend devs about how silly of an idea Heroku was (at launch) and that they wouldn't concede control for such little value.\n\nA few years of building a brand, trust and filling in the missing features and I now see the same backend devs opting for Heroku on projects left and right, with no concerns around control."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1609970688.450300",
        "parent_user_id": "UKFNXF0F9",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "UUB7RA7PF"
                ],
                "count": 2
            }
        ]
    }
]