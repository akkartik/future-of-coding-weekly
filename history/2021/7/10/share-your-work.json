[
    {
        "client_msg_id": "81ca7e83-c77b-4b87-9657-a8a1d3a86aad",
        "type": "message",
        "text": "[Dida](<https://github.com/jamii/dida>) updates:\n* Added a js&lt;-&gt;wasm api (example [here](<https://github.com/jamii/dida/blob/2caffd4461037fe5c06b2457251a94e74cfda1dc/examples/core.html>), sugar upcoming so it looks more like [this](<https://github.com/jamii/dida/blob/2caffd4461037fe5c06b2457251a94e74cfda1dc/examples/sugar.zig))>. From the js side the wasm api looks exactly the same as the node api, so you can share code between them.\n* Indexes are now LSM trees instead of, uh, unsorted arrays. Joins are no longer silly.\n* Distinct got a faster implementation.\n* Added a reduce operator.\n* Fixed a bug in pointstamp order by adding a new constraint to graph layout.\n* Lots more unit tests.\n\nStill not quite worth using, but might get there in the next month or two.",
        "user": "U71PMQ1V0",
        "ts": "1625895048.164200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TOIR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Dida]("
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/jamii/dida"
                            },
                            {
                                "type": "text",
                                "text": ") updates:\n* Added a js<->wasm api (example [here]("
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/jamii/dida/blob/2caffd4461037fe5c06b2457251a94e74cfda1dc/examples/core.html"
                            },
                            {
                                "type": "text",
                                "text": "), sugar upcoming so it looks more like [this]("
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/jamii/dida/blob/2caffd4461037fe5c06b2457251a94e74cfda1dc/examples/sugar.zig))"
                            },
                            {
                                "type": "text",
                                "text": ". From the js side the wasm api looks exactly the same as the node api, so you can share code between them.\n* Indexes are now LSM trees instead of, uh, unsorted arrays. Joins are no longer silly.\n* Distinct got a faster implementation.\n* Added a reduce operator.\n* Fixed a bug in pointstamp order by adding a new constraint to graph layout.\n* Lots more unit tests.\n\nStill not quite worth using, but might get there in the next month or two."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1625895048.164200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1625895094.164400",
        "reply_users": [
            "U71PMQ1V0"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "709c5a8e-be8e-45d5-8ea7-6d31538a9187",
        "type": "message",
        "text": "I would have thought that ticking the 'Format messages with markup' would have done the job here, but alas, their markup does not support links at all.",
        "user": "U71PMQ1V0",
        "ts": "1625895094.164400",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U71PMQ1V0",
            "ts": "1625895185.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9RBC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would have thought that ticking the 'Format messages with markup' would have done the job here, but alas, their markup does not support links at all."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1625895048.164200",
        "parent_user_id": "U71PMQ1V0",
        "reactions": [
            {
                "name": "grimacing",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a79b4d0d-5c2e-4549-92c1-5aef34db0398",
        "type": "message",
        "text": "Also maybe of interest - <https://scattered-thoughts.net/writing/against-sql> - the underlying language design mistakes that make sql such a nightmare to use and implement, and how to avoid them in future languages.",
        "user": "U71PMQ1V0",
        "ts": "1625895244.165600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y2GUj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also maybe of interest - "
                            },
                            {
                                "type": "link",
                                "url": "https://scattered-thoughts.net/writing/against-sql"
                            },
                            {
                                "type": "text",
                                "text": " - the underlying language design mistakes that make sql such a nightmare to use and implement, and how to avoid them in future languages."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1625895244.165600",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1626126621.169300",
        "reply_users": [
            "UA14TGLTC",
            "U016LEA3J1H",
            "U71PMQ1V0"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC",
                    "U01JNTE35QS"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UML4ZEKDK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "42c2d2cb-ba32-4877-a33a-6fca236518aa",
        "type": "message",
        "text": "A thorough critique \u2014 with no lack of specific shortcomings!  And the \"After SQL?\" section is much desired.",
        "user": "UA14TGLTC",
        "ts": "1625932193.165900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nD/mY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A thorough critique \u2014 with no lack of specific shortcomings!  And the \"After SQL?\" section is much desired."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1625895244.165600",
        "parent_user_id": "U71PMQ1V0",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U71PMQ1V0"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5b650095-04e7-4225-a907-189f814ebee2",
        "type": "message",
        "text": "dang this post is so amazing, thanks for sharing Jamie!",
        "user": "U016LEA3J1H",
        "ts": "1626107218.168600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pMzc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "dang this post is so amazing, thanks for sharing Jamie!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1625895244.165600",
        "parent_user_id": "U71PMQ1V0"
    },
    {
        "client_msg_id": "ee648555-edd6-4cbe-8573-b54eb8174e2a",
        "type": "message",
        "text": "i've been hackin' away on a less ambitious answer to a bunch of the same questions called Gelly, which adds the relational algebra to graphql which you can see some examples of here: <https://docs.gadget.dev/guides/gelly-reference>",
        "user": "U016LEA3J1H",
        "ts": "1626107273.168800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jqL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i've been hackin' away on a less ambitious answer to a bunch of the same questions called Gelly, which adds the relational algebra to graphql which you can see some examples of here: "
                            },
                            {
                                "type": "link",
                                "url": "https://docs.gadget.dev/guides/gelly-reference"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1625895244.165600",
        "parent_user_id": "U71PMQ1V0"
    },
    {
        "client_msg_id": "7e7e196e-c70c-40a5-85e9-a2fe219c9495",
        "type": "message",
        "text": "personally i feel like the ergonomics issues around humans writing SQL is maybe the biggest problem, the leaning tower of workarounds are super unfortunate but the folks working on SQL compilers can figure them out eventually and teach the ORM or analytics engine or whatever to employ them, but a poor human just has no chance of remembering all the insane syntax and whatnot, and i feel like it is a major bummer that the lingua franca isn't very accessible",
        "user": "U016LEA3J1H",
        "ts": "1626107390.169000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A/23H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "personally i feel like the ergonomics issues around humans writing SQL is maybe the biggest problem, the leaning tower of workarounds are super unfortunate but the folks working on SQL compilers can figure them out eventually and teach the ORM or analytics engine or whatever to employ them, but a poor human just has no chance of remembering all the insane syntax and whatnot, and i feel like it is a major bummer that the lingua franca isn't very accessible"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1625895244.165600",
        "parent_user_id": "U71PMQ1V0"
    },
    {
        "client_msg_id": "c8fe9495-ad7b-4945-ab1d-298070681148",
        "type": "message",
        "text": "<@U016LEA3J1H> This is pretty neat. Any chance you could add me to the gadget alpha?",
        "user": "U71PMQ1V0",
        "ts": "1626126621.169300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Ep",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016LEA3J1H"
                            },
                            {
                                "type": "text",
                                "text": " This is pretty neat. Any chance you could add me to the gadget alpha?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1625895244.165600",
        "parent_user_id": "U71PMQ1V0"
    }
]