[
    {
        "client_msg_id": "5f932263-2594-4e6b-8cf1-73ccbd9b9fd5",
        "type": "message",
        "text": "I just wrote a blog post about implementing a simple, general purpose state machine in Go - <https://towardsdatascience.com/writing-a-finite-state-machine-in-go-e5535e89d615> Would be great to have feedback",
        "user": "UPVBV34EL",
        "ts": "1626963828.196500",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "Medium",
                "title": "Writing A Finite State Machine in Go",
                "title_link": "https://towardsdatascience.com/writing-a-finite-state-machine-in-go-e5535e89d615",
                "text": "I am back with a new blog post after a really loooong time. Sorry for this radio silence. I had too many things going on in my life and\u2026",
                "fallback": "Medium: Writing A Finite State Machine in Go",
                "image_url": "https://miro.medium.com/max/699/1*ovIAtF73IFGvtoaWUusyTw.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "6 min read",
                        "short": true
                    }
                ],
                "ts": 1626956293,
                "from_url": "https://towardsdatascience.com/writing-a-finite-state-machine-in-go-e5535e89d615",
                "image_width": 414,
                "image_height": 250,
                "image_bytes": 16336,
                "service_icon": "https://miro.medium.com/fit/c/152/152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png",
                "id": 1,
                "original_url": "https://towardsdatascience.com/writing-a-finite-state-machine-in-go-e5535e89d615"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2RkCm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just wrote a blog post about implementing a simple, general purpose state machine in Go - "
                            },
                            {
                                "type": "link",
                                "url": "https://towardsdatascience.com/writing-a-finite-state-machine-in-go-e5535e89d615"
                            },
                            {
                                "type": "text",
                                "text": " Would be great to have feedback"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1626963828.196500",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1627446651.203000",
        "reply_users": [
            "U013WBS1B1C",
            "UPVBV34EL"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "ac4bfca4-a9bd-4a6c-b05a-85986f8d1831",
        "type": "message",
        "text": "FSMs are great. Always nice to see them written about. XState is very popular these days, from what I hear. I wrote an FSM DSL some years back, where the spec looked like this:\n```when locked\n    coin causes [unlock thank-you] then unlocked\n    pass causes alarm\nwhen unlocked\n    coin causes thank-you\n    pass causes lock then locked```",
        "user": "U013WBS1B1C",
        "ts": "1627419680.202600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f5KsQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FSMs are great. Always nice to see them written about. XState is very popular these days, from what I hear. I wrote an FSM DSL some years back, where the spec looked like this:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "when locked\n    coin causes [unlock thank-you] then unlocked\n    pass causes alarm\nwhen unlocked\n    coin causes thank-you\n    pass causes lock then locked"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1626963828.196500",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "client_msg_id": "becd910b-fbdf-41fc-a578-fc5bd3bfa728",
        "type": "message",
        "text": "`when &lt;state&gt; &lt;event&gt; causes &lt;action(s)&gt; then &lt;new-state&gt; ...`",
        "user": "U013WBS1B1C",
        "ts": "1627419759.202800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cGj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "when <state> <event> causes <action(s)> then <new-state> ...",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1626963828.196500",
        "parent_user_id": "UPVBV34EL"
    },
    {
        "client_msg_id": "18117ddf-0c06-4958-9369-8a18d94449cd",
        "type": "message",
        "text": "Looks interesting. Do you have the interpreter still around? I am very interested in the fundamental of computation, computability, complexity etc. FSM is often a nice model to toy around.",
        "user": "UPVBV34EL",
        "ts": "1627446651.203000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wcAgJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks interesting. Do you have the interpreter still around? I am very interested in the fundamental of computation, computability, complexity etc. FSM is often a nice model to toy around."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1626963828.196500",
        "parent_user_id": "UPVBV34EL"
    }
]