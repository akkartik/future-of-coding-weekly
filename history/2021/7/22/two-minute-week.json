[
    {
        "client_msg_id": "e83a423c-92e8-41f9-b754-4ec1f58edbdc",
        "type": "message",
        "text": "Last week in Wasp was really productive:\n- We wrote our first public design doc, and added instructions to README on how to write them and where to put them. We will continue to do this for every new non-trivial feature, so that everybody can more easily pitch-in and influence what we are building! <https://github.com/wasp-lang/wasp/tree/master/waspc/docs/design-docs>\n- Our first-time contributor <https://github.com/saatvikshah> did an amazing job of implementing a whole new Wasp feature: support for each operation to individually opt out of authentication! <https://github.com/wasp-lang/wasp/pull/279>\n- Thanks to hard work by our intern <https://github.com/craigmc08>, we merged first part of new Wasp compiler, rewritten to use parser/lexer generators that use formal grammar, instead of using parser combinator library where we had to do all this manually. <https://github.com/wasp-lang/wasp/pull/274>\n- We implemented support for running custom server setup code. <https://github.com/wasp-lang/wasp/pull/285>\n- We brought Waspello demo app (Trello implementation in Wasp) to its MVP stage. This will help us develop Wasp for apps that require \"advanced\" reactivity <https://github.com/wasp-lang/wasp/tree/trello-example-app/examples/trello>\n\nNext couple of weeks we will go for vacation, but then we are back in full-speed! Wish you all a great summer :slightly_smiling_face:!",
        "user": "UUB7RA7PF",
        "ts": "1626957048.105000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MoibN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Last week in Wasp was really productive:\n- We wrote our first public design doc, and added instructions to README on how to write them and where to put them. We will continue to do this for every new non-trivial feature, so that everybody can more easily pitch-in and influence what we are building! "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/wasp-lang/wasp/tree/master/waspc/docs/design-docs"
                            },
                            {
                                "type": "text",
                                "text": "\n- Our first-time contributor "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/saatvikshah"
                            },
                            {
                                "type": "text",
                                "text": " did an amazing job of implementing a whole new Wasp feature: support for each operation to individually opt out of authentication! "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/wasp-lang/wasp/pull/279"
                            },
                            {
                                "type": "text",
                                "text": "\n- Thanks to hard work by our intern "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/craigmc08"
                            },
                            {
                                "type": "text",
                                "text": ", we merged first part of new Wasp compiler, rewritten to use parser/lexer generators that use formal grammar, instead of using parser combinator library where we had to do all this manually. "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/wasp-lang/wasp/pull/274"
                            },
                            {
                                "type": "text",
                                "text": "\n- We implemented support for running custom server setup code. "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/wasp-lang/wasp/pull/285"
                            },
                            {
                                "type": "text",
                                "text": "\n- We brought Waspello demo app (Trello implementation in Wasp) to its MVP stage. This will help us develop Wasp for apps that require \"advanced\" reactivity "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/wasp-lang/wasp/tree/trello-example-app/examples/trello"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNext couple of weeks we will go for vacation, but then we are back in full-speed! Wish you all a great summer "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "937bd7ab-2586-4675-99db-dc47e47b5eeb",
        "type": "message",
        "text": "New Feature: Variables in Formula Editor Keyboard\n\nFirst feature that adds alternatives to drag &amp; drop operations\n\nImproves discoverability\n\nAvoids long/failed drag&amp;drop operations\n\nMakes it easier to use on devices without a mouse\n\n<https://www.youtube.com/watch?v=IEA1oailsk8>",
        "user": "UBN9AFS0N",
        "ts": "1626968794.107800",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1626969085.000000"
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "New Feature: Variables in Formula Editor Keyboard",
                "title_link": "https://www.youtube.com/watch?v=IEA1oailsk8",
                "author_name": "Instadeq",
                "author_link": "https://www.youtube.com/c/Instadeq",
                "thumb_url": "https://i.ytimg.com/vi/IEA1oailsk8/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: New Feature: Variables in Formula Editor Keyboard",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/IEA1oailsk8?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=IEA1oailsk8",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=IEA1oailsk8"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nNs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "New Feature: Variables in Formula Editor Keyboard\n\nFirst feature that adds alternatives to drag & drop operations\n\nImproves discoverability\n\nAvoids long/failed drag&drop operations\n\nMakes it easier to use on devices without a mouse\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=IEA1oailsk8"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1626968794.107800",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1627025986.109000",
        "reply_users": [
            "U01ULEWACPP",
            "UBN9AFS0N"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1627025986.109000",
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7",
                    "U0282PL61U1"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "e0b61282-b2a9-4179-b196-a8415b6520a4",
        "type": "message",
        "text": "Thanks for sharing your learning that shows that drag &amp; drop can be difficult to use. Your conclusion is good: offer alternatives and treat drag &amp; drop as a pro user feature. Are you planning on adding Excel-like referencing by typing (`=`) too, or is that already possible?",
        "user": "U01ULEWACPP",
        "ts": "1627023435.108700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1627023458.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BcD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing your learning that shows that drag & drop can be difficult to use. Your conclusion is good: offer alternatives and treat drag & drop as a pro user feature. Are you planning on adding Excel-like referencing by typing ("
                            },
                            {
                                "type": "text",
                                "text": "=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") too, or is that already possible?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1626968794.107800",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "8dc21631-8d11-437a-849f-1ec036339f97",
        "type": "message",
        "text": "I don't plan to allow users to type formulas by hand at least for now, the main idea of instadeq is that you can't get into bad states, the formula editor tries to achieve that for formulas by not allowing text formula input",
        "user": "UBN9AFS0N",
        "ts": "1627025986.109000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fpS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't plan to allow users to type formulas by hand at least for now, the main idea of instadeq is that you can't get into bad states, the formula editor tries to achieve that for formulas by not allowing text formula input"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1626968794.107800",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            }
        ]
    }
]