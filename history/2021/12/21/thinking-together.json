[
    {
        "client_msg_id": "64703674-b2fb-4472-b33e-bc17d8dde13c",
        "type": "message",
        "text": "<https://news.ycombinator.com/item?id=29590681>\n&gt; *Ask HN: How would a programming language look if designed by non-programmer*\n&gt; Since it\u2019s hard to find such a person, who understands CS/Math/can program machines but never used \u201cnormal\u201d programming languages\n&gt; I do wonder how it\u2019d be designed, maybe current approach sucks?\n&gt; OOP is beautiful itself, it *enables normal people* to model complex systems that\u2019ll be running on computers, but can we get even better?",
        "user": "UF1ATC4RF",
        "ts": "1640119884.325500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2xjYl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=29590681"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ask HN: How would a programming language look if designed by non-programmer",
                                "style": {
                                    "bold": true,
                                    "unlink": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nSince it\u2019s hard to find such a person, who understands CS/Math/can program machines but never used \u201cnormal\u201d programming languages\nI do wonder how it\u2019d be designed, maybe current approach sucks?\nOOP is beautiful itself, it "
                            },
                            {
                                "type": "text",
                                "text": "enables normal people",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to model complex systems that\u2019ll be running on computers, but can we get even better?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640119884.325500",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1640606583.330300",
        "reply_users": [
            "U013ZLJARC7"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "c017372f-ecee-4bf3-86c7-d64d15feb1c2",
        "type": "message",
        "text": "My answer to this question got to the top of the thread: <https://news.ycombinator.com/item?id=29625625>\n\nIt was a hurried response for sure, but I guess it was still a nice reminder",
        "user": "UAJKEBGP8",
        "ts": "1640129361.326500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tD9u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My answer to this question got to the top of the thread: "
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=29625625"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt was a hurried response for sure, but I guess it was still a nice reminder"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640129361.326500",
        "reply_count": 8,
        "reply_users_count": 3,
        "latest_reply": "1640335573.330000",
        "reply_users": [
            "U02C3SH9L2J",
            "UCUSW7WVD",
            "UJBAJNFLK"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEZQXJK9V"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "I really like your \u201chome cooking\u201d analogy and frequently share a very similar one regarding cooking that I think goes one step further.\n\nThe issue with \u201chome cooking\u201d as a goal is that in relation to computing most people are consumers/diners/users and not programmers/chefs. So it\u2019s not that we need more programmers and home chefs, I think the problem is that the gap between a home chef and a restaurant owner is so massive and exists the same way in software.\n\nTo extrapolate, let\u2019s consider an example:\n\nYou\u2019re a talented home cook that has an awesome new dish that you have perfected and want to share with the world. Great! Now how can you actually do that? You basically have two main options:\n\n1. Publish your recipe online (equivalent to open-sourcing on Github)\nPros:\n- Free to distribute\n- Unlimited reach\nCons:\n- Your users have be a home-cooks themselves to consume the recipe\n- You don\u2019t make any money\n\n2. Start your own restaurant and serve your dish to patrons (equivalent to creating your own SaaS startup)\nPros:\n- You actually make money\n- Your users can be anyone (no cooking required)\nCons:\n- Extremely costly and risky to pursue\n- Requires *many* more skills and responsibilities to pursue (like hiring staff, renting a space, accepting credit cards, supply chain optimizing, etc)\n- Limited initial scale (usually just one location to start)\n\nSo what if there was a third option...\n\nWhat if every person had their own personal chef that could make any recipe your request and shop for the required ingredients on your behalf...\n\nWe wouldn\u2019t need to rely on restaurants to enjoy highly skilled culinary creations. This would be awesome but clearly unfeasible in this cooking example but is entirely feasible in the software space. If each person had their own personal server, we could build and share full stack apps (and monetize them!) without having to build VS-funded software services.\n\nI\u2019m currently working on this project with the aim to allow us \u201chome cooks\u201d to build apps for each other without storing each others data but also make those easy to use for the people that just want to eat and not cook. We\u2019re doing this by creating a space for general purpose personal cloud computing that developers can target and user can install with just one-click.",
        "user": "U02C3SH9L2J",
        "ts": "1640202672.327900",
        "thread_ts": "1640129361.326500",
        "root": {
            "client_msg_id": "c017372f-ecee-4bf3-86c7-d64d15feb1c2",
            "type": "message",
            "text": "My answer to this question got to the top of the thread: <https://news.ycombinator.com/item?id=29625625>\n\nIt was a hurried response for sure, but I guess it was still a nice reminder",
            "user": "UAJKEBGP8",
            "ts": "1640129361.326500",
            "team": "T5TCAFTA9",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "tD9u",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "My answer to this question got to the top of the thread: "
                                },
                                {
                                    "type": "link",
                                    "url": "https://news.ycombinator.com/item?id=29625625"
                                },
                                {
                                    "type": "text",
                                    "text": "\n\nIt was a hurried response for sure, but I guess it was still a nice reminder"
                                }
                            ]
                        }
                    ]
                }
            ],
            "thread_ts": "1640129361.326500",
            "reply_count": 8,
            "reply_users_count": 3,
            "latest_reply": "1640335573.330000",
            "reply_users": [
                "U02C3SH9L2J",
                "UCUSW7WVD",
                "UJBAJNFLK"
            ],
            "is_locked": false,
            "subscribed": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NwgRK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like your \u201chome cooking\u201d analogy and frequently share a very similar one regarding cooking that I think goes one step further.\n\nThe issue with \u201chome cooking\u201d as a goal is that in relation to computing most people are consumers/diners/users and not programmers/chefs. So it\u2019s not that we need more programmers and home chefs, I think the problem is that the gap between a home chef and a restaurant owner is so massive and exists the same way in software.\n\nTo extrapolate, let\u2019s consider an example:\n\nYou\u2019re a talented home cook that has an awesome new dish that you have perfected and want to share with the world. Great! Now how can you actually do that? You basically have two main options:\n\n1. Publish your recipe online (equivalent to open-sourcing on Github)\nPros:\n- Free to distribute\n- Unlimited reach\nCons:\n- Your users have be a home-cooks themselves to consume the recipe\n- You don\u2019t make any money\n\n2. Start your own restaurant and serve your dish to patrons (equivalent to creating your own SaaS startup)\nPros:\n- You actually make money\n- Your users can be anyone (no cooking required)\nCons:\n- Extremely costly and risky to pursue\n- Requires *many* more skills and responsibilities to pursue (like hiring staff, renting a space, accepting credit cards, supply chain optimizing, etc)\n- Limited initial scale (usually just one location to start)\n\nSo what if there was a third option...\n\nWhat if every person had their own personal chef that could make any recipe your request and shop for the required ingredients on your behalf...\n\nWe wouldn\u2019t need to rely on restaurants to enjoy highly skilled culinary creations. This would be awesome but clearly unfeasible in this cooking example but is entirely feasible in the software space. If each person had their own personal server, we could build and share full stack apps (and monetize them!) without having to build VS-funded software services.\n\nI\u2019m currently working on this project with the aim to allow us \u201chome cooks\u201d to build apps for each other without storing each others data but also make those easy to use for the people that just want to eat and not cook. We\u2019re doing this by creating a space for general purpose personal cloud computing that developers can target and user can install with just one-click."
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "265baa2d-f69c-498b-b1e6-c7414b237d41",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0223KS9WAJ",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b29a976d-e49c-45ef-876b-689f42f167f0",
        "type": "message",
        "text": "Sounds like <http://sandstorm.io|sandstorm.io>? I was recently reminded of it..",
        "user": "UCUSW7WVD",
        "ts": "1640206934.328300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4+1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds like "
                            },
                            {
                                "type": "link",
                                "url": "http://sandstorm.io",
                                "text": "sandstorm.io"
                            },
                            {
                                "type": "text",
                                "text": "? I was recently reminded of it.."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640129361.326500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "1ff7b7fa-2298-495d-a5b4-5cbfa64a0add",
        "type": "message",
        "text": "Yes a similar idea with more of a focus on developer experience and end-user-programming",
        "user": "U02C3SH9L2J",
        "ts": "1640216874.328500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s2a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes a similar idea with more of a focus on developer experience and end-user-programming"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640129361.326500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "3d8ec20c-e88d-49cd-b461-fcf7ef70ab94",
        "type": "message",
        "text": "That's an interesting take :smile: I'm curious to hear more about how you're thinking about it.",
        "user": "UCUSW7WVD",
        "ts": "1640219724.328700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "axsPl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's an interesting take "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            },
                            {
                                "type": "text",
                                "text": " I'm curious to hear more about how you're thinking about it."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640129361.326500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "ecc61aaa-f19b-4422-b8d6-ef04ebe44dc1",
        "type": "message",
        "text": "I'll add my usual complaint about the term \"end user\". It implies an industrialized production system in which there are a few developers and a large number of users, with an enormous gradient of expertise and agency.\nThe group of people I see as being left out are the craftspeople who use industrially produced components and tools to create situated artefacts. People who have more domain competence than the upstream designers of components of tools, but less knowledge about low-level details, optimization techniques, etc. An analogy from cooking could be the staff of a hostel or cafeteria.",
        "user": "UJBAJNFLK",
        "ts": "1640246821.328900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nMGk5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll add my usual complaint about the term \"end user\". It implies an industrialized production system in which there are a few developers and a large number of users, with an enormous gradient of expertise and agency.\nThe group of people I see as being left out are the craftspeople who use industrially produced components and tools to create situated artefacts. People who have more domain competence than the upstream designers of components of tools, but less knowledge about low-level details, optimization techniques, etc. An analogy from cooking could be the staff of a hostel or cafeteria."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640129361.326500",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "25ad81b1-57b8-4da8-afe9-c33e4e4ec304",
        "type": "message",
        "text": "<@UCUSW7WVD> Sandstom looks interesting. I like the data-centric approach it takes. Do you have first-hand experience with it?",
        "user": "UJBAJNFLK",
        "ts": "1640256507.329100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ET7a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Sandstom looks interesting. I like the data-centric approach it takes. Do you have first-hand experience with it?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640129361.326500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "fff47725-d4b6-489f-b76c-69fc4909d2bf",
        "type": "message",
        "text": "<@UJBAJNFLK> in the computing metaphor would this be more like Sysadmins and back-office developers?\n\nOne product decision we\u2019ve made is that every app built on our platform has a generated REPL/terminal, so if you want more precision you can drop into that instead of using a GUI. This also enables cross-app workflows e.g. you could write a command like \u201cfocus 45\u201d that would put a 45 min block on your calendar _and_ mute your notifications for that duration.\n\nIn general the above is totally doable in your OS if you only use local, native apps but doesn\u2019t work when you are using SaaS or cloud based tools. So we aim to centralize your cloud apps on to one generalized platform so we can bring back writing programs yourself without needing to reach for yet another service like Zapier.",
        "user": "U02C3SH9L2J",
        "ts": "1640272340.329300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Aj1a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " in the computing metaphor would this be more like Sysadmins and back-office developers?\n\nOne product decision we\u2019ve made is that every app built on our platform has a generated REPL/terminal, so if you want more precision you can drop into that instead of using a GUI. This also enables cross-app workflows e.g. you could write a command like \u201cfocus 45\u201d that would put a 45 min block on your calendar "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mute your notifications for that duration.\n\nIn general the above is totally doable in your OS if you only use local, native apps but doesn\u2019t work when you are using SaaS or cloud based tools. So we aim to centralize your cloud apps on to one generalized platform so we can bring back writing programs yourself without needing to reach for yet another service like Zapier."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640129361.326500",
        "parent_user_id": "UAJKEBGP8",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7abb2790-3fa4-47a3-b84b-d21a0c0358b8",
        "type": "message",
        "text": "Sysadmins and back-office devs would be part of that group, but it would also include many professionals whose job description does not (for now) directly refer to computing. Much like we have \"computational scientists\" already, I expect there will be \"computational architects\", \"computational luthiers\" and many others in a future that creates a space for them.\nThat's where the cooking analogy fails: computation can/should be a medium rather than a technology, in a way that cooking can't be.",
        "user": "UJBAJNFLK",
        "ts": "1640335573.330000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ru1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sysadmins and back-office devs would be part of that group, but it would also include many professionals whose job description does not (for now) directly refer to computing. Much like we have \"computational scientists\" already, I expect there will be \"computational architects\", \"computational luthiers\" and many others in a future that creates a space for them.\nThat's where the cooking analogy fails: computation can/should be a medium rather than a technology, in a way that cooking can't be."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640129361.326500",
        "parent_user_id": "UAJKEBGP8"
    },
    {
        "client_msg_id": "fb4691c1-5e6f-492d-be74-e8fa2fc0bdb5",
        "type": "message",
        "text": "Historical footnote: Lisp was discovered/invented by a non-programmer.",
        "user": "U013ZLJARC7",
        "ts": "1640606583.330300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n=aR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Historical footnote: Lisp was discovered/invented by a non-programmer."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640119884.325500",
        "parent_user_id": "UF1ATC4RF"
    }
]