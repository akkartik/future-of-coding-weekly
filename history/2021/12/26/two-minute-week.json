[
    {
        "type": "message",
        "text": "*Sandboxing in Teliva*\n\nProgramming languages assume all code they run is trustworthy. Browsers assume all connections they make over a network are trustworthy. I'm starting to experiment with alternatives to these approaches. Here's one early, extremely caricatured sandboxing model that's already more flexible than both conventional languages and browsers.\n\n<https://archive.org/details/akkartik-teliva-2021-12-25>\n\nMain project page: <https://github.com/akkartik/teliva>",
        "files": [
            {
                "id": "F02RZ2GQ8UA",
                "created": 1640501564,
                "timestamp": 1640501564,
                "name": "Screen Shot 2021-12-25 at 10.51.11 PM.png",
                "title": "Screen Shot 2021-12-25 at 10.51.11 PM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UCUSW7WVD",
                "editable": false,
                "size": 614266,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F02RZ2GQ8UA/screen_shot_2021-12-25_at_10.51.11_pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F02RZ2GQ8UA/download/screen_shot_2021-12-25_at_10.51.11_pm.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 260,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 346,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 519,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 577,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 692,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RZ2GQ8UA-6f18561cb1/screen_shot_2021-12-25_at_10.51.11_pm_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 738,
                "image_exif_rotation": 1,
                "original_w": 1996,
                "original_h": 1439,
                "thumb_tiny": "AwAiADC1mP0H/fNO5pARTh7UAFLSc0UALRSUUANH4U6gDHSjmgApaTmjmgBaKSigCHcc9T1FIWbyxyevrR3/ABFI3+rH+9QAu47Ryeh701mbaPmPT1pf4R/ummt9xfpQAze/95vzpyu3PzH86jpy96QH/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UCUSW7WVD/F02RZ2GQ8UA/screen_shot_2021-12-25_at_10.51.11_pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F02RZ2GQ8UA-ef14e07028",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "ts": "1640501578.098600",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZsYXd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sandboxing in Teliva",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nProgramming languages assume all code they run is trustworthy. Browsers assume all connections they make over a network are trustworthy. I'm starting to experiment with alternatives to these approaches. Here's one early, extremely caricatured sandboxing model that's already more flexible than both conventional languages and browsers.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://archive.org/details/akkartik-teliva-2021-12-25"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMain project page: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/teliva"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "17f880ea-1842-4ca4-9160-ebf76c12b516",
        "thread_ts": "1640501578.098600",
        "reply_count": 11,
        "reply_users_count": 3,
        "latest_reply": "1640591896.102800",
        "reply_users": [
            "U78TZ437S",
            "UCUSW7WVD",
            "UBN9AFS0N"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1640591896.102800"
    },
    {
        "client_msg_id": "24e40998-e408-4d9a-ae84-6801ea027a99",
        "type": "message",
        "text": "Are you familiar with object capabilities? An alternative permission model which I think might help make fine grained permissions easier to manage",
        "user": "U78TZ437S",
        "ts": "1640503288.098700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H7di",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you familiar with object capabilities? An alternative permission model which I think might help make fine grained permissions easier to manage"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "7bb77363-d0d8-43f6-befe-be55523ec036",
        "type": "message",
        "text": "Oh yes, I'm a fan though not an expert. My previous Mu project used that idea. I'll be working that in here as well.",
        "user": "UCUSW7WVD",
        "ts": "1640503615.098900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aUaQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh yes, I'm a fan though not an expert. My previous Mu project used that idea. I'll be working that in here as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "46d4cdef-1017-49cc-8b3e-0cf2fa301b22",
        "type": "message",
        "text": "I ask because I am familiar with Android/Google's permission model where if you want to load or save a single file, you must give broad permissions to all user files. I am not sure if this is the case here.\n\nI think the right model is decoupling file selection (done by a trusted computing component, from set of files) and file access - authority is granted by the actual transmission of the selected file to the app (as a capability).\ni.e: Instead of passing a file string/id into a global namespace, and separately giving permissions into that namespace - there is no globally accessible namespace of files, and you give the open file itself to the app.",
        "user": "U78TZ437S",
        "ts": "1640504483.099100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k4AB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I ask because I am familiar with Android/Google's permission model where if you want to load or save a single file, you must give broad permissions to all user files. I am not sure if this is the case here.\n\nI think the right model is decoupling file selection (done by a trusted computing component, from set of files) and file access - authority is granted by the actual transmission of the selected file to the app (as a capability).\ni.e: Instead of passing a file string/id into a global namespace, and separately giving permissions into that namespace - there is no globally accessible namespace of files, and you give the open file itself to the app."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "26403d59-d0aa-4e03-b7d2-88ba851e9b57",
        "type": "message",
        "text": "Yeah, I don't have capabilities. _Yet_ :slightly_smiling_face:\n\nLike I said, I'm not an expert and would appreciate someone going over what I come up with. What I had in <https://github.com/akkartik/mu> (really <https://github.com/akkartik/mu1>) was quite hokey.\n\nI believe trusted components basically work by preventing automation and hindering discoverability. Is that accurate?\n\nOne thing I care about is being able to continue using an app without granting all requested privileges. For example, easily creating a fake file system with honeypot data. That feels orthogonal to capabilities. They don't preclude it, but they also don't make it easy by themselves.\n\nSo I feel like there are some trade-offs to weigh here. But maybe I'm wrong and it's all a solved problem. Pointers most appreciated.",
        "user": "UCUSW7WVD",
        "ts": "1640505249.099300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8+vK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I don't have capabilities. "
                            },
                            {
                                "type": "text",
                                "text": "Yet",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            },
                            {
                                "type": "text",
                                "text": "\n\nLike I said, I'm not an expert and would appreciate someone going over what I come up with. What I had in "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/mu"
                            },
                            {
                                "type": "text",
                                "text": " (really "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/akkartik/mu1"
                            },
                            {
                                "type": "text",
                                "text": ") was quite hokey.\n\nI believe trusted components basically work by preventing automation and hindering discoverability. Is that accurate?\n\nOne thing I care about is being able to continue using an app without granting all requested privileges. For example, easily creating a fake file system with honeypot data. That feels orthogonal to capabilities. They don't preclude it, but they also don't make it easy by themselves.\n\nSo I feel like there are some trade-offs to weigh here. But maybe I'm wrong and it's all a solved problem. Pointers most appreciated."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "a2a38c3c-72fe-4b33-93a8-9566f6b2d6fa",
        "type": "message",
        "text": "Not sure what you mean about hindering discoverability. Anyway, I don't think it's a solved problem at all.  Object capabilities have never  made it, at least to the mainstream, as far as I'm aware. But I'm a big fan of the idea.\n\n<https://www.researchgate.net/publication/220910162_EROS_a_fast_capability_system> was a very interesting attempt at object capabilities",
        "user": "U78TZ437S",
        "ts": "1640506664.099500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iDC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure what you mean about hindering discoverability. Anyway, I don't think it's a solved problem at all.  Object capabilities have never  made it, at least to the mainstream, as far as I'm aware. But I'm a big fan of the idea.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.researchgate.net/publication/220910162_EROS_a_fast_capability_system"
                            },
                            {
                                "type": "text",
                                "text": " was a very interesting attempt at object capabilities"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "b0a88ef7-21c0-43b0-8ef2-f044bbd414d5",
        "type": "message",
        "text": "This week I added let bindings to Alpha, and also fixed all things that were broken by HIR refactoring from the previous week (mainly, all built-in functions)\n<https://www.alexeyshmalko.com/alpha-8/>",
        "user": "UPX3PH28N",
        "ts": "1640518482.101300",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DuC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This week I added let bindings to Alpha, and also fixed all things that were broken by HIR refactoring from the previous week (mainly, all built-in functions)\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.alexeyshmalko.com/alpha-8/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "123dc67d-1589-49a4-84ce-01222d1ab09d",
        "type": "message",
        "text": "Thanks! Let me read (reread) that. I only meant solved technically. Basically I'm wondering how you can build say a file browser.",
        "user": "UCUSW7WVD",
        "ts": "1640529636.101600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I++8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! Let me read (reread) that. I only meant solved technically. Basically I'm wondering how you can build say a file browser."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "a273734a-55a8-44bf-8ec7-08320053fba2",
        "type": "message",
        "text": "deno is doing something similar <https://deno.land/manual@v1.17.1/getting_started/permissions>",
        "user": "UBN9AFS0N",
        "ts": "1640535742.101800",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://deno.land/manual@v1.17.1/getting_started/permissions",
                "image_url": "https://deno.land/images/icons/icon-512x512.png",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 49999,
                "service_icon": "https://deno.land/favicon.ico",
                "id": 1,
                "original_url": "https://deno.land/manual@v1.17.1/getting_started/permissions",
                "fallback": "DenoLand: Deno - A modern runtime for JavaScript and TypeScript",
                "text": "Deno is a simple, modern runtime for JavaScript and TypeScript that uses V8 and is built in Rust.",
                "title": "Deno - A modern runtime for JavaScript and TypeScript",
                "title_link": "https://deno.land/manual@v1.17.1/getting_started/permissions",
                "service_name": "DenoLand"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wgG8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "deno is doing something similar "
                            },
                            {
                                "type": "link",
                                "url": "https://deno.land/manual@v1.17.1/getting_started/permissions"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "58ee8cb9-580f-4ad6-bc87-32c09f5cec15",
        "type": "message",
        "text": "This seems apt: <https://justinpombrio.net/2021/12/26/preventing-log4j-with-capabilities.html>",
        "user": "UCUSW7WVD",
        "ts": "1640583844.102200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "03g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This seems apt: "
                            },
                            {
                                "type": "link",
                                "url": "https://justinpombrio.net/2021/12/26/preventing-log4j-with-capabilities.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "4f6361ea-2796-4331-8749-bb3777b1ec81",
        "type": "message",
        "text": "Yeah, it's interesting!\n\nI think we can probably be finer-grained than a giant \"Network\" capability, too.\n\nProbably a capability to connect to specific domains, or maybe all domains but only in specific protocols or only in limited ways.",
        "user": "U78TZ437S",
        "ts": "1640586292.102400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uo/1V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, it's interesting!\n\nI think we can probably be finer-grained than a giant \"Network\" capability, too.\n\nProbably a capability to connect to specific domains, or maybe all domains but only in specific protocols or only in limited ways."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "0666058c-229d-4a31-bbfd-c20b5ccb28fc",
        "type": "message",
        "text": "Oh yes, that is all planned.\n\nOne challenge with networking is that reads and writes become less obvious. Parsing packets may not be sustainable. But we can certainly track what host we're connecting to.",
        "user": "UCUSW7WVD",
        "ts": "1640588654.102600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MoNg1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh yes, that is all planned.\n\nOne challenge with networking is that reads and writes become less obvious. Parsing packets may not be sustainable. But we can certainly track what host we're connecting to."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "76c1f006-3948-49b0-8c1a-c7bf439858c4",
        "type": "message",
        "text": "If you put constraints by restricting access to APIs, and not grant raw packet access - I don't think it would be a difficult problem?",
        "user": "U78TZ437S",
        "ts": "1640591896.102800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q3obk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you put constraints by restricting access to APIs, and not grant raw packet access - I don't think it would be a difficult problem?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640501578.098600",
        "parent_user_id": "UCUSW7WVD"
    }
]