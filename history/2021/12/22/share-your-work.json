[
    {
        "client_msg_id": "bdd2704c-56f2-4c5e-9424-3b5ec68b46c2",
        "type": "message",
        "text": "Hi all! New here, I wanted to share something I made over the weekend that I thought some people here might find interesting/have thoughts on. It's a self-hosting web code editor that stores and edits \"files\" in the browser's IndexedDB and uses a service worker to serve them as if there was an actual backend. You can try it out here (only works in Chromium-based browsers because it uses ES modules in the worker): <https://reflection-editor.netlify.app/> Source code is also available at <https://github.com/Merlin04/reflection>.",
        "user": "U02GP9ZRFR7",
        "ts": "1640143789.121400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rs+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all! New here, I wanted to share something I made over the weekend that I thought some people here might find interesting/have thoughts on. It's a self-hosting web code editor that stores and edits \"files\" in the browser's IndexedDB and uses a service worker to serve them as if there was an actual backend. You can try it out here (only works in Chromium-based browsers because it uses ES modules in the worker): "
                            },
                            {
                                "type": "link",
                                "url": "https://reflection-editor.netlify.app/"
                            },
                            {
                                "type": "text",
                                "text": " Source code is also available at "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/Merlin04/reflection"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "reply_count": 9,
        "reply_users_count": 4,
        "latest_reply": "1640344576.125700",
        "reply_users": [
            "U01ULEWACPP",
            "U0264CJ5W83",
            "U02GP9ZRFR7",
            "U02C3SH9L2J"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U02M6PM725T",
                    "U02E4DAQGSZ"
                ],
                "count": 2
            },
            {
                "name": "eyes",
                "users": [
                    "U01ULEWACPP",
                    "UMV4B97GT",
                    "U02M6PM725T"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "DC2895F4-207C-41D4-A092-3512DB8A27EE",
        "type": "message",
        "text": "Clever!",
        "user": "U01ULEWACPP",
        "ts": "1640187194.122200",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xu++p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Clever!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    },
    {
        "type": "message",
        "text": "",
        "files": [
            {
                "id": "F02RM8D9AGM",
                "created": 1640193016,
                "timestamp": 1640193016,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U0264CJ5W83",
                "editable": false,
                "size": 11981,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F02RM8D9AGM/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F02RM8D9AGM/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RM8D9AGM-dca741803e/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RM8D9AGM-dca741803e/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RM8D9AGM-dca741803e/image_360.png",
                "thumb_360_w": 316,
                "thumb_360_h": 123,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F02RM8D9AGM-dca741803e/image_160.png",
                "original_w": 316,
                "original_h": 123,
                "thumb_tiny": "AwASADC4Z2DsDExAPBAo+0H/AJ5Pj6VLlufl/Wjc39z9aAI/tBAJMbcen1NN+1DOAjHqB74qbLf3f1oy39z9aAIftOBzGwqcMD0/lSZb+5+tOoAKKKKACiiigAooooA//9k=",
                "permalink": "https://futureofcoding.slack.com/files/U0264CJ5W83/F02RM8D9AGM/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F02RM8D9AGM-f4ce5e7499",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "user": "U0264CJ5W83",
        "display_as_bot": false,
        "ts": "1640193017.122500",
        "client_msg_id": "bcd43604-3576-45ef-964c-f22b7db5a8ca",
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    },
    {
        "client_msg_id": "01453021-11c9-456c-b550-54e192fcef23",
        "type": "message",
        "text": "That's odd, are there any errors in the console?",
        "user": "U02GP9ZRFR7",
        "ts": "1640194133.122700",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1+2N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's odd, are there any errors in the console?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    },
    {
        "client_msg_id": "2b43a2ed-3866-470f-8911-abda1c6dafa8",
        "type": "message",
        "text": "A childhood friend of mine and I wrote a package manager as a side project for a programming language.  As a follow on for it I wrote a module authoring tool to make packages available for everyone and did a little write up of how authoring modules in that language is done: <https://deathbykeystroke.com/articles/20211222-the-life-of-raku-module-authoring.html>",
        "user": "U0264CJ5W83",
        "ts": "1640210967.124100",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://deathbykeystroke.com/articles/20211222-the-life-of-raku-module-authoring.html",
                "service_icon": "https://deathbykeystroke.com/favicon.ico",
                "id": 1,
                "original_url": "https://deathbykeystroke.com/articles/20211222-the-life-of-raku-module-authoring.html",
                "fallback": "dbks - The Life of Raku Module Authoring",
                "text": "The Life of Raku Module Authoring",
                "title": "dbks - The Life of Raku Module Authoring",
                "title_link": "https://deathbykeystroke.com/articles/20211222-the-life-of-raku-module-authoring.html",
                "service_name": "deathbykeystroke.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f2Xi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A childhood friend of mine and I wrote a package manager as a side project for a programming language.  As a follow on for it I wrote a module authoring tool to make packages available for everyone and did a little write up of how authoring modules in that language is done: "
                            },
                            {
                                "type": "link",
                                "url": "https://deathbykeystroke.com/articles/20211222-the-life-of-raku-module-authoring.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "client_msg_id": "4210b39c-793a-4e24-b0b5-bbb5583cd7eb",
        "type": "message",
        "text": "Is there a way to evaluate/run the code?",
        "user": "U02C3SH9L2J",
        "ts": "1640272491.124400",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "40+K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a way to evaluate/run the code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    },
    {
        "client_msg_id": "6666d589-d17b-4357-84ec-8201762a3a64",
        "type": "message",
        "text": "```Uncaught (in promise) TypeError: ServiceWorker script at <https://reflection-editor.netlify.app/worker.jsm> for scope <https://reflection-editor.netlify.app/> threw an exception during script evaluation.```\n",
        "user": "U0264CJ5W83",
        "ts": "1640282546.124600",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "THJ",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Uncaught (in promise) TypeError: ServiceWorker script at "
                            },
                            {
                                "type": "link",
                                "url": "https://reflection-editor.netlify.app/worker.jsm"
                            },
                            {
                                "type": "text",
                                "text": " for scope "
                            },
                            {
                                "type": "link",
                                "url": "https://reflection-editor.netlify.app/"
                            },
                            {
                                "type": "text",
                                "text": " threw an exception during script evaluation."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    },
    {
        "client_msg_id": "037394bd-4441-4d23-af7c-d7ed0b7ddb74",
        "type": "message",
        "text": "<@U02C3SH9L2J> Right now there's just editing the source and saving/reloading to run the changes, but that would be a useful feature to add for individual script files!",
        "user": "U02GP9ZRFR7",
        "ts": "1640310245.124900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5nv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02C3SH9L2J"
                            },
                            {
                                "type": "text",
                                "text": " Right now there's just editing the source and saving/reloading to run the changes, but that would be a useful feature to add for individual script files!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    },
    {
        "client_msg_id": "0c06ff78-3d75-4d67-9ca9-14ffb44bbce4",
        "type": "message",
        "text": "I'm not sure how I could troubleshoot that script error, I'm going to try to make it not use ES modules in the worker which should reduce compatibility issues",
        "user": "U02GP9ZRFR7",
        "ts": "1640310282.125100",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4wXx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure how I could troubleshoot that script error, I'm going to try to make it not use ES modules in the worker which should reduce compatibility issues"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    },
    {
        "client_msg_id": "59615dc4-b543-4090-b6c3-04c7405b1b08",
        "type": "message",
        "text": "I haven\u2019t worked with Service Workers, so this is a more general question: would it also be possible to serve images (stored as DataURI) from IndexedDB and have them appear in the network/resources tab (e.g. as `my-file-from-indexeddb.png`)?",
        "user": "U01ULEWACPP",
        "ts": "1640341813.125300",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1640341866.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G4BeJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven\u2019t worked with Service Workers, so this is a more general question: would it also be possible to serve images (stored as DataURI) from IndexedDB and have them appear in the network/resources tab (e.g. as "
                            },
                            {
                                "type": "text",
                                "text": "my-file-from-indexeddb.png",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    },
    {
        "client_msg_id": "bdec76ce-1aa9-4602-9e8e-48cc7678b0ab",
        "type": "message",
        "text": "In response to my own question: yes, it is possible to use Service Workers to serve \u201cvirtual\u201d synthetic image files from IndexedDB or memory. This is really cool!",
        "user": "U01ULEWACPP",
        "ts": "1640344576.125700",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1640352097.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vat3H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In response to my own question: yes, it is possible to use Service Workers to serve \u201cvirtual\u201d synthetic image files from IndexedDB or memory. This is really cool!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1640143789.121400",
        "parent_user_id": "U02GP9ZRFR7"
    }
]