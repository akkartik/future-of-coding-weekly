[
    {
        "type": "message",
        "text": "I\u2019ve been thinking about how to prototype non-textual programming environments. I\u2019m not talking about block or node based environments. I think text has still a lot of benefits for representing code. What I want to break free from is the typewriter paradigm where you can only put one character after the other line after line. I want a blank canvas where I can combine text with graphical representations (Statecharts, Graphs, Tables ...). As an example here is my latest prototype that mixes text with graphics to make it easier to understand data transformations. It doesn\u2019t fully realize this freeform idea (<https://www.youtube.com/watch?v=N_5KxKmvhlA|video> or see attached image)\n\nMy current workflow has been to prototype ideas like this by starting with a minimal version of the editor and then incrementally add features which allow building more complex examples to eventually reach the point where you can build real applications with it. That\u2019s the theory, but so far with all my prototypes (including this one) I eventually reach a point where I\u2019m no longer convinced that it\u2019s worth it to invest more time because it is still such a long way to go until I can build something real with it.\n\nI\u2019m now thinking that maybe I\u2019m approaching this whole problem from the wrong side. I think the biggest risk for finding non textual representations for code is whether they work at the scale of real applications or if they break down beyond simple toy examples. While building the editor I\u2019m learning very little about how well the representation scales up. On the other hand if I have a static representations that scales to complex examples it\u2019s much easier to imagine how it can be made editable.\n\nThis month I want to try an alternative approach. Instead of building a generic editor I want to pick an example application and code graphical representations and visualizations specifically for this application by hand. The result isn\u2019t an editor yet more a viewer that lets you peek under the hood of the application to see how it works. I want to build a couple applications like this to see if the representations work in different contexts. Once the representations are more proven I can move towards building an unified editor.\n\nWhat are your approaches to prototyping complex systems while avoiding building a lot of things without knowing if they will work out?",
        "files": [
            {
                "id": "F01SVUV2XRV",
                "created": 1617642702,
                "timestamp": 1617642702,
                "name": "Screenshot 2021-04-05 at 18.47.31.png",
                "title": "Screenshot 2021-04-05 at 18.47.31.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UAZT04VT4",
                "editable": false,
                "size": 125881,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F01SVUV2XRV/screenshot_2021-04-05_at_18.47.31.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F01SVUV2XRV/download/screenshot_2021-04-05_at_18.47.31.png",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_360.png",
                "thumb_360_w": 284,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_480.png",
                "thumb_480_w": 379,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_720.png",
                "thumb_720_w": 568,
                "thumb_720_h": 720,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 1014,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_960.png",
                "thumb_960_w": 757,
                "thumb_960_h": 960,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F01SVUV2XRV-6834527ca7/screenshot_2021-04-05_at_18.47.31_1024.png",
                "thumb_1024_w": 808,
                "thumb_1024_h": 1024,
                "original_w": 874,
                "original_h": 1108,
                "thumb_tiny": "AwAwACW8doYgrTg+eAKaQN5YFeKXPQl+B1oAerbhnGKWk3D1oBBGQaAFooooAjLEPgDilBfuMUhGWzhs9MjFAXp8rcfSgB65x83WlpASexFLQAUUUUARk4k5bilV1HHJ/GkZSXBAz+NLhuOB1oAcrBulLRRQAUUUUAf/2Q==",
                "permalink": "https://futureofcoding.slack.com/files/UAZT04VT4/F01SVUV2XRV/screenshot_2021-04-05_at_18.47.31.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F01SVUV2XRV-278442ef10",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s=7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve been thinking about how to prototype non-textual programming environments. I\u2019m not talking about block or node based environments. I think text has still a lot of benefits for representing code. What I want to break free from is the typewriter paradigm where you can only put one character after the other line after line. I want a blank canvas where I can combine text with graphical representations (Statecharts, Graphs, Tables ...). As an example here is my latest prototype that mixes text with graphics to make it easier to understand data transformations. It doesn\u2019t fully realize this freeform idea ("
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=N_5KxKmvhlA",
                                "text": "video"
                            },
                            {
                                "type": "text",
                                "text": " or see attached image)\n\nMy current workflow has been to prototype ideas like this by starting with a minimal version of the editor and then incrementally add features which allow building more complex examples to eventually reach the point where you can build real applications with it. That\u2019s the theory, but so far with all my prototypes (including this one) I eventually reach a point where I\u2019m no longer convinced that it\u2019s worth it to invest more time because it is still such a long way to go until I can build something real with it.\n\nI\u2019m now thinking that maybe I\u2019m approaching this whole problem from the wrong side. I think the biggest risk for finding non textual representations for code is whether they work at the scale of real applications or if they break down beyond simple toy examples. While building the editor I\u2019m learning very little about how well the representation scales up. On the other hand if I have a static representations that scales to complex examples it\u2019s much easier to imagine how it can be made editable.\n\nThis month I want to try an alternative approach. Instead of building a generic editor I want to pick an example application and code graphical representations and visualizations specifically for this application by hand. The result isn\u2019t an editor yet more a viewer that lets you peek under the hood of the application to see how it works. I want to build a couple applications like this to see if the representations work in different contexts. Once the representations are more proven I can move towards building an unified editor.\n\nWhat are your approaches to prototyping complex systems while avoiding building a lot of things without knowing if they will work out?"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UAZT04VT4",
        "display_as_bot": false,
        "ts": "1617642902.013400",
        "thread_ts": "1617642902.013400",
        "reply_count": 8,
        "reply_users_count": 5,
        "latest_reply": "1617765300.018800",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "UBN9AFS0N",
            "UK3LH8CF5",
            "UA14TGLTC"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1617765300.018800",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "USH01JEDQ",
                    "UHWC9PXBL",
                    "UMVFWPZ36",
                    "UML4ZEKDK",
                    "U85HCL7JP",
                    "UMHG81CBH"
                ],
                "count": 7
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "d9a6d9a1-c243-4d16-881e-a6f13ab9055e",
        "type": "message",
        "text": "I can very much relate. Here's the final static representation I did for an earlier project before I gave up on it.\n\n<https://futureofcoding.slack.com/archives/C5T9GPWFL/p1608291598346500?thread_ts=1607887127.284300&amp;cid=C5T9GPWFL>\n\nPrototyping is hard. The goal is to prove out some aspect before you feel fully invested in it. But sometimes for complex ideas even the most barebones prototype feels like a lot of work. And a static representation carries its own risk, of inconsistencies hidden in the static parts that you might not notice until you move on to the next step.\n\nLately my kids' favorite thing to have read to them is a book which describes Alberto Giacometti spending 10 years sculpting busts down to the size of a thumb, before switching to large sculptures that now go for $100M. I often wonder if that was an exercise in prototyping. 10 years seems not outlandish to spend in such a phase.\n\n<https://en.wikipedia.org/wiki/Alberto_Giacometti>\n<https://en.wikipedia.org/wiki/Diego_Giacometti>\n<https://www.goodreads.com/en/book/show/41090392-two-brothers-four-hands>",
        "user": "UCUSW7WVD",
        "ts": "1617644238.013600",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1617644708.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0kj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can very much relate. Here's the final static representation I did for an earlier project before I gave up on it.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1608291598346500?thread_ts=1607887127.284300&cid=C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": "\n\nPrototyping is hard. The goal is to prove out some aspect before you feel fully invested in it. But sometimes for complex ideas even the most barebones prototype feels like a lot of work. And a static representation carries its own risk, of inconsistencies hidden in the static parts that you might not notice until you move on to the next step.\n\nLately my kids' favorite thing to have read to them is a book which describes Alberto Giacometti spending 10 years sculpting busts down to the size of a thumb, before switching to large sculptures that now go for $100M. I often wonder if that was an exercise in prototyping. 10 years seems not outlandish to spend in such a phase.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Alberto_Giacometti"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Diego_Giacometti"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.goodreads.com/en/book/show/41090392-two-brothers-four-hands"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1617642902.013400",
        "parent_user_id": "UAZT04VT4"
    },
    {
        "client_msg_id": "1221099f-a388-4ea5-b760-80eef8cc5be2",
        "type": "message",
        "text": "&gt; What are your approaches to prototyping complex systems while avoiding building a lot of things without knowing if they will work out?\nNot helpful, but: I don't. I just endeavour to build the full system, and do what I can to maximize the chance of that approach succeeding. I keep my goal vague enough that I can shift it as I go, as I learn more about what works and what doesn't work. I know it's good wisdom to build small projects to validate ideas, but that doesn't fit how I work. I thrive on the feeling of iterating on one big thing, rather than starting many small things from scratch. I'm a polisher, not a prober.",
        "user": "UC2A2ARPT",
        "ts": "1617644296.013900",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YRBBN",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are your approaches to prototyping complex systems while avoiding building a lot of things without knowing if they will work out?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNot helpful, but: I don't. I just endeavour to build the full system, and do what I can to maximize the chance of that approach succeeding. I keep my goal vague enough that I can shift it as I go, as I learn more about what works and what doesn't work. I know it's good wisdom to build small projects to validate ideas, but that doesn't fit how I work. I thrive on the feeling of iterating on one big thing, rather than starting many small things from scratch. I'm a polisher, not a prober."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1617642902.013400",
        "parent_user_id": "UAZT04VT4",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UMHG81CBH"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "18eec3c6-72fa-456e-b7e6-cebdc0bd5862",
        "type": "message",
        "text": "Oh interesting connection, Ivan: <https://www.wired.com/story/game-of-thrones-plotters-vs-pantsers>",
        "user": "UCUSW7WVD",
        "ts": "1617644401.014100",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1617644414.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jLp8B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh interesting connection, Ivan: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.wired.com/story/game-of-thrones-plotters-vs-pantsers"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1617642902.013400",
        "parent_user_id": "UAZT04VT4",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "31e2cc05-7c4a-48f2-831d-c2cf9e3aed14",
        "type": "message",
        "text": "I prototype the \"known unknowns\", try a variety of examples trying to cover the \"problem space\" uniformly while looking for the \"unknown unknowns\", when I find them, see if the design solves them or if it can be changed to solve them, once I feel it can solve the \"stress tests\" I can either stop because I learned what I needed or continue to finish it (the \"known knowns\").\n\nIf you are like Slavoj \u017di\u017eek or Gary Bernhardt you may be wondering what about the \"unknown knowns\", well, that's your ideology :smile:",
        "user": "UBN9AFS0N",
        "ts": "1617647261.015200",
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1617647355.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pMPDi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I prototype the \"known unknowns\", try a variety of examples trying to cover the \"problem space\" uniformly while looking for the \"unknown unknowns\", when I find them, see if the design solves them or if it can be changed to solve them, once I feel it can solve the \"stress tests\" I can either stop because I learned what I needed or continue to finish it (the \"known knowns\").\n\nIf you are like Slavoj \u017di\u017eek or Gary Bernhardt you may be wondering what about the \"unknown knowns\", well, that's your ideology "
                            },
                            {
                                "type": "emoji",
                                "name": "smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1617642902.013400",
        "parent_user_id": "UAZT04VT4",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "laughing",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "be07f891-a3ad-42ba-afe3-0d49e78692f1",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=MXumVxdfbU4>",
        "user": "UBN9AFS0N",
        "ts": "1617647432.015700",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/",
                "title": "Slavoj Zizek   Unknown Knowns and Psychoanalysis",
                "title_link": "https://www.youtube.com/watch?v=MXumVxdfbU4",
                "author_name": "Jer Sho",
                "author_link": "https://www.youtube.com/channel/UCaSQShuTu2lIqcuGFG1qVbA",
                "thumb_url": "https://i.ytimg.com/vi/MXumVxdfbU4/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Slavoj Zizek   Unknown Knowns and Psychoanalysis",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/MXumVxdfbU4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https://www.youtube.com/watch?v=MXumVxdfbU4",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=MXumVxdfbU4"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MAw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=MXumVxdfbU4"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1617642902.013400",
        "parent_user_id": "UAZT04VT4"
    },
    {
        "client_msg_id": "7a396dc6-07c9-4945-9908-8ffde18e7bf1",
        "type": "message",
        "text": "<https://www.destroyallsoftware.com/talks/ideology>",
        "user": "UBN9AFS0N",
        "ts": "1617647439.016000",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AZMpu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.destroyallsoftware.com/talks/ideology"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1617642902.013400",
        "parent_user_id": "UAZT04VT4"
    },
    {
        "client_msg_id": "bf42fd1d-52ca-4e7e-8424-1d7b293d82b1",
        "type": "message",
        "text": "One of the things I like to do when building any prototype is find an input/example that I expect to fail on. So if I'm building something to process data, find an absolutely huge input. If I'm building something to live instrument software, try instrumenting a tight loop, or a 60fps game. If I'm building out a visualizer, try an incredibly larger, nested or interconnected data structure.\n\nHaving those examples in mind and trying to deal with them early can help you know the limits of your system, but also push you to fix those bottlenecks before they become too deeply embedded in the system.\n\nBootstrapping a compiler is a good example of this technique used in the wild.\n\nTo be clear though, the goal isn't always to make these examples work. It is to know what can and cannot work and to understand where your design would have to change to accommodate those inputs.",
        "user": "UK3LH8CF5",
        "ts": "1617653016.016500",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CcO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of the things I like to do when building any prototype is find an input/example that I expect to fail on. So if I'm building something to process data, find an absolutely huge input. If I'm building something to live instrument software, try instrumenting a tight loop, or a 60fps game. If I'm building out a visualizer, try an incredibly larger, nested or interconnected data structure.\n\nHaving those examples in mind and trying to deal with them early can help you know the limits of your system, but also push you to fix those bottlenecks before they become too deeply embedded in the system.\n\nBootstrapping a compiler is a good example of this technique used in the wild.\n\nTo be clear though, the goal isn't always to make these examples work. It is to know what can and cannot work and to understand where your design would have to change to accommodate those inputs."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1617642902.013400",
        "parent_user_id": "UAZT04VT4",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5bbaf62d-7cb1-4399-acc4-fb6755d81def",
        "type": "message",
        "text": "Prototyping while avoiding building?  Cardboard and string.  I'm not even kidding.",
        "user": "UA14TGLTC",
        "ts": "1617765300.018800",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9YewL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Prototyping while avoiding building?  Cardboard and string.  I'm not even kidding."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1617642902.013400",
        "parent_user_id": "UAZT04VT4",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UMHG81CBH"
                ],
                "count": 1
            }
        ]
    }
]